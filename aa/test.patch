diff --git a/arch/arm/Kconfig b/arch/arm/Kconfig
index 54808fe..5152615 100644
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@ -1150,7 +1150,6 @@ config ARCH_ROCKCHIP
 	select DM_SPI
 	select DM_SPI_FLASH
 	select DM_USB if USB
-	select CMD_ROCKUSB if USB_GADGET_DOWNLOAD
 	select ENABLE_ARM_SOC_BOOT0_HOOK
 	select SYS_NS16550
 	select SPI
@@ -1161,6 +1160,7 @@ config ARCH_ROCKCHIP
 	imply DM_PWM
 	imply DM_REGULATOR
 	imply CMD_FASTBOOT
+	imply CMD_ROCKUSB
 	imply FASTBOOT
 	imply FAT_WRITE
 	imply USB_FUNCTION_FASTBOOT
diff --git a/arch/arm/dts/px30-u-boot.dtsi b/arch/arm/dts/px30-u-boot.dtsi
index 3cc546c..ceda2f4 100644
--- a/arch/arm/dts/px30-u-boot.dtsi
+++ b/arch/arm/dts/px30-u-boot.dtsi
@@ -16,6 +16,10 @@
 	};
 };
 
+&psci {
+	u-boot,dm-pre-reloc;
+};
+
 &dmc {
 	u-boot,dm-pre-reloc;
 };
diff --git a/arch/arm/dts/px30.dtsi b/arch/arm/dts/px30.dtsi
index 1290cc3..e105f4f 100644
--- a/arch/arm/dts/px30.dtsi
+++ b/arch/arm/dts/px30.dtsi
@@ -94,7 +94,7 @@
 		#clock-cells = <0>;
 	};
 
-	psci {
+	psci: psci {
 		compatible = "arm,psci-1.0";
 		method = "smc";
 	};
diff --git a/arch/arm/dts/rk3588-orangepi-5-plus.dts b/arch/arm/dts/rk3588-orangepi-5-plus.dts
new file mode 100644
index 0000000..d8be256
--- /dev/null
+++ b/arch/arm/dts/rk3588-orangepi-5-plus.dts
@@ -0,0 +1,79 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright (c) 2021 Rockchip Electronics Co., Ltd
+ *
+ */
+
+/dts-v1/;
+#include "rk3588.dtsi"
+#include "rk3588-u-boot.dtsi"
+#include <dt-bindings/input/input.h>
+
+/ {
+	model = "RK3588 Orange Pi 5 Plus";
+	compatible = "rockchip,rk3588-orangepi-5-plus", "rockchip,rk3588";
+
+	adc-keys {
+		compatible = "adc-keys";
+		io-channels = <&saradc 1>;
+		io-channel-names = "buttons";
+		keyup-threshold-microvolt = <1800000>;
+		u-boot,dm-pre-reloc;
+		status = "okay";
+
+		volumeup-key {
+			u-boot,dm-pre-reloc;
+			linux,code = <KEY_VOLUMEUP>;
+			label = "volume up";
+			press-threshold-microvolt = <1750>;
+		};
+	};
+
+	vcc5v0_sys: vcc5v0-sys {
+		u-boot,dm-pre-reloc;
+		compatible = "regulator-fixed";
+		regulator-name = "vcc5v0_sys";
+		regulator-always-on;
+		regulator-boot-on;
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+	};
+
+	vcc5v0_host: vcc5v0-host {
+		u-boot,dm-pre-reloc;
+		compatible = "regulator-fixed";
+		regulator-name = "vcc5v0_host";
+		regulator-boot-on;
+		regulator-always-on;
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		enable-active-high;
+		gpio = <&gpio3 RK_PB7 GPIO_ACTIVE_HIGH>;
+		vin-supply = <&vcc5v0_sys>;
+	};
+
+	vcc3v3_pcie30: vcc3v3-pcie30 {
+		u-boot,dm-pre-reloc;
+		compatible = "regulator-fixed";
+		regulator-name = "vcc3v3_pcie30";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		enable-active-high;
+		gpio = <&gpio2 RK_PB6 GPIO_ACTIVE_HIGH>;
+		regulator-boot-on;
+		regulator-always-on;
+		vin-supply = <&vcc5v0_sys>;
+	};
+};
+
+&pcie3x4 {
+	u-boot,dm-pre-reloc;
+	vpcie3v3-supply = <&vcc3v3_pcie30>;
+	reset-gpios = <&gpio4 RK_PB6 GPIO_ACTIVE_HIGH>;
+	status = "okay";
+};
+
+&pcie30phy {
+	u-boot,dm-pre-reloc;
+	status = "okay";
+};
diff --git a/arch/arm/dts/rv1106-u-boot.dtsi b/arch/arm/dts/rv1106-u-boot.dtsi
index 80859bb..6196dba 100644
--- a/arch/arm/dts/rv1106-u-boot.dtsi
+++ b/arch/arm/dts/rv1106-u-boot.dtsi
@@ -27,7 +27,7 @@
 };
 
 &emmc {
-	mmc-ecsd = <0x3fe00>;
+	mmc-ecsd = <0x3F000>;
 	bus-width = <8>;
 	mmc-hs200-1_8v;
 	u-boot,dm-spl;
diff --git a/arch/arm/include/asm/arch-rockchip/hotkey.h b/arch/arm/include/asm/arch-rockchip/hotkey.h
index 743d093..2ccc46e 100644
--- a/arch/arm/include/asm/arch-rockchip/hotkey.h
+++ b/arch/arm/include/asm/arch-rockchip/hotkey.h
@@ -20,6 +20,11 @@ enum hotkey_t {
 	HK_SYSMEM,
 };
 
+#ifdef CONFIG_ROCKCHIP_HOTKEY
 bool is_hotkey(enum hotkey_t id);
 void hotkey_run(enum hotkey_t id);
+#else
+static inline bool is_hotkey(enum hotkey_t id) { return false; }
+static inline void hotkey_run(enum hotkey_t id) { }
+#endif
 #endif
diff --git a/arch/arm/include/asm/arch-rockchip/param.h b/arch/arm/include/asm/arch-rockchip/param.h
index 1d84392..82c98d6 100644
--- a/arch/arm/include/asm/arch-rockchip/param.h
+++ b/arch/arm/include/asm/arch-rockchip/param.h
@@ -79,4 +79,12 @@ int param_parse_pre_serial(int *flags);
  */
 int param_parse_pubkey_fuse_programmed(void);
 
+#ifdef CONFIG_PSTORE
+/**
+ * param_parse_pstore() - Parse and Init pstore according to pre-loader atags.
+ *
+ * @return 0 on success, otherwise failed.
+ */
+int param_parse_pstore(void);
+#endif
 #endif
diff --git a/arch/arm/include/asm/arch-rockchip/pstore.h b/arch/arm/include/asm/arch-rockchip/pstore.h
new file mode 100644
index 0000000..954f7de
--- /dev/null
+++ b/arch/arm/include/asm/arch-rockchip/pstore.h
@@ -0,0 +1,13 @@
+/* SPDX-License-Identifier:     GPL-2.0+ */
+/*
+ * (C) Copyright 2018 Rockchip Electronics Co., Ltd
+ *
+ */
+
+#ifndef __PSTORE_H_
+#define __PSTORE_H_
+
+void putc_to_ram(const char c);
+void puts_to_ram(const char *str);
+
+#endif
diff --git a/arch/arm/include/asm/arch-rockchip/rk_atags.h b/arch/arm/include/asm/arch-rockchip/rk_atags.h
index 84a9f18..5b9a17d 100644
--- a/arch/arm/include/asm/arch-rockchip/rk_atags.h
+++ b/arch/arm/include/asm/arch-rockchip/rk_atags.h
@@ -20,6 +20,7 @@
 #define ATAG_PUB_KEY		0x54410056
 #define ATAG_SOC_INFO		0x54410057
 #define ATAG_BOOT1_PARAM	0x54410058
+#define ATAG_PSTORE		0x54410059
 #define ATAG_MAX		0x544100ff
 
 /* Tag size and offset */
@@ -173,6 +174,15 @@ struct tag_boot1p {
 	u32 hash;
 } __packed;
 
+struct tag_pstore {
+	u32 version;
+	struct {
+		u32 addr;
+		u32 size;
+	} buf[16];
+	u32 hash;
+} __packed;
+
 struct tag_core {
 	u32 flags;
 	u32 pagesize;
@@ -198,6 +208,7 @@ struct tag {
 		struct tag_pub_key	pub_key;
 		struct tag_soc_info	soc;
 		struct tag_boot1p	boot1p;
+		struct tag_pstore	pstore;
 	} u;
 } __aligned(4);
 
diff --git a/arch/arm/include/asm/arch-rockchip/rk_meta.h b/arch/arm/include/asm/arch-rockchip/rk_meta.h
new file mode 100644
index 0000000..e31f485
--- /dev/null
+++ b/arch/arm/include/asm/arch-rockchip/rk_meta.h
@@ -0,0 +1,114 @@
+/* SPDX-License-Identifier:     GPL-2.0+ */
+/*
+ * (C) Copyright 2022 Rockchip Electronics Co., Ltd
+ *
+ */
+
+#ifndef _RK_CFG_H_
+#define _RK_CFG_H_
+
+/*      META storage layout        */
+/***************************/      /* ----- ITEM start -----*/
+/**     META_HEAD         **/
+/***************************/
+/**     ITEM 1            **/
+/***************************/
+/**     ITEM 2            **/
+/***************************/
+/**     ITEM 3            **/
+/***************************/
+/**       ....            **/
+/***************************/      /* --- ITEM backup start 32KB ---*/
+/**     ITEM 1 BACKUP     **/
+/***************************/
+/**     ITEM 2 BACKUP     **/
+/***************************/
+/**     ITEM 3 BACKUP     **/
+/***************************/
+/**       ....            **/
+/***************************/
+/**     META_END          **/
+/***************************/      /* ----- ITEM backup end -----*/
+/**     IQ FILE BIN       **/       /* 320K sensor iq file bin */
+/***************************/
+
+/*      META memory layout        */
+/***************************/      /* ----- ITEM start -----*/
+/**     META_HEAD         **/
+/***************************/
+/**     ITEM 1            **/
+/***************************/
+/**     ITEM 2            **/
+/***************************/
+/**     ITEM 3            **/
+/***************************/
+/**       ....            **/
+/***************************/      /* --- ITEM backup start 32KB ---*/
+/**     ITEM 1 BACKUP     **/
+/***************************/
+/**     ITEM 2 BACKUP     **/
+/***************************/
+/**     ITEM 3 BACKUP     **/
+/***************************/
+/**       ....            **/
+/***************************/
+/**     META_END          **/
+/***************************/      /* ----- ITEM backup end -----*/
+/**     IQ FILE BIN       **/       /* 320K sensor iq file bin */
+/***************************/
+
+#define RK_META			0x544d4b52
+#define RK_META_END		0x55aabbcc
+#define RK_CMDLINE		0x4c444d43
+
+#define ITEM_SIZE		(1 * 1024)
+#define MAX_CMDLINE_LENGTH	(1024 / 2)
+#define MAX_HEAD_SIZE 4
+#define MAX_META_SEGMENT_SIZE (16 * 1024)
+#define BACKUP_META_SIZE (MAX_META_SEGMENT_SIZE / 2)
+#define META_INFO_HEAD_OFFSET	0
+#define META_INFO_SIZE		ITEM_SIZE
+#define PARAM_SHARE2KERNEL_OFFSET	(META_INFO_HEAD_OFFSET + META_INFO_SIZE)
+#define PARAM_SHARE2KERNEL_SIZE (ITEM_SIZE)
+#define SENSOR_INIT_OFFSET	(PARAM_SHARE2KERNEL_OFFSET + PARAM_SHARE2KERNEL_SIZE)
+#define SENSOR_INIT_MAX_SIZE	ITEM_SIZE
+#define CMDLINE_OFFSET		(SENSOR_INIT_OFFSET + SENSOR_INIT_MAX_SIZE)
+#define CMDLINE_MAX_SIZE	ITEM_SIZE
+#define AE_TABLE_OFFSET		(CMDLINE_OFFSET + CMDLINE_MAX_SIZE)
+#define AE_TABLE_MAX_SIZE	ITEM_SIZE
+
+#define APP_PARAM_OFFSET	(AE_TABLE_OFFSET + AE_TABLE_MAX_SIZE)
+#define APP_PARAM_MAX_SIZE	ITEM_SIZE
+
+#define SENSOR_IQ_BIN_OFFSET			(MAX_META_SEGMENT_SIZE)
+#define SENSOR_IQ_BIN_MAX_SIZE			(320 * 1024)
+#define MAX_META_BIN_SIZE (MAX_META_SEGMENT_SIZE + SENSOR_IQ_BIN_MAX_SIZE)
+#define META_SIZE						MAX_META_BIN_SIZE
+
+/* 512 - sizeof(tag/load/size/comp_type/comp_size/comp_off/crc32/meta_flags) */
+#define	META_HEAD_RESERVED_SIZE	   (120*4)
+#define META_READ_DONE_FLAG (1 << 0)
+
+#define AE_TABLE_SHARE2KERNEL_OFFSET	(PARAM_SHARE2KERNEL_OFFSET)
+
+#define	META_COMPRESS_TYPE_GZ 0x1
+
+struct meta_head {
+	uint32_t tag;
+	uint32_t load;
+	uint32_t size;
+	uint32_t comp_type;
+	uint32_t comp_size;
+	uint32_t comp_off;
+	uint8_t  reserved[META_HEAD_RESERVED_SIZE];
+	uint32_t crc32;
+	uint32_t meta_flags;
+};
+
+struct cmdline_info {
+	uint32_t tag;
+	uint8_t data[MAX_CMDLINE_LENGTH];
+	uint32_t crc32;
+};
+
+#endif
diff --git a/arch/arm/mach-rockchip/Kconfig b/arch/arm/mach-rockchip/Kconfig
index c0080b8..0a3c8f4c 100644
--- a/arch/arm/mach-rockchip/Kconfig
+++ b/arch/arm/mach-rockchip/Kconfig
@@ -863,6 +863,13 @@ config ROCKCHIP_PRELOADER_ATAGS
 	  tos, U-Boot, etc. It delivers boot and configure information, shared with pre-loaders
 	  and finally ends with U-Boot.
 
+config ROCKCHIP_META
+	bool "Rockchip Meta"
+	depends on SPL_KERNEL_BOOT && SPL_LIBDISK_SUPPORT
+	help
+	  This support to load Rockchip meta data which like isp parameter, peripheral
+	  parameters, etc.
+
 config ROCKCHIP_PRELOADER_SERIAL
 	bool "Rockchip pre-loader serial"
 	default y if ROCKCHIP_PRELOADER_ATAGS
@@ -902,6 +909,12 @@ config ROCKCHIP_NEW_IDB
 	help
 	  The new IDB header was introduced from RK356X.
 
+config ROCKCHIP_HOTKEY
+	bool "Rockchip hotkey"
+	default y
+	help
+	  Define a lot of hotkeys for debug.
+
 config GICV2
 	bool "ARM GICv2"
 
@@ -988,6 +1001,27 @@ config TRUST_SHA_MODE
 	  0: none; 1: sha1; 2: sha256 RK big endian; 3: sha256 little endian.
 endif
 
+config PSTORE
+	bool "Print log to linux pstore buffer"
+	default n
+	help
+	  This enable Print uboot log to linux pstore buffer which address
+	  is default 0x110000 for most soc.
+
+config PERSISTENT_RAM_ADDR
+	hex "Linux pstore buffer address"
+	default 0x0
+	depends on PSTORE
+	help
+	  This select linux pstore buffer address for uboot.
+
+config PERSISTENT_RAM_SIZE
+	hex "Linux pstore buffer size"
+	default 0x0
+	depends on PSTORE
+	help
+	  This select linux pstore buffer size for uboot.
+
 source "arch/arm/mach-rockchip/px30/Kconfig"
 source "arch/arm/mach-rockchip/rk3036/Kconfig"
 source "arch/arm/mach-rockchip/rk3066/Kconfig"
diff --git a/arch/arm/mach-rockchip/Makefile b/arch/arm/mach-rockchip/Makefile
index 310de72..afa18a4 100644
--- a/arch/arm/mach-rockchip/Makefile
+++ b/arch/arm/mach-rockchip/Makefile
@@ -20,6 +20,7 @@ ifndef CONFIG_TPL_BUILD
 obj-$(CONFIG_$(SPL_)FIT) += fit_misc.o
 ifdef CONFIG_SPL_BUILD
 obj-y += spl_boot_mode.o
+obj-$(CONFIG_ROCKCHIP_META) += rk_meta.o
 endif
 endif
 
@@ -38,7 +39,7 @@ obj-y += boot_rkimg.o
 obj-y += board.o
 obj-y += iomem.o
 obj-y += memblk.o
-obj-y += hotkey.o
+obj-$(CONFIG_ROCKCHIP_HOTKEY) += hotkey.o
 else
 obj-y += usbplug.o
 endif
@@ -51,9 +52,9 @@ obj-$(CONFIG_ROCKCHIP_VENDOR_PARTITION) += vendor.o vendor_misc.o
 obj-$(CONFIG_ROCKCHIP_RESOURCE_IMAGE) += resource_img.o resource_logo.o
 obj-$(CONFIG_ROCKCHIP_HWID_DTB) += resource_hwid.o
 obj-$(CONFIG_ROCKCHIP_DEBUGGER) += rockchip_debugger.o
-obj-$(CONFIG_FPGA_ROCKCHIP) += fpga.o
 endif
 
+obj-$(CONFIG_FPGA_ROCKCHIP) += fpga.o
 obj-$(CONFIG_RAM) += param.o
 obj-$(CONFIG_$(SPL_TPL_)RAM) += sdram.o
 obj-$(CONFIG_SPL_KERNEL_BOOT) += spl_resource_img.o
@@ -87,3 +88,4 @@ obj-$(CONFIG_TPL_BUILD) += $(obj-tpl-y)
 
 obj-$(CONFIG_ROCKCHIP_PRELOADER_ATAGS) += rk_atags.o
 obj-$(CONFIG_SET_DFU_ALT_INFO) += dfu_alt_info.o
+obj-$(CONFIG_PSTORE) += pstore.o
diff --git a/arch/arm/mach-rockchip/board.c b/arch/arm/mach-rockchip/board.c
index 02dafc0..d1b4bc4 100644
--- a/arch/arm/mach-rockchip/board.c
+++ b/arch/arm/mach-rockchip/board.c
@@ -158,13 +158,17 @@ static int rockchip_set_serialno(void)
 	memset(serialno_str, 0, VENDOR_SN_MAX);
 
 #ifdef CONFIG_ROCKCHIP_VENDOR_PARTITION
+	int j;
+
 	ret = vendor_storage_read(SN_ID, serialno_str, (VENDOR_SN_MAX-1));
 	if (ret > 0) {
-		i = strlen(serialno_str);
-		for (; i > 0; i--) {
+		j = strlen(serialno_str);
+		for (i = 0; i < j; i++) {
 			if ((serialno_str[i] >= 'a' && serialno_str[i] <= 'z') ||
 			    (serialno_str[i] >= 'A' && serialno_str[i] <= 'Z') ||
 			    (serialno_str[i] >= '0' && serialno_str[i] <= '9'))
+				continue;
+			else
 				break;
 		}
 
@@ -357,14 +361,26 @@ static void cmdline_handle(void)
 		return;
 
 	/*
-	 * From rk356x, the sd/udisk update flag was moved from
-	 * IDB to Android BCB.
+	 * 1. From rk356x, the sd/udisk recovery update flag was moved from
+	 *    IDB to Android BCB.
+	 *
+	 * 2. Udisk is init at the late boot_from_udisk(), but
+	 *    rockchip_get_boot_mode() actually only read once,
+	 *    we need to update boot mode according to udisk BCB.
 	 */
-	if (get_bcb_recovery_msg() == BCB_MSG_RECOVERY_RK_FWUPDATE) {
-		if (dev_desc->if_type == IF_TYPE_MMC && dev_desc->devnum == 1)
-			env_update("bootargs", "sdfwupdate");
-		else if (dev_desc->if_type == IF_TYPE_USB && dev_desc->devnum == 0)
-			env_update("bootargs", "usbfwupdate");
+	if ((dev_desc->if_type == IF_TYPE_MMC && dev_desc->devnum == 1) ||
+	    (dev_desc->if_type == IF_TYPE_USB && dev_desc->devnum == 0)) {
+		if (get_bcb_recovery_msg() == BCB_MSG_RECOVERY_RK_FWUPDATE) {
+			if (dev_desc->if_type == IF_TYPE_MMC && dev_desc->devnum == 1) {
+				env_update("bootargs", "sdfwupdate");
+			} else if (dev_desc->if_type == IF_TYPE_USB && dev_desc->devnum == 0) {
+				env_update("bootargs", "usbfwupdate");
+				env_set("reboot_mode", "recovery-usb");
+			}
+		} else {
+			if (dev_desc->if_type == IF_TYPE_USB && dev_desc->devnum == 0)
+				env_set("reboot_mode", "normal");
+		}
 	}
 }
 
@@ -377,9 +393,7 @@ int board_late_init(void)
 	rockchip_set_serialno();
 #endif
 	setup_download_mode();
-#if (CONFIG_ROCKCHIP_BOOT_MODE_REG > 0)
-	setup_boot_mode();
-#endif
+
 #ifdef CONFIG_ROCKCHIP_USB_BOOT
 	boot_from_udisk();
 #endif
@@ -392,6 +406,9 @@ int board_late_init(void)
 #ifdef CONFIG_ROCKCHIP_EINK_DISPLAY
 	rockchip_eink_show_uboot_logo();
 #endif
+#if (CONFIG_ROCKCHIP_BOOT_MODE_REG > 0)
+	setup_boot_mode();
+#endif
 	env_fixup();
 	soc_clk_dump();
 	cmdline_handle();
@@ -692,8 +709,12 @@ int board_init_f_boot_flags(void)
 {
 	int boot_flags = 0;
 
+#ifdef CONFIG_FPGA_ROCKCHIP
 	arch_fpga_init();
-
+#endif
+#ifdef CONFIG_PSTORE
+	param_parse_pstore();
+#endif
 	param_parse_pre_serial(&boot_flags);
 
 	/* The highest priority to turn off (override) console */
@@ -951,7 +972,7 @@ void autoboot_command_fail_handle(void)
 #endif
 
 #ifdef CONFIG_AVB_VBMETA_PUBLIC_KEY_VALIDATE
-	run_command("rockusb 0 ${devtype} ${devnum}", 0);
+	run_command("download", 0);
 	run_command("fastboot usb 0;", 0);
 #endif
 
diff --git a/arch/arm/mach-rockchip/boot_mode.c b/arch/arm/mach-rockchip/boot_mode.c
index 151b5ee..93468a6 100644
--- a/arch/arm/mach-rockchip/boot_mode.c
+++ b/arch/arm/mach-rockchip/boot_mode.c
@@ -113,6 +113,9 @@ int rockchip_get_boot_mode(void)
 		} else if (!strcmp(env_reboot_mode, "fastboot")) {
 			printf("boot mode: fastboot\n");
 			return BOOT_MODE_BOOTLOADER;
+		} else if (!strcmp(env_reboot_mode, "normal")) {
+			printf("boot mode: normal(env)\n");
+			return BOOT_MODE_NORMAL;
 		}
 	}
 
@@ -251,8 +254,8 @@ int setup_boot_mode(void)
 	case BOOT_MODE_LOADER:
 		run_command_list(devtype_num_set, -1, 0);
 		printf("enter Rockusb!\n");
-		env_set("preboot", "setenv preboot; rockusb 0 ${devtype} ${devnum}; rbrom");
-		run_command("rockusb 0 ${devtype} ${devnum}", 0);
+		env_set("preboot", "setenv preboot; download");
+		run_command("download", 0);
 		break;
 	case BOOT_MODE_CHARGING:
 		printf("enter charging!\n");
diff --git a/arch/arm/mach-rockchip/fpga.c b/arch/arm/mach-rockchip/fpga.c
index 3993829..3ba0000 100644
--- a/arch/arm/mach-rockchip/fpga.c
+++ b/arch/arm/mach-rockchip/fpga.c
@@ -72,9 +72,6 @@ static void fpga_init_atags(void)
 	t_tos.version = 0;
 	strcpy(t_tos.tee_mem.name, "op-tee");
 #ifdef CONFIG_ARM64
-	t_tos.tee_mem.phy_addr = SZ_2M;
-	t_tos.tee_mem.size = SZ_4M;
-#else
 	t_tos.tee_mem.phy_addr = 0x8400000; /* 132M offset */
 	t_tos.tee_mem.size = 0x1e00000;     /* 30M size */
 #endif
diff --git a/arch/arm/mach-rockchip/kernel_dtb.c b/arch/arm/mach-rockchip/kernel_dtb.c
index 432a65b..2f24cfa 100644
--- a/arch/arm/mach-rockchip/kernel_dtb.c
+++ b/arch/arm/mach-rockchip/kernel_dtb.c
@@ -12,6 +12,7 @@
 #include <dm/root.h>
 #include <dm/uclass-internal.h>
 #include <asm/arch/hotkey.h>
+#include <asm/arch/resource_img.h>
 
 DECLARE_GLOBAL_DATA_PTR;
 
@@ -317,6 +318,7 @@ int init_kernel_dtb(void)
 	}
 
 	if (IS_ENABLED(CONFIG_EMBED_KERNEL_DTB_ALWAYS)) {
+		resource_init_list();
 		printf("Always embed kernel dtb\n");
 		goto dtb_embed;
 	}
diff --git a/arch/arm/mach-rockchip/pstore.c b/arch/arm/mach-rockchip/pstore.c
new file mode 100644
index 0000000..6fc371f
--- /dev/null
+++ b/arch/arm/mach-rockchip/pstore.c
@@ -0,0 +1,155 @@
+/*
+ * (C) Copyright 2022 Rockchip Electronics Co., Ltd.
+ *
+ * SPDX-License-Identifier:     GPL-2.0+
+ */
+
+/*
+ * Example:
+ *	ramoops: ramoops@110000 {
+ *		compatible = "ramoops";
+ *		reg = <0x0 0x110000 0x0 0xe0000>;
+ *		boot-log-size = <0x8000>;
+ *		boot-log-count = <0x1>
+ *		console-size = <0x80000>;
+ *		pmsg-size = <0x30000>;
+ *		ftrace-size = <0x00000>;
+ *		record-size = <0x14000>;
+ *	};
+ */
+
+#include <common.h>
+#include <asm/arch/rk_atags.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+#define PERSISTENT_RAM_SIG		(0x43474244)
+#define LOG_TYPE_MASK			(0x00000fff)
+
+struct persistent_ram_buffer {
+	u32    sig;
+	u32    start;
+	u32    size;
+	u8     data[0];
+};
+
+enum log_type {
+	LOG_TPL = 0,
+	LOG_SPL,
+	LOG_OPTEE,
+	LOG_ATF,
+	LOG_UBOOT,
+	LOG_MAX = 12,
+};
+
+#if 0
+/*
+ * This function is to be called by tpl/ddr.
+ *
+ * u32 'conf' definition:
+ *   [31:16] is pstore buffer base address (0x_[31:16]_0000), 64KB align.
+ *   [15:12] is pstore buffer size [15:12]*4KB.
+ *   [11:0] see 'enum log_type' per bit is for one stage, 1: enable, 0: disable.
+ *      [0] tpl(ddr)
+ *      [1] spl(miniloader)
+ *      [2] optee(bl32)
+ *      [3] atf(bl31)
+ *      [4] U-Boot
+ *      ...
+ */
+void pstore_atags_set_tag(u32 conf)
+{
+	struct tag_pstore t;
+	u32 addr = conf & 0xffff0000;
+	u32 size = conf & 0x0000f000;
+	int i = 0;
+
+	/* handle special: 0 is 64KB but not 0KB */
+	if (size == 0)
+		size = 0x10000;
+
+	/* is enabled log type ? */
+	conf &= LOG_TYPE_MASK;
+	if (conf == 0)
+		return;
+
+	t.version = 0;
+	for (i = 0; i < LOG_MAX; i++) {
+		if (conf & (1 << (i))) {
+			t.buf[i].addr = addr;
+			t.buf[i].size = size;
+		} else {
+			t.buf[i].addr = 0x0;
+			t.buf[i].size = 0x0;
+		}
+	}
+
+	atags_set_tag(ATAG_PSTORE, &t);
+}
+#endif
+
+int param_parse_pstore(void)
+{
+	struct persistent_ram_buffer *rb = NULL;
+	u32 pstore_size = 0;
+#if defined(CONFIG_ROCKCHIP_PRELOADER_ATAGS) && (CONFIG_PERSISTENT_RAM_ADDR == 0)
+	struct tag *t;
+
+	gd->pstore_addr = 0;
+	gd->pstore_size = 0;
+
+	t = atags_get_tag(ATAG_PSTORE);
+	if (t) {
+		gd->pstore_addr = t->u.pstore.buf[LOG_UBOOT].addr;
+		gd->pstore_size = t->u.pstore.buf[LOG_UBOOT].size - sizeof(struct persistent_ram_buffer);
+	}
+#else
+	gd->pstore_addr = CONFIG_PERSISTENT_RAM_ADDR;
+	gd->pstore_size = CONFIG_PERSISTENT_RAM_SIZE - sizeof(struct persistent_ram_buffer);
+#endif
+	if (gd->pstore_addr) {
+		rb = (struct persistent_ram_buffer *)gd->pstore_addr;
+		pstore_size = gd->pstore_size;
+
+		if (rb->sig != PERSISTENT_RAM_SIG) {
+			rb->sig = PERSISTENT_RAM_SIG;
+			rb->start = 0x0;
+			rb->size = 0x0;
+		}
+
+		if (rb->size > pstore_size)
+			rb->size = pstore_size;
+
+		if (rb->start >= pstore_size)
+			rb->start = 0;
+	}
+
+	return 0;
+}
+
+void putc_to_ram(const char c)
+{
+	struct persistent_ram_buffer *rb = (struct persistent_ram_buffer *)gd->pstore_addr;
+	u32 pstore_size = gd->pstore_size;
+	u8 *dst;
+
+	if (!rb || pstore_size == 0)
+		return;
+
+	dst = rb->data + rb->start;
+	*dst = c;
+
+	if (rb->size < pstore_size)
+		rb->size++;
+
+	rb->start++;
+	if (rb->start >= pstore_size)
+		rb->start = 0;
+}
+
+void puts_to_ram(const char *str)
+{
+	while (*str) {
+		putc_to_ram(*str++);
+	}
+}
diff --git a/arch/arm/mach-rockchip/px30/px30.c b/arch/arm/mach-rockchip/px30/px30.c
index 0f826e9..8a540b8 100644
--- a/arch/arm/mach-rockchip/px30/px30.c
+++ b/arch/arm/mach-rockchip/px30/px30.c
@@ -20,6 +20,7 @@
 #define PMU_PWRDN_CON			0xff000018
 #define GRF_CPU_CON1			0xff140504
 
+#define USBPHY_GRF_BASE			0xff2c0000
 #define VIDEO_PHY_BASE			0xff2e0000
 #define FW_DDR_CON_REG			0xff534040
 #define SERVICE_CORE_ADDR		0xff508000
@@ -250,6 +251,16 @@ int arch_cpu_init(void)
 
 	grf_vccio6_vsel_init();
 
+	if (soc_is_px30s()) {
+		/* set usb2phy parameter */
+		writel(0x04, USBPHY_GRF_BASE + 0x8000);
+		writel(0x46, USBPHY_GRF_BASE + 0x8004);
+		writel(0xdb, USBPHY_GRF_BASE + 0x8008);
+		writel(0x04, USBPHY_GRF_BASE + 0x8400);
+		writel(0x46, USBPHY_GRF_BASE + 0x8404);
+		writel(0xdb, USBPHY_GRF_BASE + 0x8408);
+	}
+
 	return 0;
 }
 
@@ -799,6 +810,22 @@ int rk_board_early_fdt_fixup(const void *blob)
 	return 0;
 }
 
+void do_board_download(void)
+{
+	/*
+	 * Maskrom download can prevent to flash px30s board with px30
+	 * update.img, because px30 ddr.bin can't work on px30s which is
+	 * early than download action.
+	 *
+	 * Let's handle that early than outside generic download.
+	 */
+	if (soc_is_px30s()) {
+		printf("Rockusb is disabled, entering bootrom...\n");
+		flushc();
+		run_command("rbrom", 0);
+	}
+}
+
 #if !defined(CONFIG_SPL_BUILD) && defined(CONFIG_ROCKCHIP_DMC_FSP)
 int rk_board_init(void)
 {
diff --git a/arch/arm/mach-rockchip/rk3568/rk3568.c b/arch/arm/mach-rockchip/rk3568/rk3568.c
index ae7de30..debd642 100644
--- a/arch/arm/mach-rockchip/rk3568/rk3568.c
+++ b/arch/arm/mach-rockchip/rk3568/rk3568.c
@@ -911,6 +911,17 @@ int arch_cpu_init(void)
 
 	/* Set the fspi to secure */
 	writel(((0x1 << 14) << 16) | (0x0 << 14), SGRF_BASE + SGRF_SOC_CON3);
+#else /* U-Boot */
+	/* uboot: config iomux */
+#if defined(CONFIG_ROCKCHIP_SFC_IOMUX)
+	writel((0x70002000), GRF_BASE + GRF_GPIO1C_IOMUX_H);
+	writel((0x77771111), GRF_BASE + GRF_GPIO1D_IOMUX_L);
+	writel((0x00070001), GRF_BASE + GRF_GPIO1D_IOMUX_H);
+#elif defined(CONFIG_ROCKCHIP_EMMC_IOMUX)
+	writel((0x77771111), GRF_BASE + GRF_GPIO1B_IOMUX_H);
+	writel((0x77771111), GRF_BASE + GRF_GPIO1C_IOMUX_L);
+	writel((0x07770111), GRF_BASE + GRF_GPIO1C_IOMUX_H);
+#endif
 #endif
 
 	return 0;
diff --git a/arch/arm/mach-rockchip/rk3588/rk3588.c b/arch/arm/mach-rockchip/rk3588/rk3588.c
index a8efc4f..f81d8e5 100644
--- a/arch/arm/mach-rockchip/rk3588/rk3588.c
+++ b/arch/arm/mach-rockchip/rk3588/rk3588.c
@@ -873,7 +873,7 @@ int arch_cpu_init(void)
 		writel(0x07000200, EMMC_IOC_BASE + EMMC_IOC_GPIO2D_DS_H);
 	} else if (readl(BUS_IOC_BASE + BUS_IOC_GPIO2D_IOMUX_SEL_L) == 0x1111) {
 		/*
-		 * Set the emmc io drive strength:
+		 * set the emmc io drive strength:
 		 * data and cmd: 50ohm
 		 * clock: 25ohm
 		 */
@@ -892,11 +892,6 @@ int arch_cpu_init(void)
 		writel(0x00070002, VCCIO3_5_IOC_BASE + IOC_VCCIO3_5_GPIO3C_DS_H);
 	}
 
-	/* Set emmc iomux for good extention if the emmc is not the boot device */
-	writel(0xffff1111, BUS_IOC_BASE + BUS_IOC_GPIO2A_IOMUX_SEL_L);
-	writel(0xffff1111, BUS_IOC_BASE + BUS_IOC_GPIO2D_IOMUX_SEL_L);
-	writel(0xffff1111, BUS_IOC_BASE + BUS_IOC_GPIO2D_IOMUX_SEL_H);
-
 	/*
 	 * Assert reset the pipephy0, pipephy1 and pipephy2,
 	 * and de-assert reset them in Kernel combphy driver.
@@ -917,7 +912,17 @@ int arch_cpu_init(void)
 	writel(0x00030003, PMU1CRU_BASE + PMU1CRU_SOFTRST_CON04);
 
 	spl_board_sd_iomux_save();
+#else /* U-Boot */
+	/* uboot: config iomux */
+#ifdef CONFIG_ROCKCHIP_EMMC_IOMUX
+	/* Set emmc iomux for good extention if the emmc is not the boot device */
+	writel(0xffff1111, BUS_IOC_BASE + BUS_IOC_GPIO2A_IOMUX_SEL_L);
+	writel(0xffff1111, BUS_IOC_BASE + BUS_IOC_GPIO2D_IOMUX_SEL_L);
+	writel(0xffff1111, BUS_IOC_BASE + BUS_IOC_GPIO2D_IOMUX_SEL_H);
+#endif
+
 #endif
+
 	/* Select usb otg0 phy status to 0 that make rockusb can work at high-speed */
 	writel(0x00080008, USBGRF_BASE + USB_GRF_USB3OTG0_CON1);
 
@@ -940,3 +945,36 @@ int rk_board_fdt_fixup(const void *blob)
 
 	return 0;
 }
+
+#ifdef CONFIG_SPL_BUILD
+int spl_fit_standalone_release(char *id, uintptr_t entry_point)
+{
+	/* gpll enable */
+	writel(0x00f00042, 0xfd7c01c4);
+	/* set start addr, pmu_mcu_code_addr_start */
+	writel(0xFFFF0000 | (entry_point >> 16), 0xFD582024);
+	/* pmu_mcu_sram_addr_start */
+	writel(0xFFFF2000, 0xFD582028);
+	/* pmu_mcu_tcm_addr_start */
+	writel(0xFFFF2000, 0xFD582034);
+	/* set mcu secure */
+	writel(0x00080000, 0xFD582000);
+	/* set cache cache_peripheral_addr */
+	writel(0xffff0000, 0xFD582018);
+	writel(0xffffee00, 0xFD58201c);
+	writel(0x00ff00ff, 0xFD582020);  /* 0xf0000000 ~ 0xfee00000 */
+	/* mcupmu access DDR secure control, each bit for a region. */
+	writel(0x0000ffff, 0xFE03008C);
+	/* mcupmu access DDR secure control, each bit for a region. */
+	writel(0x000000ff, 0xFE03808C);
+	/* PMU WDT reset system enable */
+	writel(0x02000200, 0xFD586008);
+	/* WDT trigger global reset. */
+	writel(0x08400840, 0xFD7C0C10);
+	/* Spl helps to load the mcu image, but not need to release
+	 * mcu for rk3588.
+	 */
+
+	return 0;
+}
+#endif
diff --git a/arch/arm/mach-rockchip/rk_atags.c b/arch/arm/mach-rockchip/rk_atags.c
index 700e9dd..26f8507 100644
--- a/arch/arm/mach-rockchip/rk_atags.c
+++ b/arch/arm/mach-rockchip/rk_atags.c
@@ -253,6 +253,9 @@ int atags_set_tag(u32 magic, void *tagdata)
 	case ATAG_BOOT1_PARAM:
 		size = tag_size(tag_boot1p);
 		break;
+	case ATAG_PSTORE:
+		size = tag_size(tag_pstore);
+		break;
 	};
 
 	if (!size)
diff --git a/arch/arm/mach-rockchip/rk_meta.c b/arch/arm/mach-rockchip/rk_meta.c
new file mode 100644
index 0000000..e35391f
--- /dev/null
+++ b/arch/arm/mach-rockchip/rk_meta.c
@@ -0,0 +1,137 @@
+/* SPDX-License-Identifier:     GPL-2.0+ */
+/*
+ * (C) Copyright 2022 Rockchip Electronics Co., Ltd
+ *
+ */
+
+#include <common.h>
+#include <boot_rkimg.h>
+#include <crc.h>
+#include <errno.h>
+#include <fdt_support.h>
+#include <image.h>
+#include <misc.h>
+#include <spl.h>
+#include <asm/arch/rk_meta.h>
+
+static char *cmdline;
+
+#if (IS_ENABLED(CONFIG_ROCKCHIP_RV1106))
+#define COMPRESS_LOAD_ADDR 0xa0000
+#else
+#error	"Please Define COMPRESS_LOAD_ADDR !!!"
+#endif
+
+__weak void rk_meta_process(void) { }
+
+static int rk_meta_iq_decom(unsigned long dst, unsigned long src,
+			    unsigned long src_len, u64 *len)
+{
+	int ret;
+#if CONFIG_IS_ENABLED(MISC_DECOMPRESS)
+
+	ret = misc_decompress_process(dst, src, src_len, DECOM_GZIP, true, len, 0);
+	misc_decompress_sync(IH_COMP_GZIP);
+#else
+	ret = gunzip((void *)&dst, ALIGN(len, FIT_MAX_SPL_IMAGE_SZ),
+		     (void *)&src, (void *)len);
+#endif
+
+	return ret;
+}
+
+int spl_load_meta(struct spl_image_info *spl_image, struct spl_load_info *info)
+{
+	const char *part_name = PART_META;
+	disk_partition_t part_info;
+	struct meta_head meta;
+	struct meta_head *meta_p;
+	struct cmdline_info *cmd;
+	ulong sector;
+	char *data;
+	u64 len;
+
+	if (part_get_info_by_name(info->dev, part_name, &part_info) <= 0) {
+		debug("%s: no partition\n", __func__);
+		return -EINVAL;
+	}
+	sector = part_info.start;
+
+	memset(&meta, 0, sizeof(struct meta_head));
+	if (info->read(info, sector, 1, &meta) != 1) {
+		debug("%s: Failed to read header\n", __func__);
+		return -EIO;
+	}
+
+	if (meta.tag != RK_META) {
+		debug("Invalid meta tag is %x.\n", meta.tag);
+		return -EINVAL;
+	}
+
+	if (meta.crc32 != crc32(0, (const unsigned char *)&meta, sizeof(struct meta_head) - 4 - 4)) {
+		debug("Invalid meta crc32.\n");
+		return -EINVAL;
+	}
+
+	data = (char *)meta.load;
+	printf("Meta: 0x%08x - 0x%08x\n", meta.load, meta.load + meta.size);
+	if (info->read(info, sector, DIV_ROUND_UP(MAX_META_SEGMENT_SIZE, info->bl_len), data)
+			!= DIV_ROUND_UP(MAX_META_SEGMENT_SIZE, info->bl_len)) {
+		debug("%s: Failed to read header\n", __func__);
+		return -EIO;
+	}
+
+	meta_p = (struct meta_head *)meta.load;
+
+	cmd = (struct cmdline_info *)(meta_p->load + CMDLINE_OFFSET);
+	if (cmd->tag == RK_CMDLINE) {
+		if (cmd->crc32 == crc32(0, (const unsigned char *)cmd, sizeof(struct cmdline_info) - 4))
+			cmdline = (char *)cmd->data;
+	}
+
+	/* load compress data */
+	data = (char *)COMPRESS_LOAD_ADDR;
+	if (meta_p->comp_type == META_COMPRESS_TYPE_GZ) {
+		if (info->read(info, sector + (MAX_META_SEGMENT_SIZE / info->bl_len),
+			       DIV_ROUND_UP(meta.comp_size, info->bl_len), data)
+			       != DIV_ROUND_UP(meta.comp_size, info->bl_len)) {
+			debug("%s: Failed to read compress data.\n", __func__);
+			return -EIO;
+		}
+
+		if (rk_meta_iq_decom((meta_p->load + meta_p->comp_off),
+				     (unsigned long)(data + meta_p->comp_off -
+							MAX_META_SEGMENT_SIZE),
+					 meta.comp_size, &len)) {
+			debug("%s: Failed to decompress.\n", __func__);
+			return -EIO;
+		}
+		/* update decompress gz's file size */
+		unsigned int *p_len = (unsigned int *)
+			(meta_p->load + MAX_META_SEGMENT_SIZE + MAX_HEAD_SIZE);
+		*p_len = (u32)len;
+		/* TODO: update decompress gz's file crc32 */
+	} else {
+		if (info->read(info, sector + (MAX_META_SEGMENT_SIZE / info->bl_len),
+			       DIV_ROUND_UP(meta.comp_size, info->bl_len),
+		   (void *)(meta_p->load + MAX_META_SEGMENT_SIZE))
+		   != DIV_ROUND_UP(meta.comp_size, info->bl_len)) {
+			debug("%s: Failed to read\n", __func__);
+			return -EIO;
+		}
+	}
+
+	meta_p->meta_flags = META_READ_DONE_FLAG;
+	flush_cache(meta_p->load, meta_p->size);
+	rk_meta_process();
+
+	return 0;
+}
+
+void rk_meta_bootargs_append(void *fdt)
+{
+	if (!cmdline || (!fdt || fdt_check_header(fdt)))
+		return;
+
+	fdt_bootargs_append(fdt, cmdline);
+}
diff --git a/arch/arm/mach-rockchip/rv1106/rv1106.c b/arch/arm/mach-rockchip/rv1106/rv1106.c
index 71a90db..76d3d51 100644
--- a/arch/arm/mach-rockchip/rv1106/rv1106.c
+++ b/arch/arm/mach-rockchip/rv1106/rv1106.c
@@ -20,6 +20,7 @@ DECLARE_GLOBAL_DATA_PTR;
 #define CORE_GRF_BASE			0xff040000
 #define CORE_GRF_CACHE_PERI_ADDR_START	0x0024
 #define CORE_GRF_CACHE_PERI_ADDR_END	0x0028
+#define CORE_GRF_MCU_CACHE_MISC		0x002c
 
 #define PERI_GRF_BASE			0xff000000
 #define PERI_GRF_USBPHY_CON0		0x0050
@@ -123,6 +124,13 @@ DECLARE_GLOBAL_DATA_PTR;
 
 #define GPIO4_IOC_GPIO4B_DS0		0x0030
 
+/* OS_REG1[2:0]: chip ver */
+#define CHIP_VER_REG			0xff020204
+#define CHIP_VER_MSK			0x7
+#define V(x)				((x) - 1)
+#define ROM_VER_REG			0xffff4ffc
+#define ROM_V2				0x30303256
+
 /* uart0 iomux */
 /* gpio0a0 */
 #define UART0_RX_M0			1
@@ -393,6 +401,12 @@ void board_debug_uart_init(void)
 int arch_cpu_init(void)
 {
 #ifdef CONFIG_SPL_BUILD
+	/* Save chip version to OS_REG1[2:0] */
+	if (readl(ROM_VER_REG) == ROM_V2)
+		writel((readl(CHIP_VER_REG) & ~CHIP_VER_MSK) | V(2), CHIP_VER_REG);
+	else
+		writel((readl(CHIP_VER_REG) & ~CHIP_VER_MSK) | V(1), CHIP_VER_REG);
+
 	/* Set all devices to Non-secure */
 	writel(0xffff0000, PERI_SGRF_BASE + PERI_SGRF_FIREWALL_CON0);
 	writel(0xffff0000, PERI_SGRF_BASE + PERI_SGRF_FIREWALL_CON1);
@@ -413,7 +427,8 @@ int arch_cpu_init(void)
 	writel(0xff00ffff, FW_SHRM_BASE + FW_SHRM_MST1_REG);
 
 	/* Set fspi clk 6mA */
-	writel(0x0f000700, GPIO4_IOC_BASE + GPIO4_IOC_GPIO4B_DS0);
+	if ((readl(GPIO4_IOC_BASE + GPIO4B_IOMUX_SEL_L) & 0x70) == 0x20)
+		writel(0x3f000700, GPIO4_IOC_BASE + GPIO4_IOC_GPIO4B_DS0);
 
 	/*
 	 * Set the USB2 PHY in suspend mode and turn off the
@@ -495,6 +510,11 @@ int spl_fit_standalone_release(char *id, uintptr_t entry_point)
 
 	return 0;
 }
+
+void rk_meta_process(void)
+{
+	writel(0x00080008, CORE_GRF_BASE + CORE_GRF_MCU_CACHE_MISC);
+}
 #endif
 
 #ifdef CONFIG_ROCKCHIP_IMAGE_TINY
diff --git a/arch/arm/mach-rockchip/spl-boot-order.c b/arch/arm/mach-rockchip/spl-boot-order.c
index 9b42ea2..299a7a4 100644
--- a/arch/arm/mach-rockchip/spl-boot-order.c
+++ b/arch/arm/mach-rockchip/spl-boot-order.c
@@ -10,6 +10,13 @@
 #include <nand.h>
 #include <spl.h>
 
+#ifdef CONFIG_SPL_RAM_DEVICE
+void board_boot_order(u32 *spl_boot_list)
+{
+	spl_boot_list[0] = BOOT_DEVICE_RAM;
+}
+#else
+
 #if CONFIG_IS_ENABLED(OF_CONTROL) && ! CONFIG_IS_ENABLED(OF_PLATDATA)
 /**
  * spl_node_to_boot_device() - maps from a DT-node to a SPL boot device
@@ -190,3 +197,4 @@ void board_boot_order(u32 *spl_boot_list)
 		spl_boot_list[0] = spl_boot_device();
 }
 #endif
+#endif
diff --git a/arch/arm/mach-rockchip/spl.c b/arch/arm/mach-rockchip/spl.c
index 5f4c354..6ee6933 100644
--- a/arch/arm/mach-rockchip/spl.c
+++ b/arch/arm/mach-rockchip/spl.c
@@ -23,6 +23,7 @@
 #include <asm/arch/boot_mode.h>
 #include <asm/arch-rockchip/sys_proto.h>
 #include <asm/io.h>
+#include <asm/arch/param.h>
 
 DECLARE_GLOBAL_DATA_PTR;
 
@@ -216,12 +217,17 @@ int board_init_f_boot_flags(void)
 {
 	int boot_flags = 0;
 
+#ifdef CONFIG_FPGA_ROCKCHIP
+	arch_fpga_init();
+#endif
+#ifdef CONFIG_PSTORE
+	param_parse_pstore();
+#endif
 	/* pre-loader serial */
 #if defined(CONFIG_ROCKCHIP_PRELOADER_SERIAL) && \
     defined(CONFIG_ROCKCHIP_PRELOADER_ATAGS)
 	struct tag *t;
 
-
 	t = atags_get_tag(ATAG_SERIAL);
 	if (t) {
 		gd->serial.using_pre_serial = 1;
diff --git a/arch/arm/mach-rockchip/vendor.c b/arch/arm/mach-rockchip/vendor.c
index 00e8310..fce520d 100644
--- a/arch/arm/mach-rockchip/vendor.c
+++ b/arch/arm/mach-rockchip/vendor.c
@@ -272,6 +272,11 @@ re_write:
 		if (s_flash_info.blk_offset >= s_flash_info.part_size)
 			s_flash_info.blk_offset = 0;
 		s_flash_info.page_offset = 0;
+		/*
+		 * The spi NOR driver only erase 4KB while write data, and here need to
+		 * erase one block for vendor storage request.
+		 */
+		blk_derase(dev_desc, s_flash_info.part_offset + s_flash_info.blk_offset, s_flash_info.blk_size);
 	}
 
 	dev_desc->op_flag |= BLK_MTD_CONT_WRITE;
diff --git a/cmd/atags.c b/cmd/atags.c
index 43517e4..8bcf8b3 100644
--- a/cmd/atags.c
+++ b/cmd/atags.c
@@ -172,6 +172,13 @@ static void atags_print_tag(struct tag *t)
 		printf("  pagesize = 0x%x\n", t->u.core.pagesize);
 		printf("   rootdev = 0x%x\n", t->u.core.rootdev);
 		break;
+	case ATAG_PSTORE:
+		printf("[pstore]:\n");
+		printf("     magic = 0x%x\n", t->hdr.magic);
+		printf("      size = 0x%x\n\n", t->hdr.size << 2);
+		for (i = 0; i < ARRAY_SIZE(t->u.pstore.buf); i++)
+			printf("  table[%d] = 0x%x@0x%x\n", i, t->u.pstore.buf[i].size, t->u.pstore.buf[i].addr);
+		break;
 	default:
 		printf("%s: magic(%x) is not support\n", __func__, t->hdr.magic);
 	}
diff --git a/cmd/download.c b/cmd/download.c
index 75de233..5285013 100644
--- a/cmd/download.c
+++ b/cmd/download.c
@@ -8,10 +8,19 @@
 #include <command.h>
 #include <console.h>
 
+__weak void do_board_download(void)
+{
+}
+
 static int do_download(cmd_tbl_t *cmdtp, int flag,
 		       int argc, char * const argv[])
 {
 	disable_ctrlc(1);
+
+	/* Allow board specific download, maybe noreturn */
+	do_board_download();
+
+	/* Generic download */
 #ifdef CONFIG_CMD_ROCKUSB
 	run_command("rockusb 0 $devtype $devnum", 0);
 #endif
diff --git a/cmd/nand.c b/cmd/nand.c
index a22945d..7f048d3 100644
--- a/cmd/nand.c
+++ b/cmd/nand.c
@@ -581,6 +581,14 @@ static int do_nand(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
 				return 1;
 			}
 
+			if (strncmp(cmd, "readbyte", 8) == 0 || strncmp(cmd, "writebyte", 9) == 0) {
+				if (pagecount % (mtd->writesize + mtd->oobsize)) {
+					printf("Count=%ld should be aligned with (writesize + oobsize)\n", pagecount);
+					return -1;
+				}
+				pagecount = pagecount / (mtd->writesize + mtd->oobsize);
+			}
+
 			if (pagecount * mtd->writesize > size) {
 				puts("Size exceeds partition or device limit\n");
 				return -1;
diff --git a/common/board_f.c b/common/board_f.c
index caf23f5..190e5a4 100644
--- a/common/board_f.c
+++ b/common/board_f.c
@@ -257,11 +257,6 @@ static int setup_mon_len(void)
 	return 0;
 }
 
-__weak int arch_fpga_init(void)
-{
-	return 0;
-}
-
 __weak int arch_cpu_init(void)
 {
 	return 0;
diff --git a/common/board_r.c b/common/board_r.c
index 86269a4..74fee37 100644
--- a/common/board_r.c
+++ b/common/board_r.c
@@ -60,6 +60,9 @@
 #include <bidram.h>
 #include <boot_rkimg.h>
 #include <mtd_blk.h>
+#if defined(CONFIG_GPIO_HOG)
+#include <asm/gpio.h>
+#endif
 
 DECLARE_GLOBAL_DATA_PTR;
 
@@ -1017,6 +1020,9 @@ static init_fnc_t init_sequence_r[] = {
 #ifdef CONFIG_CMD_NET
 	initr_ethaddr,
 #endif
+#if defined(CONFIG_GPIO_HOG)
+	gpio_hog_probe_all,
+#endif
 #ifdef CONFIG_BOARD_LATE_INIT
 	board_late_init,
 #endif
diff --git a/common/console.c b/common/console.c
index 03a654c..4abe4d1 100644
--- a/common/console.c
+++ b/common/console.c
@@ -21,6 +21,10 @@
 #include <watchdog.h>
 #include <vsprintf.h>
 
+#ifdef CONFIG_PSTORE
+#include <asm/arch/pstore.h>
+#endif
+
 DECLARE_GLOBAL_DATA_PTR;
 
 static int on_console(const char *name, const char *value, enum env_op op,
@@ -516,6 +520,10 @@ void putc(const char c)
 	if (!gd || gd->flags & GD_FLG_DISABLE_CONSOLE)
 		return;
 
+#ifdef CONFIG_PSTORE
+	putc_to_ram(c);
+#endif
+
 #ifdef CONFIG_DEBUG_UART
 	/* if we don't have a console yet, use the debug UART */
 	if (!gd || !(gd->flags & GD_FLG_SERIAL_READY)) {
diff --git a/common/edid.c b/common/edid.c
index cf83fcd..d7d224c 100644
--- a/common/edid.c
+++ b/common/edid.c
@@ -969,25 +969,25 @@ static const struct drm_display_mode edid_4k_modes[] = {
 		   3840, 4016, 4104, 4400,
 		   2160, 2168, 2178, 2250, 0,
 		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
-	  .vrefresh = 30, },
+	  .vrefresh = 30, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 2 - 3840x2160@25Hz */
 	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 297000,
 		   3840, 4896, 4984, 5280,
 		   2160, 2168, 2178, 2250, 0,
 		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
-	  .vrefresh = 25, },
+	  .vrefresh = 25, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 3 - 3840x2160@24Hz */
 	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 297000,
 		   3840, 5116, 5204, 5500,
 		   2160, 2168, 2178, 2250, 0,
 		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
-	  .vrefresh = 24, },
+	  .vrefresh = 24, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 4 - 4096x2160@24Hz (SMPTE) */
 	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 297000,
 		   4096, 5116, 5204, 5500,
 		   2160, 2168, 2178, 2250, 0,
 		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
-	  .vrefresh = 24, },
+	  .vrefresh = 24, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_256_135, },
 };
 
 /*
@@ -1431,187 +1431,180 @@ static const struct drm_display_mode edid_est_modes[] = {
 		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC) },
 };
 
-#define DRM_BASE_MODE(c, hd, hss, hse, ht, vd, vss, vse, vt, vs, f) \
-	.clock = (c), \
-	.hdisplay = (hd), .hsync_start = (hss), .hsync_end = (hse), \
-	.htotal = (ht), .vdisplay = (vd), \
-	.vsync_start = (vss), .vsync_end = (vse), .vtotal = (vt), \
-	.vscan = (vs), .flags = (f)
-
-static const struct base_drm_display_mode resolution_white[] = {
+static const struct drm_display_mode resolution_white[] = {
 	/* 0. vic:2 - 720x480@60Hz */
-	{ DRM_BASE_MODE(27000, 720, 736,
-			798, 858, 480, 489, 495, 525, 0,
-			DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 27000, 720, 736,
+		   798, 858, 480, 489, 495, 525, 0,
+		   DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC),
 	  .vrefresh = 60, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_4_3, },
 	/* 1. vic:3 - 720x480@60Hz */
-	{ DRM_BASE_MODE(27000, 720, 736,
-			798, 858, 480, 489, 495, 525, 0,
-			DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 27000, 720, 736,
+		   798, 858, 480, 489, 495, 525, 0,
+		   DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC),
 	  .vrefresh = 60, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 1024x768@60Hz */
-	{ DRM_BASE_MODE(65000, 1024, 1048,
-			1184, 1344, 768, 771, 777, 806, 0,
-			DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC) },
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 65000, 1024, 1048,
+		   1184, 1344, 768, 771, 777, 806, 0,
+		   DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC) },
 	/* 2. vic:4 - 1280x720@60Hz */
-	{ DRM_BASE_MODE(74250, 1280, 1390,
-			1430, 1650, 720, 725, 730, 750, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 74250, 1280, 1390,
+		   1430, 1650, 720, 725, 730, 750, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	  .vrefresh = 60, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 3. vic:5 - 1920x1080i@60Hz */
-	{ DRM_BASE_MODE(74250, 1920, 2008,
-			2052, 2200, 1080, 1084, 1094, 1125, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC |
-			DRM_MODE_FLAG_INTERLACE),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 74250, 1920, 2008,
+		   2052, 2200, 1080, 1084, 1094, 1125, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC |
+		   DRM_MODE_FLAG_INTERLACE),
 	  .vrefresh = 60, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 4. vic:6 - 720(1440)x480i@60Hz */
-	{ DRM_BASE_MODE(13500, 720, 739,
-			801, 858, 480, 488, 494, 525, 0,
-			DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC |
-			DRM_MODE_FLAG_INTERLACE | DRM_MODE_FLAG_DBLCLK),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 13500, 720, 739,
+		   801, 858, 480, 488, 494, 525, 0,
+		   DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC |
+		   DRM_MODE_FLAG_INTERLACE | DRM_MODE_FLAG_DBLCLK),
 	  .vrefresh = 60, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_4_3, },
 	/* 5. vic:16 - 1920x1080@60Hz */
-	{ DRM_BASE_MODE(148500, 1920, 2008,
-			2052, 2200, 1080, 1084, 1089, 1125, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 148500, 1920, 2008,
+		   2052, 2200, 1080, 1084, 1089, 1125, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	  .vrefresh = 60, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 6. vic:17 - 720x576@50Hz */
-	{ DRM_BASE_MODE(27000, 720, 732,
-			796, 864, 576, 581, 586, 625, 0,
-			DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 27000, 720, 732,
+		   796, 864, 576, 581, 586, 625, 0,
+		   DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC),
 	  .vrefresh = 50, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_4_3, },
 	/* 7. vic:18 - 720x576@50Hz */
-	{ DRM_BASE_MODE(27000, 720, 732,
-			796, 864, 576, 581, 586, 625, 0,
-			DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 27000, 720, 732,
+		   796, 864, 576, 581, 586, 625, 0,
+		   DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC),
 	  .vrefresh = 50, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 8. vic:19 - 1280x720@50Hz */
-	{ DRM_BASE_MODE(74250, 1280, 1720,
-			1760, 1980, 720, 725, 730, 750, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 74250, 1280, 1720,
+		   1760, 1980, 720, 725, 730, 750, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	  .vrefresh = 50, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 9. vic:20 - 1920x1080i@50Hz */
-	{ DRM_BASE_MODE(74250, 1920, 2448,
-			2492, 2640, 1080, 1084, 1094, 1125, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC |
-			DRM_MODE_FLAG_INTERLACE),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 74250, 1920, 2448,
+		   2492, 2640, 1080, 1084, 1094, 1125, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC |
+		   DRM_MODE_FLAG_INTERLACE),
 	  .vrefresh = 50, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 10. vic:21 - 720(1440)x576i@50Hz */
-	{ DRM_BASE_MODE(13500, 720, 732,
-			795, 864, 576, 580, 586, 625, 0,
-			DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC |
-			DRM_MODE_FLAG_INTERLACE | DRM_MODE_FLAG_DBLCLK),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 13500, 720, 732,
+		   795, 864, 576, 580, 586, 625, 0,
+		   DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC |
+		   DRM_MODE_FLAG_INTERLACE | DRM_MODE_FLAG_DBLCLK),
 	  .vrefresh = 50, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_4_3, },
 	/* 11. vic:31 - 1920x1080@50Hz */
-	{ DRM_BASE_MODE(148500, 1920, 2448,
-			2492, 2640, 1080, 1084, 1089, 1125, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 148500, 1920, 2448,
+		   2492, 2640, 1080, 1084, 1089, 1125, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	  .vrefresh = 50, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 12. vic:32 - 1920x1080@24Hz */
-	{ DRM_BASE_MODE(74250, 1920, 2558,
-			2602, 2750, 1080, 1084, 1089, 1125, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 74250, 1920, 2558,
+		   2602, 2750, 1080, 1084, 1089, 1125, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	  .vrefresh = 24, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 13. vic:33 - 1920x1080@25Hz */
-	{ DRM_BASE_MODE(74250, 1920, 2448,
-			2492, 2640, 1080, 1084, 1089, 1125, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 74250, 1920, 2448,
+		   2492, 2640, 1080, 1084, 1089, 1125, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	  .vrefresh = 25, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 14. vic:34 - 1920x1080@30Hz */
-	{ DRM_BASE_MODE(74250, 1920, 2008,
-			2052, 2200, 1080, 1084, 1089, 1125, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 74250, 1920, 2008,
+		   2052, 2200, 1080, 1084, 1089, 1125, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	  .vrefresh = 30, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 15. vic:39 - 1920x1080i@50Hz */
-	{ DRM_BASE_MODE(72000, 1920, 1952,
-			2120, 2304, 1080, 1126, 1136, 1250, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_NVSYNC |
-			DRM_MODE_FLAG_INTERLACE),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 72000, 1920, 1952,
+		   2120, 2304, 1080, 1126, 1136, 1250, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_NVSYNC |
+		   DRM_MODE_FLAG_INTERLACE),
 	  .vrefresh = 50, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 16. vic:60 - 1280x720@24Hz */
-	{ DRM_BASE_MODE(59400, 1280, 3040,
-			3080, 3300, 720, 725, 730, 750, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 59400, 1280, 3040,
+		   3080, 3300, 720, 725, 730, 750, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	  .vrefresh = 24, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 17. vic:61 - 1280x720@25Hz */
-	{ DRM_BASE_MODE(74250, 1280, 3700,
-			3740, 3960, 720, 725, 730, 750, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 74250, 1280, 3700,
+		   3740, 3960, 720, 725, 730, 750, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	  .vrefresh = 25, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 18. vic:62 - 1280x720@30Hz */
-	{ DRM_BASE_MODE(74250, 1280, 3040,
-			3080, 3300, 720, 725, 730, 750, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 74250, 1280, 3040,
+		   3080, 3300, 720, 725, 730, 750, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	  .vrefresh = 30, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 19. vic:93 - 3840x2160p@24Hz 16:9 */
-	{ DRM_BASE_MODE(297000, 3840, 5116,
-			5204, 5500, 2160, 2168, 2178, 2250, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 297000, 3840, 5116,
+		   5204, 5500, 2160, 2168, 2178, 2250, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	.vrefresh = 24, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 20. vic:94 - 3840x2160p@25Hz 16:9 */
-	{ DRM_BASE_MODE(297000, 3840, 4896,
-			4984, 5280, 2160, 2168, 2178, 2250, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 297000, 3840, 4896,
+		   4984, 5280, 2160, 2168, 2178, 2250, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	.vrefresh = 25, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 21. vic:95 - 3840x2160p@30Hz 16:9 */
-	{ DRM_BASE_MODE(297000, 3840, 4016,
-			4104, 4400, 2160, 2168, 2178, 2250, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 297000, 3840, 4016,
+		   4104, 4400, 2160, 2168, 2178, 2250, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	.vrefresh = 30, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 22. vic:96 - 3840x2160p@50Hz 16:9 */
-	{ DRM_BASE_MODE(594000, 3840, 4896,
-			4984, 5280, 2160, 2168, 2178, 2250, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 594000, 3840, 4896,
+		   4984, 5280, 2160, 2168, 2178, 2250, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	.vrefresh = 50, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 23. vic:97 - 3840x2160p@60Hz 16:9 */
-	{ DRM_BASE_MODE(594000, 3840, 4016,
-			4104, 4400, 2160, 2168, 2178, 2250, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 594000, 3840, 4016,
+		   4104, 4400, 2160, 2168, 2178, 2250, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	.vrefresh = 60, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 24. vic:98 - 4096x2160p@24Hz 256:135 */
-	{ DRM_BASE_MODE(297000, 4096, 5116,
-			5204, 5500, 2160, 2168, 2178, 2250, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 297000, 4096, 5116,
+		   5204, 5500, 2160, 2168, 2178, 2250, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	.vrefresh = 24, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_256_135, },
 	/* 25. vic:99 - 4096x2160p@25Hz 256:135 */
-	{ DRM_BASE_MODE(297000, 4096, 5064,
-			5152, 5280, 2160, 2168, 2178, 2250, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 297000, 4096, 5064,
+		   5152, 5280, 2160, 2168, 2178, 2250, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	.vrefresh = 25, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_256_135, },
 	/* 26. vic:100 - 4096x2160p@30Hz 256:135 */
-	{ DRM_BASE_MODE(297000, 4096, 4184,
-			4272, 4400, 2160, 2168, 2178, 2250, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 297000, 4096, 4184,
+		   4272, 4400, 2160, 2168, 2178, 2250, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	.vrefresh = 30, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_256_135, },
 	/* 27. vic:101 - 4096x2160p@50Hz 256:135 */
-	{ DRM_BASE_MODE(594000, 4096, 5064,
-			5152, 5280, 2160, 2168, 2178, 2250, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 594000, 4096, 5064,
+		   5152, 5280, 2160, 2168, 2178, 2250, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	.vrefresh = 50, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_256_135, },
 	/* 28. vic:102 - 4096x2160p@60Hz 256:135 */
-	{ DRM_BASE_MODE(594000, 4096, 4184,
-			4272, 4400, 2160, 2168, 2178, 2250, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 594000, 4096, 4184,
+		   4272, 4400, 2160, 2168, 2178, 2250, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	.vrefresh = 60, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_256_135, },
 	/* 29. vic:118 - 3840x2160@120Hz 16:9 */
-	{ DRM_BASE_MODE(1188000, 3840, 4016,
-			4104, 4400, 2160, 2168, 2178, 2250, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 1188000, 3840, 4016,
+		   4104, 4400, 2160, 2168, 2178, 2250, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	.vrefresh = 120, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 30. vic:196 - 7680x4320@30Hz 16:9 */
-	{ DRM_BASE_MODE(1188000, 7680, 8232,
-			8408, 9000, 4320, 4336, 4356, 4400, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 1188000, 7680, 8232,
+		   8408, 9000, 4320, 4336, 4356, 4400, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	.vrefresh = 30, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 31. vic:198 - 7680x4320@50Hz 16:9 */
-	{ DRM_BASE_MODE(2376000, 7680, 10032,
-			10208, 10800, 4320, 4336, 4356, 4400, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 2376000, 7680, 10032,
+		   10208, 10800, 4320, 4336, 4356, 4400, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	.vrefresh = 50, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 	/* 32. vic:199 - 7680x4320@60Hz 16:9 */
-	{ DRM_BASE_MODE(2376000, 7680, 8232,
-			8408, 9000, 4320, 4336, 4356, 4400, 0,
-			DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
+	{ DRM_MODE(DRM_MODE_TYPE_DRIVER, 2376000, 7680, 8232,
+		   8408, 9000, 4320, 4336, 4356, 4400, 0,
+		   DRM_MODE_FLAG_PHSYNC | DRM_MODE_FLAG_PVSYNC),
 	.vrefresh = 60, .picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9, },
 };
 
@@ -2305,39 +2298,6 @@ void edid_print_info(struct edid1_info *edid_info)
 }
 
 /**
- * drm_mode_create - create a new display mode
- *
- * Create a new, cleared drm_display_mode.
- *
- * Returns:
- * Pointer to new mode on success, NULL on error.
- */
-static struct drm_display_mode *drm_mode_create(void)
-{
-	struct drm_display_mode *nmode;
-
-	nmode = malloc(sizeof(struct drm_display_mode));
-	memset(nmode, 0, sizeof(struct drm_display_mode));
-	if (!nmode)
-		return NULL;
-
-	return nmode;
-}
-
-/**
- * drm_mode_destroy - remove a mode
- * @mode: mode to remove
- *
- */
-static void drm_mode_destroy(struct drm_display_mode *mode)
-{
-	if (!mode)
-		return;
-
-	kfree(mode);
-}
-
-/**
  * drm_cvt_mode -create a modeline based on the CVT algorithm
  * @hdisplay: hdisplay size
  * @vdisplay: vdisplay size
@@ -3239,6 +3199,7 @@ static void drm_parse_hdmi_forum_vsdb(struct hdmi_edid_data *data,
 		max_frl_rate = (hf_vsdb[7] & DRM_EDID_MAX_FRL_RATE_MASK) >> 4;
 		drm_get_max_frl_rate(max_frl_rate, &hdmi->max_lanes,
 				     &hdmi->max_frl_rate_per_lane);
+		hdmi->add_func = hf_vsdb[8];
 		hdmi_dsc->v_1p2 = hf_vsdb[11] & DRM_EDID_DSC_1P2;
 
 		if (hdmi_dsc->v_1p2) {
@@ -6687,24 +6648,6 @@ int hdmi_infoframe_unpack(union hdmi_infoframe *frame, void *buffer)
 	return ret;
 }
 
-bool drm_mode_equal(const struct base_drm_display_mode *mode1,
-		    const struct drm_display_mode *mode2)
-{
-	if (mode1->clock == mode2->clock &&
-	    mode1->hdisplay == mode2->hdisplay &&
-	    mode1->hsync_start == mode2->hsync_start &&
-	    mode1->hsync_end == mode2->hsync_end &&
-	    mode1->htotal == mode2->htotal &&
-	    mode1->vdisplay == mode2->vdisplay &&
-	    mode1->vsync_start == mode2->vsync_start &&
-	    mode1->vsync_end == mode2->vsync_end &&
-	    mode1->vtotal == mode2->vtotal &&
-	    mode1->flags == mode2->flags)
-		return true;
-
-	return false;
-}
-
 /**
  * drm_mode_sort - sort mode list
  * @edid_data: modes structures to sort
@@ -6807,8 +6750,11 @@ void drm_rk_filter_whitelist(struct hdmi_edid_data *edid_data)
 			sizeof(resolution_white[0]);
 		for (i = 0; i < edid_data->modes; i++) {
 			for (j = 0; j < white_len; j++) {
-				if (drm_mode_equal(&resolution_white[j],
-						   &edid_data->mode_buf[i]))
+				if (drm_mode_match(&resolution_white[j],
+						   &edid_data->mode_buf[i],
+						   DRM_MODE_MATCH_TIMINGS |
+						   DRM_MODE_MATCH_CLOCK |
+						   DRM_MODE_MATCH_FLAGS))
 					break;
 			}
 
@@ -6818,19 +6764,42 @@ void drm_rk_filter_whitelist(struct hdmi_edid_data *edid_data)
 	}
 }
 
+static void drm_display_mode_convert(struct drm_display_mode *mode,
+				     struct base_drm_display_mode *base_mode)
+{
+	mode->clock = base_mode->clock;
+	mode->hdisplay = base_mode->hdisplay;
+	mode->hsync_start = base_mode->hsync_start;
+	mode->hsync_end = base_mode->hsync_end;
+	mode->htotal = base_mode->htotal;
+	mode->vdisplay = base_mode->vdisplay;
+	mode->vsync_start = base_mode->vsync_start;
+	mode->vsync_end = base_mode->vsync_end;
+	mode->vtotal = base_mode->vtotal;
+	mode->vrefresh = base_mode->vrefresh;
+	mode->vscan = base_mode->vscan;
+	mode->flags = base_mode->flags;
+	mode->picture_aspect_ratio = base_mode->picture_aspect_ratio;
+}
+
 void drm_rk_select_mode(struct hdmi_edid_data *edid_data,
 			struct base_screen_info *screen_info)
 {
 	int i;
-	const struct base_drm_display_mode *base_mode;
+	struct drm_display_mode mode;
 
 	if (!screen_info) {
 		/* define init resolution here */
 	} else {
-		base_mode = &screen_info->mode;
+		memset(&mode, 0, sizeof(struct drm_display_mode));
+
+		drm_display_mode_convert(&mode, &screen_info->mode);
 		for (i = 0; i < edid_data->modes; i++) {
-			if (drm_mode_equal(base_mode,
-					   &edid_data->mode_buf[i])) {
+			if (drm_mode_match(&mode,
+					   &edid_data->mode_buf[i],
+					   DRM_MODE_MATCH_TIMINGS |
+					   DRM_MODE_MATCH_CLOCK |
+					   DRM_MODE_MATCH_FLAGS)) {
 				edid_data->preferred_mode =
 					&edid_data->mode_buf[i];
 
diff --git a/common/spl/Kconfig b/common/spl/Kconfig
index 49596a4..c62938c 100644
--- a/common/spl/Kconfig
+++ b/common/spl/Kconfig
@@ -636,7 +636,7 @@ config SPL_RAM_SUPPORT
 config SPL_RAM_DEVICE
 	bool "Support booting from preloaded image in RAM"
 	depends on SPL_RAM_SUPPORT
-	default y if MICROBLAZE || ARCH_SOCFPGA || TEGRA || ARCH_ZYNQ
+	default y if ARCH_ROCKCHIP || MICROBLAZE || ARCH_SOCFPGA || TEGRA || ARCH_ZYNQ
 	help
 	  Enable booting of an image already loaded in RAM. The image has to
 	  be already in memory when SPL takes over, e.g. loaded by the boot
@@ -852,6 +852,12 @@ config SPL_ATF_NO_PLATFORM_PARAM
 
 	  If your ATF is affected, say Y.
 
+config SPL_ATF_AARCH32_BL33
+	bool "Support BL33 runs as AArch32 mode"
+	depends on SPL_ATF
+	help
+	  This option setup the AArch32 Mode for BL33.
+
 config SPL_OPTEE
 	bool "Support OP-TEE Trusted OS"
 	depends on ARM
diff --git a/common/spl/spl_atf.c b/common/spl/spl_atf.c
index a0b8666..fe14701 100644
--- a/common/spl/spl_atf.c
+++ b/common/spl/spl_atf.c
@@ -79,9 +79,14 @@ bl33_setup:
 	/* BL33 expects to receive the primary CPU MPID (through x0) */
 	bl33_ep_info->args.arg0 = 0xffff & read_mpidr();
 	bl33_ep_info->pc = bl33_entry;
+
+#ifdef CONFIG_SPL_ATF_AARCH32_BL33
+	bl33_ep_info->spsr = SPSR_32(MODE32_svc, SPSR_T_ARM, EP_EE_LITTLE,
+				     DISABLE_ALL_EXECPTIONS_32);
+#else
 	bl33_ep_info->spsr = SPSR_64(MODE_EL2, MODE_SP_ELX,
 				     DISABLE_ALL_EXECPTIONS);
-
+#endif
 	/*
 	 * Reference: arch/arm/lib/bootm.c
 	 * boot_jump_linux(bootm_headers_t *images, int flag)
diff --git a/common/spl/spl_fit_tb_arm32.S b/common/spl/spl_fit_tb_arm32.S
index fb8cf38..9c6cc47 100644
--- a/common/spl/spl_fit_tb_arm32.S
+++ b/common/spl/spl_fit_tb_arm32.S
@@ -20,9 +20,9 @@
 	.fpu softvfp
 	.type	spl_fit_get_image_name.isra.0, %function
 spl_fit_get_image_name.isra.0:
-.LFB233:
+.LFB235:
 	.file 1 "common/spl/spl_fit_tb_arm32.c"
-	.loc 1 61 0
+	.loc 1 71 0
 	.cfi_startproc
 	@ args = 0, pretend = 0, frame = 8
 	@ frame_needed = 0, uses_anonymous_args = 0
@@ -35,30 +35,30 @@ spl_fit_get_image_name.isra.0:
 	.cfi_offset 7, -12
 	.cfi_offset 8, -8
 	.cfi_offset 14, -4
-	.loc 1 61 0
+	.loc 1 71 0
 	mov	r5, r0
 	mov	r8, r1
 	mov	r7, r2
 	mov	r6, r3
-	.loc 1 70 0
+	.loc 1 80 0
 	bl	fit_find_config_node
 .LVL1:
-	.loc 1 71 0
+	.loc 1 81 0
 	subs	r4, r0, #0
 	bge	.L2
-	.loc 1 73 0
+	.loc 1 83 0
 	ldr	r0, .L11
 .LVL2:
-	.loc 1 77 0
+	.loc 1 87 0
 	ldr	r7, .L11+4
 .LVL3:
-	.loc 1 78 0
+	.loc 1 88 0
 	ldr	r8, .L11+8
 .LVL4:
-	.loc 1 73 0
+	.loc 1 83 0
 	bl	printf
 .LVL5:
-	.loc 1 74 0
+	.loc 1 84 0
 	mov	r1, r4
 	mov	r0, r5
 	bl	fdt_first_subnode
@@ -70,7 +70,7 @@ spl_fit_get_image_name.isra.0:
 	bge	.L4
 .LVL8:
 .L1:
-	.loc 1 101 0
+	.loc 1 111 0
 	mov	r0, r4
 	add	sp, sp, #8
 	.cfi_remember_state
@@ -80,7 +80,7 @@ spl_fit_get_image_name.isra.0:
 .LVL9:
 .L4:
 	.cfi_restore_state
-	.loc 1 77 0
+	.loc 1 87 0
 	add	r3, sp, #4
 	mov	r2, r7
 	mov	r1, r6
@@ -88,13 +88,13 @@ spl_fit_get_image_name.isra.0:
 .LVL10:
 	bl	fdt_getprop
 .LVL11:
-	.loc 1 78 0
+	.loc 1 88 0
 	mov	r1, r0
 	mov	r0, r8
 .LVL12:
 	bl	printf
 .LVL13:
-	.loc 1 76 0
+	.loc 1 86 0
 	mov	r1, r6
 	mov	r0, r5
 	bl	fdt_next_subnode
@@ -104,7 +104,7 @@ spl_fit_get_image_name.isra.0:
 	b	.L3
 .LVL16:
 .L2:
-	.loc 1 84 0
+	.loc 1 94 0
 	mov	r0, r5
 .LVL17:
 	add	r3, sp, #4
@@ -112,29 +112,29 @@ spl_fit_get_image_name.isra.0:
 	mov	r1, r4
 	bl	fdt_getprop
 .LVL18:
-	.loc 1 85 0
+	.loc 1 95 0
 	mov	r5, r0
 .LVL19:
 	cbz	r0, .L8
 	movs	r4, #0
 .LVL20:
 .L6:
-	.loc 1 91 0
+	.loc 1 101 0
 	cmp	r4, r7
 	blt	.L7
-	.loc 1 99 0
+	.loc 1 109 0
 	str	r0, [r6]
-	.loc 1 100 0
+	.loc 1 110 0
 	movs	r4, #0
 .LVL21:
 	b	.L1
 .LVL22:
 .L7:
-	.loc 1 92 0
+	.loc 1 102 0
 	movs	r1, #0
 	bl	strchr
 .LVL23:
-	.loc 1 93 0
+	.loc 1 103 0
 	adds	r0, r0, #1
 .LVL24:
 	beq	.L10
@@ -142,19 +142,19 @@ spl_fit_get_image_name.isra.0:
 	subs	r3, r0, r5
 	cmp	r3, r2
 	bge	.L10
-	.loc 1 91 0
+	.loc 1 101 0
 	adds	r4, r4, #1
 .LVL25:
 	b	.L6
 .LVL26:
 .L8:
-	.loc 1 87 0
+	.loc 1 97 0
 	mvn	r4, #21
 .LVL27:
 	b	.L1
 .LVL28:
 .L10:
-	.loc 1 95 0
+	.loc 1 105 0
 	mvn	r4, #6
 .LVL29:
 	b	.L1
@@ -165,7 +165,7 @@ spl_fit_get_image_name.isra.0:
 	.word	.LC5
 	.word	.LC6
 	.cfi_endproc
-.LFE233:
+.LFE235:
 	.size	spl_fit_get_image_name.isra.0, .-spl_fit_get_image_name.isra.0
 	.section	.text.spl_fit_get_image_node,"ax",%progbits
 	.align	1
@@ -175,8 +175,8 @@ spl_fit_get_image_name.isra.0:
 	.fpu softvfp
 	.type	spl_fit_get_image_node, %function
 spl_fit_get_image_node:
-.LFB219:
-	.loc 1 117 0
+.LFB221:
+	.loc 1 127 0
 	.cfi_startproc
 	@ args = 0, pretend = 0, frame = 8
 	@ frame_needed = 0, uses_anonymous_args = 0
@@ -186,43 +186,43 @@ spl_fit_get_image_node:
 	.cfi_offset 4, -12
 	.cfi_offset 5, -8
 	.cfi_offset 14, -4
-	.loc 1 117 0
+	.loc 1 127 0
 	mov	r5, r1
 	mov	r1, r2
 .LVL31:
 	mov	r2, r3
 .LVL32:
-	.loc 1 122 0
+	.loc 1 132 0
 	add	r3, sp, #4
 .LVL33:
-	.loc 1 117 0
+	.loc 1 127 0
 	mov	r4, r0
-	.loc 1 122 0
+	.loc 1 132 0
 	bl	spl_fit_get_image_name.isra.0
 .LVL34:
-	.loc 1 123 0
+	.loc 1 133 0
 	cbnz	r0, .L13
-	.loc 1 128 0
+	.loc 1 138 0
 	ldr	r2, [sp, #4]
 	mov	r1, r5
 	mov	r0, r4
 .LVL35:
 	bl	fdt_subnode_offset
 .LVL36:
-	.loc 1 129 0
+	.loc 1 139 0
 	cmp	r0, #0
-	.loc 1 131 0
+	.loc 1 141 0
 	it	lt
 	mvnlt	r0, #21
 .LVL37:
 .L13:
-	.loc 1 135 0
+	.loc 1 145 0
 	add	sp, sp, #12
 	.cfi_def_cfa_offset 12
 	@ sp needed
 	pop	{r4, r5, pc}
 	.cfi_endproc
-.LFE219:
+.LFE221:
 	.size	spl_fit_get_image_node, .-spl_fit_get_image_node
 	.global	__aeabi_idivmod
 	.global	__aeabi_idiv
@@ -234,8 +234,8 @@ spl_fit_get_image_node:
 	.fpu softvfp
 	.type	spl_load_fit_image, %function
 spl_load_fit_image:
-.LFB223:
-	.loc 1 195 0
+.LFB225:
+	.loc 1 205 0
 	.cfi_startproc
 	@ args = 8, pretend = 0, frame = 48
 	@ frame_needed = 0, uses_anonymous_args = 0
@@ -252,80 +252,80 @@ spl_load_fit_image:
 	.cfi_offset 14, -4
 	sub	sp, sp, #56
 	.cfi_def_cfa_offset 88
-	.loc 1 195 0
+	.loc 1 205 0
 	mov	r4, r2
 	ldr	r5, [sp, #88]
-	.loc 1 205 0
+	.loc 1 215 0
 	add	r2, sp, #56
 .LVL39:
-	.loc 1 195 0
-	mov	r7, r3
 	.loc 1 205 0
+	mov	r7, r3
+	.loc 1 215 0
 	movs	r3, #255
 .LVL40:
-	.loc 1 195 0
-	str	r1, [sp, #20]
 	.loc 1 205 0
+	str	r1, [sp, #20]
+	.loc 1 215 0
 	strb	r3, [r2, #-29]!
 .LVL41:
-	.loc 1 222 0
+	.loc 1 232 0
 	mov	r1, r5
 .LVL42:
-	.loc 1 209 0
+	.loc 1 219 0
 	ldr	r3, [r0]
-	.loc 1 195 0
+	.loc 1 205 0
 	mov	r8, r0
-	.loc 1 222 0
+	.loc 1 232 0
 	mov	r0, r4
 .LVL43:
-	.loc 1 195 0
+	.loc 1 205 0
 	ldr	r6, [sp, #92]
-	.loc 1 209 0
+	.loc 1 219 0
 	str	r3, [sp, #12]
 .LVL44:
-	.loc 1 222 0
+	.loc 1 232 0
 	bl	fit_image_get_comp
 .LVL45:
-	.loc 1 225 0
+	.loc 1 235 0
 	add	r2, sp, #44
 	mov	r1, r5
 	mov	r0, r4
 	bl	fit_image_get_load
 .LVL46:
 	cbz	r0, .L17
-	.loc 1 226 0
+	.loc 1 236 0
 	ldr	r3, [r6, #8]
 	str	r3, [sp, #44]
 .L17:
-	.loc 1 228 0
+	.loc 1 238 0
 	ldrb	r3, [sp, #27]	@ zero_extendqisi2
 	cmp	r3, #0
 	beq	.L18
-	.loc 1 228 0 is_stmt 0 discriminator 1
+	.loc 1 238 0 is_stmt 0 discriminator 1
 	cmp	r3, #6
 	beq	.L18
-	.loc 1 230 0 is_stmt 1
+	.loc 1 240 0 is_stmt 1
 	add	r2, sp, #40
 	mov	r1, r5
 	mov	r0, r4
 	bl	fit_image_get_comp_addr
 .LVL47:
 	cbz	r0, .L19
-	.loc 1 231 0
+	.loc 1 241 0
 	ldr	r3, [sp, #44]
 	add	r3, r3, #1048576
 .L70:
-	.loc 1 233 0
+	.loc 1 243 0
 	str	r3, [sp, #40]
 .L19:
-	.loc 1 236 0
+	.loc 1 246 0
 	add	r2, sp, #28
 	mov	r1, r5
 	mov	r0, r4
 	bl	fit_image_get_data_position
 .LVL48:
 	cbz	r0, .L20
-	.loc 1 238 0
+	.loc 1 248 0
 	add	r2, sp, #28
 	mov	r1, r5
 	mov	r0, r4
@@ -333,14 +333,14 @@ spl_load_fit_image:
 .LVL49:
 	cmp	r0, #0
 	bne	.L21
-	.loc 1 239 0
+	.loc 1 249 0
 	ldr	r3, [sp, #28]
 	add	r7, r7, r3
 .LVL50:
 	str	r7, [sp, #28]
 .LVL51:
 .L20:
-	.loc 1 245 0
+	.loc 1 255 0
 	add	r2, sp, #36
 	mov	r1, r5
 	mov	r0, r4
@@ -348,18 +348,18 @@ spl_load_fit_image:
 .LVL52:
 	cmp	r0, #0
 	bne	.L40
-	.loc 1 248 0
+	.loc 1 258 0
 	ldr	r7, [sp, #40]
 	adds	r7, r7, #63
 	bic	r3, r7, #63
-	.loc 1 250 0
+	.loc 1 260 0
 	cmp	r3, #-50331648
-	.loc 1 248 0
+	.loc 1 258 0
 	str	r3, [sp, #8]
 .LVL53:
-	.loc 1 250 0
+	.loc 1 260 0
 	bcc	.L22
-	.loc 1 252 0
+	.loc 1 262 0
 	ldr	r1, [sp, #36]
 	movs	r0, #64
 	bl	memalign_simple
@@ -369,23 +369,23 @@ spl_load_fit_image:
 .L22:
 .LBB36:
 .LBB37:
-	.loc 1 158 0
+	.loc 1 168 0
 	ldr	r3, [r8, #12]
 .LBE37:
 .LBE36:
-	.loc 1 254 0
+	.loc 1 264 0
 	ldr	r10, [sp, #36]
-	.loc 1 256 0
+	.loc 1 266 0
 	ldr	r0, [sp, #28]
-	.loc 1 254 0
+	.loc 1 264 0
 	str	r10, [sp, #32]
 .LVL56:
 .LBB40:
 .LBB38:
-	.loc 1 158 0
+	.loc 1 168 0
 	cmp	r3, #0
 	beq	.L23
-	.loc 1 159 0
+	.loc 1 169 0
 	and	fp, r0, #63
 .LVL57:
 .L24:
@@ -393,12 +393,12 @@ spl_load_fit_image:
 .LBE40:
 .LBB41:
 .LBB42:
-	.loc 1 167 0
+	.loc 1 177 0
 	add	r10, r10, fp
 .LVL58:
-	.loc 1 169 0
+	.loc 1 179 0
 	cbnz	r3, .L25
-	.loc 1 172 0
+	.loc 1 182 0
 	ldr	r1, [r8, #8]
 	add	r0, r10, r1
 	subs	r0, r0, #1
@@ -409,39 +409,39 @@ spl_load_fit_image:
 .L25:
 .LBE42:
 .LBE41:
-	.loc 1 260 0
+	.loc 1 270 0
 	mov	r1, r5
 	mov	r0, r4
 	bl	fit_image_is_preload
 .LVL61:
-	.loc 1 262 0
+	.loc 1 272 0
 	str	r0, [sp, #16]
 	cbz	r0, .L26
-	.loc 1 263 0
+	.loc 1 273 0
 	ldr	r2, [sp, #12]
 	movs	r3, #1
 	strb	r3, [r2, #14]
 .L26:
-	.loc 1 265 0
+	.loc 1 275 0
 	ldr	r3, [r8, #16]
-	.loc 1 266 0
+	.loc 1 276 0
 	ldr	r0, [sp, #28]
 .LVL62:
-	.loc 1 265 0
+	.loc 1 275 0
 	mov	r7, r3
 .LBB43:
 .LBB44:
-	.loc 1 144 0
+	.loc 1 154 0
 	ldr	r3, [r8, #12]
 	cmp	r3, #0
 	beq	.L27
-	.loc 1 145 0
+	.loc 1 155 0
 	bic	r0, r0, #63
 .LVL63:
 .L28:
 .LBE44:
 .LBE43:
-	.loc 1 265 0
+	.loc 1 275 0
 	ldr	r1, [sp, #20]
 	mov	r2, r10
 	ldr	r3, [sp, #8]
@@ -451,49 +451,49 @@ spl_load_fit_image:
 .LVL64:
 	cmp	r10, r0
 	bne	.L37
-	.loc 1 272 0
+	.loc 1 282 0
 	ldr	r3, [sp, #8]
 	add	r3, r3, fp
 	str	r3, [sp, #48]
-	.loc 1 273 0
+	.loc 1 283 0
 	ldr	r3, [sp, #16]
 	cbz	r3, .L30
-	.loc 1 274 0
+	.loc 1 284 0
 	ldr	r3, [sp, #12]
 	ldr	r2, [sp, #12]
-	.loc 1 275 0
+	.loc 1 285 0
 	ldr	r0, .L72
-	.loc 1 274 0
+	.loc 1 284 0
 	ldrb	r3, [r3, #14]	@ zero_extendqisi2
 	bic	r3, r3, #1
 	strb	r3, [r2, #14]
-	.loc 1 275 0
+	.loc 1 285 0
 	bl	printf
 .LVL65:
 .L31:
-	.loc 1 328 0
+	.loc 1 338 0
 	cbz	r6, .L71
-	.loc 1 329 0
+	.loc 1 339 0
 	ldr	r3, [sp, #44]
-	.loc 1 331 0
+	.loc 1 341 0
 	mov	r1, r5
 	ldr	r2, .L72+4
 	mov	r0, r4
-	.loc 1 329 0
+	.loc 1 339 0
 	str	r3, [r6, #8]
-	.loc 1 330 0
+	.loc 1 340 0
 	ldr	r3, [sp, #32]
 	str	r3, [r6, #32]
-	.loc 1 331 0
+	.loc 1 341 0
 	bl	fdt_getprop_u32
 .LVL66:
 	str	r0, [r6, #12]
 .L71:
-	.loc 1 334 0
+	.loc 1 344 0
 	movs	r0, #0
 .LVL67:
 .L16:
-	.loc 1 335 0
+	.loc 1 345 0
 	add	sp, sp, #56
 	.cfi_remember_state
 	.cfi_def_cfa_offset 32
@@ -502,14 +502,14 @@ spl_load_fit_image:
 .LVL68:
 .L18:
 	.cfi_restore_state
-	.loc 1 233 0
+	.loc 1 243 0
 	ldr	r3, [sp, #44]
 	b	.L70
 .LVL69:
 .L23:
 .LBB46:
 .LBB39:
-	.loc 1 161 0
+	.loc 1 171 0
 	ldr	r1, [r8, #8]
 	str	r3, [sp, #16]
 	bl	__aeabi_idivmod
@@ -523,7 +523,7 @@ spl_load_fit_image:
 .LBE46:
 .LBB47:
 .LBB45:
-	.loc 1 147 0
+	.loc 1 157 0
 	ldr	r1, [r8, #8]
 	bl	__aeabi_idiv
 .LVL72:
@@ -532,12 +532,12 @@ spl_load_fit_image:
 .L68:
 .LBE45:
 .LBE47:
-	.loc 1 286 0
+	.loc 1 296 0
 	ldr	r3, [sp, #52]
 	str	r3, [sp, #48]
 .LVL74:
 .L30:
-	.loc 1 290 0
+	.loc 1 300 0
 	ldrb	r3, [sp, #27]	@ zero_extendqisi2
 .LBB48:
 .LBB49:
@@ -548,10 +548,10 @@ spl_load_fit_image:
 	mov	r0, r4
 .LBE49:
 .LBE48:
-	.loc 1 290 0
+	.loc 1 300 0
 	cbz	r3, .L32
 .LVL75:
-	.loc 1 290 0 is_stmt 0 discriminator 1
+	.loc 1 300 0 is_stmt 0 discriminator 1
 	cmp	r3, #6
 	beq	.L32
 .LVL76:
@@ -562,7 +562,7 @@ spl_load_fit_image:
 .LVL77:
 .LBE50:
 .LBE52:
-	.loc 1 293 0
+	.loc 1 303 0
 	movs	r3, #0
 .LBB53:
 .LBB51:
@@ -571,16 +571,16 @@ spl_load_fit_image:
 .LVL78:
 .LBE51:
 .LBE53:
-	.loc 1 293 0
+	.loc 1 303 0
 	ldr	r2, .L72+8
 	mov	r1, r5
 	mov	r0, r4
-	.loc 1 291 0
+	.loc 1 301 0
 	ldr	r10, [sp, #44]
-	.loc 1 293 0
+	.loc 1 303 0
 	bl	fdt_getprop
 .LVL79:
-	.loc 1 291 0
+	.loc 1 301 0
 	ldr	r3, [sp, #48]
 	mov	r1, r7
 	mov	r2, r10
@@ -590,7 +590,7 @@ spl_load_fit_image:
 	bl	printf
 .LVL80:
 .L33:
-	.loc 1 303 0
+	.loc 1 313 0
 	ldr	r3, [sp, #32]
 	mov	r1, r5
 	ldr	r2, [sp, #48]
@@ -598,7 +598,7 @@ spl_load_fit_image:
 	bl	fit_image_verify_with_data
 .LVL81:
 	cbz	r0, .L38
-	.loc 1 308 0
+	.loc 1 318 0
 	add	r3, sp, #32
 	add	r2, sp, #44
 	mov	r1, r5
@@ -608,11 +608,11 @@ spl_load_fit_image:
 	str	r8, [sp, #4]
 	bl	board_fit_image_post_process
 .LVL82:
-	.loc 1 311 0
+	.loc 1 321 0
 	ldr	r0, .L72+16
 	bl	puts
 .LVL83:
-	.loc 1 325 0
+	.loc 1 335 0
 	ldr	r2, [sp, #32]
 	ldr	r1, [sp, #48]
 	ldr	r0, [sp, #44]
@@ -628,7 +628,7 @@ spl_load_fit_image:
 .LVL86:
 .LBE55:
 .LBE54:
-	.loc 1 296 0
+	.loc 1 306 0
 	ldr	r2, [sp, #44]
 	mov	r1, r0
 	ldr	r0, .L72+20
@@ -637,17 +637,17 @@ spl_load_fit_image:
 	b	.L33
 .LVL88:
 .L37:
-	.loc 1 268 0
+	.loc 1 278 0
 	mvn	r0, #4
 	b	.L16
 .LVL89:
 .L38:
-	.loc 1 305 0
+	.loc 1 315 0
 	mov	r0, #-1
 	b	.L16
 .LVL90:
 .L21:
-	.loc 1 280 0
+	.loc 1 290 0
 	add	r3, sp, #32
 	add	r2, sp, #52
 	mov	r1, r5
@@ -656,12 +656,12 @@ spl_load_fit_image:
 .LVL91:
 	cmp	r0, #0
 	beq	.L68
-	.loc 1 281 0
+	.loc 1 291 0
 	ldr	r0, .L72+24
 	bl	puts
 .LVL92:
 .L40:
-	.loc 1 246 0
+	.loc 1 256 0
 	mvn	r0, #1
 .LVL93:
 	b	.L16
@@ -676,7 +676,7 @@ spl_load_fit_image:
 	.word	.LC11
 	.word	.LC8
 	.cfi_endproc
-.LFE223:
+.LFE225:
 	.size	spl_load_fit_image, .-spl_load_fit_image
 	.section	.text.spl_fit_append_fdt,"ax",%progbits
 	.align	1
@@ -686,8 +686,8 @@ spl_load_fit_image:
 	.fpu softvfp
 	.type	spl_fit_append_fdt, %function
 spl_fit_append_fdt:
-.LFB224:
-	.loc 1 340 0
+.LFB226:
+	.loc 1 350 0
 	.cfi_startproc
 	@ args = 8, pretend = 0, frame = 48
 	@ frame_needed = 0, uses_anonymous_args = 0
@@ -702,11 +702,11 @@ spl_fit_append_fdt:
 	mov	r5, r3
 	sub	sp, sp, #60
 	.cfi_def_cfa_offset 80
-	.loc 1 340 0
+	.loc 1 350 0
 	mov	r4, r0
 	mov	r6, r1
 	mov	r7, r2
-	.loc 1 345 0
+	.loc 1 355 0
 	movs	r3, #0
 .LVL95:
 	ldr	r2, .L76
@@ -717,21 +717,21 @@ spl_fit_append_fdt:
 .LVL98:
 	bl	spl_fit_get_image_node
 .LVL99:
-	.loc 1 346 0
+	.loc 1 356 0
 	cmp	r0, #0
 	blt	.L74
-	.loc 1 355 0
+	.loc 1 365 0
 	ldr	r2, [r4, #32]
-	.loc 1 356 0
+	.loc 1 366 0
 	mov	r1, r7
-	.loc 1 355 0
+	.loc 1 365 0
 	ldr	r3, [r4, #8]
 	add	r3, r3, r2
-	.loc 1 356 0
+	.loc 1 366 0
 	mov	r2, r5
-	.loc 1 355 0
+	.loc 1 365 0
 	str	r3, [sp, #20]
-	.loc 1 356 0
+	.loc 1 366 0
 	add	r3, sp, #12
 	stm	sp, {r0, r3}
 	mov	r0, r6
@@ -739,21 +739,21 @@ spl_fit_append_fdt:
 	ldr	r3, [sp, #84]
 	bl	spl_load_fit_image
 .LVL101:
-	.loc 1 359 0
+	.loc 1 369 0
 	cmp	r0, #0
 	blt	.L74
-	.loc 1 363 0
+	.loc 1 373 0
 	ldr	r0, [sp, #20]
 .LVL102:
-	.loc 1 366 0
+	.loc 1 376 0
 	mov	r1, #8192
-	.loc 1 363 0
+	.loc 1 373 0
 	str	r0, [r4, #20]
-	.loc 1 366 0
+	.loc 1 376 0
 	bl	fdt_shrink_to_minimum
 .LVL103:
 .L74:
-	.loc 1 370 0
+	.loc 1 380 0
 	add	sp, sp, #60
 	.cfi_def_cfa_offset 20
 	@ sp needed
@@ -764,7 +764,7 @@ spl_fit_append_fdt:
 .L76:
 	.word	.LC0
 	.cfi_endproc
-.LFE224:
+.LFE226:
 	.size	spl_fit_append_fdt, .-spl_fit_append_fdt
 	.section	.text.spl_fit_load_blob,"ax",%progbits
 	.align	1
@@ -774,8 +774,8 @@ spl_fit_append_fdt:
 	.fpu softvfp
 	.type	spl_fit_load_blob, %function
 spl_fit_load_blob:
-.LFB228:
-	.loc 1 412 0
+.LFB230:
+	.loc 1 422 0
 	.cfi_startproc
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 0, uses_anonymous_args = 0
@@ -790,35 +790,35 @@ spl_fit_load_blob:
 	.cfi_offset 6, -12
 	.cfi_offset 7, -8
 	.cfi_offset 14, -4
-	.loc 1 412 0
+	.loc 1 422 0
 	mov	r4, r0
 	mov	r5, r1
 	rev	r2, r2
 .LVL107:
-	.loc 1 425 0
+	.loc 1 435 0
 	addw	r2, r2, #511
 .LVL108:
-	.loc 1 426 0
+	.loc 1 436 0
 	bic	r0, r2, #510
 .LVL109:
 	bic	r0, r0, #1
 	str	r0, [r3]
-	.loc 1 445 0
+	.loc 1 455 0
 	ldr	r3, .L81
 .LVL110:
 	ldr	r1, [r4, #8]
 .LVL111:
 	subs	r3, r3, r1
 	subs	r3, r3, r0
-	.loc 1 446 0
+	.loc 1 456 0
 	bic	r6, r3, #63
 .LVL112:
 .LBB62:
 .LBB63:
-	.loc 1 169 0
+	.loc 1 179 0
 	ldr	r3, [r4, #12]
 	cbnz	r3, .L79
-	.loc 1 172 0
+	.loc 1 182 0
 	add	r0, r0, r1
 .LVL113:
 	subs	r0, r0, #1
@@ -827,7 +827,7 @@ spl_fit_load_blob:
 .L79:
 .LBE63:
 .LBE62:
-	.loc 1 448 0
+	.loc 1 458 0
 	mov	r2, r0
 	ldr	r7, [r4, #16]
 	mov	r3, r6
@@ -835,9 +835,9 @@ spl_fit_load_blob:
 	mov	r0, r4
 	blx	r7
 .LVL115:
-	.loc 1 451 0
+	.loc 1 461 0
 	cmp	r0, #0
-	.loc 1 455 0
+	.loc 1 465 0
 	ite	ne
 	movne	r0, r6
 .LVL116:
@@ -849,7 +849,7 @@ spl_fit_load_blob:
 .L81:
 	.word	6291393
 	.cfi_endproc
-.LFE228:
+.LFE230:
 	.size	spl_fit_load_blob, .-spl_fit_load_blob
 	.section	.text.fit_config_verify,"ax",%progbits
 	.align	1
@@ -920,6 +920,40 @@ spl_get_current_slot:
 	.cfi_endproc
 .LFE215:
 	.size	spl_get_current_slot, .-spl_get_current_slot
+	.section	.text.spl_load_meta,"ax",%progbits
+	.align	1
+	.weak	spl_load_meta
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	spl_load_meta, %function
+spl_load_meta:
+.LFB216:
+	.loc 1 40 0
+	.cfi_startproc
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL124:
+	push	{r3, lr}
+	.cfi_def_cfa_offset 8
+	.cfi_offset 3, -8
+	.cfi_offset 14, -4
+	.loc 1 41 0
+	ldr	r0, .L87
+.LVL125:
+	bl	printf
+.LVL126:
+	.loc 1 44 0
+	mov	r0, #-1
+	pop	{r3, pc}
+.L88:
+	.align	2
+.L87:
+	.word	.LC14
+	.cfi_endproc
+.LFE216:
+	.size	spl_load_meta, .-spl_load_meta
 	.section	.text.fdt_bootargs_append_ab,"ax",%progbits
 	.align	1
 	.weak	fdt_bootargs_append_ab
@@ -929,7 +963,7 @@ spl_get_current_slot:
 	.fpu softvfp
 	.type	fdt_bootargs_append_ab, %function
 fdt_bootargs_append_ab:
-.LFB235:
+.LFB237:
 	.cfi_startproc
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 0, uses_anonymous_args = 0
@@ -937,7 +971,7 @@ fdt_bootargs_append_ab:
 	mov	r0, #-1
 	bx	lr
 	.cfi_endproc
-.LFE235:
+.LFE237:
 	.size	fdt_bootargs_append_ab, .-fdt_bootargs_append_ab
 	.section	.text.fdt_bootargs_append,"ax",%progbits
 	.align	1
@@ -948,20 +982,40 @@ fdt_bootargs_append_ab:
 	.fpu softvfp
 	.type	fdt_bootargs_append, %function
 fdt_bootargs_append:
-.LFB217:
-	.loc 1 45 0
+.LFB218:
+	.loc 1 52 0
 	.cfi_startproc
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 0, uses_anonymous_args = 0
 	@ link register save eliminated.
-.LVL124:
-	.loc 1 47 0
+.LVL127:
+	.loc 1 54 0
 	mov	r0, #-1
-.LVL125:
+.LVL128:
 	bx	lr
 	.cfi_endproc
-.LFE217:
+.LFE218:
 	.size	fdt_bootargs_append, .-fdt_bootargs_append
+	.section	.text.rk_meta_bootargs_append,"ax",%progbits
+	.align	1
+	.weak	rk_meta_bootargs_append
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	rk_meta_bootargs_append, %function
+rk_meta_bootargs_append:
+.LFB219:
+	.loc 1 57 0
+	.cfi_startproc
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+.LVL129:
+	bx	lr
+	.cfi_endproc
+.LFE219:
+	.size	rk_meta_bootargs_append, .-rk_meta_bootargs_append
 	.section	.text.spl_fit_standalone_release,"ax",%progbits
 	.align	1
 	.weak	spl_fit_standalone_release
@@ -971,19 +1025,19 @@ fdt_bootargs_append:
 	.fpu softvfp
 	.type	spl_fit_standalone_release, %function
 spl_fit_standalone_release:
-.LFB227:
-	.loc 1 405 0
+.LFB229:
+	.loc 1 415 0
 	.cfi_startproc
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 0, uses_anonymous_args = 0
 	@ link register save eliminated.
-.LVL126:
-	.loc 1 407 0
+.LVL130:
+	.loc 1 417 0
 	movs	r0, #0
-.LVL127:
+.LVL131:
 	bx	lr
 	.cfi_endproc
-.LFE227:
+.LFE229:
 	.size	spl_fit_standalone_release, .-spl_fit_standalone_release
 	.section	.text.spl_kernel_partition,"ax",%progbits
 	.align	1
@@ -994,23 +1048,23 @@ spl_fit_standalone_release:
 	.fpu softvfp
 	.type	spl_kernel_partition, %function
 spl_kernel_partition:
-.LFB229:
-	.loc 1 461 0
+.LFB231:
+	.loc 1 471 0
 	.cfi_startproc
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 0, uses_anonymous_args = 0
 	@ link register save eliminated.
-.LVL128:
-	.loc 1 463 0
-	ldr	r0, .L90
-.LVL129:
+.LVL132:
+	.loc 1 473 0
+	ldr	r0, .L94
+.LVL133:
 	bx	lr
-.L91:
+.L95:
 	.align	2
-.L90:
-	.word	.LC14
+.L94:
+	.word	.LC15
 	.cfi_endproc
-.LFE229:
+.LFE231:
 	.size	spl_kernel_partition, .-spl_kernel_partition
 	.section	.text.spl_load_simple_fit,"ax",%progbits
 	.align	1
@@ -1021,12 +1075,12 @@ spl_kernel_partition:
 	.fpu softvfp
 	.type	spl_load_simple_fit, %function
 spl_load_simple_fit:
-.LFB232:
-	.loc 1 815 0
+.LFB234:
+	.loc 1 829 0
 	.cfi_startproc
 	@ args = 0, pretend = 0, frame = 248
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL130:
+.LVL134:
 	push	{r4, r5, r6, r7, r8, r10, fp, lr}
 	.cfi_def_cfa_offset 32
 	.cfi_offset 4, -32
@@ -1039,42 +1093,41 @@ spl_load_simple_fit:
 	.cfi_offset 14, -4
 	sub	sp, sp, #264
 	.cfi_def_cfa_offset 296
+	mov	r5, r3
 	add	r7, sp, #16
 	.cfi_def_cfa 7, 280
-.LVL131:
-	.loc 1 815 0
-	mov	r6, r1
+.LVL135:
+	.loc 1 829 0
 	mov	r4, r0
-	str	r2, [r7, #28]
-.LVL132:
-	mov	r2, r3
-.LVL133:
 	ldr	r3, [r3]
-.LVL134:
-	.loc 1 831 0
-	ldr	r1, .L160
-.LVL135:
-	rev	r3, r3
 .LVL136:
-	cmp	r3, r1
-	str	r1, [r7]
-	beq	.L93
-	.loc 1 832 0
-	ldr	r0, .L160+4
+	mov	r6, r1
+	str	r2, [r7, #28]
 .LVL137:
-.L159:
+	.loc 1 845 0
+	ldr	r2, .L166
+.LVL138:
+	rev	r3, r3
+.LVL139:
+	cmp	r3, r2
+	str	r2, [r7]
+	beq	.L97
+	.loc 1 846 0
+	ldr	r0, .L166+4
+.LVL140:
+.L165:
 .LBB84:
 .LBB85:
-	.loc 1 635 0
+	.loc 1 649 0
 	bl	printf
-.LVL138:
-	.loc 1 636 0
+.LVL141:
+	.loc 1 650 0
 	mvn	r3, #21
-.LVL139:
-.L92:
+.LVL142:
+.L96:
 .LBE85:
 .LBE84:
-	.loc 1 847 0
+	.loc 1 864 0
 	mov	r0, r3
 	adds	r7, r7, #248
 	.cfi_remember_state
@@ -1083,201 +1136,210 @@ spl_load_simple_fit:
 	.cfi_def_cfa_register 13
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.LVL140:
-.L93:
+.LVL143:
+.L97:
 	.cfi_restore_state
+	.loc 1 850 0
+	ldr	r3, [r0, #28]
+	cmp	r3, #2
+	bne	.L99
+	.loc 1 851 0
+	bl	spl_load_meta
+.LVL144:
+.L99:
 .LBB95:
 .LBB93:
-	.loc 1 609 0
+	.loc 1 623 0
+	mov	r2, r5
 	add	r3, r7, #36
 	ldr	r1, [r7, #28]
 	mov	r0, r6
-.LVL141:
 	bl	spl_fit_load_blob
-.LVL142:
-	.loc 1 610 0
+.LVL145:
+	.loc 1 624 0
 	mov	r5, r0
+.LVL146:
 	cmp	r0, #0
-	beq	.L95
-	.loc 1 616 0
-	ldr	r1, .L160+8
+	beq	.L100
+	.loc 1 630 0
+	ldr	r1, .L166+8
 	bl	fdt_path_offset
-.LVL143:
-	.loc 1 617 0
+.LVL147:
+	.loc 1 631 0
 	subs	r10, r0, #0
-	blt	.L95
-	.loc 1 623 0
+	blt	.L100
+	.loc 1 637 0
 	bl	fit_board_verify_required_sigs
-.LVL144:
-	.loc 1 633 0
+.LVL148:
+	.loc 1 647 0
 	movs	r1, #0
 	mov	r0, r5
 	bl	fit_conf_get_node
-.LVL145:
-	.loc 1 634 0
+.LVL149:
+	.loc 1 648 0
 	subs	r1, r0, #0
-	bgt	.L96
-	.loc 1 635 0
-	ldr	r0, .L160+12
-.LVL146:
-	b	.L159
-.LVL147:
-.L96:
-	.loc 1 639 0
+	bgt	.L101
+	.loc 1 649 0
+	ldr	r0, .L166+12
+.LVL150:
+	b	.L165
+.LVL151:
+.L101:
+	.loc 1 653 0
 	mov	r0, r5
-.LVL148:
+.LVL152:
 	bl	fit_config_verify
-.LVL149:
-	.loc 1 640 0
+.LVL153:
+	.loc 1 654 0
 	mov	r8, r0
-	cbz	r0, .L98
-	.loc 1 641 0
+	cbz	r0, .L103
+	.loc 1 655 0
 	mov	r1, r0
-	ldr	r0, .L160+16
-.LVL150:
+	ldr	r0, .L166+16
+.LVL154:
 	bl	printf
-.LVL151:
+.LVL155:
 	mov	r3, r8
-	b	.L92
-.LVL152:
-.L98:
-	.loc 1 644 0
-	ldr	r0, .L160+20
-.LVL153:
+	b	.L96
+.LVL156:
+.L103:
+	.loc 1 658 0
+	ldr	r0, .L166+20
+.LVL157:
 	bl	printf
-.LVL154:
-	.loc 1 672 0
+.LVL158:
+	.loc 1 686 0
 	mov	r3, r8
-	ldr	r2, .L160+24
+	ldr	r2, .L166+24
 	mov	r1, r10
 	mov	r0, r5
 	bl	spl_fit_get_image_node
-.LVL155:
-	.loc 1 674 0
+.LVL159:
+	.loc 1 688 0
 	subs	fp, r0, #0
-	ble	.L99
-	.loc 1 676 0
+	ble	.L104
+	.loc 1 690 0
 	add	r3, r7, #92
 	str	fp, [sp]
 	str	r3, [sp, #4]
 	mov	r2, r5
 	ldr	r3, [r7, #36]
 	mov	r0, r6
-.LVL156:
+.LVL160:
 	ldr	r1, [r7, #28]
 	bl	spl_load_fit_image
-.LVL157:
-	.loc 1 678 0
-	cbnz	r0, .L101
-	.loc 1 679 0
+.LVL161:
+	.loc 1 692 0
+	cbnz	r0, .L106
+	.loc 1 693 0
 	ldr	r3, [r7, #104]
-	.loc 1 682 0
+	.loc 1 696 0
 	movs	r0, #0
-.LVL158:
-	.loc 1 679 0
+.LVL162:
+	.loc 1 693 0
 	adds	r3, r3, #1
-	.loc 1 680 0
+	.loc 1 694 0
 	itt	eq
 	ldreq	r3, [r7, #100]
 	streq	r3, [r7, #104]
-	.loc 1 682 0
+	.loc 1 696 0
 	ldr	r1, [r7, #104]
 	bl	spl_fit_standalone_release
-.LVL159:
-	.loc 1 683 0
+.LVL163:
+	.loc 1 697 0
 	mov	r1, r0
-	cbz	r0, .L101
-	.loc 1 684 0
-	ldr	r0, .L160+28
-.LVL160:
+	cbz	r0, .L106
+	.loc 1 698 0
+	ldr	r0, .L166+28
+.LVL164:
 	bl	printf
-.LVL161:
-.L101:
-	.loc 1 699 0
+.LVL165:
+.L106:
+	.loc 1 713 0
 	movs	r3, #0
-	ldr	r2, .L160+32
+	ldr	r2, .L166+32
 	mov	r1, r10
 	mov	r0, r5
 	bl	spl_fit_get_image_node
-.LVL162:
-	.loc 1 705 0
+.LVL166:
+	.loc 1 719 0
 	subs	fp, r0, #0
-	bge	.L130
-	.loc 1 707 0
+	bge	.L136
+	.loc 1 721 0
 	movs	r3, #0
-	ldr	r2, .L160+36
+	ldr	r2, .L166+36
 	mov	r1, r10
 	mov	r0, r5
-.LVL163:
+.LVL167:
 	bl	spl_fit_get_image_node
-.LVL164:
-	.loc 1 715 0
+.LVL168:
+	.loc 1 729 0
 	ldr	r3, [r4, #28]
-	.loc 1 707 0
+	.loc 1 721 0
 	mov	fp, r0
-.LVL165:
-	.loc 1 715 0
+.LVL169:
+	.loc 1 729 0
 	cmp	r3, #2
-	bne	.L105
-	.loc 1 717 0
-	ldr	r0, .L160+40
-.LVL166:
+	bne	.L110
+	.loc 1 731 0
+	ldr	r0, .L166+40
+.LVL170:
 	bl	atags_get_tag
-.LVL167:
-	.loc 1 718 0
+.LVL171:
+	.loc 1 732 0
 	cmp	r0, #0
-	beq	.L105
-	.loc 1 719 0
+	beq	.L110
+	.loc 1 733 0
 	ldr	r3, [r0, #16]
 	cmp	r3, #1
-	bne	.L105
-	.loc 1 712 0
+	bne	.L110
+	.loc 1 726 0
 	mov	r8, r3
-	.loc 1 720 0
+	.loc 1 734 0
 	movs	r2, #5
 	strb	r2, [r4, #4]
-.LVL168:
-.L106:
+.LVL172:
+.L111:
 .LBB86:
-	.loc 1 762 0
+	.loc 1 776 0
 	movs	r3, #0
-	.loc 1 764 0
-	ldr	r2, .L160+36
-	.loc 1 762 0
+	.loc 1 778 0
+	ldr	r2, .L166+36
+	.loc 1 776 0
 	strb	r3, [r7, #32]
-	.loc 1 764 0
+	.loc 1 778 0
 	mov	r1, r10
 	mov	r3, r8
 	mov	r0, r5
 	bl	spl_fit_get_image_node
-.LVL169:
-	.loc 1 765 0
+.LVL173:
+	.loc 1 779 0
 	subs	r3, r0, #0
-	blt	.L109
-.LVL170:
+	blt	.L114
+.LVL174:
 .LBB87:
 .LBB88:
-	.loc 1 400 0
+	.loc 1 410 0
 	add	r2, r7, #32
-.LVL171:
+.LVL175:
 	mov	r1, r3
 	mov	r0, r5
-.LVL172:
+.LVL176:
 	str	r3, [r7, #24]
 	bl	fit_image_get_os
-.LVL173:
+.LVL177:
 .LBE88:
 .LBE87:
-	.loc 1 772 0
+	.loc 1 786 0
 	ldr	r2, [r4, #28]
 	ldr	r3, [r7, #24]
 	cmp	r2, #2
-	bne	.L110
+	bne	.L115
 	ldrb	r2, [r7, #32]	@ zero_extendqisi2
 	cmp	r2, #17
-	beq	.L117
-.L110:
-	.loc 1 776 0
+	beq	.L122
+.L115:
+	.loc 1 790 0
 	add	fp, r7, #92
 	mov	r2, r5
 	stm	sp, {r3, fp}
@@ -1285,81 +1347,81 @@ spl_load_simple_fit:
 	ldr	r3, [r7, #36]
 	ldr	r1, [r7, #28]
 	bl	spl_load_fit_image
-.LVL174:
-	.loc 1 778 0
+.LVL178:
+	.loc 1 792 0
 	cmp	r0, #0
-	blt	.L117
-	.loc 1 781 0
+	blt	.L122
+	.loc 1 795 0
 	ldrb	r3, [r7, #32]	@ zero_extendqisi2
 	cmp	r3, #17
-	bne	.L112
-	.loc 1 782 0
+	bne	.L117
+	.loc 1 796 0
 	ldr	r3, [r7, #36]
 	mov	r1, r6
 	str	r10, [sp]
 	mov	r0, fp
-.LVL175:
+.LVL179:
 	str	r3, [sp, #4]
 	mov	r3, r5
 	ldr	r2, [r7, #28]
 	bl	spl_fit_append_fdt
-.LVL176:
-	.loc 1 784 0
+.LVL180:
+	.loc 1 798 0
 	ldr	r3, [r7, #112]
 	str	r3, [r4, #20]
-.L112:
-	.loc 1 791 0
+.L117:
+	.loc 1 805 0
 	ldr	r3, [r4, #12]
 	adds	r3, r3, #1
-	bne	.L113
-	.loc 1 792 0
+	bne	.L118
+	.loc 1 806 0
 	ldr	r3, [r7, #104]
-	.loc 1 791 0
+	.loc 1 805 0
 	adds	r2, r3, #1
-	.loc 1 793 0
+	.loc 1 807 0
 	it	ne
 	strne	r3, [r4, #12]
-.L113:
-	.loc 1 796 0
+.L118:
+	.loc 1 810 0
 	ldr	r3, [r4, #20]
 	str	r3, [r7, #24]
-.LVL177:
+.LVL181:
 	cmp	r3, #0
-	beq	.L117
-.LVL178:
+	beq	.L122
+.LVL182:
 .LBB89:
 .LBB90:
-	.loc 1 380 0
+	.loc 1 390 0
 	add	r3, r7, #48
-.LVL179:
+.LVL183:
 	mov	r2, r8
-	ldr	r1, .L160+36
+	ldr	r1, .L166+36
 	mov	r0, r5
 	bl	spl_fit_get_image_name.isra.0
-.LVL180:
-	.loc 1 382 0
+.LVL184:
+	.loc 1 392 0
 	cmp	r0, #0
-	blt	.L117
-	.loc 1 385 0
+	blt	.L122
+	.loc 1 395 0
 	mov	r3, r8
-	ldr	r2, .L160+36
+	ldr	r2, .L166+36
 	mov	r1, r10
 	mov	r0, r5
-.LVL181:
+.LVL185:
 	bl	spl_fit_get_image_node
-.LVL182:
-	.loc 1 387 0
+.LVL186:
+	.loc 1 397 0
 	ldr	r3, [r7, #48]
-	.loc 1 389 0
+	.loc 1 399 0
 	mov	r1, r0
-	.loc 1 385 0
+	.loc 1 395 0
 	mov	fp, r0
-.LVL183:
-	.loc 1 389 0
-	ldr	r2, .L160+44
+.LVL187:
+	.loc 1 399 0
+	ldr	r2, .L166+44
 	mov	r0, r5
-.LVL184:
-	.loc 1 387 0
+.LVL188:
+	.loc 1 397 0
 	str	r3, [r7, #20]
 	ldr	r3, [r7, #100]
 	str	r3, [r7, #16]
@@ -1367,21 +1429,21 @@ spl_load_simple_fit:
 	str	r3, [r7, #12]
 	ldr	r3, [r7, #104]
 	str	r3, [r7, #8]
-	.loc 1 389 0
+	.loc 1 399 0
 	movs	r3, #0
 	bl	fdt_getprop
-.LVL185:
-	.loc 1 390 0
+.LVL189:
+	.loc 1 400 0
 	movs	r3, #0
-	.loc 1 389 0
+	.loc 1 399 0
 	str	r0, [r7, #4]
-	.loc 1 390 0
-	ldr	r2, .L160+48
+	.loc 1 400 0
+	ldr	r2, .L166+48
 	mov	r1, fp
 	mov	r0, r5
 	bl	fdt_getprop
-.LVL186:
-	.loc 1 387 0
+.LVL190:
+	.loc 1 397 0
 	str	r0, [sp, #12]
 	mov	r1, r8
 	ldr	r3, [r7, #4]
@@ -1394,33 +1456,33 @@ spl_load_simple_fit:
 	ldr	r2, [r7, #20]
 	ldr	r0, [r7, #24]
 	bl	fdt_record_loadable
-.LVL187:
-.L117:
+.LVL191:
+.L122:
 .LBE90:
 .LBE89:
 .LBE86:
-	.loc 1 761 0
+	.loc 1 775 0
 	add	r8, r8, #1
-.LVL188:
-	b	.L106
-.LVL189:
-.L99:
-	.loc 1 698 0
-	bne	.L101
-.LVL190:
-.L130:
-	.loc 1 705 0
+.LVL192:
+	b	.L111
+.LVL193:
+.L104:
+	.loc 1 712 0
+	bne	.L106
+.LVL194:
+.L136:
+	.loc 1 719 0
 	mov	r8, #0
-	b	.L104
-.LVL191:
-.L105:
-	.loc 1 727 0
+	b	.L109
+.LVL195:
+.L110:
+	.loc 1 741 0
 	cmp	fp, #0
-	blt	.L95
+	blt	.L100
 	mov	r8, #1
-.LVL192:
-.L104:
-	.loc 1 734 0
+.LVL196:
+.L109:
+	.loc 1 748 0
 	str	r4, [sp, #4]
 	mov	r2, r5
 	str	fp, [sp]
@@ -1428,35 +1490,35 @@ spl_load_simple_fit:
 	ldr	r3, [r7, #36]
 	ldr	r1, [r7, #28]
 	bl	spl_load_fit_image
-.LVL193:
-	.loc 1 736 0
+.LVL197:
+	.loc 1 750 0
 	mov	r3, r0
 	cmp	r0, #0
-	bne	.L92
-.LVL194:
+	bne	.L96
+.LVL198:
 .LBB91:
 .LBB92:
-	.loc 1 400 0
+	.loc 1 410 0
 	adds	r2, r4, #4
-.LVL195:
+.LVL199:
 	mov	r1, fp
 	mov	r0, r5
-.LVL196:
+.LVL200:
 	bl	fit_image_get_os
-.LVL197:
+.LVL201:
 .LBE92:
 .LBE91:
-	.loc 1 743 0
-	cbz	r0, .L107
-	.loc 1 747 0
+	.loc 1 757 0
+	cbz	r0, .L112
+	.loc 1 761 0
 	movs	r3, #17
 	strb	r3, [r4, #4]
-.L107:
-	.loc 1 754 0
+.L112:
+	.loc 1 768 0
 	ldrb	r3, [r4, #4]	@ zero_extendqisi2
 	cmp	r3, #17
-	bne	.L106
-	.loc 1 755 0
+	bne	.L111
+	.loc 1 769 0
 	ldr	r3, [r7, #36]
 	mov	r1, r6
 	str	r10, [sp]
@@ -1465,118 +1527,117 @@ spl_load_simple_fit:
 	mov	r3, r5
 	ldr	r2, [r7, #28]
 	bl	spl_fit_append_fdt
-.LVL198:
-	b	.L106
-.LVL199:
-.L109:
-	.loc 1 807 0
+.LVL202:
+	b	.L111
+.LVL203:
+.L114:
+	.loc 1 821 0
 	ldr	r3, [r4, #12]
 	subs	r3, r3, #1
 	adds	r3, r3, #3
-	bls	.L116
-	.loc 1 808 0
+	bls	.L121
+	.loc 1 822 0
 	ldr	r3, [r4, #8]
 	str	r3, [r4, #12]
-.L116:
-.LVL200:
+.L121:
+.LVL204:
 .LBE93:
 .LBE95:
 .LBB96:
 .LBB97:
+	.loc 1 488 0
+	ldr	r3, .L166+52
 	.loc 1 478 0
-	ldr	r3, .L160+52
-	.loc 1 468 0
 	str	sp, [r7, #20]
-	.loc 1 478 0
+	.loc 1 488 0
 	ldm	r3, {r0, r1, r2}
 	add	r3, r7, #36
 	stm	r3, {r0, r1, r2}
-.LVL201:
-	.loc 1 480 0
+.LVL205:
+	.loc 1 490 0
 	ldr	r3, [r6, #8]
 	adds	r3, r3, #7
 	bic	r3, r3, #7
 	sub	sp, sp, r3
-.LVL202:
-	.loc 1 487 0
+.LVL206:
+	.loc 1 497 0
 	ldr	r3, [r4, #28]
-	.loc 1 480 0
+	.loc 1 490 0
 	add	r8, sp, #16
-.LVL203:
-	.loc 1 487 0
+.LVL207:
+	.loc 1 497 0
 	cmp	r3, #2
-	bne	.L128
-.LVL204:
-	.loc 1 494 0
+	bne	.L134
+.LVL208:
+	.loc 1 504 0
 	mov	r1, r6
 	mov	r0, r4
 	bl	spl_kernel_partition
-.LVL205:
-	.loc 1 495 0
+.LVL209:
+	.loc 1 505 0
 	add	r2, r7, #92
 	mov	r1, r0
 	ldr	r0, [r6]
-.LVL206:
+.LVL210:
 	bl	part_get_info_by_name
-.LVL207:
+.LVL211:
 	cmp	r0, #0
-	bgt	.L118
-	.loc 1 496 0
-	ldr	r1, .L160+56
-	ldr	r0, .L160+60
-.LVL208:
-.L157:
-	.loc 1 509 0
+	bgt	.L123
+	.loc 1 506 0
+	ldr	r1, .L166+56
+	ldr	r0, .L166+60
+.LVL212:
+.L163:
+	.loc 1 519 0
 	bl	printf
-.LVL209:
-.L158:
-	.loc 1 510 0
+.LVL213:
+.L164:
+	.loc 1 520 0
 	mvn	r3, #21
-.L119:
+.L124:
 	ldr	sp, [r7, #20]
-.LVL210:
+.LVL214:
 .LBE97:
 .LBE96:
-	.loc 1 842 0
-	b	.L92
-.LVL211:
-.L118:
+	.loc 1 859 0
+	b	.L96
+.LVL215:
+.L123:
 .LBB101:
 .LBB100:
-	.loc 1 499 0
+	.loc 1 509 0
 	ldr	r3, [r7, #92]
-	.loc 1 503 0
+	.loc 1 513 0
 	movs	r2, #1
 	ldr	r5, [r6, #16]
 	mov	r0, r6
-	.loc 1 499 0
+	.loc 1 509 0
 	str	r3, [r7, #28]
-.LVL212:
-	.loc 1 503 0
+.LVL216:
+	.loc 1 513 0
 	mov	r3, r8
-.LVL213:
+.LVL217:
 	ldr	r1, [r7, #28]
 	blx	r5
-.LVL214:
+.LVL218:
 	cmp	r0, #1
-	bne	.L131
-.LVL215:
+	bne	.L137
+.LVL219:
 	ldr	r3, [r8]
-	.loc 1 508 0
+	.loc 1 518 0
 	ldr	r2, [r7]
 	rev	r3, r3
-.LVL216:
+.LVL220:
 	cmp	r3, r2
-	beq	.L120
-	.loc 1 509 0
-	ldr	r1, .L160+56
-	ldr	r0, .L160+64
-	b	.L157
-.L161:
+	beq	.L125
+	.loc 1 519 0
+	ldr	r1, .L166+56
+	ldr	r0, .L166+64
+	b	.L163
+.L167:
 	.align	2
-.L160:
+.L166:
 	.word	-804389139
-	.word	.LC15
 	.word	.LC16
 	.word	.LC17
 	.word	.LC18
@@ -1585,81 +1646,82 @@ spl_load_simple_fit:
 	.word	.LC21
 	.word	.LC22
 	.word	.LC23
-	.word	1413546071
 	.word	.LC24
+	.word	1413546071
 	.word	.LC25
+	.word	.LC26
 	.word	.LANCHOR1
 	.word	.LANCHOR0
-	.word	.LC26
 	.word	.LC27
-.L120:
-	.loc 1 513 0
+	.word	.LC28
+.L125:
+	.loc 1 523 0
 	mov	r2, r8
 	add	r3, r7, #32
 	ldr	r1, [r7, #28]
 	mov	r0, r6
 	bl	spl_fit_load_blob
-.LVL217:
-	.loc 1 514 0
+.LVL221:
+	.loc 1 524 0
 	mov	r8, r0
-.LVL218:
+.LVL222:
 	cmp	r0, #0
-	beq	.L132
-	.loc 1 523 0
+	beq	.L138
+	.loc 1 533 0
 	movs	r1, #0
 	bl	fit_conf_get_node
-.LVL219:
-	.loc 1 524 0
+.LVL223:
+	.loc 1 534 0
 	subs	r1, r0, #0
-	bgt	.L121
-	.loc 1 525 0
-	ldr	r0, .L162
-.LVL220:
+	bgt	.L126
+	.loc 1 535 0
+	ldr	r0, .L168
+.LVL224:
 	bl	printf
-.LVL221:
-	b	.L158
-.LVL222:
-.L121:
-	.loc 1 529 0
+.LVL225:
+	b	.L164
+.LVL226:
+.L126:
+	.loc 1 539 0
 	mov	r0, r8
-.LVL223:
+.LVL227:
 	bl	fit_config_verify
-.LVL224:
-	.loc 1 530 0
-	cbz	r0, .L122
-	.loc 1 531 0
+.LVL228:
+	.loc 1 540 0
+	cbz	r0, .L127
+	.loc 1 541 0
 	mov	r1, r0
 	str	r0, [r7, #28]
-.LVL225:
-	ldr	r0, .L162+4
-.LVL226:
+.LVL229:
+	ldr	r0, .L168+4
+.LVL230:
 	bl	printf
-.LVL227:
+.LVL231:
 	ldr	r3, [r7, #28]
-	b	.L119
-.LVL228:
-.L122:
+	b	.L124
+.LVL232:
+.L127:
 	str	r0, [r7, #16]
-	.loc 1 534 0
-	ldr	r0, .L162+8
-.LVL229:
+	.loc 1 544 0
+	ldr	r0, .L168+8
+.LVL233:
 	bl	printf
-.LVL230:
-	.loc 1 536 0
-	ldr	r1, .L162+12
+.LVL234:
+	.loc 1 546 0
+	ldr	r1, .L168+12
 	mov	r0, r8
 	bl	fdt_path_offset
-.LVL231:
-	.loc 1 537 0
+.LVL235:
+	.loc 1 547 0
 	subs	r3, r0, #0
 	str	r3, [r7, #24]
-	blt	.L133
+	blt	.L139
 	ldr	r3, [r7, #16]
 	mov	r5, r3
-.LVL232:
-.L127:
+.LVL236:
+.L133:
 .LBB98:
-	.loc 1 544 0
+	.loc 1 554 0
 	add	r3, r7, #36
 	ldr	r1, [r7, #24]
 	ldr	r10, [r3, r5, lsl #2]
@@ -1667,130 +1729,135 @@ spl_load_simple_fit:
 	movs	r3, #0
 	mov	r2, r10
 	bl	spl_fit_get_image_node
-.LVL233:
-	.loc 1 549 0
+.LVL237:
+	.loc 1 559 0
 	cmp	r0, #0
-	blt	.L124
-	.loc 1 554 0
+	blt	.L129
+	.loc 1 564 0
 	add	r3, r7, #48
-	.loc 1 547 0
+	.loc 1 557 0
 	ldr	fp, [r6]
-	.loc 1 554 0
+	.loc 1 564 0
 	mov	r2, r8
 	stm	sp, {r0, r3}
 	mov	r0, r6
-.LVL234:
+.LVL238:
 	ldr	r3, [r7, #32]
 	ldr	r1, [r7, #28]
 	bl	spl_load_fit_image
-.LVL235:
-	.loc 1 556 0
+.LVL239:
+	.loc 1 566 0
 	mov	r3, r0
 	cmp	r0, #0
-	bne	.L119
-	.loc 1 560 0
-	ldr	r1, .L162+16
+	bne	.L124
+	.loc 1 570 0
+	ldr	r1, .L168+16
 	mov	r0, r10
-.LVL236:
+.LVL240:
 	bl	strcmp
-.LVL237:
-	cbnz	r0, .L125
-	.loc 1 570 0
+.LVL241:
+	cbnz	r0, .L130
+	.loc 1 580 0
 	ldr	r3, [fp, #4]
-	.loc 1 561 0
+	.loc 1 571 0
 	ldr	r10, [r7, #56]
-	.loc 1 570 0
+	.loc 1 580 0
 	cmp	r3, #1
-	.loc 1 561 0
-	str	r10, [r4, #20]
-	.loc 1 570 0
-	bne	.L124
 	.loc 1 571 0
+	str	r10, [r4, #20]
+	.loc 1 580 0
+	bne	.L131
+	.loc 1 581 0
 	mov	r0, fp
 	bl	mtd_part_parse
-.LVL238:
+.LVL242:
 	mov	r1, r0
 	mov	r0, r10
 	bl	fdt_bootargs_append
-.LVL239:
-.L124:
+.LVL243:
+.L131:
+	.loc 1 585 0
+	ldr	r0, [r7, #56]
+	bl	rk_meta_bootargs_append
+.LVL244:
+.L129:
 .LBE98:
-	.loc 1 543 0
+	.loc 1 553 0
 	adds	r5, r5, #1
-.LVL240:
+.LVL245:
 	cmp	r5, #3
-	bne	.L127
-.LVL241:
-.L128:
-	.loc 1 593 0
+	bne	.L133
+.LVL246:
+.L134:
+	.loc 1 607 0
 	movs	r3, #0
-	b	.L119
-.LVL242:
-.L125:
+	b	.L124
+.LVL247:
+.L130:
 .LBB99:
-	.loc 1 573 0
-	ldr	r1, .L162+20
+	.loc 1 587 0
+	ldr	r1, .L168+20
 	mov	r0, r10
 	bl	strcmp
-.LVL243:
+.LVL248:
 	cmp	r0, #0
-	bne	.L124
-	.loc 1 575 0
+	bne	.L129
+	.loc 1 589 0
 	ldr	r3, [r7, #56]
 	str	r3, [r4, #16]
-	b	.L124
-.LVL244:
-.L131:
+	b	.L129
+.LVL249:
+.L137:
 .LBE99:
-	.loc 1 505 0
+	.loc 1 515 0
 	mvn	r3, #4
-	b	.L119
-.LVL245:
-.L132:
-	.loc 1 516 0
+	b	.L124
+.LVL250:
+.L138:
+	.loc 1 526 0
 	mvn	r3, #18
-	b	.L119
-.LVL246:
-.L133:
-	.loc 1 537 0
+	b	.L124
+.LVL251:
+.L139:
+	.loc 1 547 0
 	ldr	r3, [r7, #24]
-	b	.L119
-.LVL247:
-.L95:
+	b	.L124
+.LVL252:
+.L100:
 .LBE100:
 .LBE101:
 .LBB102:
 .LBB94:
-	.loc 1 612 0
+	.loc 1 626 0
 	mov	r3, #-1
-.LVL248:
-	b	.L92
-.L163:
+.LVL253:
+	b	.L96
+.L169:
 	.align	2
-.L162:
-	.word	.LC17
+.L168:
 	.word	.LC18
 	.word	.LC19
-	.word	.LC16
+	.word	.LC20
+	.word	.LC17
 	.word	.LC0
 	.word	.LC1
 .LBE94:
 .LBE102:
 	.cfi_endproc
-.LFE232:
+.LFE234:
 	.size	spl_load_simple_fit, .-spl_load_simple_fit
 	.section	.rodata
 	.align	2
 	.set	.LANCHOR1,. + 0
-.LC28:
+.LC29:
 	.word	.LC0
 	.word	.LC1
 	.word	.LC2
-	.section	.rodata.__func__.9840,"a",%progbits
+	.section	.rodata.__func__.9847,"a",%progbits
 	.set	.LANCHOR0,. + 0
-	.type	__func__.9840, %object
-	.size	__func__.9840, 20
-__func__.9840:
+	.type	__func__.9847, %object
+	.size	__func__.9847, 20
+__func__.9847:
 	.ascii	"spl_load_kernel_fit\000"
 	.section	.rodata.spl_fit_get_image_name.isra.0.str1.1,"aMS",%progbits,1
 .LC4:
@@ -1800,7 +1867,7 @@ __func__.9840:
 .LC6:
 	.ascii	"   %s\012\000"
 	.section	.rodata.spl_kernel_partition.str1.1,"aMS",%progbits,1
-.LC14:
+.LC15:
 	.ascii	"boot\000"
 	.section	.rodata.spl_load_fit_image.str1.1,"aMS",%progbits,1
 .LC7:
@@ -1817,32 +1884,35 @@ __func__.9840:
 	.ascii	"OK\012\000"
 .LC13:
 	.ascii	"entry\000"
+	.section	.rodata.spl_load_meta.str1.1,"aMS",%progbits,1
+.LC14:
+	.ascii	"No load cfg image.\012\000"
 	.section	.rodata.spl_load_simple_fit.str1.1,"aMS",%progbits,1
-.LC15:
-	.ascii	"Not fit magic\012\000"
 .LC16:
-	.ascii	"/images\000"
+	.ascii	"Not fit magic\012\000"
 .LC17:
-	.ascii	"No default config node\012\000"
+	.ascii	"/images\000"
 .LC18:
-	.ascii	"fit verify configure failed, ret=%d\012\000"
+	.ascii	"No default config node\012\000"
 .LC19:
-	.ascii	"\012\000"
+	.ascii	"fit verify configure failed, ret=%d\012\000"
 .LC20:
-	.ascii	"standalone\000"
+	.ascii	"\012\000"
 .LC21:
-	.ascii	"Start standalone fail, ret = %d\012\000"
+	.ascii	"standalone\000"
 .LC22:
-	.ascii	"firmware\000"
+	.ascii	"Start standalone fail, ret = %d\012\000"
 .LC23:
-	.ascii	"loadables\000"
+	.ascii	"firmware\000"
 .LC24:
-	.ascii	"type\000"
+	.ascii	"loadables\000"
 .LC25:
-	.ascii	"os\000"
+	.ascii	"type\000"
 .LC26:
-	.ascii	"%s: no partition\012\000"
+	.ascii	"os\000"
 .LC27:
+	.ascii	"%s: no partition\012\000"
+.LC28:
 	.ascii	"%s: Not fit magic\012\000"
 	.section	.rodata.str1.1,"aMS",%progbits,1
 .LC0:
@@ -1883,15 +1953,15 @@ __func__.9840:
 	.file 30 "include/stdio.h"
 	.section	.debug_info,"",%progbits
 .Ldebug_info0:
-	.4byte	0x2f41
+	.4byte	0x2fc7
 	.2byte	0x4
 	.4byte	.Ldebug_abbrev0
 	.byte	0x4
 	.uleb128 0x1
-	.4byte	.LASF453
-	.byte	0xc
 	.4byte	.LASF454
+	.byte	0xc
 	.4byte	.LASF455
+	.4byte	.LASF456
 	.4byte	.Ldebug_ranges0+0xa8
 	.4byte	0
 	.4byte	.Ldebug_line0
@@ -4714,93 +4784,87 @@ __func__.9840:
 	.uleb128 0x2d
 	.4byte	.LASF382
 	.byte	0x1
-	.2byte	0x32d
+	.2byte	0x33b
 	.4byte	0x50
-	.4byte	.LFB232
-	.4byte	.LFE232-.LFB232
+	.4byte	.LFB234
+	.4byte	.LFE234-.LFB234
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x1f2e
+	.4byte	0x1f46
 	.uleb128 0x2e
 	.4byte	.LASF366
 	.byte	0x1
-	.2byte	0x32d
+	.2byte	0x33b
 	.4byte	0x11c9
-	.4byte	.LLST63
+	.4byte	.LLST65
 	.uleb128 0x2e
 	.4byte	.LASF367
 	.byte	0x1
-	.2byte	0x32e
+	.2byte	0x33c
 	.4byte	0x11bd
-	.4byte	.LLST64
+	.4byte	.LLST66
 	.uleb128 0x2e
 	.4byte	.LASF368
 	.byte	0x1
-	.2byte	0x32e
+	.2byte	0x33c
 	.4byte	0x122
-	.4byte	.LLST65
+	.4byte	.LLST67
 	.uleb128 0x2f
 	.ascii	"fit\000"
 	.byte	0x1
-	.2byte	0x32e
+	.2byte	0x33c
 	.4byte	0x153
-	.4byte	.LLST66
+	.4byte	.LLST68
 	.uleb128 0x30
 	.4byte	.LASF369
 	.byte	0x1
-	.2byte	0x330
+	.2byte	0x33e
 	.4byte	0x122
-	.4byte	.LLST67
+	.4byte	.LLST69
 	.uleb128 0x31
 	.ascii	"ret\000"
 	.byte	0x1
-	.2byte	0x331
+	.2byte	0x33f
 	.4byte	0x50
-	.4byte	.LLST68
+	.4byte	.LLST70
 	.uleb128 0x32
 	.ascii	"i\000"
 	.byte	0x1
-	.2byte	0x332
+	.2byte	0x340
 	.4byte	0x50
 	.byte	0
 	.uleb128 0x33
-	.4byte	0x1f2e
+	.4byte	0x1f46
 	.4byte	.LBB84
 	.4byte	.Ldebug_ranges0+0x58
 	.byte	0x1
-	.2byte	0x344
-	.4byte	0x1ca1
-	.uleb128 0x34
-	.4byte	0x1f63
-	.4byte	.LLST69
-	.uleb128 0x34
-	.4byte	0x1f57
-	.4byte	.LLST70
+	.2byte	0x355
+	.4byte	0x1ca0
 	.uleb128 0x34
-	.4byte	0x1f4b
+	.4byte	0x1f7b
 	.4byte	.LLST71
 	.uleb128 0x34
-	.4byte	0x1f3f
+	.4byte	0x1f6f
 	.4byte	.LLST72
+	.uleb128 0x34
+	.4byte	0x1f63
+	.4byte	.LLST73
+	.uleb128 0x34
+	.4byte	0x1f57
+	.4byte	.LLST74
 	.uleb128 0x35
 	.4byte	.Ldebug_ranges0+0x58
 	.uleb128 0x36
-	.4byte	0x1f6f
+	.4byte	0x1f87
 	.uleb128 0x3
 	.byte	0x91
 	.sleb128 -188
 	.uleb128 0x36
-	.4byte	0x1f7b
+	.4byte	0x1f93
 	.uleb128 0x3
 	.byte	0x91
 	.sleb128 -244
 	.uleb128 0x37
-	.4byte	0x1f87
-	.4byte	.LLST73
-	.uleb128 0x37
-	.4byte	0x1f93
-	.4byte	.LLST74
-	.uleb128 0x37
 	.4byte	0x1f9f
 	.4byte	.LLST75
 	.uleb128 0x37
@@ -4813,40 +4877,46 @@ __func__.9840:
 	.4byte	0x1fc3
 	.4byte	.LLST78
 	.uleb128 0x37
-	.4byte	0x1fda
+	.4byte	0x1fcf
 	.4byte	.LLST79
+	.uleb128 0x37
+	.4byte	0x1fdb
+	.4byte	.LLST80
+	.uleb128 0x37
+	.4byte	0x1ff2
+	.4byte	.LLST81
 	.uleb128 0x38
-	.4byte	0x1fe6
+	.4byte	0x1ffe
 	.uleb128 0x39
-	.4byte	0x1fcd
+	.4byte	0x1fe5
 	.uleb128 0x3a
 	.4byte	.LBB86
 	.4byte	.LBE86-.LBB86
 	.4byte	0x1a53
 	.uleb128 0x36
-	.4byte	0x1fef
+	.4byte	0x2007
 	.uleb128 0x3
 	.byte	0x91
 	.sleb128 -248
 	.uleb128 0x3b
-	.4byte	0x2291
+	.4byte	0x22a9
 	.4byte	.LBB87
 	.4byte	.LBE87-.LBB87
 	.byte	0x1
-	.2byte	0x300
+	.2byte	0x30e
 	.4byte	0x1883
 	.uleb128 0x34
-	.4byte	0x22ba
-	.4byte	.LLST80
+	.4byte	0x22d2
+	.4byte	.LLST82
 	.uleb128 0x34
-	.4byte	0x22ae
-	.4byte	.LLST81
+	.4byte	0x22c6
+	.4byte	.LLST83
 	.uleb128 0x34
-	.4byte	0x22a2
-	.4byte	.LLST82
+	.4byte	0x22ba
+	.4byte	.LLST84
 	.uleb128 0x3c
-	.4byte	.LVL173
-	.4byte	0x2dda
+	.4byte	.LVL177
+	.4byte	0x2e60
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -4869,43 +4939,43 @@ __func__.9840:
 	.byte	0
 	.byte	0
 	.uleb128 0x3b
-	.4byte	0x22c6
+	.4byte	0x22de
 	.4byte	.LBB89
 	.4byte	.LBE89-.LBB89
 	.byte	0x1
-	.2byte	0x31d
+	.2byte	0x32b
 	.4byte	0x19cc
 	.uleb128 0x34
-	.4byte	0x2307
-	.4byte	.LLST83
+	.4byte	0x231f
+	.4byte	.LLST85
 	.uleb128 0x34
-	.4byte	0x22fb
-	.4byte	.LLST84
+	.4byte	0x2313
+	.4byte	.LLST86
 	.uleb128 0x34
-	.4byte	0x22ef
-	.4byte	.LLST85
+	.4byte	0x2307
+	.4byte	.LLST87
 	.uleb128 0x3e
-	.4byte	0x22e3
+	.4byte	0x22fb
 	.uleb128 0x34
-	.4byte	0x22d7
-	.4byte	.LLST86
+	.4byte	0x22ef
+	.4byte	.LLST88
 	.uleb128 0x3f
 	.4byte	.LBB90
 	.4byte	.LBE90-.LBB90
 	.uleb128 0x37
-	.4byte	0x2313
-	.4byte	.LLST87
+	.4byte	0x232b
+	.4byte	.LLST89
 	.uleb128 0x36
-	.4byte	0x231f
+	.4byte	0x2337
 	.uleb128 0x3
 	.byte	0x91
 	.sleb128 -232
 	.uleb128 0x37
-	.4byte	0x232b
-	.4byte	.LLST88
+	.4byte	0x2343
+	.4byte	.LLST90
 	.uleb128 0x40
-	.4byte	.LVL180
-	.4byte	0x2c5c
+	.4byte	.LVL184
+	.4byte	0x2ce2
 	.4byte	0x190e
 	.uleb128 0x3d
 	.uleb128 0x1
@@ -4918,7 +4988,7 @@ __func__.9840:
 	.byte	0x51
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	.LC23
+	.4byte	.LC24
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x52
@@ -4933,8 +5003,8 @@ __func__.9840:
 	.sleb128 120
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL182
-	.4byte	0x29a3
+	.4byte	.LVL186
+	.4byte	0x29bb
 	.4byte	0x1937
 	.uleb128 0x3d
 	.uleb128 0x1
@@ -4953,7 +5023,7 @@ __func__.9840:
 	.byte	0x52
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	.LC23
+	.4byte	.LC24
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x53
@@ -4962,8 +5032,8 @@ __func__.9840:
 	.sleb128 0
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL185
-	.4byte	0x2de6
+	.4byte	.LVL189
+	.4byte	0x2e6c
 	.4byte	0x195f
 	.uleb128 0x3d
 	.uleb128 0x1
@@ -4982,7 +5052,7 @@ __func__.9840:
 	.byte	0x52
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	.LC24
+	.4byte	.LC25
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x53
@@ -4990,8 +5060,8 @@ __func__.9840:
 	.byte	0x30
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL186
-	.4byte	0x2de6
+	.4byte	.LVL190
+	.4byte	0x2e6c
 	.4byte	0x1987
 	.uleb128 0x3d
 	.uleb128 0x1
@@ -5010,7 +5080,7 @@ __func__.9840:
 	.byte	0x52
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	.LC25
+	.4byte	.LC26
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x53
@@ -5018,8 +5088,8 @@ __func__.9840:
 	.byte	0x30
 	.byte	0
 	.uleb128 0x3c
-	.4byte	.LVL187
-	.4byte	0x2df2
+	.4byte	.LVL191
+	.4byte	0x2e78
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5075,8 +5145,8 @@ __func__.9840:
 	.byte	0
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL169
-	.4byte	0x29a3
+	.4byte	.LVL173
+	.4byte	0x29bb
 	.4byte	0x19f5
 	.uleb128 0x3d
 	.uleb128 0x1
@@ -5095,7 +5165,7 @@ __func__.9840:
 	.byte	0x52
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	.LC23
+	.4byte	.LC24
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x53
@@ -5104,8 +5174,8 @@ __func__.9840:
 	.sleb128 0
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL174
-	.4byte	0x246a
+	.4byte	.LVL178
+	.4byte	0x2482
 	.4byte	0x1a27
 	.uleb128 0x3d
 	.uleb128 0x1
@@ -5143,8 +5213,8 @@ __func__.9840:
 	.sleb128 0
 	.byte	0
 	.uleb128 0x3c
-	.4byte	.LVL176
-	.4byte	0x2338
+	.4byte	.LVL180
+	.4byte	0x2350
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5180,24 +5250,24 @@ __func__.9840:
 	.byte	0
 	.byte	0
 	.uleb128 0x3b
-	.4byte	0x2291
+	.4byte	0x22a9
 	.4byte	.LBB91
 	.4byte	.LBE91-.LBB91
 	.byte	0x1
-	.2byte	0x2e7
+	.2byte	0x2f5
 	.4byte	0x1a9f
 	.uleb128 0x34
-	.4byte	0x22ba
-	.4byte	.LLST89
+	.4byte	0x22d2
+	.4byte	.LLST91
 	.uleb128 0x34
-	.4byte	0x22ae
-	.4byte	.LLST90
+	.4byte	0x22c6
+	.4byte	.LLST92
 	.uleb128 0x34
-	.4byte	0x22a2
-	.4byte	.LLST91
+	.4byte	0x22ba
+	.4byte	.LLST93
 	.uleb128 0x3c
-	.4byte	.LVL197
-	.4byte	0x2dda
+	.4byte	.LVL201
+	.4byte	0x2e60
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5219,12 +5289,12 @@ __func__.9840:
 	.byte	0
 	.byte	0
 	.uleb128 0x41
-	.4byte	.LVL138
-	.4byte	0x2dfd
+	.4byte	.LVL141
+	.4byte	0x2e83
 	.uleb128 0x40
-	.4byte	.LVL142
-	.4byte	0x2164
-	.4byte	0x1ad2
+	.4byte	.LVL145
+	.4byte	0x217c
+	.4byte	0x1ad1
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5241,10 +5311,9 @@ __func__.9840:
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x52
-	.uleb128 0x3
-	.byte	0xf3
-	.uleb128 0x1
-	.byte	0x53
+	.uleb128 0x2
+	.byte	0x75
+	.sleb128 0
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x53
@@ -5253,9 +5322,9 @@ __func__.9840:
 	.sleb128 108
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL143
-	.4byte	0x2e08
-	.4byte	0x1aef
+	.4byte	.LVL147
+	.4byte	0x2e8e
+	.4byte	0x1aee
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5267,15 +5336,15 @@ __func__.9840:
 	.byte	0x51
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	.LC16
+	.4byte	.LC17
 	.byte	0
 	.uleb128 0x41
-	.4byte	.LVL144
-	.4byte	0x2e14
+	.4byte	.LVL148
+	.4byte	0x2e9a
 	.uleb128 0x40
-	.4byte	.LVL145
-	.4byte	0x2e20
-	.4byte	0x1b11
+	.4byte	.LVL149
+	.4byte	0x2ea6
+	.4byte	0x1b10
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5289,9 +5358,9 @@ __func__.9840:
 	.byte	0x30
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL149
-	.4byte	0x2bb2
-	.4byte	0x1b25
+	.4byte	.LVL153
+	.4byte	0x2c38
+	.4byte	0x1b24
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5300,15 +5369,15 @@ __func__.9840:
 	.sleb128 0
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL151
-	.4byte	0x2dfd
-	.4byte	0x1b42
+	.4byte	.LVL155
+	.4byte	0x2e83
+	.4byte	0x1b41
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	.LC18
+	.4byte	.LC19
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x51
@@ -5317,20 +5386,20 @@ __func__.9840:
 	.sleb128 0
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL154
-	.4byte	0x2dfd
-	.4byte	0x1b59
+	.4byte	.LVL158
+	.4byte	0x2e83
+	.4byte	0x1b58
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	.LC19
+	.4byte	.LC20
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL155
-	.4byte	0x29a3
-	.4byte	0x1b82
+	.4byte	.LVL159
+	.4byte	0x29bb
+	.4byte	0x1b81
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5348,7 +5417,7 @@ __func__.9840:
 	.byte	0x52
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	.LC20
+	.4byte	.LC21
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x53
@@ -5357,9 +5426,9 @@ __func__.9840:
 	.sleb128 0
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL157
-	.4byte	0x246a
-	.4byte	0x1bb3
+	.4byte	.LVL161
+	.4byte	0x2482
+	.4byte	0x1bb2
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5395,9 +5464,9 @@ __func__.9840:
 	.sleb128 164
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL159
-	.4byte	0x2259
-	.4byte	0x1bc6
+	.4byte	.LVL163
+	.4byte	0x2271
+	.4byte	0x1bc5
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5405,20 +5474,20 @@ __func__.9840:
 	.byte	0x30
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL161
-	.4byte	0x2dfd
-	.4byte	0x1bdd
+	.4byte	.LVL165
+	.4byte	0x2e83
+	.4byte	0x1bdc
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	.LC21
+	.4byte	.LC22
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL162
-	.4byte	0x29a3
-	.4byte	0x1c05
+	.4byte	.LVL166
+	.4byte	0x29bb
+	.4byte	0x1c04
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5436,7 +5505,7 @@ __func__.9840:
 	.byte	0x52
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	.LC22
+	.4byte	.LC23
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x53
@@ -5444,9 +5513,9 @@ __func__.9840:
 	.byte	0x30
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL164
-	.4byte	0x29a3
-	.4byte	0x1c2d
+	.4byte	.LVL168
+	.4byte	0x29bb
+	.4byte	0x1c2c
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5464,7 +5533,7 @@ __func__.9840:
 	.byte	0x52
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	.LC23
+	.4byte	.LC24
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x53
@@ -5472,9 +5541,9 @@ __func__.9840:
 	.byte	0x30
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL167
-	.4byte	0x2e2c
-	.4byte	0x1c44
+	.4byte	.LVL171
+	.4byte	0x2eb2
+	.4byte	0x1c43
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5483,9 +5552,9 @@ __func__.9840:
 	.4byte	0x54410057
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL193
-	.4byte	0x246a
-	.4byte	0x1c74
+	.4byte	.LVL197
+	.4byte	0x2482
+	.4byte	0x1c73
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5521,8 +5590,8 @@ __func__.9840:
 	.sleb128 0
 	.byte	0
 	.uleb128 0x3c
-	.4byte	.LVL198
-	.4byte	0x2338
+	.4byte	.LVL202
+	.4byte	0x2350
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5559,79 +5628,79 @@ __func__.9840:
 	.byte	0
 	.byte	0
 	.uleb128 0x33
-	.4byte	0x2018
+	.4byte	0x2030
 	.4byte	.LBB96
 	.4byte	.Ldebug_ranges0+0x78
 	.byte	0x1
-	.2byte	0x348
-	.4byte	0x1f24
+	.2byte	0x359
+	.4byte	0x1f2c
 	.uleb128 0x34
-	.4byte	0x2035
-	.4byte	.LLST92
+	.4byte	0x204d
+	.4byte	.LLST94
 	.uleb128 0x34
-	.4byte	0x2029
-	.4byte	.LLST93
+	.4byte	0x2041
+	.4byte	.LLST95
 	.uleb128 0x35
 	.4byte	.Ldebug_ranges0+0x78
 	.uleb128 0x36
-	.4byte	0x2041
+	.4byte	0x2059
 	.uleb128 0x3
 	.byte	0x91
 	.sleb128 -244
 	.uleb128 0x36
-	.4byte	0x204d
+	.4byte	0x2065
 	.uleb128 0x3
 	.byte	0x91
 	.sleb128 -232
 	.uleb128 0x42
-	.4byte	0x2059
-	.4byte	0x2dc7
-	.4byte	.LLST95
+	.4byte	0x2071
+	.4byte	0x2e4d
+	.4byte	.LLST97
 	.uleb128 0x37
-	.4byte	0x2065
-	.4byte	.LLST96
+	.4byte	0x207d
+	.4byte	.LLST98
 	.uleb128 0x36
-	.4byte	0x2071
+	.4byte	0x2089
 	.uleb128 0x3
 	.byte	0x91
 	.sleb128 -248
 	.uleb128 0x37
-	.4byte	0x207d
-	.4byte	.LLST97
-	.uleb128 0x37
-	.4byte	0x2089
-	.4byte	.LLST98
-	.uleb128 0x37
 	.4byte	0x2095
 	.4byte	.LLST99
 	.uleb128 0x37
 	.4byte	0x20a1
 	.4byte	.LLST100
 	.uleb128 0x37
-	.4byte	0x20ab
+	.4byte	0x20ad
 	.4byte	.LLST101
 	.uleb128 0x37
-	.4byte	0x20b7
+	.4byte	0x20b9
 	.4byte	.LLST102
-	.uleb128 0x36
+	.uleb128 0x37
 	.4byte	0x20c3
+	.4byte	.LLST103
+	.uleb128 0x37
+	.4byte	0x20cf
+	.4byte	.LLST104
+	.uleb128 0x36
+	.4byte	0x20db
 	.uleb128 0x3
 	.byte	0x91
 	.sleb128 -188
 	.uleb128 0x37
-	.4byte	0x20dc
-	.4byte	.LLST103
+	.4byte	0x20f4
+	.4byte	.LLST105
 	.uleb128 0x39
-	.4byte	0x20cf
+	.4byte	0x20e7
 	.uleb128 0x43
 	.4byte	.Ldebug_ranges0+0x90
-	.4byte	0x1e08
+	.4byte	0x1e10
 	.uleb128 0x39
-	.4byte	0x20e9
+	.4byte	0x2101
 	.uleb128 0x40
-	.4byte	.LVL233
-	.4byte	0x29a3
-	.4byte	0x1d7f
+	.4byte	.LVL237
+	.4byte	0x29bb
+	.4byte	0x1d7e
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5658,9 +5727,9 @@ __func__.9840:
 	.byte	0x30
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL235
-	.4byte	0x246a
-	.4byte	0x1da9
+	.4byte	.LVL239
+	.4byte	0x2482
+	.4byte	0x1da8
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5689,9 +5758,9 @@ __func__.9840:
 	.sleb128 104
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL237
-	.4byte	0x2e37
-	.4byte	0x1dc6
+	.4byte	.LVL241
+	.4byte	0x2ebd
+	.4byte	0x1dc5
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5706,9 +5775,9 @@ __func__.9840:
 	.4byte	.LC0
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL238
-	.4byte	0x2b89
-	.4byte	0x1dda
+	.4byte	.LVL242
+	.4byte	0x2c0f
+	.4byte	0x1dd9
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5717,9 +5786,9 @@ __func__.9840:
 	.sleb128 0
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL239
-	.4byte	0x2af9
-	.4byte	0x1dee
+	.4byte	.LVL243
+	.4byte	0x2b34
+	.4byte	0x1ded
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5727,9 +5796,12 @@ __func__.9840:
 	.byte	0x7a
 	.sleb128 0
 	.byte	0
+	.uleb128 0x41
+	.4byte	.LVL244
+	.4byte	0x2b11
 	.uleb128 0x3c
-	.4byte	.LVL243
-	.4byte	0x2e37
+	.4byte	.LVL248
+	.4byte	0x2ebd
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5745,9 +5817,9 @@ __func__.9840:
 	.byte	0
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL205
-	.4byte	0x212b
-	.4byte	0x1e22
+	.4byte	.LVL209
+	.4byte	0x2143
+	.4byte	0x1e2a
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5762,9 +5834,9 @@ __func__.9840:
 	.sleb128 0
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL207
-	.4byte	0x2e42
-	.4byte	0x1e37
+	.4byte	.LVL211
+	.4byte	0x2ec8
+	.4byte	0x1e3f
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x52
@@ -5773,14 +5845,14 @@ __func__.9840:
 	.sleb128 148
 	.byte	0
 	.uleb128 0x41
-	.4byte	.LVL209
-	.4byte	0x2dfd
+	.4byte	.LVL213
+	.4byte	0x2e83
 	.uleb128 0x44
-	.4byte	.LVL214
+	.4byte	.LVL218
 	.uleb128 0x2
 	.byte	0x75
 	.sleb128 0
-	.4byte	0x1e66
+	.4byte	0x1e6e
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5807,9 +5879,9 @@ __func__.9840:
 	.sleb128 0
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL217
-	.4byte	0x2164
-	.4byte	0x1e8f
+	.4byte	.LVL221
+	.4byte	0x217c
+	.4byte	0x1e97
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5837,9 +5909,9 @@ __func__.9840:
 	.sleb128 88
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL219
-	.4byte	0x2e20
-	.4byte	0x1ea8
+	.4byte	.LVL223
+	.4byte	0x2ea6
+	.4byte	0x1eb0
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5853,20 +5925,20 @@ __func__.9840:
 	.byte	0x30
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL221
-	.4byte	0x2dfd
-	.4byte	0x1ebf
+	.4byte	.LVL225
+	.4byte	0x2e83
+	.4byte	0x1ec7
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	.LC17
+	.4byte	.LC18
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL224
-	.4byte	0x2bb2
-	.4byte	0x1ed3
+	.4byte	.LVL228
+	.4byte	0x2c38
+	.4byte	0x1edb
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5875,15 +5947,15 @@ __func__.9840:
 	.sleb128 0
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL227
-	.4byte	0x2dfd
-	.4byte	0x1ef2
+	.4byte	.LVL231
+	.4byte	0x2e83
+	.4byte	0x1efa
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	.LC18
+	.4byte	.LC19
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x51
@@ -5893,19 +5965,19 @@ __func__.9840:
 	.byte	0x6
 	.byte	0
 	.uleb128 0x40
-	.4byte	.LVL230
-	.4byte	0x2dfd
-	.4byte	0x1f09
+	.4byte	.LVL234
+	.4byte	0x2e83
+	.4byte	0x1f11
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	.LC19
+	.4byte	.LC20
 	.byte	0
 	.uleb128 0x3c
-	.4byte	.LVL231
-	.4byte	0x2e08
+	.4byte	.LVL235
+	.4byte	0x2e8e
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -5917,99 +5989,109 @@ __func__.9840:
 	.byte	0x51
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	.LC16
+	.4byte	.LC17
 	.byte	0
 	.byte	0
 	.byte	0
 	.uleb128 0x45
 	.4byte	0xd2
-	.4byte	.LLST94
+	.4byte	.LLST96
+	.uleb128 0x3c
+	.4byte	.LVL144
+	.4byte	0x2b81
+	.uleb128 0x3d
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x2
+	.byte	0x74
+	.sleb128 0
+	.byte	0
 	.byte	0
 	.uleb128 0x46
 	.4byte	.LASF376
 	.byte	0x1
-	.2byte	0x255
+	.2byte	0x263
 	.4byte	0x50
 	.byte	0x1
-	.4byte	0x1ffd
+	.4byte	0x2015
 	.uleb128 0x47
 	.4byte	.LASF366
 	.byte	0x1
-	.2byte	0x255
+	.2byte	0x263
 	.4byte	0x11c9
 	.uleb128 0x47
 	.4byte	.LASF367
 	.byte	0x1
-	.2byte	0x256
+	.2byte	0x264
 	.4byte	0x11bd
 	.uleb128 0x47
 	.4byte	.LASF368
 	.byte	0x1
-	.2byte	0x257
+	.2byte	0x265
 	.4byte	0x122
 	.uleb128 0x47
 	.4byte	.LASF370
 	.byte	0x1
-	.2byte	0x257
+	.2byte	0x265
 	.4byte	0x153
 	.uleb128 0x48
 	.4byte	.LASF224
 	.byte	0x1
-	.2byte	0x259
+	.2byte	0x267
 	.4byte	0x10c6
 	.uleb128 0x48
 	.4byte	.LASF371
 	.byte	0x1
-	.2byte	0x25a
+	.2byte	0x268
 	.4byte	0x50
 	.uleb128 0x48
 	.4byte	.LASF259
 	.byte	0x1
-	.2byte	0x25b
+	.2byte	0x269
 	.4byte	0x50
 	.uleb128 0x49
 	.ascii	"ret\000"
 	.byte	0x1
-	.2byte	0x25b
+	.2byte	0x269
 	.4byte	0x50
 	.uleb128 0x48
 	.4byte	.LASF279
 	.byte	0x1
-	.2byte	0x25c
+	.2byte	0x26a
 	.4byte	0x50
 	.uleb128 0x48
 	.4byte	.LASF372
 	.byte	0x1
-	.2byte	0x25d
+	.2byte	0x26b
 	.4byte	0x50
 	.uleb128 0x49
 	.ascii	"fit\000"
 	.byte	0x1
-	.2byte	0x25e
+	.2byte	0x26c
 	.4byte	0x153
 	.uleb128 0x49
 	.ascii	"t\000"
 	.byte	0x1
-	.2byte	0x25f
-	.4byte	0x1ffd
+	.2byte	0x26d
+	.4byte	0x2015
 	.uleb128 0x4a
 	.4byte	.LASF373
-	.4byte	0x2013
+	.4byte	0x202b
 	.4byte	.LASF376
 	.uleb128 0x48
 	.4byte	.LASF374
 	.byte	0x1
-	.2byte	0x277
+	.2byte	0x285
 	.4byte	0x50
 	.uleb128 0x4b
-	.4byte	.LASF456
+	.4byte	.LASF457
 	.byte	0x1
-	.2byte	0x2f6
+	.2byte	0x304
 	.uleb128 0x4c
 	.uleb128 0x48
 	.4byte	.LASF375
 	.byte	0x1
-	.2byte	0x2fa
+	.2byte	0x308
 	.4byte	0x12d
 	.byte	0
 	.byte	0
@@ -6018,149 +6100,149 @@ __func__.9840:
 	.4byte	0x16dd
 	.uleb128 0xc
 	.4byte	0xe4
-	.4byte	0x2013
+	.4byte	0x202b
 	.uleb128 0xd
 	.4byte	0xcb
 	.byte	0x1c
 	.byte	0
 	.uleb128 0x7
-	.4byte	0x2003
+	.4byte	0x201b
 	.uleb128 0x46
 	.4byte	.LASF377
 	.byte	0x1
-	.2byte	0x1d2
+	.2byte	0x1dc
 	.4byte	0x50
 	.byte	0x1
-	.4byte	0x20f7
+	.4byte	0x210f
 	.uleb128 0x47
 	.4byte	.LASF366
 	.byte	0x1
-	.2byte	0x1d2
+	.2byte	0x1dc
 	.4byte	0x11c9
 	.uleb128 0x47
 	.4byte	.LASF367
 	.byte	0x1
-	.2byte	0x1d3
+	.2byte	0x1dd
 	.4byte	0x11bd
 	.uleb128 0x48
 	.4byte	.LASF259
 	.byte	0x1
-	.2byte	0x1de
-	.4byte	0x20f7
+	.2byte	0x1e8
+	.4byte	0x210f
 	.uleb128 0x48
 	.4byte	.LASF224
 	.byte	0x1
-	.2byte	0x1df
+	.2byte	0x1e9
 	.4byte	0x10c6
 	.uleb128 0x48
 	.4byte	.LASF370
 	.byte	0x1
-	.2byte	0x1e0
-	.4byte	0x2107
+	.2byte	0x1ea
+	.4byte	0x211f
 	.uleb128 0x48
 	.4byte	.LASF378
 	.byte	0x1
-	.2byte	0x1e1
+	.2byte	0x1eb
 	.4byte	0x50
 	.uleb128 0x48
 	.4byte	.LASF371
 	.byte	0x1
-	.2byte	0x1e2
+	.2byte	0x1ec
 	.4byte	0x50
 	.uleb128 0x48
 	.4byte	.LASF368
 	.byte	0x1
-	.2byte	0x1e3
+	.2byte	0x1ed
 	.4byte	0x50
 	.uleb128 0x48
 	.4byte	.LASF372
 	.byte	0x1
-	.2byte	0x1e4
+	.2byte	0x1ee
 	.4byte	0x50
 	.uleb128 0x49
 	.ascii	"ret\000"
 	.byte	0x1
-	.2byte	0x1e4
+	.2byte	0x1ee
 	.4byte	0x50
 	.uleb128 0x49
 	.ascii	"i\000"
 	.byte	0x1
-	.2byte	0x1e4
+	.2byte	0x1ee
 	.4byte	0x50
 	.uleb128 0x49
 	.ascii	"fit\000"
 	.byte	0x1
-	.2byte	0x1e5
+	.2byte	0x1ef
 	.4byte	0x153
 	.uleb128 0x48
 	.4byte	.LASF379
 	.byte	0x1
-	.2byte	0x1eb
+	.2byte	0x1f5
 	.4byte	0xd7
 	.uleb128 0x48
 	.4byte	.LASF380
 	.byte	0x1
-	.2byte	0x1ec
+	.2byte	0x1f6
 	.4byte	0x4bc
 	.uleb128 0x4a
 	.4byte	.LASF373
-	.4byte	0x2126
+	.4byte	0x213e
 	.4byte	.LASF377
 	.uleb128 0x48
 	.4byte	.LASF374
 	.byte	0x1
-	.2byte	0x209
+	.2byte	0x213
 	.4byte	0x50
 	.uleb128 0x4c
 	.uleb128 0x48
 	.4byte	.LASF381
 	.byte	0x1
-	.2byte	0x223
+	.2byte	0x22d
 	.4byte	0x4e2
 	.byte	0
 	.byte	0
 	.uleb128 0xc
 	.4byte	0xd7
-	.4byte	0x2107
+	.4byte	0x211f
 	.uleb128 0xd
 	.4byte	0xcb
 	.byte	0x2
 	.byte	0
 	.uleb128 0xc
 	.4byte	0xdd
-	.4byte	0x2116
+	.4byte	0x212e
 	.uleb128 0x4d
 	.4byte	0xcb
 	.byte	0
 	.uleb128 0xc
 	.4byte	0xe4
-	.4byte	0x2126
+	.4byte	0x213e
 	.uleb128 0xd
 	.4byte	0xcb
 	.byte	0x13
 	.byte	0
 	.uleb128 0x7
-	.4byte	0x2116
+	.4byte	0x212e
 	.uleb128 0x2d
 	.4byte	.LASF383
 	.byte	0x1
-	.2byte	0x1cb
+	.2byte	0x1d5
 	.4byte	0xd7
-	.4byte	.LFB229
-	.4byte	.LFE229-.LFB229
+	.4byte	.LFB231
+	.4byte	.LFE231-.LFB231
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2164
+	.4byte	0x217c
 	.uleb128 0x2f
 	.ascii	"spl\000"
 	.byte	0x1
-	.2byte	0x1cb
+	.2byte	0x1d5
 	.4byte	0x11c9
-	.4byte	.LLST62
+	.4byte	.LLST64
 	.uleb128 0x4e
 	.4byte	.LASF367
 	.byte	0x1
-	.2byte	0x1cc
+	.2byte	0x1d6
 	.4byte	0x11bd
 	.uleb128 0x1
 	.byte	0x51
@@ -6168,81 +6250,81 @@ __func__.9840:
 	.uleb128 0x4f
 	.4byte	.LASF392
 	.byte	0x1
-	.2byte	0x199
+	.2byte	0x1a3
 	.4byte	0x153
-	.4byte	.LFB228
-	.4byte	.LFE228-.LFB228
+	.4byte	.LFB230
+	.4byte	.LFE230-.LFB230
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2253
+	.4byte	0x226b
 	.uleb128 0x2e
 	.4byte	.LASF367
 	.byte	0x1
-	.2byte	0x199
+	.2byte	0x1a3
 	.4byte	0x11bd
 	.4byte	.LLST47
 	.uleb128 0x2e
 	.4byte	.LASF368
 	.byte	0x1
-	.2byte	0x19a
+	.2byte	0x1a4
 	.4byte	0x122
 	.4byte	.LLST48
 	.uleb128 0x2e
 	.4byte	.LASF370
 	.byte	0x1
-	.2byte	0x19a
+	.2byte	0x1a4
 	.4byte	0x153
 	.4byte	.LLST49
 	.uleb128 0x2e
 	.4byte	.LASF371
 	.byte	0x1
-	.2byte	0x19b
-	.4byte	0x2253
+	.2byte	0x1a5
+	.4byte	0x226b
 	.4byte	.LLST50
 	.uleb128 0x50
 	.4byte	.LASF384
 	.byte	0x1
-	.2byte	0x19d
+	.2byte	0x1a7
 	.4byte	0x50
 	.byte	0x3f
 	.uleb128 0x30
 	.4byte	.LASF337
 	.byte	0x1
-	.2byte	0x19e
+	.2byte	0x1a8
 	.4byte	0x122
 	.4byte	.LLST51
 	.uleb128 0x30
 	.4byte	.LASF78
 	.byte	0x1
-	.2byte	0x19f
+	.2byte	0x1a9
 	.4byte	0x122
 	.4byte	.LLST52
 	.uleb128 0x48
 	.4byte	.LASF385
 	.byte	0x1
-	.2byte	0x1a0
+	.2byte	0x1aa
 	.4byte	0x50
 	.uleb128 0x31
 	.ascii	"fit\000"
 	.byte	0x1
-	.2byte	0x1a1
+	.2byte	0x1ab
 	.4byte	0x153
 	.4byte	.LLST53
 	.uleb128 0x3b
-	.4byte	0x2923
+	.4byte	0x293b
 	.4byte	.LBB62
 	.4byte	.LBE62-.LBB62
 	.byte	0x1
-	.2byte	0x1bf
-	.4byte	0x2237
+	.2byte	0x1c9
+	.4byte	0x224f
 	.uleb128 0x34
-	.4byte	0x2949
+	.4byte	0x2961
 	.4byte	.LLST54
 	.uleb128 0x34
-	.4byte	0x293e
+	.4byte	0x2956
 	.4byte	.LLST55
 	.uleb128 0x34
-	.4byte	0x2933
+	.4byte	0x294b
 	.4byte	.LLST56
 	.byte	0
 	.uleb128 0x51
@@ -6276,23 +6358,23 @@ __func__.9840:
 	.uleb128 0x2d
 	.4byte	.LASF386
 	.byte	0x1
-	.2byte	0x194
+	.2byte	0x19e
 	.4byte	0x50
-	.4byte	.LFB227
-	.4byte	.LFE227-.LFB227
+	.4byte	.LFB229
+	.4byte	.LFE229-.LFB229
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2291
+	.4byte	0x22a9
 	.uleb128 0x2f
 	.ascii	"id\000"
 	.byte	0x1
-	.2byte	0x194
+	.2byte	0x19e
 	.4byte	0xfb
-	.4byte	.LLST61
+	.4byte	.LLST63
 	.uleb128 0x4e
 	.4byte	.LASF316
 	.byte	0x1
-	.2byte	0x194
+	.2byte	0x19e
 	.4byte	0x101
 	.uleb128 0x1
 	.byte	0x51
@@ -6300,124 +6382,124 @@ __func__.9840:
 	.uleb128 0x46
 	.4byte	.LASF387
 	.byte	0x1
-	.2byte	0x18b
+	.2byte	0x195
 	.4byte	0x50
 	.byte	0x1
-	.4byte	0x22c6
+	.4byte	0x22de
 	.uleb128 0x52
 	.ascii	"fit\000"
 	.byte	0x1
-	.2byte	0x18b
+	.2byte	0x195
 	.4byte	0x3be
 	.uleb128 0x47
 	.4byte	.LASF388
 	.byte	0x1
-	.2byte	0x18b
+	.2byte	0x195
 	.4byte	0x50
 	.uleb128 0x52
 	.ascii	"os\000"
 	.byte	0x1
-	.2byte	0x18b
+	.2byte	0x195
 	.4byte	0xd58
 	.byte	0
 	.uleb128 0x46
 	.4byte	.LASF389
 	.byte	0x1
-	.2byte	0x174
+	.2byte	0x17e
 	.4byte	0x50
 	.byte	0x1
-	.4byte	0x2338
+	.4byte	0x2350
 	.uleb128 0x52
 	.ascii	"fit\000"
 	.byte	0x1
-	.2byte	0x174
+	.2byte	0x17e
 	.4byte	0x3be
 	.uleb128 0x47
 	.4byte	.LASF259
 	.byte	0x1
-	.2byte	0x174
+	.2byte	0x17e
 	.4byte	0x50
 	.uleb128 0x47
 	.4byte	.LASF279
 	.byte	0x1
-	.2byte	0x174
+	.2byte	0x17e
 	.4byte	0x50
 	.uleb128 0x47
 	.4byte	.LASF390
 	.byte	0x1
-	.2byte	0x175
+	.2byte	0x17f
 	.4byte	0x153
 	.uleb128 0x47
 	.4byte	.LASF391
 	.byte	0x1
-	.2byte	0x175
+	.2byte	0x17f
 	.4byte	0x11c9
 	.uleb128 0x49
 	.ascii	"ret\000"
 	.byte	0x1
-	.2byte	0x177
+	.2byte	0x181
 	.4byte	0x50
 	.uleb128 0x48
 	.4byte	.LASF74
 	.byte	0x1
-	.2byte	0x179
+	.2byte	0x183
 	.4byte	0xfb
 	.uleb128 0x48
 	.4byte	.LASF372
 	.byte	0x1
-	.2byte	0x17a
+	.2byte	0x184
 	.4byte	0x50
 	.byte	0
 	.uleb128 0x53
 	.4byte	.LASF393
 	.byte	0x1
-	.2byte	0x151
+	.2byte	0x15b
 	.4byte	0x50
-	.4byte	.LFB224
-	.4byte	.LFE224-.LFB224
+	.4byte	.LFB226
+	.4byte	.LFE226-.LFB226
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2455
+	.4byte	0x246d
 	.uleb128 0x2e
 	.4byte	.LASF366
 	.byte	0x1
-	.2byte	0x151
+	.2byte	0x15b
 	.4byte	0x11c9
 	.4byte	.LLST39
 	.uleb128 0x2e
 	.4byte	.LASF367
 	.byte	0x1
-	.2byte	0x152
+	.2byte	0x15c
 	.4byte	0x11bd
 	.4byte	.LLST40
 	.uleb128 0x2e
 	.4byte	.LASF368
 	.byte	0x1
-	.2byte	0x152
+	.2byte	0x15c
 	.4byte	0x122
 	.4byte	.LLST41
 	.uleb128 0x2f
 	.ascii	"fit\000"
 	.byte	0x1
-	.2byte	0x153
+	.2byte	0x15d
 	.4byte	0x153
 	.4byte	.LLST42
 	.uleb128 0x2e
 	.4byte	.LASF259
 	.byte	0x1
-	.2byte	0x153
+	.2byte	0x15d
 	.4byte	0x50
 	.4byte	.LLST43
 	.uleb128 0x2e
 	.4byte	.LASF371
 	.byte	0x1
-	.2byte	0x153
+	.2byte	0x15d
 	.4byte	0x122
 	.4byte	.LLST44
 	.uleb128 0x54
 	.4byte	.LASF224
 	.byte	0x1
-	.2byte	0x155
+	.2byte	0x15f
 	.4byte	0x10c6
 	.uleb128 0x3
 	.byte	0x91
@@ -6425,22 +6507,22 @@ __func__.9840:
 	.uleb128 0x30
 	.4byte	.LASF372
 	.byte	0x1
-	.2byte	0x156
+	.2byte	0x160
 	.4byte	0x50
 	.4byte	.LLST45
 	.uleb128 0x31
 	.ascii	"ret\000"
 	.byte	0x1
-	.2byte	0x156
+	.2byte	0x160
 	.4byte	0x50
 	.4byte	.LLST46
 	.uleb128 0x55
 	.4byte	.LASF373
-	.4byte	0x2465
+	.4byte	0x247d
 	.uleb128 0x40
 	.4byte	.LVL99
-	.4byte	0x29a3
-	.4byte	0x2414
+	.4byte	0x29bb
+	.4byte	0x242c
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -6468,8 +6550,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL101
-	.4byte	0x246a
-	.4byte	0x2443
+	.4byte	0x2482
+	.4byte	0x245b
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -6505,7 +6587,7 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x3c
 	.4byte	.LVL103
-	.4byte	0x2e4d
+	.4byte	0x2ed3
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x51
@@ -6516,63 +6598,63 @@ __func__.9840:
 	.byte	0
 	.uleb128 0xc
 	.4byte	0xe4
-	.4byte	0x2465
+	.4byte	0x247d
 	.uleb128 0xd
 	.4byte	0xcb
 	.byte	0x12
 	.byte	0
 	.uleb128 0x7
-	.4byte	0x2455
+	.4byte	0x246d
 	.uleb128 0x56
 	.4byte	.LASF394
 	.byte	0x1
-	.byte	0xc0
+	.byte	0xca
 	.4byte	0x50
-	.4byte	.LFB223
-	.4byte	.LFE223-.LFB223
+	.4byte	.LFB225
+	.4byte	.LFE225-.LFB225
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2923
+	.4byte	0x293b
 	.uleb128 0x57
 	.4byte	.LASF367
 	.byte	0x1
-	.byte	0xc0
+	.byte	0xca
 	.4byte	0x11bd
 	.4byte	.LLST15
 	.uleb128 0x57
 	.4byte	.LASF368
 	.byte	0x1
-	.byte	0xc0
+	.byte	0xca
 	.4byte	0x122
 	.4byte	.LLST16
 	.uleb128 0x58
 	.ascii	"fit\000"
 	.byte	0x1
-	.byte	0xc1
+	.byte	0xcb
 	.4byte	0x153
 	.4byte	.LLST17
 	.uleb128 0x57
 	.4byte	.LASF371
 	.byte	0x1
-	.byte	0xc1
+	.byte	0xcb
 	.4byte	0x122
 	.4byte	.LLST18
 	.uleb128 0x57
 	.4byte	.LASF372
 	.byte	0x1
-	.byte	0xc1
+	.byte	0xcb
 	.4byte	0x50
 	.4byte	.LLST19
 	.uleb128 0x57
 	.4byte	.LASF224
 	.byte	0x1
-	.byte	0xc2
+	.byte	0xcc
 	.4byte	0x11c9
 	.4byte	.LLST20
 	.uleb128 0x59
 	.4byte	.LASF395
 	.byte	0x1
-	.byte	0xc4
+	.byte	0xce
 	.4byte	0x50
 	.uleb128 0x2
 	.byte	0x91
@@ -6580,7 +6662,7 @@ __func__.9840:
 	.uleb128 0x59
 	.4byte	.LASF396
 	.byte	0x1
-	.byte	0xc5
+	.byte	0xcf
 	.4byte	0x10c
 	.uleb128 0x2
 	.byte	0x91
@@ -6588,7 +6670,7 @@ __func__.9840:
 	.uleb128 0x5a
 	.ascii	"len\000"
 	.byte	0x1
-	.byte	0xc6
+	.byte	0xd0
 	.4byte	0x50
 	.uleb128 0x2
 	.byte	0x91
@@ -6596,12 +6678,12 @@ __func__.9840:
 	.uleb128 0x5b
 	.4byte	.LASF78
 	.byte	0x1
-	.byte	0xc7
+	.byte	0xd1
 	.4byte	0x122
 	.uleb128 0x59
 	.4byte	.LASF397
 	.byte	0x1
-	.byte	0xc8
+	.byte	0xd2
 	.4byte	0x122
 	.uleb128 0x2
 	.byte	0x91
@@ -6609,7 +6691,7 @@ __func__.9840:
 	.uleb128 0x59
 	.4byte	.LASF265
 	.byte	0x1
-	.byte	0xc8
+	.byte	0xd2
 	.4byte	0x122
 	.uleb128 0x2
 	.byte	0x91
@@ -6617,13 +6699,13 @@ __func__.9840:
 	.uleb128 0x5c
 	.4byte	.LASF398
 	.byte	0x1
-	.byte	0xc8
+	.byte	0xd2
 	.4byte	0x122
 	.4byte	.LLST21
 	.uleb128 0x5a
 	.ascii	"src\000"
 	.byte	0x1
-	.byte	0xc9
+	.byte	0xd3
 	.4byte	0x153
 	.uleb128 0x2
 	.byte	0x91
@@ -6631,24 +6713,24 @@ __func__.9840:
 	.uleb128 0x5c
 	.4byte	.LASF399
 	.byte	0x1
-	.byte	0xca
+	.byte	0xd4
 	.4byte	0x122
 	.4byte	.LLST22
 	.uleb128 0x5b
 	.4byte	.LASF400
 	.byte	0x1
-	.byte	0xcb
+	.byte	0xd5
 	.4byte	0x50
 	.uleb128 0x5d
 	.4byte	.LASF384
 	.byte	0x1
-	.byte	0xcc
+	.byte	0xd6
 	.4byte	0x50
 	.byte	0x3f
 	.uleb128 0x59
 	.4byte	.LASF401
 	.byte	0x1
-	.byte	0xcd
+	.byte	0xd7
 	.4byte	0x12d
 	.uleb128 0x2
 	.byte	0x91
@@ -6656,13 +6738,13 @@ __func__.9840:
 	.uleb128 0x5c
 	.4byte	.LASF62
 	.byte	0x1
-	.byte	0xcd
+	.byte	0xd7
 	.4byte	0x12d
 	.4byte	.LLST23
 	.uleb128 0x59
 	.4byte	.LASF339
 	.byte	0x1
-	.byte	0xce
+	.byte	0xd8
 	.4byte	0x3be
 	.uleb128 0x2
 	.byte	0x91
@@ -6670,89 +6752,89 @@ __func__.9840:
 	.uleb128 0x5c
 	.4byte	.LASF402
 	.byte	0x1
-	.byte	0xcf
+	.byte	0xd9
 	.4byte	0x19e
 	.4byte	.LLST24
 	.uleb128 0x5c
 	.4byte	.LASF403
 	.byte	0x1
-	.byte	0xd0
+	.byte	0xda
 	.4byte	0x19e
 	.4byte	.LLST25
 	.uleb128 0x5c
 	.4byte	.LASF381
 	.byte	0x1
-	.byte	0xd1
+	.byte	0xdb
 	.4byte	0x4e2
 	.4byte	.LLST26
 	.uleb128 0x5e
 	.ascii	"out\000"
 	.byte	0x1
-	.2byte	0x147
+	.2byte	0x151
 	.4byte	.L31
 	.uleb128 0x33
-	.4byte	0x2955
+	.4byte	0x296d
 	.4byte	.LBB36
 	.4byte	.Ldebug_ranges0+0
 	.byte	0x1
-	.2byte	0x100
-	.4byte	0x25fc
+	.2byte	0x10a
+	.4byte	0x2614
 	.uleb128 0x34
-	.4byte	0x2970
+	.4byte	0x2988
 	.4byte	.LLST27
 	.uleb128 0x34
-	.4byte	0x2965
+	.4byte	0x297d
 	.4byte	.LLST28
 	.byte	0
 	.uleb128 0x3b
-	.4byte	0x2923
+	.4byte	0x293b
 	.4byte	.LBB41
 	.4byte	.LBE41-.LBB41
 	.byte	0x1
-	.2byte	0x101
-	.4byte	0x2628
+	.2byte	0x10b
+	.4byte	0x2640
 	.uleb128 0x3e
-	.4byte	0x2949
+	.4byte	0x2961
 	.uleb128 0x34
-	.4byte	0x293e
+	.4byte	0x2956
 	.4byte	.LLST29
 	.uleb128 0x34
-	.4byte	0x2933
+	.4byte	0x294b
 	.4byte	.LLST30
 	.byte	0
 	.uleb128 0x33
-	.4byte	0x297c
+	.4byte	0x2994
 	.4byte	.LBB43
 	.4byte	.Ldebug_ranges0+0x20
 	.byte	0x1
-	.2byte	0x10a
-	.4byte	0x264f
+	.2byte	0x114
+	.4byte	0x2667
 	.uleb128 0x34
-	.4byte	0x2997
+	.4byte	0x29af
 	.4byte	.LLST31
 	.uleb128 0x34
-	.4byte	0x298c
+	.4byte	0x29a4
 	.4byte	.LLST32
 	.byte	0
 	.uleb128 0x33
-	.4byte	0x2be8
+	.4byte	0x2c6e
 	.4byte	.LBB48
 	.4byte	.Ldebug_ranges0+0x38
 	.byte	0x1
-	.2byte	0x123
-	.4byte	0x269a
+	.2byte	0x12d
+	.4byte	0x26b2
 	.uleb128 0x34
-	.4byte	0x2c11
+	.4byte	0x2c97
 	.4byte	.LLST33
 	.uleb128 0x34
-	.4byte	0x2c05
+	.4byte	0x2c8b
 	.4byte	.LLST34
 	.uleb128 0x34
-	.4byte	0x2bf9
+	.4byte	0x2c7f
 	.4byte	.LLST35
 	.uleb128 0x3c
 	.4byte	.LVL77
-	.4byte	0x2e58
+	.4byte	0x2ede
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -6773,29 +6855,29 @@ __func__.9840:
 	.byte	0
 	.byte	0
 	.uleb128 0x3b
-	.4byte	0x2be8
+	.4byte	0x2c6e
 	.4byte	.LBB54
 	.4byte	.LBE54-.LBB54
 	.byte	0x1
-	.2byte	0x128
-	.4byte	0x26d3
+	.2byte	0x132
+	.4byte	0x26eb
 	.uleb128 0x34
-	.4byte	0x2c11
+	.4byte	0x2c97
 	.4byte	.LLST36
 	.uleb128 0x34
-	.4byte	0x2c05
+	.4byte	0x2c8b
 	.4byte	.LLST37
 	.uleb128 0x34
-	.4byte	0x2bf9
+	.4byte	0x2c7f
 	.4byte	.LLST38
 	.uleb128 0x41
 	.4byte	.LVL86
-	.4byte	0x2e58
+	.4byte	0x2ede
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL45
-	.4byte	0x2e64
-	.4byte	0x26f3
+	.4byte	0x2eea
+	.4byte	0x270b
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -6817,8 +6899,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL46
-	.4byte	0x2e70
-	.4byte	0x2713
+	.4byte	0x2ef6
+	.4byte	0x272b
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -6840,8 +6922,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL47
-	.4byte	0x2e7c
-	.4byte	0x2733
+	.4byte	0x2f02
+	.4byte	0x274b
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -6863,8 +6945,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL48
-	.4byte	0x2e88
-	.4byte	0x2753
+	.4byte	0x2f0e
+	.4byte	0x276b
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -6886,8 +6968,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL49
-	.4byte	0x2e94
-	.4byte	0x2773
+	.4byte	0x2f1a
+	.4byte	0x278b
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -6909,8 +6991,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL52
-	.4byte	0x2ea0
-	.4byte	0x2793
+	.4byte	0x2f26
+	.4byte	0x27ab
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -6932,8 +7014,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL54
-	.4byte	0x2eac
-	.4byte	0x27a7
+	.4byte	0x2f32
+	.4byte	0x27bf
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -6943,8 +7025,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL61
-	.4byte	0x2eb8
-	.4byte	0x27c1
+	.4byte	0x2f3e
+	.4byte	0x27d9
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -6960,7 +7042,7 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x5f
 	.4byte	.LVL64
-	.4byte	0x27df
+	.4byte	0x27f7
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -6983,8 +7065,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL65
-	.4byte	0x2dfd
-	.4byte	0x27f6
+	.4byte	0x2e83
+	.4byte	0x280e
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -6994,8 +7076,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL66
-	.4byte	0x2ec4
-	.4byte	0x2819
+	.4byte	0x2f4a
+	.4byte	0x2831
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -7017,8 +7099,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL79
-	.4byte	0x2de6
-	.4byte	0x2841
+	.4byte	0x2e6c
+	.4byte	0x2859
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -7045,8 +7127,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL80
-	.4byte	0x2dfd
-	.4byte	0x2864
+	.4byte	0x2e83
+	.4byte	0x287c
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -7068,8 +7150,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL81
-	.4byte	0x2ed0
-	.4byte	0x287e
+	.4byte	0x2f56
+	.4byte	0x2896
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -7085,8 +7167,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL82
-	.4byte	0x2edc
-	.4byte	0x28b2
+	.4byte	0x2f62
+	.4byte	0x28ca
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -7128,8 +7210,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL83
-	.4byte	0x2ee8
-	.4byte	0x28c9
+	.4byte	0x2f6e
+	.4byte	0x28e1
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -7139,11 +7221,11 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x41
 	.4byte	.LVL84
-	.4byte	0x2ef3
+	.4byte	0x2f79
 	.uleb128 0x40
 	.4byte	.LVL87
-	.4byte	0x2dfd
-	.4byte	0x28e9
+	.4byte	0x2e83
+	.4byte	0x2901
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -7153,8 +7235,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL91
-	.4byte	0x2eff
-	.4byte	0x290f
+	.4byte	0x2f85
+	.4byte	0x2927
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -7182,7 +7264,7 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x3c
 	.4byte	.LVL92
-	.4byte	0x2ee8
+	.4byte	0x2f6e
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -7194,100 +7276,100 @@ __func__.9840:
 	.uleb128 0x60
 	.4byte	.LASF404
 	.byte	0x1
-	.byte	0xa4
+	.byte	0xae
 	.4byte	0x50
 	.byte	0x1
-	.4byte	0x2955
+	.4byte	0x296d
 	.uleb128 0x61
 	.4byte	.LASF367
 	.byte	0x1
-	.byte	0xa4
+	.byte	0xae
 	.4byte	0x11bd
 	.uleb128 0x61
 	.4byte	.LASF405
 	.byte	0x1
-	.byte	0xa4
+	.byte	0xae
 	.4byte	0x50
 	.uleb128 0x61
 	.4byte	.LASF395
 	.byte	0x1
-	.byte	0xa5
+	.byte	0xaf
 	.4byte	0x50
 	.byte	0
 	.uleb128 0x60
 	.4byte	.LASF406
 	.byte	0x1
-	.byte	0x96
+	.byte	0xa0
 	.4byte	0x50
 	.byte	0x1
-	.4byte	0x297c
+	.4byte	0x2994
 	.uleb128 0x61
 	.4byte	.LASF367
 	.byte	0x1
-	.byte	0x96
+	.byte	0xa0
 	.4byte	0x11bd
 	.uleb128 0x61
 	.4byte	.LASF395
 	.byte	0x1
-	.byte	0x96
+	.byte	0xa0
 	.4byte	0x50
 	.byte	0
 	.uleb128 0x60
 	.4byte	.LASF407
 	.byte	0x1
-	.byte	0x89
+	.byte	0x93
 	.4byte	0x50
 	.byte	0x1
-	.4byte	0x29a3
+	.4byte	0x29bb
 	.uleb128 0x61
 	.4byte	.LASF367
 	.byte	0x1
-	.byte	0x89
+	.byte	0x93
 	.4byte	0x11bd
 	.uleb128 0x61
 	.4byte	.LASF395
 	.byte	0x1
-	.byte	0x89
+	.byte	0x93
 	.4byte	0x50
 	.byte	0
 	.uleb128 0x62
 	.4byte	.LASF408
 	.byte	0x1
-	.byte	0x73
+	.byte	0x7d
 	.4byte	0x50
-	.4byte	.LFB219
-	.4byte	.LFE219-.LFB219
+	.4byte	.LFB221
+	.4byte	.LFE221-.LFB221
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2a6b
+	.4byte	0x2a83
 	.uleb128 0x58
 	.ascii	"fit\000"
 	.byte	0x1
-	.byte	0x73
+	.byte	0x7d
 	.4byte	0x3be
 	.4byte	.LLST9
 	.uleb128 0x57
 	.4byte	.LASF259
 	.byte	0x1
-	.byte	0x73
+	.byte	0x7d
 	.4byte	0x50
 	.4byte	.LLST10
 	.uleb128 0x57
 	.4byte	.LASF62
 	.byte	0x1
-	.byte	0x74
+	.byte	0x7e
 	.4byte	0xd7
 	.4byte	.LLST11
 	.uleb128 0x57
 	.4byte	.LASF279
 	.byte	0x1
-	.byte	0x74
+	.byte	0x7e
 	.4byte	0x50
 	.4byte	.LLST12
 	.uleb128 0x5a
 	.ascii	"str\000"
 	.byte	0x1
-	.byte	0x76
+	.byte	0x80
 	.4byte	0xfb
 	.uleb128 0x2
 	.byte	0x91
@@ -7295,19 +7377,19 @@ __func__.9840:
 	.uleb128 0x63
 	.ascii	"err\000"
 	.byte	0x1
-	.byte	0x77
+	.byte	0x81
 	.4byte	0x50
 	.4byte	.LLST13
 	.uleb128 0x5c
 	.4byte	.LASF372
 	.byte	0x1
-	.byte	0x78
+	.byte	0x82
 	.4byte	0x50
 	.4byte	.LLST14
 	.uleb128 0x40
 	.4byte	.LVL34
-	.4byte	0x2c5c
-	.4byte	0x2a54
+	.4byte	0x2ce2
+	.4byte	0x2a6c
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -7335,14 +7417,14 @@ __func__.9840:
 	.byte	0x91
 	.sleb128 -20
 	.uleb128 0x64
-	.4byte	0x2a86
+	.4byte	0x2a9e
 	.uleb128 0x2
 	.byte	0x75
 	.sleb128 0
 	.byte	0
 	.uleb128 0x3c
 	.4byte	.LVL36
-	.4byte	0x2f0b
+	.4byte	0x2f91
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -7360,128 +7442,178 @@ __func__.9840:
 	.uleb128 0x60
 	.4byte	.LASF409
 	.byte	0x1
-	.byte	0x3d
+	.byte	0x47
 	.4byte	0x50
 	.byte	0x1
-	.4byte	0x2af3
+	.4byte	0x2b0b
 	.uleb128 0x65
 	.ascii	"fit\000"
 	.byte	0x1
-	.byte	0x3d
+	.byte	0x47
 	.4byte	0x3be
 	.uleb128 0x61
 	.4byte	.LASF259
 	.byte	0x1
-	.byte	0x3d
+	.byte	0x47
 	.4byte	0x50
 	.uleb128 0x61
 	.4byte	.LASF62
 	.byte	0x1
-	.byte	0x3e
+	.byte	0x48
 	.4byte	0xd7
 	.uleb128 0x61
 	.4byte	.LASF279
 	.byte	0x1
-	.byte	0x3e
+	.byte	0x48
 	.4byte	0x50
 	.uleb128 0x61
 	.4byte	.LASF410
 	.byte	0x1
-	.byte	0x3f
-	.4byte	0x2af3
+	.byte	0x49
+	.4byte	0x2b0b
 	.uleb128 0x5b
 	.4byte	.LASF74
 	.byte	0x1
-	.byte	0x41
+	.byte	0x4b
 	.4byte	0xd7
 	.uleb128 0x66
 	.ascii	"str\000"
 	.byte	0x1
-	.byte	0x41
+	.byte	0x4b
 	.4byte	0xd7
 	.uleb128 0x5b
 	.4byte	.LASF372
 	.byte	0x1
-	.byte	0x42
+	.byte	0x4c
 	.4byte	0x50
 	.uleb128 0x5b
 	.4byte	.LASF411
 	.byte	0x1
-	.byte	0x43
+	.byte	0x4d
 	.4byte	0x50
 	.uleb128 0x66
 	.ascii	"len\000"
 	.byte	0x1
-	.byte	0x44
+	.byte	0x4e
 	.4byte	0x50
 	.uleb128 0x66
 	.ascii	"i\000"
 	.byte	0x1
-	.byte	0x44
+	.byte	0x4e
 	.4byte	0x50
 	.byte	0
 	.uleb128 0x8
 	.byte	0x4
 	.4byte	0xfb
 	.uleb128 0x67
-	.4byte	.LASF457
+	.4byte	.LASF458
 	.byte	0x1
-	.byte	0x2c
+	.byte	0x38
+	.4byte	.LFB219
+	.4byte	.LFE219-.LFB219
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2b34
+	.uleb128 0x68
+	.ascii	"fdt\000"
+	.byte	0x1
+	.byte	0x38
+	.4byte	0x153
+	.uleb128 0x1
+	.byte	0x50
+	.byte	0
+	.uleb128 0x69
+	.4byte	.LASF459
+	.byte	0x1
+	.byte	0x33
 	.4byte	0x50
 	.byte	0x1
-	.4byte	0x2b20
+	.4byte	0x2b5b
 	.uleb128 0x65
 	.ascii	"fdt\000"
 	.byte	0x1
-	.byte	0x2c
+	.byte	0x33
 	.4byte	0x153
 	.uleb128 0x61
 	.4byte	.LASF339
 	.byte	0x1
-	.byte	0x2c
+	.byte	0x33
 	.4byte	0xfb
 	.byte	0
-	.uleb128 0x68
-	.4byte	.LASF458
+	.uleb128 0x6a
+	.4byte	.LASF460
 	.byte	0x1
-	.byte	0x27
+	.byte	0x2e
 	.4byte	0x50
-	.4byte	0x2b46
+	.4byte	0x2b81
 	.uleb128 0x65
 	.ascii	"fdt\000"
 	.byte	0x1
-	.byte	0x27
+	.byte	0x2e
 	.4byte	0x153
 	.uleb128 0x61
 	.4byte	.LASF412
 	.byte	0x1
-	.byte	0x27
+	.byte	0x2e
 	.4byte	0xfb
 	.byte	0
-	.uleb128 0x69
+	.uleb128 0x6b
 	.4byte	.LASF413
 	.byte	0x1
+	.byte	0x27
+	.4byte	0x50
+	.4byte	.LFB216
+	.4byte	.LFE216-.LFB216
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2bcc
+	.uleb128 0x57
+	.4byte	.LASF366
+	.byte	0x1
+	.byte	0x27
+	.4byte	0x11c9
+	.4byte	.LLST60
+	.uleb128 0x57
+	.4byte	.LASF367
+	.byte	0x1
+	.byte	0x27
+	.4byte	0x11bd
+	.4byte	.LLST61
+	.uleb128 0x3c
+	.4byte	.LVL126
+	.4byte	0x2e83
+	.uleb128 0x3d
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	.LC14
+	.byte	0
+	.byte	0
+	.uleb128 0x6b
+	.4byte	.LASF414
+	.byte	0x1
 	.byte	0x22
 	.4byte	0x50
 	.4byte	.LFB215
 	.4byte	.LFE215-.LFB215
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2b89
+	.4byte	0x2c0f
 	.uleb128 0x57
-	.4byte	.LASF414
+	.4byte	.LASF415
 	.byte	0x1
 	.byte	0x22
 	.4byte	0x4e2
 	.4byte	.LLST59
-	.uleb128 0x6a
-	.4byte	.LASF415
+	.uleb128 0x6c
+	.4byte	.LASF416
 	.byte	0x1
 	.byte	0x22
 	.4byte	0xfb
 	.uleb128 0x1
 	.byte	0x51
-	.uleb128 0x6a
+	.uleb128 0x6c
 	.4byte	.LASF412
 	.byte	0x1
 	.byte	0x22
@@ -7489,8 +7621,8 @@ __func__.9840:
 	.uleb128 0x1
 	.byte	0x52
 	.byte	0
-	.uleb128 0x69
-	.4byte	.LASF416
+	.uleb128 0x6b
+	.4byte	.LASF417
 	.byte	0x1
 	.byte	0x1d
 	.4byte	0xfb
@@ -7498,16 +7630,16 @@ __func__.9840:
 	.4byte	.LFE214-.LFB214
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2bb2
+	.4byte	0x2c38
 	.uleb128 0x57
-	.4byte	.LASF414
+	.4byte	.LASF415
 	.byte	0x1
 	.byte	0x1d
 	.4byte	0x4e2
 	.4byte	.LLST58
 	.byte	0
-	.uleb128 0x69
-	.4byte	.LASF417
+	.uleb128 0x6b
+	.4byte	.LASF418
 	.byte	0x1
 	.byte	0x18
 	.4byte	0x50
@@ -7515,14 +7647,14 @@ __func__.9840:
 	.4byte	.LFE213-.LFB213
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2be8
+	.4byte	0x2c6e
 	.uleb128 0x58
 	.ascii	"fit\000"
 	.byte	0x1
 	.byte	0x18
 	.4byte	0x3be
 	.4byte	.LLST57
-	.uleb128 0x6a
+	.uleb128 0x6c
 	.4byte	.LASF374
 	.byte	0x1
 	.byte	0x18
@@ -7531,14 +7663,14 @@ __func__.9840:
 	.byte	0x51
 	.byte	0
 	.uleb128 0x46
-	.4byte	.LASF418
+	.4byte	.LASF419
 	.byte	0x2
 	.2byte	0x3ea
 	.4byte	0xd7
 	.byte	0x3
-	.4byte	0x2c1e
+	.4byte	0x2ca4
 	.uleb128 0x47
-	.4byte	.LASF419
+	.4byte	.LASF420
 	.byte	0x2
 	.2byte	0x3ea
 	.4byte	0x3be
@@ -7551,86 +7683,86 @@ __func__.9840:
 	.ascii	"len\000"
 	.byte	0x2
 	.2byte	0x3eb
-	.4byte	0x2253
+	.4byte	0x226b
 	.byte	0
 	.uleb128 0x46
-	.4byte	.LASF420
+	.4byte	.LASF421
 	.byte	0x2
 	.2byte	0x2e0
 	.4byte	0x13d
 	.byte	0x3
-	.4byte	0x2c3c
+	.4byte	0x2cc2
 	.uleb128 0x52
 	.ascii	"hdr\000"
 	.byte	0x2
 	.2byte	0x2e0
-	.4byte	0x2c3c
+	.4byte	0x2cc2
 	.byte	0
 	.uleb128 0x8
 	.byte	0x4
 	.4byte	0xae8
 	.uleb128 0x60
-	.4byte	.LASF421
+	.4byte	.LASF422
 	.byte	0x1b
 	.byte	0x70
 	.4byte	0x70
 	.byte	0x3
-	.4byte	0x2c5c
+	.4byte	0x2ce2
 	.uleb128 0x65
 	.ascii	"x\000"
 	.byte	0x1b
 	.byte	0x70
 	.4byte	0x70
 	.byte	0
-	.uleb128 0x6b
-	.4byte	0x2a6b
-	.4byte	.LFB233
-	.4byte	.LFE233-.LFB233
+	.uleb128 0x6d
+	.4byte	0x2a83
+	.4byte	.LFB235
+	.4byte	.LFE235-.LFB235
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2da3
+	.4byte	0x2e29
 	.uleb128 0x34
-	.4byte	0x2a7b
+	.4byte	0x2a93
 	.4byte	.LLST0
 	.uleb128 0x34
-	.4byte	0x2a91
+	.4byte	0x2aa9
 	.4byte	.LLST1
 	.uleb128 0x34
-	.4byte	0x2a9c
+	.4byte	0x2ab4
 	.4byte	.LLST2
 	.uleb128 0x34
-	.4byte	0x2aa7
+	.4byte	0x2abf
 	.4byte	.LLST3
-	.uleb128 0x6c
-	.4byte	0x2a86
+	.uleb128 0x6e
+	.4byte	0x2a9e
 	.uleb128 0x6
 	.byte	0xfa
-	.4byte	0x2a86
+	.4byte	0x2a9e
 	.byte	0x9f
 	.uleb128 0x37
-	.4byte	0x2ab2
+	.4byte	0x2aca
 	.4byte	.LLST4
 	.uleb128 0x37
-	.4byte	0x2abd
+	.4byte	0x2ad5
 	.4byte	.LLST5
 	.uleb128 0x37
-	.4byte	0x2ac8
+	.4byte	0x2ae0
 	.4byte	.LLST6
 	.uleb128 0x37
-	.4byte	0x2ad3
+	.4byte	0x2aeb
 	.4byte	.LLST7
 	.uleb128 0x36
-	.4byte	0x2ade
+	.4byte	0x2af6
 	.uleb128 0x2
 	.byte	0x91
 	.sleb128 -28
 	.uleb128 0x37
-	.4byte	0x2ae9
+	.4byte	0x2b01
 	.4byte	.LLST8
 	.uleb128 0x40
 	.4byte	.LVL1
-	.4byte	0x2f17
-	.4byte	0x2ce8
+	.4byte	0x2f9d
+	.4byte	0x2d6e
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -7640,8 +7772,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL5
-	.4byte	0x2dfd
-	.4byte	0x2cff
+	.4byte	0x2e83
+	.4byte	0x2d85
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -7651,8 +7783,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL6
-	.4byte	0x2f23
-	.4byte	0x2d19
+	.4byte	0x2fa9
+	.4byte	0x2d9f
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -7668,8 +7800,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL11
-	.4byte	0x2de6
-	.4byte	0x2d3f
+	.4byte	0x2e6c
+	.4byte	0x2dc5
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -7697,8 +7829,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL13
-	.4byte	0x2dfd
-	.4byte	0x2d53
+	.4byte	0x2e83
+	.4byte	0x2dd9
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -7708,8 +7840,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL14
-	.4byte	0x2f2e
-	.4byte	0x2d6d
+	.4byte	0x2fb4
+	.4byte	0x2df3
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -7725,8 +7857,8 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x40
 	.4byte	.LVL18
-	.4byte	0x2de6
-	.4byte	0x2d93
+	.4byte	0x2e6c
+	.4byte	0x2e19
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x50
@@ -7754,7 +7886,7 @@ __func__.9840:
 	.byte	0
 	.uleb128 0x3c
 	.4byte	.LVL23
-	.4byte	0x2f39
+	.4byte	0x2fbf
 	.uleb128 0x3d
 	.uleb128 0x1
 	.byte	0x51
@@ -7762,181 +7894,181 @@ __func__.9840:
 	.byte	0x30
 	.byte	0
 	.byte	0
-	.uleb128 0x6b
-	.4byte	0x2af9
-	.4byte	.LFB217
-	.4byte	.LFE217-.LFB217
+	.uleb128 0x6d
+	.4byte	0x2b34
+	.4byte	.LFB218
+	.4byte	.LFE218-.LFB218
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2dc7
+	.4byte	0x2e4d
 	.uleb128 0x34
-	.4byte	0x2b09
-	.4byte	.LLST60
-	.uleb128 0x6c
-	.4byte	0x2b14
+	.4byte	0x2b44
+	.4byte	.LLST62
+	.uleb128 0x6e
+	.4byte	0x2b4f
 	.uleb128 0x1
 	.byte	0x51
 	.byte	0
 	.uleb128 0xc
 	.4byte	0xdd
-	.4byte	0x2dda
-	.uleb128 0x6d
+	.4byte	0x2e60
+	.uleb128 0x6f
 	.4byte	0xcb
-	.4byte	0x1f24
+	.4byte	0x1f2c
 	.byte	0
-	.uleb128 0x6e
-	.4byte	.LASF422
-	.4byte	.LASF422
-	.byte	0x2
-	.2byte	0x3f5
-	.uleb128 0x6e
+	.uleb128 0x70
 	.4byte	.LASF423
 	.4byte	.LASF423
-	.byte	0x1c
-	.2byte	0x2b2
-	.uleb128 0x6f
+	.byte	0x2
+	.2byte	0x3f5
+	.uleb128 0x70
 	.4byte	.LASF424
 	.4byte	.LASF424
-	.byte	0x1d
-	.byte	0xa3
-	.uleb128 0x6f
+	.byte	0x1c
+	.2byte	0x2b2
+	.uleb128 0x71
 	.4byte	.LASF425
 	.4byte	.LASF425
-	.byte	0x1e
-	.byte	0x13
-	.uleb128 0x6e
+	.byte	0x1d
+	.byte	0xa3
+	.uleb128 0x71
 	.4byte	.LASF426
 	.4byte	.LASF426
-	.byte	0x1c
-	.2byte	0x1a8
-	.uleb128 0x6e
+	.byte	0x1e
+	.byte	0x13
+	.uleb128 0x70
 	.4byte	.LASF427
 	.4byte	.LASF427
-	.byte	0x2
-	.2byte	0x42e
-	.uleb128 0x6e
+	.byte	0x1c
+	.2byte	0x1a8
+	.uleb128 0x70
 	.4byte	.LASF428
 	.4byte	.LASF428
 	.byte	0x2
-	.2byte	0x437
-	.uleb128 0x6f
+	.2byte	0x42e
+	.uleb128 0x70
 	.4byte	.LASF429
 	.4byte	.LASF429
-	.byte	0x1a
-	.byte	0xea
-	.uleb128 0x6f
+	.byte	0x2
+	.2byte	0x437
+	.uleb128 0x71
 	.4byte	.LASF430
 	.4byte	.LASF430
-	.byte	0x8
-	.byte	0x27
-	.uleb128 0x6f
+	.byte	0x1a
+	.byte	0xea
+	.uleb128 0x71
 	.4byte	.LASF431
 	.4byte	.LASF431
-	.byte	0xc
-	.byte	0xc2
-	.uleb128 0x6f
+	.byte	0x8
+	.byte	0x27
+	.uleb128 0x71
 	.4byte	.LASF432
 	.4byte	.LASF432
-	.byte	0x1d
-	.byte	0xe4
-	.uleb128 0x6e
+	.byte	0xc
+	.byte	0xc2
+	.uleb128 0x71
 	.4byte	.LASF433
 	.4byte	.LASF433
-	.byte	0x1c
-	.2byte	0x1c1
-	.uleb128 0x6e
+	.byte	0x1d
+	.byte	0xe4
+	.uleb128 0x70
 	.4byte	.LASF434
 	.4byte	.LASF434
-	.byte	0x2
-	.2byte	0x3f8
-	.uleb128 0x6e
+	.byte	0x1c
+	.2byte	0x1c1
+	.uleb128 0x70
 	.4byte	.LASF435
 	.4byte	.LASF435
 	.byte	0x2
-	.2byte	0x3fa
-	.uleb128 0x6e
+	.2byte	0x3f8
+	.uleb128 0x70
 	.4byte	.LASF436
 	.4byte	.LASF436
 	.byte	0x2
-	.2byte	0x3fc
-	.uleb128 0x6e
+	.2byte	0x3fa
+	.uleb128 0x70
 	.4byte	.LASF437
 	.4byte	.LASF437
 	.byte	0x2
-	.2byte	0x402
-	.uleb128 0x6e
+	.2byte	0x3fc
+	.uleb128 0x70
 	.4byte	.LASF438
 	.4byte	.LASF438
 	.byte	0x2
-	.2byte	0x401
-	.uleb128 0x6e
+	.2byte	0x402
+	.uleb128 0x70
 	.4byte	.LASF439
 	.4byte	.LASF439
 	.byte	0x2
-	.2byte	0x404
-	.uleb128 0x6e
+	.2byte	0x401
+	.uleb128 0x70
 	.4byte	.LASF440
 	.4byte	.LASF440
-	.byte	0x17
-	.2byte	0x371
-	.uleb128 0x6e
+	.byte	0x2
+	.2byte	0x404
+	.uleb128 0x70
 	.4byte	.LASF441
 	.4byte	.LASF441
-	.byte	0x2
-	.2byte	0x3f9
-	.uleb128 0x6e
+	.byte	0x17
+	.2byte	0x371
+	.uleb128 0x70
 	.4byte	.LASF442
 	.4byte	.LASF442
 	.byte	0x2
-	.2byte	0x59f
-	.uleb128 0x6e
+	.2byte	0x3f9
+	.uleb128 0x70
 	.4byte	.LASF443
 	.4byte	.LASF443
 	.byte	0x2
-	.2byte	0x429
-	.uleb128 0x6e
+	.2byte	0x59f
+	.uleb128 0x70
 	.4byte	.LASF444
 	.4byte	.LASF444
 	.byte	0x2
-	.2byte	0x598
-	.uleb128 0x6f
+	.2byte	0x429
+	.uleb128 0x70
 	.4byte	.LASF445
 	.4byte	.LASF445
-	.byte	0x1e
-	.byte	0x11
-	.uleb128 0x6e
+	.byte	0x2
+	.2byte	0x598
+	.uleb128 0x71
 	.4byte	.LASF446
 	.4byte	.LASF446
-	.byte	0x17
-	.2byte	0x16d
-	.uleb128 0x6e
+	.byte	0x1e
+	.byte	0x11
+	.uleb128 0x70
 	.4byte	.LASF447
 	.4byte	.LASF447
-	.byte	0x2
-	.2byte	0x3ff
-	.uleb128 0x6e
+	.byte	0x17
+	.2byte	0x16d
+	.uleb128 0x70
 	.4byte	.LASF448
 	.4byte	.LASF448
-	.byte	0x1c
-	.2byte	0x182
-	.uleb128 0x6e
+	.byte	0x2
+	.2byte	0x3ff
+	.uleb128 0x70
 	.4byte	.LASF449
 	.4byte	.LASF449
-	.byte	0x2
-	.2byte	0x5ad
-	.uleb128 0x6f
+	.byte	0x1c
+	.2byte	0x182
+	.uleb128 0x70
 	.4byte	.LASF450
 	.4byte	.LASF450
-	.byte	0x1c
-	.byte	0xa9
-	.uleb128 0x6f
+	.byte	0x2
+	.2byte	0x5ad
+	.uleb128 0x71
 	.4byte	.LASF451
 	.4byte	.LASF451
 	.byte	0x1c
-	.byte	0xb6
-	.uleb128 0x6f
+	.byte	0xa9
+	.uleb128 0x71
 	.4byte	.LASF452
 	.4byte	.LASF452
+	.byte	0x1c
+	.byte	0xb6
+	.uleb128 0x71
+	.4byte	.LASF453
+	.4byte	.LASF453
 	.byte	0x8
 	.byte	0x33
 	.byte	0
@@ -9277,6 +9409,46 @@ __func__.9840:
 	.uleb128 0xb
 	.uleb128 0x27
 	.uleb128 0x19
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x68
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x69
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
 	.uleb128 0x49
 	.uleb128 0x13
 	.uleb128 0x20
@@ -9285,7 +9457,7 @@ __func__.9840:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x68
+	.uleb128 0x6a
 	.uleb128 0x2e
 	.byte	0x1
 	.uleb128 0x3f
@@ -9304,7 +9476,7 @@ __func__.9840:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x69
+	.uleb128 0x6b
 	.uleb128 0x2e
 	.byte	0x1
 	.uleb128 0x3f
@@ -9331,7 +9503,7 @@ __func__.9840:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x6a
+	.uleb128 0x6c
 	.uleb128 0x5
 	.byte	0
 	.uleb128 0x3
@@ -9346,7 +9518,7 @@ __func__.9840:
 	.uleb128 0x18
 	.byte	0
 	.byte	0
-	.uleb128 0x6b
+	.uleb128 0x6d
 	.uleb128 0x2e
 	.byte	0x1
 	.uleb128 0x31
@@ -9363,7 +9535,7 @@ __func__.9840:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x6c
+	.uleb128 0x6e
 	.uleb128 0x5
 	.byte	0
 	.uleb128 0x31
@@ -9372,7 +9544,7 @@ __func__.9840:
 	.uleb128 0x18
 	.byte	0
 	.byte	0
-	.uleb128 0x6d
+	.uleb128 0x6f
 	.uleb128 0x21
 	.byte	0
 	.uleb128 0x49
@@ -9381,7 +9553,7 @@ __func__.9840:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x6e
+	.uleb128 0x70
 	.uleb128 0x2e
 	.byte	0
 	.uleb128 0x3f
@@ -9398,7 +9570,7 @@ __func__.9840:
 	.uleb128 0x5
 	.byte	0
 	.byte	0
-	.uleb128 0x6f
+	.uleb128 0x71
 	.uleb128 0x2e
 	.byte	0
 	.uleb128 0x3f
@@ -9418,111 +9590,119 @@ __func__.9840:
 	.byte	0
 	.section	.debug_loc,"",%progbits
 .Ldebug_loc0:
-.LLST63:
-	.4byte	.LVL130
-	.4byte	.LVL137
+.LLST65:
+	.4byte	.LVL134
+	.4byte	.LVL140
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL137
 	.4byte	.LVL140
+	.4byte	.LVL143
 	.2byte	0x1
 	.byte	0x54
-	.4byte	.LVL140
-	.4byte	.LVL141
+	.4byte	.LVL143
+	.4byte	.LVL144-1
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL141
-	.4byte	.LFE232
+	.4byte	.LVL144-1
+	.4byte	.LFE234
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST64:
-	.4byte	.LVL130
-	.4byte	.LVL135
+.LLST66:
+	.4byte	.LVL134
+	.4byte	.LVL140
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL135
-	.4byte	.LFE232
+	.4byte	.LVL140
+	.4byte	.LVL143
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL143
+	.4byte	.LVL144-1
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL144-1
+	.4byte	.LFE234
 	.2byte	0x1
 	.byte	0x56
 	.4byte	0
 	.4byte	0
-.LLST65:
-	.4byte	.LVL130
-	.4byte	.LVL133
+.LLST67:
+	.4byte	.LVL134
+	.4byte	.LVL138
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL133
-	.4byte	.LVL139
+	.4byte	.LVL138
+	.4byte	.LVL142
 	.2byte	0x3
 	.byte	0x7d
 	.sleb128 100
-	.4byte	.LVL139
-	.4byte	.LVL140
+	.4byte	.LVL142
+	.4byte	.LVL143
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
 	.byte	0x52
 	.byte	0x9f
-	.4byte	.LVL140
-	.4byte	.LVL202
+	.4byte	.LVL143
+	.4byte	.LVL206
 	.2byte	0x3
 	.byte	0x7d
 	.sleb128 100
-	.4byte	.LVL202
-	.4byte	.LVL208
+	.4byte	.LVL206
+	.4byte	.LVL212
 	.2byte	0x3
 	.byte	0x77
 	.sleb128 84
-	.4byte	.LVL208
-	.4byte	.LVL211
+	.4byte	.LVL212
+	.4byte	.LVL215
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
 	.byte	0x52
 	.byte	0x9f
-	.4byte	.LVL211
-	.4byte	.LVL212
+	.4byte	.LVL215
+	.4byte	.LVL216
 	.2byte	0x3
 	.byte	0x77
 	.sleb128 84
-	.4byte	.LVL212
-	.4byte	.LVL247
+	.4byte	.LVL216
+	.4byte	.LVL252
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
 	.byte	0x52
 	.byte	0x9f
-	.4byte	.LVL247
-	.4byte	.LFE232
+	.4byte	.LVL252
+	.4byte	.LFE234
 	.2byte	0x3
 	.byte	0x7d
 	.sleb128 100
 	.4byte	0
 	.4byte	0
-.LLST66:
-	.4byte	.LVL130
+.LLST68:
 	.4byte	.LVL134
+	.4byte	.LVL136
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL134
-	.4byte	.LVL137
+	.4byte	.LVL136
+	.4byte	.LVL140
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL137
+	.byte	0x55
 	.4byte	.LVL140
+	.4byte	.LVL143
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
 	.byte	0x53
 	.byte	0x9f
-	.4byte	.LVL140
-	.4byte	.LVL142-1
+	.4byte	.LVL143
+	.4byte	.LVL146
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL142-1
-	.4byte	.LFE232
+	.byte	0x55
+	.4byte	.LVL146
+	.4byte	.LFE234
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
@@ -9530,49 +9710,49 @@ __func__.9840:
 	.byte	0x9f
 	.4byte	0
 	.4byte	0
-.LLST67:
-	.4byte	.LVL131
-	.4byte	.LVL132
+.LLST69:
+	.4byte	.LVL135
+	.4byte	.LVL137
 	.2byte	0x3
 	.byte	0x7d
 	.sleb128 100
 	.4byte	0
 	.4byte	0
-.LLST68:
-	.4byte	.LVL130
-	.4byte	.LVL139
+.LLST70:
+	.4byte	.LVL134
+	.4byte	.LVL142
 	.2byte	0x3
 	.byte	0x9
 	.byte	0xea
 	.byte	0x9f
-	.4byte	.LVL140
-	.4byte	.LVL200
+	.4byte	.LVL143
+	.4byte	.LVL204
 	.2byte	0x3
 	.byte	0x9
 	.byte	0xea
 	.byte	0x9f
-	.4byte	.LVL247
-	.4byte	.LVL248
+	.4byte	.LVL252
+	.4byte	.LVL253
 	.2byte	0x3
 	.byte	0x9
 	.byte	0xea
 	.byte	0x9f
 	.4byte	0
 	.4byte	0
-.LLST69:
-	.4byte	.LVL140
-	.4byte	.LVL142-1
+.LLST71:
+	.4byte	.LVL144
+	.4byte	.LVL146
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL142-1
-	.4byte	.LVL200
+	.byte	0x55
+	.4byte	.LVL146
+	.4byte	.LVL204
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
 	.byte	0x53
 	.byte	0x9f
-	.4byte	.LVL247
-	.4byte	.LVL248
+	.4byte	.LVL252
+	.4byte	.LVL253
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
@@ -9580,589 +9760,585 @@ __func__.9840:
 	.byte	0x9f
 	.4byte	0
 	.4byte	0
-.LLST70:
-	.4byte	.LVL140
-	.4byte	.LVL200
+.LLST72:
+	.4byte	.LVL144
+	.4byte	.LVL204
 	.2byte	0x3
 	.byte	0x7d
 	.sleb128 100
-	.4byte	.LVL247
-	.4byte	.LVL248
+	.4byte	.LVL252
+	.4byte	.LVL253
 	.2byte	0x3
 	.byte	0x7d
 	.sleb128 100
 	.4byte	0
 	.4byte	0
-.LLST71:
-	.4byte	.LVL140
-	.4byte	.LVL200
+.LLST73:
+	.4byte	.LVL144
+	.4byte	.LVL204
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL247
-	.4byte	.LVL248
+	.4byte	.LVL252
+	.4byte	.LVL253
 	.2byte	0x1
 	.byte	0x56
 	.4byte	0
 	.4byte	0
-.LLST72:
-	.4byte	.LVL140
-	.4byte	.LVL141
-	.2byte	0x1
-	.byte	0x50
-	.4byte	.LVL141
-	.4byte	.LVL200
+.LLST74:
+	.4byte	.LVL144
+	.4byte	.LVL204
 	.2byte	0x1
 	.byte	0x54
-	.4byte	.LVL247
-	.4byte	.LVL248
+	.4byte	.LVL252
+	.4byte	.LVL253
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST73:
-	.4byte	.LVL143
-	.4byte	.LVL144-1
+.LLST75:
+	.4byte	.LVL147
+	.4byte	.LVL148-1
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL144-1
-	.4byte	.LVL200
+	.4byte	.LVL148-1
+	.4byte	.LVL204
 	.2byte	0x1
 	.byte	0x5a
 	.4byte	0
 	.4byte	0
-.LLST74:
-	.4byte	.LVL149
-	.4byte	.LVL150
+.LLST76:
+	.4byte	.LVL153
+	.4byte	.LVL154
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL150
-	.4byte	.LVL151-1
+	.4byte	.LVL154
+	.4byte	.LVL155-1
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL151-1
-	.4byte	.LVL152
+	.4byte	.LVL155-1
+	.4byte	.LVL156
 	.2byte	0x1
 	.byte	0x58
-	.4byte	.LVL152
-	.4byte	.LVL153
+	.4byte	.LVL156
+	.4byte	.LVL157
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL153
 	.4byte	.LVL157
+	.4byte	.LVL161
 	.2byte	0x1
 	.byte	0x58
-	.4byte	.LVL157
-	.4byte	.LVL158
+	.4byte	.LVL161
+	.4byte	.LVL162
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL159
-	.4byte	.LVL160
+	.4byte	.LVL163
+	.4byte	.LVL164
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL160
-	.4byte	.LVL161-1
+	.4byte	.LVL164
+	.4byte	.LVL165-1
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL174
-	.4byte	.LVL175
+	.4byte	.LVL178
+	.4byte	.LVL179
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL189
-	.4byte	.LVL190
+	.4byte	.LVL193
+	.4byte	.LVL194
 	.2byte	0x1
 	.byte	0x58
-	.4byte	.LVL193
-	.4byte	.LVL196
+	.4byte	.LVL197
+	.4byte	.LVL200
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL196
-	.4byte	.LVL197-1
+	.4byte	.LVL200
+	.4byte	.LVL201-1
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
-.LLST75:
-	.4byte	.LVL140
-	.4byte	.LVL165
+.LLST77:
+	.4byte	.LVL144
+	.4byte	.LVL169
 	.2byte	0x2
 	.byte	0x30
 	.byte	0x9f
-	.4byte	.LVL165
-	.4byte	.LVL168
+	.4byte	.LVL169
+	.4byte	.LVL172
 	.2byte	0x2
 	.byte	0x31
 	.byte	0x9f
-	.4byte	.LVL168
-	.4byte	.LVL189
+	.4byte	.LVL172
+	.4byte	.LVL193
 	.2byte	0x1
 	.byte	0x58
-	.4byte	.LVL189
-	.4byte	.LVL191
+	.4byte	.LVL193
+	.4byte	.LVL195
 	.2byte	0x2
 	.byte	0x30
 	.byte	0x9f
-	.4byte	.LVL191
-	.4byte	.LVL192
+	.4byte	.LVL195
+	.4byte	.LVL196
 	.2byte	0x2
 	.byte	0x31
 	.byte	0x9f
-	.4byte	.LVL192
-	.4byte	.LVL200
+	.4byte	.LVL196
+	.4byte	.LVL204
 	.2byte	0x1
 	.byte	0x58
 	.4byte	0
 	.4byte	0
-.LLST76:
-	.4byte	.LVL140
-	.4byte	.LVL155
+.LLST78:
+	.4byte	.LVL144
+	.4byte	.LVL159
 	.2byte	0x3
 	.byte	0x9
 	.byte	0xff
 	.byte	0x9f
-	.4byte	.LVL155
-	.4byte	.LVL156
-	.2byte	0x1
-	.byte	0x50
-	.4byte	.LVL156
-	.4byte	.LVL161
-	.2byte	0x1
-	.byte	0x5b
-	.4byte	.LVL162
-	.4byte	.LVL163
+	.4byte	.LVL159
+	.4byte	.LVL160
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL163
+	.4byte	.LVL160
 	.4byte	.LVL165
 	.2byte	0x1
 	.byte	0x5b
-	.4byte	.LVL165
 	.4byte	.LVL166
+	.4byte	.LVL167
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL166
-	.4byte	.LVL168
+	.4byte	.LVL167
+	.4byte	.LVL169
 	.2byte	0x1
 	.byte	0x5b
 	.4byte	.LVL169
-	.4byte	.LVL172
+	.4byte	.LVL170
 	.2byte	0x1
 	.byte	0x50
+	.4byte	.LVL170
 	.4byte	.LVL172
-	.4byte	.LVL173-1
+	.2byte	0x1
+	.byte	0x5b
+	.4byte	.LVL173
+	.4byte	.LVL176
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL176
+	.4byte	.LVL177-1
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL173-1
-	.4byte	.LVL177
+	.4byte	.LVL177-1
+	.4byte	.LVL181
 	.2byte	0x3
 	.byte	0x7d
 	.sleb128 96
-	.4byte	.LVL189
-	.4byte	.LVL191
+	.4byte	.LVL193
+	.4byte	.LVL195
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL191
-	.4byte	.LVL199
+	.4byte	.LVL195
+	.4byte	.LVL203
 	.2byte	0x1
 	.byte	0x5b
-	.4byte	.LVL199
-	.4byte	.LVL200
+	.4byte	.LVL203
+	.4byte	.LVL204
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST77:
-	.4byte	.LVL142
-	.4byte	.LVL143-1
+.LLST79:
+	.4byte	.LVL145
+	.4byte	.LVL147-1
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL143-1
-	.4byte	.LVL200
+	.4byte	.LVL147-1
+	.4byte	.LVL204
 	.2byte	0x1
 	.byte	0x55
-	.4byte	.LVL247
-	.4byte	.LVL248
+	.4byte	.LVL252
+	.4byte	.LVL253
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST78:
-	.4byte	.LVL167
-	.4byte	.LVL168
+.LLST80:
+	.4byte	.LVL171
+	.4byte	.LVL172
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST79:
-	.4byte	.LVL145
-	.4byte	.LVL146
+.LLST81:
+	.4byte	.LVL149
+	.4byte	.LVL150
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL146
-	.4byte	.LVL147
+	.4byte	.LVL150
+	.4byte	.LVL151
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL147
-	.4byte	.LVL148
+	.4byte	.LVL151
+	.4byte	.LVL152
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL148
-	.4byte	.LVL149-1
+	.4byte	.LVL152
+	.4byte	.LVL153-1
 	.2byte	0x1
 	.byte	0x51
 	.4byte	0
 	.4byte	0
-.LLST80:
-	.4byte	.LVL170
-	.4byte	.LVL171
+.LLST82:
+	.4byte	.LVL174
+	.4byte	.LVL175
 	.2byte	0x4
 	.byte	0x7d
 	.sleb128 104
 	.byte	0x9f
-	.4byte	.LVL171
-	.4byte	.LVL173-1
+	.4byte	.LVL175
+	.4byte	.LVL177-1
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL173-1
-	.4byte	.LVL173
+	.4byte	.LVL177-1
+	.4byte	.LVL177
 	.2byte	0x4
 	.byte	0x7d
 	.sleb128 104
 	.byte	0x9f
 	.4byte	0
 	.4byte	0
-.LLST81:
-	.4byte	.LVL170
-	.4byte	.LVL172
+.LLST83:
+	.4byte	.LVL174
+	.4byte	.LVL176
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL172
-	.4byte	.LVL173-1
+	.4byte	.LVL176
+	.4byte	.LVL177-1
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL173-1
-	.4byte	.LVL173
+	.4byte	.LVL177-1
+	.4byte	.LVL177
 	.2byte	0x3
 	.byte	0x7d
 	.sleb128 96
 	.4byte	0
 	.4byte	0
-.LLST82:
-	.4byte	.LVL170
-	.4byte	.LVL173
+.LLST84:
+	.4byte	.LVL174
+	.4byte	.LVL177
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST83:
-	.4byte	.LVL178
-	.4byte	.LVL183
+.LLST85:
+	.4byte	.LVL182
+	.4byte	.LVL187
 	.2byte	0x1
 	.byte	0x5b
-	.4byte	.LVL183
 	.4byte	.LVL187
+	.4byte	.LVL191
 	.2byte	0x4
 	.byte	0x7d
 	.sleb128 164
 	.byte	0x9f
 	.4byte	0
 	.4byte	0
-.LLST84:
-	.4byte	.LVL178
-	.4byte	.LVL179
+.LLST86:
+	.4byte	.LVL182
+	.4byte	.LVL183
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL179
-	.4byte	.LVL187
+	.4byte	.LVL183
+	.4byte	.LVL191
 	.2byte	0x3
 	.byte	0x7d
 	.sleb128 96
 	.4byte	0
 	.4byte	0
-.LLST85:
-	.4byte	.LVL178
-	.4byte	.LVL187
+.LLST87:
+	.4byte	.LVL182
+	.4byte	.LVL191
 	.2byte	0x1
 	.byte	0x58
 	.4byte	0
 	.4byte	0
-.LLST86:
-	.4byte	.LVL178
-	.4byte	.LVL187
+.LLST88:
+	.4byte	.LVL182
+	.4byte	.LVL191
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST87:
-	.4byte	.LVL178
-	.4byte	.LVL180
+.LLST89:
+	.4byte	.LVL182
+	.4byte	.LVL184
 	.2byte	0x2
 	.byte	0x30
 	.byte	0x9f
-	.4byte	.LVL180
-	.4byte	.LVL181
+	.4byte	.LVL184
+	.4byte	.LVL185
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST88:
-	.4byte	.LVL183
-	.4byte	.LVL184
+.LLST90:
+	.4byte	.LVL187
+	.4byte	.LVL188
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL184
-	.4byte	.LVL185-1
+	.4byte	.LVL188
+	.4byte	.LVL189-1
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL185-1
-	.4byte	.LVL187
+	.4byte	.LVL189-1
+	.4byte	.LVL191
 	.2byte	0x1
 	.byte	0x5b
 	.4byte	0
 	.4byte	0
-.LLST89:
-	.4byte	.LVL194
-	.4byte	.LVL195
+.LLST91:
+	.4byte	.LVL198
+	.4byte	.LVL199
 	.2byte	0x3
 	.byte	0x74
 	.sleb128 4
 	.byte	0x9f
-	.4byte	.LVL195
-	.4byte	.LVL197-1
+	.4byte	.LVL199
+	.4byte	.LVL201-1
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL197-1
-	.4byte	.LVL197
+	.4byte	.LVL201-1
+	.4byte	.LVL201
 	.2byte	0x3
 	.byte	0x74
 	.sleb128 4
 	.byte	0x9f
 	.4byte	0
 	.4byte	0
-.LLST90:
-	.4byte	.LVL194
-	.4byte	.LVL197
+.LLST92:
+	.4byte	.LVL198
+	.4byte	.LVL201
 	.2byte	0x1
 	.byte	0x5b
 	.4byte	0
 	.4byte	0
-.LLST91:
-	.4byte	.LVL194
-	.4byte	.LVL197
+.LLST93:
+	.4byte	.LVL198
+	.4byte	.LVL201
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST92:
-	.4byte	.LVL200
-	.4byte	.LVL210
+.LLST94:
+	.4byte	.LVL204
+	.4byte	.LVL214
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL211
-	.4byte	.LVL247
+	.4byte	.LVL215
+	.4byte	.LVL252
 	.2byte	0x1
 	.byte	0x56
 	.4byte	0
 	.4byte	0
-.LLST93:
-	.4byte	.LVL200
-	.4byte	.LVL210
+.LLST95:
+	.4byte	.LVL204
+	.4byte	.LVL214
 	.2byte	0x1
 	.byte	0x54
-	.4byte	.LVL211
-	.4byte	.LVL247
+	.4byte	.LVL215
+	.4byte	.LVL252
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST95:
-	.4byte	.LVL203
-	.4byte	.LVL209
+.LLST97:
+	.4byte	.LVL207
+	.4byte	.LVL213
 	.2byte	0x2
 	.byte	0x78
 	.sleb128 0
-	.4byte	.LVL209
-	.4byte	.LVL210
+	.4byte	.LVL213
+	.4byte	.LVL214
 	.2byte	0x2
 	.byte	0x7d
 	.sleb128 16
-	.4byte	.LVL211
-	.4byte	.LVL218
+	.4byte	.LVL215
+	.4byte	.LVL222
 	.2byte	0x2
 	.byte	0x78
-	.sleb128 0
-	.4byte	.LVL218
-	.4byte	.LVL244
+	.sleb128 0
+	.4byte	.LVL222
+	.4byte	.LVL249
 	.2byte	0x2
 	.byte	0x7d
 	.sleb128 16
-	.4byte	.LVL244
-	.4byte	.LVL245
+	.4byte	.LVL249
+	.4byte	.LVL250
 	.2byte	0x2
 	.byte	0x78
 	.sleb128 0
-	.4byte	.LVL245
-	.4byte	.LVL247
+	.4byte	.LVL250
+	.4byte	.LVL252
 	.2byte	0x2
 	.byte	0x7d
 	.sleb128 16
 	.4byte	0
 	.4byte	0
-.LLST96:
-	.4byte	.LVL231
-	.4byte	.LVL232
+.LLST98:
+	.4byte	.LVL235
+	.4byte	.LVL236
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL246
-	.4byte	.LVL247
+	.4byte	.LVL251
+	.4byte	.LVL252
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST97:
-	.4byte	.LVL212
-	.4byte	.LVL213
+.LLST99:
+	.4byte	.LVL216
+	.4byte	.LVL217
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL213
-	.4byte	.LVL225
+	.4byte	.LVL217
+	.4byte	.LVL229
 	.2byte	0x3
 	.byte	0x77
 	.sleb128 84
-	.4byte	.LVL228
 	.4byte	.LVL232
+	.4byte	.LVL236
 	.2byte	0x3
 	.byte	0x77
 	.sleb128 84
-	.4byte	.LVL244
-	.4byte	.LVL247
+	.4byte	.LVL249
+	.4byte	.LVL252
 	.2byte	0x3
 	.byte	0x77
 	.sleb128 84
 	.4byte	0
 	.4byte	0
-.LLST98:
-	.4byte	.LVL233
-	.4byte	.LVL234
+.LLST100:
+	.4byte	.LVL237
+	.4byte	.LVL238
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL234
-	.4byte	.LVL235-1
+	.4byte	.LVL238
+	.4byte	.LVL239-1
 	.2byte	0x2
 	.byte	0x7d
 	.sleb128 0
 	.4byte	0
 	.4byte	0
-.LLST99:
-	.4byte	.LVL224
-	.4byte	.LVL226
+.LLST101:
+	.4byte	.LVL228
+	.4byte	.LVL230
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL226
-	.4byte	.LVL227-1
+	.4byte	.LVL230
+	.4byte	.LVL231-1
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL227-1
-	.4byte	.LVL228
+	.4byte	.LVL231-1
+	.4byte	.LVL232
 	.2byte	0x3
 	.byte	0x77
 	.sleb128 84
-	.4byte	.LVL228
-	.4byte	.LVL229
+	.4byte	.LVL232
+	.4byte	.LVL233
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL229
-	.4byte	.LVL232
+	.4byte	.LVL233
+	.4byte	.LVL236
 	.2byte	0x3
 	.byte	0x77
 	.sleb128 72
-	.4byte	.LVL235
-	.4byte	.LVL236
+	.4byte	.LVL239
+	.4byte	.LVL240
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL236
-	.4byte	.LVL237-1
+	.4byte	.LVL240
+	.4byte	.LVL241-1
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL246
-	.4byte	.LVL247
+	.4byte	.LVL251
+	.4byte	.LVL252
 	.2byte	0x3
 	.byte	0x77
 	.sleb128 72
 	.4byte	0
 	.4byte	0
-.LLST100:
-	.4byte	.LVL232
-	.4byte	.LVL241
+.LLST102:
+	.4byte	.LVL236
+	.4byte	.LVL246
 	.2byte	0x1
 	.byte	0x55
-	.4byte	.LVL242
-	.4byte	.LVL244
+	.4byte	.LVL247
+	.4byte	.LVL249
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST101:
-	.4byte	.LVL217
-	.4byte	.LVL219-1
+.LLST103:
+	.4byte	.LVL221
+	.4byte	.LVL223-1
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL219-1
-	.4byte	.LVL241
+	.4byte	.LVL223-1
+	.4byte	.LVL246
 	.2byte	0x1
 	.byte	0x58
-	.4byte	.LVL242
-	.4byte	.LVL244
+	.4byte	.LVL247
+	.4byte	.LVL249
 	.2byte	0x1
 	.byte	0x58
-	.4byte	.LVL245
-	.4byte	.LVL246
+	.4byte	.LVL250
+	.4byte	.LVL251
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL246
-	.4byte	.LVL247
+	.4byte	.LVL251
+	.4byte	.LVL252
 	.2byte	0x1
 	.byte	0x58
 	.4byte	0
 	.4byte	0
-.LLST102:
-	.4byte	.LVL204
-	.4byte	.LVL205
+.LLST104:
+	.4byte	.LVL208
+	.4byte	.LVL209
 	.2byte	0x6
 	.byte	0x3
-	.4byte	.LC14
+	.4byte	.LC15
 	.byte	0x9f
-	.4byte	.LVL205
-	.4byte	.LVL206
+	.4byte	.LVL209
+	.4byte	.LVL210
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL206
-	.4byte	.LVL207-1
+	.4byte	.LVL210
+	.4byte	.LVL211-1
 	.2byte	0x1
 	.byte	0x51
 	.4byte	0
 	.4byte	0
-.LLST103:
-	.4byte	.LVL219
-	.4byte	.LVL220
+.LLST105:
+	.4byte	.LVL223
+	.4byte	.LVL224
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL220
-	.4byte	.LVL221-1
+	.4byte	.LVL224
+	.4byte	.LVL225-1
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL222
-	.4byte	.LVL223
+	.4byte	.LVL226
+	.4byte	.LVL227
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL223
-	.4byte	.LVL224-1
+	.4byte	.LVL227
+	.4byte	.LVL228-1
 	.2byte	0x1
 	.byte	0x51
 	.4byte	0
 	.4byte	0
-.LLST94:
-	.4byte	.LVL201
-	.4byte	.LVL205-1
+.LLST96:
+	.4byte	.LVL205
+	.4byte	.LVL209-1
 	.2byte	0x6
 	.byte	0x76
 	.sleb128 8
@@ -10172,13 +10348,13 @@ __func__.9840:
 	.byte	0x9f
 	.4byte	0
 	.4byte	0
-.LLST62:
-	.4byte	.LVL128
-	.4byte	.LVL129
+.LLST64:
+	.4byte	.LVL132
+	.4byte	.LVL133
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL129
-	.4byte	.LFE229
+	.4byte	.LVL133
+	.4byte	.LFE231
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
@@ -10196,7 +10372,7 @@ __func__.9840:
 	.2byte	0x1
 	.byte	0x54
 	.4byte	.LVL117
-	.4byte	.LFE228
+	.4byte	.LFE230
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
@@ -10214,7 +10390,7 @@ __func__.9840:
 	.2byte	0x1
 	.byte	0x55
 	.4byte	.LVL117
-	.4byte	.LFE228
+	.4byte	.LFE230
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
@@ -10228,7 +10404,7 @@ __func__.9840:
 	.2byte	0x1
 	.byte	0x52
 	.4byte	.LVL106
-	.4byte	.LFE228
+	.4byte	.LFE230
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
@@ -10242,7 +10418,7 @@ __func__.9840:
 	.2byte	0x1
 	.byte	0x53
 	.4byte	.LVL110
-	.4byte	.LFE228
+	.4byte	.LFE230
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
@@ -10354,13 +10530,13 @@ __func__.9840:
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST61:
-	.4byte	.LVL126
-	.4byte	.LVL127
+.LLST63:
+	.4byte	.LVL130
+	.4byte	.LVL131
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL127
-	.4byte	.LFE227
+	.4byte	.LVL131
+	.4byte	.LFE229
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
@@ -10378,7 +10554,7 @@ __func__.9840:
 	.2byte	0x1
 	.byte	0x54
 	.4byte	.LVL104
-	.4byte	.LFE224
+	.4byte	.LFE226
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
@@ -10396,7 +10572,7 @@ __func__.9840:
 	.2byte	0x1
 	.byte	0x56
 	.4byte	.LVL104
-	.4byte	.LFE224
+	.4byte	.LFE226
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
@@ -10414,7 +10590,7 @@ __func__.9840:
 	.2byte	0x1
 	.byte	0x57
 	.4byte	.LVL104
-	.4byte	.LFE224
+	.4byte	.LFE226
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
@@ -10432,7 +10608,7 @@ __func__.9840:
 	.2byte	0x1
 	.byte	0x55
 	.4byte	.LVL104
-	.4byte	.LFE224
+	.4byte	.LFE226
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
@@ -10447,7 +10623,7 @@ __func__.9840:
 	.byte	0x91
 	.sleb128 0
 	.4byte	.LVL104
-	.4byte	.LFE224
+	.4byte	.LFE226
 	.2byte	0x2
 	.byte	0x7d
 	.sleb128 0
@@ -10460,7 +10636,7 @@ __func__.9840:
 	.byte	0x91
 	.sleb128 4
 	.4byte	.LVL104
-	.4byte	.LFE224
+	.4byte	.LFE226
 	.2byte	0x2
 	.byte	0x7d
 	.sleb128 4
@@ -10491,7 +10667,7 @@ __func__.9840:
 	.2byte	0x1
 	.byte	0x50
 	.4byte	.LVL43
-	.4byte	.LFE223
+	.4byte	.LFE225
 	.2byte	0x1
 	.byte	0x58
 	.4byte	0
@@ -10502,7 +10678,7 @@ __func__.9840:
 	.2byte	0x1
 	.byte	0x51
 	.4byte	.LVL42
-	.4byte	.LFE223
+	.4byte	.LFE225
 	.2byte	0x3
 	.byte	0x91
 	.sleb128 -68
@@ -10530,7 +10706,7 @@ __func__.9840:
 	.2byte	0x1
 	.byte	0x50
 	.4byte	.LVL86-1
-	.4byte	.LFE223
+	.4byte	.LFE225
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
@@ -10578,7 +10754,7 @@ __func__.9840:
 	.2byte	0x1
 	.byte	0x57
 	.4byte	.LVL92
-	.4byte	.LFE223
+	.4byte	.LFE225
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
@@ -10593,7 +10769,7 @@ __func__.9840:
 	.byte	0x91
 	.sleb128 0
 	.4byte	.LVL68
-	.4byte	.LFE223
+	.4byte	.LFE225
 	.2byte	0x2
 	.byte	0x91
 	.sleb128 0
@@ -10606,7 +10782,7 @@ __func__.9840:
 	.byte	0x91
 	.sleb128 4
 	.4byte	.LVL68
-	.4byte	.LFE223
+	.4byte	.LFE225
 	.2byte	0x2
 	.byte	0x91
 	.sleb128 4
@@ -10723,7 +10899,7 @@ __func__.9840:
 	.byte	0x30
 	.byte	0x9f
 	.4byte	.LVL90
-	.4byte	.LFE223
+	.4byte	.LFE225
 	.2byte	0x2
 	.byte	0x30
 	.byte	0x9f
@@ -10735,7 +10911,7 @@ __func__.9840:
 	.2byte	0x1
 	.byte	0x53
 	.4byte	.LVL45-1
-	.4byte	.LFE223
+	.4byte	.LFE225
 	.2byte	0x3
 	.byte	0x91
 	.sleb128 -76
@@ -10865,7 +11041,7 @@ __func__.9840:
 	.2byte	0x1
 	.byte	0x50
 	.4byte	.LVL34-1
-	.4byte	.LFE219
+	.4byte	.LFE221
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
@@ -10876,7 +11052,7 @@ __func__.9840:
 	.2byte	0x1
 	.byte	0x51
 	.4byte	.LVL31
-	.4byte	.LFE219
+	.4byte	.LFE221
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
@@ -10891,7 +11067,7 @@ __func__.9840:
 	.2byte	0x1
 	.byte	0x51
 	.4byte	.LVL34-1
-	.4byte	.LFE219
+	.4byte	.LFE221
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
@@ -10909,7 +11085,7 @@ __func__.9840:
 	.2byte	0x1
 	.byte	0x52
 	.4byte	.LVL34-1
-	.4byte	.LFE219
+	.4byte	.LFE221
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
@@ -10931,6 +11107,34 @@ __func__.9840:
 	.byte	0x50
 	.4byte	0
 	.4byte	0
+.LLST60:
+	.4byte	.LVL124
+	.4byte	.LVL125
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL125
+	.4byte	.LFE216
+	.2byte	0x4
+	.byte	0xf3
+	.uleb128 0x1
+	.byte	0x50
+	.byte	0x9f
+	.4byte	0
+	.4byte	0
+.LLST61:
+	.4byte	.LVL124
+	.4byte	.LVL126-1
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL126-1
+	.4byte	.LFE216
+	.2byte	0x4
+	.byte	0xf3
+	.uleb128 0x1
+	.byte	0x51
+	.byte	0x9f
+	.4byte	0
+	.4byte	0
 .LLST59:
 	.4byte	.LVL122
 	.4byte	.LVL123
@@ -10994,7 +11198,7 @@ __func__.9840:
 	.2byte	0x1
 	.byte	0x55
 	.4byte	.LVL19
-	.4byte	.LFE233
+	.4byte	.LFE235
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
@@ -11019,7 +11223,7 @@ __func__.9840:
 	.byte	0x51
 	.byte	0x9f
 	.4byte	.LVL16
-	.4byte	.LFE233
+	.4byte	.LFE235
 	.2byte	0x1
 	.byte	0x58
 	.4byte	0
@@ -11041,7 +11245,7 @@ __func__.9840:
 	.byte	0x52
 	.byte	0x9f
 	.4byte	.LVL16
-	.4byte	.LFE233
+	.4byte	.LFE235
 	.2byte	0x1
 	.byte	0x57
 	.4byte	0
@@ -11063,7 +11267,7 @@ __func__.9840:
 	.byte	0x53
 	.byte	0x9f
 	.4byte	.LVL16
-	.4byte	.LFE233
+	.4byte	.LFE235
 	.2byte	0x1
 	.byte	0x56
 	.4byte	0
@@ -11090,7 +11294,7 @@ __func__.9840:
 	.2byte	0x1
 	.byte	0x50
 	.4byte	.LVL28
-	.4byte	.LFE233
+	.4byte	.LFE235
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
@@ -11111,7 +11315,7 @@ __func__.9840:
 	.2byte	0x1
 	.byte	0x50
 	.4byte	.LVL28
-	.4byte	.LFE233
+	.4byte	.LFE235
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
@@ -11177,13 +11381,13 @@ __func__.9840:
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST60:
-	.4byte	.LVL124
-	.4byte	.LVL125
+.LLST62:
+	.4byte	.LVL127
+	.4byte	.LVL128
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL125
-	.4byte	.LFE217
+	.4byte	.LVL128
+	.4byte	.LFE218
 	.2byte	0x4
 	.byte	0xf3
 	.uleb128 0x1
@@ -11192,37 +11396,41 @@ __func__.9840:
 	.4byte	0
 	.4byte	0
 	.section	.debug_aranges,"",%progbits
-	.4byte	0x74
+	.4byte	0x84
 	.2byte	0x2
 	.4byte	.Ldebug_info0
 	.byte	0x4
 	.byte	0
 	.2byte	0
 	.2byte	0
-	.4byte	.LFB233
-	.4byte	.LFE233-.LFB233
-	.4byte	.LFB219
-	.4byte	.LFE219-.LFB219
-	.4byte	.LFB223
-	.4byte	.LFE223-.LFB223
-	.4byte	.LFB224
-	.4byte	.LFE224-.LFB224
-	.4byte	.LFB228
-	.4byte	.LFE228-.LFB228
+	.4byte	.LFB235
+	.4byte	.LFE235-.LFB235
+	.4byte	.LFB221
+	.4byte	.LFE221-.LFB221
+	.4byte	.LFB225
+	.4byte	.LFE225-.LFB225
+	.4byte	.LFB226
+	.4byte	.LFE226-.LFB226
+	.4byte	.LFB230
+	.4byte	.LFE230-.LFB230
 	.4byte	.LFB213
 	.4byte	.LFE213-.LFB213
 	.4byte	.LFB214
 	.4byte	.LFE214-.LFB214
 	.4byte	.LFB215
 	.4byte	.LFE215-.LFB215
-	.4byte	.LFB217
-	.4byte	.LFE217-.LFB217
-	.4byte	.LFB227
-	.4byte	.LFE227-.LFB227
+	.4byte	.LFB216
+	.4byte	.LFE216-.LFB216
+	.4byte	.LFB218
+	.4byte	.LFE218-.LFB218
+	.4byte	.LFB219
+	.4byte	.LFE219-.LFB219
 	.4byte	.LFB229
 	.4byte	.LFE229-.LFB229
-	.4byte	.LFB232
-	.4byte	.LFE232-.LFB232
+	.4byte	.LFB231
+	.4byte	.LFE231-.LFB231
+	.4byte	.LFB234
+	.4byte	.LFE234-.LFB234
 	.4byte	0
 	.4byte	0
 	.section	.debug_ranges,"",%progbits
@@ -11269,30 +11477,34 @@ __func__.9840:
 	.4byte	.LBE99
 	.4byte	0
 	.4byte	0
-	.4byte	.LFB233
-	.4byte	.LFE233
-	.4byte	.LFB219
-	.4byte	.LFE219
-	.4byte	.LFB223
-	.4byte	.LFE223
-	.4byte	.LFB224
-	.4byte	.LFE224
-	.4byte	.LFB228
-	.4byte	.LFE228
+	.4byte	.LFB235
+	.4byte	.LFE235
+	.4byte	.LFB221
+	.4byte	.LFE221
+	.4byte	.LFB225
+	.4byte	.LFE225
+	.4byte	.LFB226
+	.4byte	.LFE226
+	.4byte	.LFB230
+	.4byte	.LFE230
 	.4byte	.LFB213
 	.4byte	.LFE213
 	.4byte	.LFB214
 	.4byte	.LFE214
 	.4byte	.LFB215
 	.4byte	.LFE215
-	.4byte	.LFB217
-	.4byte	.LFE217
-	.4byte	.LFB227
-	.4byte	.LFE227
+	.4byte	.LFB216
+	.4byte	.LFE216
+	.4byte	.LFB218
+	.4byte	.LFE218
+	.4byte	.LFB219
+	.4byte	.LFE219
 	.4byte	.LFB229
 	.4byte	.LFE229
-	.4byte	.LFB232
-	.4byte	.LFE232
+	.4byte	.LFB231
+	.4byte	.LFE231
+	.4byte	.LFB234
+	.4byte	.LFE234
 	.4byte	0
 	.4byte	0
 	.section	.debug_line,"",%progbits
@@ -11300,19 +11512,19 @@ __func__.9840:
 	.section	.debug_str,"MS",%progbits,1
 .LASF45:
 	.ascii	"IF_TYPE_SPINAND\000"
-.LASF455:
+.LASF456:
 	.ascii	"/home/zzz/code/u-boot\000"
 .LASF84:
 	.ascii	"flash_id\000"
 .LASF310:
 	.ascii	"mem_malloc_start\000"
-.LASF450:
+.LASF451:
 	.ascii	"fdt_first_subnode\000"
 .LASF286:
 	.ascii	"net_hostname\000"
 .LASF74:
 	.ascii	"name\000"
-.LASF454:
+.LASF455:
 	.ascii	"common/spl/spl_fit_tb_arm32.c\000"
 .LASF44:
 	.ascii	"IF_TYPE_RKNAND\000"
@@ -11330,7 +11542,7 @@ __func__.9840:
 	.ascii	"fdt32_t\000"
 .LASF412:
 	.ascii	"slot\000"
-.LASF432:
+.LASF433:
 	.ascii	"fdt_shrink_to_minimum\000"
 .LASF380:
 	.ascii	"part_info\000"
@@ -11344,7 +11556,7 @@ __func__.9840:
 	.ascii	"spl_kernel_partition\000"
 .LASF321:
 	.ascii	"flags\000"
-.LASF428:
+.LASF429:
 	.ascii	"fit_conf_get_node\000"
 .LASF406:
 	.ascii	"get_aligned_image_overhead\000"
@@ -11404,11 +11616,11 @@ __func__.9840:
 	.ascii	"bootm_headers_t\000"
 .LASF207:
 	.ascii	"IH_COMP_LZ4\000"
-.LASF424:
+.LASF425:
 	.ascii	"fdt_record_loadable\000"
 .LASF118:
 	.ascii	"bd_t\000"
-.LASF453:
+.LASF454:
 	.ascii	"GNU C11 6.3.1 20170404 -mthumb -mthumb-interwork -m"
 	.ascii	"abi=aapcs-linux -mno-unaligned-access -mfloat-abi=s"
 	.ascii	"oft -march=armv7-a -mtune=cortex-a9 -mfpu=vfpv3-d16"
@@ -11424,7 +11636,7 @@ __func__.9840:
 	.ascii	"mem_malloc_end\000"
 .LASF38:
 	.ascii	"IF_TYPE_MMC\000"
-.LASF443:
+.LASF444:
 	.ascii	"fit_image_verify_with_data\000"
 .LASF155:
 	.ascii	"IH_OS_QNX\000"
@@ -11454,7 +11666,7 @@ __func__.9840:
 	.ascii	"rd_start\000"
 .LASF314:
 	.ascii	"__bss_end\000"
-.LASF442:
+.LASF443:
 	.ascii	"fdt_getprop_u32\000"
 .LASF214:
 	.ascii	"ih_size\000"
@@ -11508,11 +11720,11 @@ __func__.9840:
 	.ascii	"IH_TYPE_KERNEL_NOLOAD\000"
 .LASF190:
 	.ascii	"IH_TYPE_RKIMAGE\000"
-.LASF439:
+.LASF440:
 	.ascii	"fit_image_get_data_size\000"
 .LASF379:
 	.ascii	"part_name\000"
-.LASF449:
+.LASF450:
 	.ascii	"fit_find_config_node\000"
 .LASF92:
 	.ascii	"base\000"
@@ -11542,9 +11754,9 @@ __func__.9840:
 	.ascii	"get_aligned_image_offset\000"
 .LASF31:
 	.ascii	"lbaint_t\000"
-.LASF419:
-	.ascii	"fit_hdr\000"
 .LASF420:
+	.ascii	"fit_hdr\000"
+.LASF421:
 	.ascii	"image_get_magic\000"
 .LASF220:
 	.ascii	"ih_type\000"
@@ -11556,11 +11768,11 @@ __func__.9840:
 	.ascii	"bi_ethspeed\000"
 .LASF76:
 	.ascii	"disk_partition\000"
-.LASF431:
+.LASF432:
 	.ascii	"part_get_info_by_name\000"
 .LASF332:
 	.ascii	"tag_bootdev\000"
-.LASF435:
+.LASF436:
 	.ascii	"fit_image_get_load\000"
 .LASF91:
 	.ascii	"lmb_property\000"
@@ -11584,13 +11796,13 @@ __func__.9840:
 	.ascii	"boot_cpuid_phys\000"
 .LASF235:
 	.ascii	"fit_uname_cfg\000"
-.LASF421:
+.LASF422:
 	.ascii	"__fswab32\000"
 .LASF221:
 	.ascii	"ih_comp\000"
 .LASF113:
 	.ascii	"bi_busfreq\000"
-.LASF437:
+.LASF438:
 	.ascii	"fit_image_get_data_position\000"
 .LASF269:
 	.ascii	"s_addr\000"
@@ -11608,7 +11820,7 @@ __func__.9840:
 	.ascii	"blob\000"
 .LASF304:
 	.ascii	"net_loop_state\000"
-.LASF434:
+.LASF435:
 	.ascii	"fit_image_get_comp\000"
 .LASF395:
 	.ascii	"offset\000"
@@ -11640,7 +11852,7 @@ __func__.9840:
 	.ascii	"net_dns_server\000"
 .LASF80:
 	.ascii	"uuid\000"
-.LASF447:
+.LASF448:
 	.ascii	"fit_image_get_data\000"
 .LASF371:
 	.ascii	"base_offset\000"
@@ -11656,13 +11868,13 @@ __func__.9840:
 	.ascii	"_binary_u_boot_bin_end\000"
 .LASF199:
 	.ascii	"IH_TYPE_PMMC\000"
-.LASF456:
+.LASF457:
 	.ascii	"load_next\000"
 .LASF243:
 	.ascii	"fit_uname_fdt\000"
 .LASF377:
 	.ascii	"spl_load_kernel_fit\000"
-.LASF448:
+.LASF449:
 	.ascii	"fdt_subnode_offset\000"
 .LASF338:
 	.ascii	"bank\000"
@@ -11682,7 +11894,7 @@ __func__.9840:
 	.ascii	"IH_TYPE_FPGA\000"
 .LASF337:
 	.ascii	"count\000"
-.LASF422:
+.LASF423:
 	.ascii	"fit_image_get_os\000"
 .LASF392:
 	.ascii	"spl_fit_load_blob\000"
@@ -11694,11 +11906,11 @@ __func__.9840:
 	.ascii	"save_addr\000"
 .LASF280:
 	.ascii	"priv\000"
-.LASF457:
+.LASF459:
 	.ascii	"fdt_bootargs_append\000"
 .LASF14:
 	.ascii	"char\000"
-.LASF441:
+.LASF442:
 	.ascii	"fit_image_is_preload\000"
 .LASF372:
 	.ascii	"node\000"
@@ -11708,7 +11920,7 @@ __func__.9840:
 	.ascii	"IH_TYPE_ATMELIMAGE\000"
 .LASF71:
 	.ascii	"ide_bus_offset\000"
-.LASF413:
+.LASF414:
 	.ascii	"spl_get_current_slot\000"
 .LASF153:
 	.ascii	"IH_OS_VXWORKS\000"
@@ -11744,7 +11956,7 @@ __func__.9840:
 	.ascii	"IF_TYPE_MTD\000"
 .LASF309:
 	.ascii	"net_state\000"
-.LASF430:
+.LASF431:
 	.ascii	"strcmp\000"
 .LASF237:
 	.ascii	"fit_uname_os\000"
@@ -11772,7 +11984,7 @@ __func__.9840:
 	.ascii	"IH_TYPE_KERNEL\000"
 .LASF138:
 	.ascii	"working_fdt\000"
-.LASF426:
+.LASF427:
 	.ascii	"fdt_path_offset\000"
 .LASF231:
 	.ascii	"bootm_headers\000"
@@ -11794,7 +12006,7 @@ __func__.9840:
 	.ascii	"SIG_TYPE_GUID\000"
 .LASF240:
 	.ascii	"fit_uname_rd\000"
-.LASF425:
+.LASF426:
 	.ascii	"printf\000"
 .LASF86:
 	.ascii	"udevice\000"
@@ -11806,13 +12018,13 @@ __func__.9840:
 	.ascii	"IH_OS_OPENRTOS\000"
 .LASF81:
 	.ascii	"type_guid\000"
-.LASF429:
+.LASF430:
 	.ascii	"atags_get_tag\000"
 .LASF70:
 	.ascii	"bdev\000"
 .LASF403:
 	.ascii	"preload\000"
-.LASF438:
+.LASF439:
 	.ascii	"fit_image_get_data_offset\000"
 .LASF129:
 	.ascii	"totalsize\000"
@@ -11834,11 +12046,13 @@ __func__.9840:
 	.ascii	"IH_OS_OPENBSD\000"
 .LASF297:
 	.ascii	"net_null_ethaddr\000"
+.LASF458:
+	.ascii	"rk_meta_bootargs_append\000"
 .LASF142:
 	.ascii	"IH_OS_FREEBSD\000"
 .LASF348:
 	.ascii	"tag_ram_partition\000"
-.LASF418:
+.LASF419:
 	.ascii	"fit_get_name\000"
 .LASF218:
 	.ascii	"ih_os\000"
@@ -11854,19 +12068,19 @@ __func__.9840:
 	.ascii	"param\000"
 .LASF317:
 	.ascii	"entry_point_os\000"
-.LASF415:
+.LASF416:
 	.ascii	"partition\000"
 .LASF37:
 	.ascii	"IF_TYPE_DOC\000"
 .LASF364:
 	.ascii	"pub_key\000"
-.LASF451:
+.LASF452:
 	.ascii	"fdt_next_subnode\000"
 .LASF203:
 	.ascii	"IH_COMP_GZIP\000"
 .LASF193:
 	.ascii	"IH_TYPE_ZYNQIMAGE\000"
-.LASF427:
+.LASF428:
 	.ascii	"fit_board_verify_required_sigs\000"
 .LASF85:
 	.ascii	"protect\000"
@@ -11916,7 +12130,7 @@ __func__.9840:
 	.ascii	"long double\000"
 .LASF232:
 	.ascii	"legacy_hdr_os\000"
-.LASF445:
+.LASF446:
 	.ascii	"puts\000"
 .LASF388:
 	.ascii	"noffset\000"
@@ -11924,7 +12138,7 @@ __func__.9840:
 	.ascii	"size_t\000"
 .LASF109:
 	.ascii	"bi_ip_addr\000"
-.LASF414:
+.LASF415:
 	.ascii	"dev_desc\000"
 .LASF112:
 	.ascii	"bi_intfreq\000"
@@ -11940,7 +12154,7 @@ __func__.9840:
 	.ascii	"net_tx_packet\000"
 .LASF252:
 	.ascii	"initrd_start\000"
-.LASF452:
+.LASF453:
 	.ascii	"strchr\000"
 .LASF333:
 	.ascii	"devtype\000"
@@ -11972,7 +12186,7 @@ __func__.9840:
 	.ascii	"net_nis_domain\000"
 .LASF215:
 	.ascii	"ih_load\000"
-.LASF417:
+.LASF418:
 	.ascii	"fit_config_verify\000"
 .LASF307:
 	.ascii	"NETLOOP_SUCCESS\000"
@@ -12012,7 +12226,9 @@ __func__.9840:
 	.ascii	"ft_addr\000"
 .LASF409:
 	.ascii	"spl_fit_get_image_name\000"
-.LASF433:
+.LASF413:
+	.ascii	"spl_load_meta\000"
+.LASF434:
 	.ascii	"fdt_get_name\000"
 .LASF325:
 	.ascii	"read\000"
@@ -12116,7 +12332,7 @@ __func__.9840:
 	.ascii	"IH_OS_INVALID\000"
 .LASF257:
 	.ascii	"state\000"
-.LASF440:
+.LASF441:
 	.ascii	"memalign_simple\000"
 .LASF342:
 	.ascii	"tee_mem\000"
@@ -12128,7 +12344,7 @@ __func__.9840:
 	.ascii	"rootdev\000"
 .LASF289:
 	.ascii	"net_server_ethaddr\000"
-.LASF444:
+.LASF445:
 	.ascii	"board_fit_image_post_process\000"
 .LASF346:
 	.ascii	"tag_pub_key\000"
@@ -12142,7 +12358,7 @@ __func__.9840:
 	.ascii	"recv\000"
 .LASF75:
 	.ascii	"select_hwpart\000"
-.LASF458:
+.LASF460:
 	.ascii	"fdt_bootargs_append_ab\000"
 .LASF4:
 	.ascii	"uchar\000"
@@ -12158,7 +12374,7 @@ __func__.9840:
 	.ascii	"bi_dsp_freq\000"
 .LASF365:
 	.ascii	"boot1p\000"
-.LASF446:
+.LASF447:
 	.ascii	"memcpy\000"
 .LASF320:
 	.ascii	"next_stage\000"
@@ -12204,7 +12420,7 @@ __func__.9840:
 	.ascii	"IH_OS_NETBSD\000"
 .LASF322:
 	.ascii	"spl_load_info\000"
-.LASF436:
+.LASF437:
 	.ascii	"fit_image_get_comp_addr\000"
 .LASF376:
 	.ascii	"spl_internal_load_simple_fit\000"
@@ -12216,9 +12432,9 @@ __func__.9840:
 	.ascii	"IH_TYPE_INVALID\000"
 .LASF340:
 	.ascii	"phy_addr\000"
-.LASF416:
+.LASF417:
 	.ascii	"mtd_part_parse\000"
-.LASF423:
+.LASF424:
 	.ascii	"fdt_getprop\000"
 .LASF93:
 	.ascii	"lmb_region\000"
diff --git a/configs/orangepi-5-plus-rk3588_defconfig b/configs/orangepi-5-plus-rk3588_defconfig
new file mode 100644
index 0000000..0bb5d10
--- /dev/null
+++ b/configs/orangepi-5-plus-rk3588_defconfig
@@ -0,0 +1,1675 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# U-Boot 2017.09 Configuration
+#
+CONFIG_CREATE_ARCH_SYMLINK=y
+# CONFIG_ARC is not set
+CONFIG_ARM=y
+# CONFIG_M68K is not set
+# CONFIG_MICROBLAZE is not set
+# CONFIG_MIPS is not set
+# CONFIG_NDS32 is not set
+# CONFIG_NIOS2 is not set
+# CONFIG_PPC is not set
+# CONFIG_RISCV is not set
+# CONFIG_SANDBOX is not set
+# CONFIG_SH is not set
+# CONFIG_X86 is not set
+# CONFIG_XTENSA is not set
+CONFIG_SYS_ARCH="arm"
+CONFIG_SYS_CPU="armv8"
+CONFIG_SYS_SOC="rockchip"
+CONFIG_SYS_VENDOR="rockchip"
+CONFIG_SYS_BOARD="evb_rk3588"
+CONFIG_SYS_CONFIG_NAME="evb_rk3588"
+
+#
+# ARM architecture
+#
+CONFIG_ARM64=y
+# CONFIG_POSITION_INDEPENDENT is not set
+CONFIG_STATIC_RELA=y
+CONFIG_DMA_ADDR_T_64BIT=y
+CONFIG_ARM_ASM_UNIFIED=y
+CONFIG_SYS_ARM_ARCH=8
+CONFIG_SYS_CACHE_SHIFT_6=y
+CONFIG_SYS_CACHELINE_SIZE=64
+CONFIG_ARM_SMCCC=y
+CONFIG_ARM_CPU_SUSPEND=y
+# CONFIG_SEMIHOSTING is not set
+# CONFIG_SYS_L2CACHE_OFF is not set
+CONFIG_ENABLE_ARM_SOC_BOOT0_HOOK=y
+# CONFIG_ARM_CORTEX_CPU_IS_UP is not set
+CONFIG_ARM64_SUPPORT_AARCH32=y
+# CONFIG_ARCH_AT91 is not set
+# CONFIG_TARGET_EDB93XX is not set
+# CONFIG_TARGET_ASPENITE is not set
+# CONFIG_TARGET_GPLUGD is not set
+# CONFIG_ARCH_DAVINCI is not set
+# CONFIG_KIRKWOOD is not set
+# CONFIG_ARCH_MVEBU is not set
+# CONFIG_TARGET_DEVKIT3250 is not set
+# CONFIG_TARGET_WORK_92105 is not set
+# CONFIG_TARGET_MX25PDK is not set
+# CONFIG_TARGET_ZMX25 is not set
+# CONFIG_TARGET_APF27 is not set
+# CONFIG_TARGET_APX4DEVKIT is not set
+# CONFIG_TARGET_XFI3 is not set
+# CONFIG_TARGET_M28EVK is not set
+# CONFIG_TARGET_MX23EVK is not set
+# CONFIG_TARGET_MX28EVK is not set
+# CONFIG_TARGET_MX23_OLINUXINO is not set
+# CONFIG_TARGET_BG0900 is not set
+# CONFIG_TARGET_SANSA_FUZE_PLUS is not set
+# CONFIG_TARGET_SC_SPS_1 is not set
+# CONFIG_ORION5X is not set
+# CONFIG_TARGET_SPEAR300 is not set
+# CONFIG_TARGET_SPEAR310 is not set
+# CONFIG_TARGET_SPEAR320 is not set
+# CONFIG_TARGET_SPEAR600 is not set
+# CONFIG_TARGET_STV0991 is not set
+# CONFIG_TARGET_X600 is not set
+# CONFIG_TARGET_IMX31_PHYCORE is not set
+# CONFIG_TARGET_IMX31_PHYCORE_EET is not set
+# CONFIG_TARGET_MX31ADS is not set
+# CONFIG_TARGET_MX31PDK is not set
+# CONFIG_TARGET_WOODBURN is not set
+# CONFIG_TARGET_WOODBURN_SD is not set
+# CONFIG_TARGET_FLEA3 is not set
+# CONFIG_TARGET_MX35PDK is not set
+# CONFIG_ARCH_BCM283X is not set
+# CONFIG_TARGET_VEXPRESS_CA15_TC2 is not set
+# CONFIG_ARCH_BCMSTB is not set
+# CONFIG_TARGET_VEXPRESS_CA5X2 is not set
+# CONFIG_TARGET_VEXPRESS_CA9X4 is not set
+# CONFIG_TARGET_BCM23550_W1D is not set
+# CONFIG_TARGET_BCM28155_AP is not set
+# CONFIG_TARGET_BCMCYGNUS is not set
+# CONFIG_TARGET_BCMNSP is not set
+# CONFIG_TARGET_BCMNS2 is not set
+# CONFIG_ARCH_EXYNOS is not set
+# CONFIG_ARCH_S5PC1XX is not set
+# CONFIG_ARCH_HIGHBANK is not set
+# CONFIG_ARCH_INTEGRATOR is not set
+# CONFIG_ARCH_KEYSTONE is not set
+# CONFIG_ARCH_OMAP2PLUS is not set
+# CONFIG_ARCH_MESON is not set
+# CONFIG_ARCH_MX7ULP is not set
+# CONFIG_ARCH_MX7 is not set
+# CONFIG_ARCH_MX6 is not set
+CONFIG_SPL_LDSCRIPT="arch/arm/cpu/armv8/u-boot-spl.lds"
+# CONFIG_ARCH_MX5 is not set
+# CONFIG_ARCH_RMOBILE is not set
+# CONFIG_TARGET_S32V234EVB is not set
+# CONFIG_ARCH_SNAPDRAGON is not set
+# CONFIG_ARCH_SOCFPGA is not set
+# CONFIG_ARCH_SUNXI is not set
+# CONFIG_TARGET_TS4600 is not set
+# CONFIG_ARCH_VF610 is not set
+# CONFIG_ARCH_ZYNQ is not set
+# CONFIG_ARCH_ZYNQMP is not set
+# CONFIG_TEGRA is not set
+# CONFIG_TARGET_VEXPRESS64_AEMV8A is not set
+# CONFIG_TARGET_VEXPRESS64_BASE_FVP is not set
+# CONFIG_TARGET_VEXPRESS64_BASE_FVP_DRAM is not set
+# CONFIG_TARGET_VEXPRESS64_JUNO is not set
+# CONFIG_TARGET_LS2080A_EMU is not set
+# CONFIG_TARGET_LS2080A_SIMU is not set
+# CONFIG_TARGET_LS2080AQDS is not set
+# CONFIG_TARGET_LS2080ARDB is not set
+# CONFIG_TARGET_LS2081ARDB is not set
+# CONFIG_TARGET_HIKEY is not set
+# CONFIG_TARGET_POPLAR is not set
+# CONFIG_TARGET_LS1012AQDS is not set
+# CONFIG_TARGET_LS1012ARDB is not set
+# CONFIG_TARGET_LS1012AFRDM is not set
+# CONFIG_TARGET_LS1021AQDS is not set
+# CONFIG_TARGET_LS1021ATWR is not set
+# CONFIG_TARGET_LS1021AIOT is not set
+# CONFIG_TARGET_LS1043AQDS is not set
+# CONFIG_TARGET_LS1043ARDB is not set
+# CONFIG_TARGET_LS1046AQDS is not set
+# CONFIG_TARGET_LS1046ARDB is not set
+# CONFIG_TARGET_H2200 is not set
+# CONFIG_TARGET_ZIPITZ2 is not set
+# CONFIG_TARGET_COLIBRI_PXA270 is not set
+# CONFIG_ARCH_UNIPHIER is not set
+# CONFIG_STM32 is not set
+# CONFIG_ARCH_STI is not set
+CONFIG_ARCH_ROCKCHIP=y
+# CONFIG_TARGET_THUNDERX_88XX is not set
+# CONFIG_ARCH_ASPEED is not set
+CONFIG_SPL_GPIO_SUPPORT=y
+CONFIG_SPL_LIBCOMMON_SUPPORT=y
+CONFIG_SPL_LIBGENERIC_SUPPORT=y
+CONFIG_SYS_MALLOC_F_LEN=0x80000
+# CONFIG_ROCKCHIP_PX30 is not set
+CONFIG_TPL_LDSCRIPT="arch/arm/mach-rockchip/u-boot-tpl-v8.lds"
+CONFIG_TPL_TEXT_BASE=0xfdcc1000
+CONFIG_TPL_MAX_SIZE=61440
+# CONFIG_ROCKCHIP_RK3036 is not set
+# CONFIG_ROCKCHIP_RK3128 is not set
+# CONFIG_ROCKCHIP_RK3066 is not set
+# CONFIG_ROCKCHIP_RK3188 is not set
+# CONFIG_ROCKCHIP_RK322X is not set
+# CONFIG_ROCKCHIP_RK3288 is not set
+CONFIG_SPL_FIT_GENERATOR="arch/arm/mach-rockchip/make_fit_atf.sh"
+# CONFIG_ROCKCHIP_RK3308 is not set
+# CONFIG_ROCKCHIP_RK3328 is not set
+# CONFIG_ROCKCHIP_RK3368 is not set
+# CONFIG_ROCKCHIP_RK3399 is not set
+# CONFIG_ROCKCHIP_RK3568 is not set
+CONFIG_ROCKCHIP_RK3588=y
+# CONFIG_ROCKCHIP_RK1808 is not set
+# CONFIG_ROCKCHIP_RV1106 is not set
+# CONFIG_ROCKCHIP_RV1108 is not set
+# CONFIG_ROCKCHIP_RV1126 is not set
+# CONFIG_SPL_ROCKCHIP_BACK_TO_BROM is not set
+CONFIG_TPL_ROCKCHIP_BACK_TO_BROM=y
+# CONFIG_ARM64_BOOT_AARCH32 is not set
+# CONFIG_ARM64_SWITCH_TO_AARCH32 is not set
+CONFIG_ROCKCHIP_BOOT_MODE_REG=0xfd588080
+CONFIG_ROCKCHIP_STIMER_BASE=0xfd8c8000
+CONFIG_ROCKCHIP_IRAM_START_ADDR=0xff000000
+CONFIG_ROCKCHIP_SPL_RESERVE_IRAM=0
+CONFIG_ROCKCHIP_BROM_HELPER=y
+# CONFIG_SPL_ROCKCHIP_EARLYRETURN_TO_BROM is not set
+# CONFIG_TPL_ROCKCHIP_EARLYRETURN_TO_BROM is not set
+CONFIG_SPL_MMC_SUPPORT=y
+CONFIG_RKIMG_BOOTLOADER=y
+# CONFIG_RKIMG_ANDROID_BOOTMODE_LEGACY is not set
+# CONFIG_ROCKCHIP_BOOTDEV is not set
+CONFIG_ROCKCHIP_RESOURCE_IMAGE=y
+CONFIG_ROCKCHIP_DTB_VERIFY=y
+# CONFIG_ROCKCHIP_USB_BOOT is not set
+CONFIG_ROCKCHIP_FIT_IMAGE=y
+# CONFIG_ROCKCHIP_UIMAGE is not set
+# CONFIG_ROCKCHIP_EARLY_DISTRO_DTB is not set
+CONFIG_ROCKCHIP_HWID_DTB=y
+CONFIG_ROCKCHIP_VENDOR_PARTITION=y
+CONFIG_USING_KERNEL_DTB=y
+CONFIG_USING_KERNEL_DTB_V2=y
+CONFIG_EMBED_KERNEL_DTB_PATH="dts/rk3588-orangepi-5-plus.dtb"
+CONFIG_EMBED_KERNEL_DTB_ALWAYS=y
+# CONFIG_ROCKCHIP_CRC is not set
+CONFIG_ROCKCHIP_SMCCC=y
+# CONFIG_ROCKCHIP_DEBUGGER is not set
+# CONFIG_ROCKCHIP_CRASH_DUMP is not set
+CONFIG_ROCKCHIP_PRELOADER_ATAGS=y
+CONFIG_ROCKCHIP_PRELOADER_SERIAL=y
+# CONFIG_ROCKCHIP_IMAGE_TINY is not set
+CONFIG_ROCKCHIP_FIT_IMAGE_PACK=y
+CONFIG_ROCKCHIP_UART_MUX_SEL_M=0
+# CONFIG_ROCKCHIP_REBOOT_TEST is not set
+CONFIG_ROCKCHIP_NEW_IDB=y
+CONFIG_ROCKCHIP_HOTKEY=y
+# CONFIG_GICV2 is not set
+CONFIG_GICV3=y
+# CONFIG_ROCKCHIP_EMMC_IOMUX is not set
+# CONFIG_ROCKCHIP_NAND_IOMUX is not set
+# CONFIG_ROCKCHIP_SFC_IOMUX is not set
+CONFIG_ROCKCHIP_SET_SN=y
+CONFIG_ROCKCHIP_SET_ETHADDR=y
+CONFIG_BASE_DEFCONFIG=""
+CONFIG_CHIP_NAME=""
+CONFIG_LOADER_INI="RK3588MINIALL.ini"
+CONFIG_TRUST_INI="RK3588TRUST.ini"
+CONFIG_PSTORE=y
+CONFIG_PERSISTENT_RAM_ADDR=0x0
+CONFIG_PERSISTENT_RAM_SIZE=0x0
+>>>>>>> Support pcie ssd boot
+CONFIG_SPL_SERIAL_SUPPORT=y
+CONFIG_BOARD_SPECIFIC_OPTIONS=y
+# CONFIG_TPL_LIBCOMMON_SUPPORT is not set
+# CONFIG_TPL_LIBGENERIC_SUPPORT is not set
+CONFIG_SPL_DRIVERS_MISC_SUPPORT=y
+CONFIG_ENV_SIZE=0x8000
+CONFIG_TARGET_EVB_RK3588=y
+CONFIG_SPL_LIBDISK_SUPPORT=y
+# CONFIG_SPL_NAND_SUPPORT is not set
+CONFIG_SPL_SPI_FLASH_SUPPORT=y
+CONFIG_SPL_SPI_SUPPORT=y
+# CONFIG_SPL_WATCHDOG_SUPPORT is not set
+# CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_PARTITION_TYPE is not set
+CONFIG_IDENT_STRING=""
+# CONFIG_SPL_FAT_SUPPORT is not set
+# CONFIG_ARMV8_MULTIENTRY is not set
+# CONFIG_ARMV8_SET_SMPEN is not set
+
+#
+# ARMv8 secure monitor firmware
+#
+# CONFIG_ARMV8_SEC_FIRMWARE_SUPPORT is not set
+# CONFIG_SPL_ARMV8_SEC_FIRMWARE_SUPPORT is not set
+CONFIG_PSCI_RESET=y
+# CONFIG_ARMV8_PSCI is not set
+# CONFIG_CMD_DEKBLOB is not set
+# CONFIG_CMD_HDMIDETECT is not set
+
+#
+# ARM debug
+#
+CONFIG_DEFAULT_DEVICE_TREE="rk3588-orangepi-5-plus"
+CONFIG_DEBUG_UART=y
+# CONFIG_AHCI is not set
+
+#
+# General setup
+#
+CONFIG_LOCALVERSION=""
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_CC_OPTIMIZE_FOR_SIZE=y
+CONFIG_DISTRO_DEFAULTS=y
+CONFIG_SYS_MALLOC_F=y
+CONFIG_SPL_SYS_MALLOC_F_LEN=0x80000
+CONFIG_TPL_SYS_MALLOC_F_LEN=0x80000
+CONFIG_EXPERT=y
+# CONFIG_SYS_MALLOC_CLEAR_ON_INIT is not set
+# CONFIG_TOOLS_DEBUG is not set
+CONFIG_PHYS_64BIT=y
+
+#
+# Boot images
+#
+CONFIG_ANDROID_BOOT_IMAGE=y
+CONFIG_FIT=y
+CONFIG_FIT_ENABLE_SHA256_SUPPORT=y
+# CONFIG_FIT_SIGNATURE is not set
+# CONFIG_FIT_VERBOSE is not set
+# CONFIG_FIT_BEST_MATCH is not set
+CONFIG_FIT_IMAGE_POST_PROCESS=y
+CONFIG_FIT_HW_CRYPTO=y
+CONFIG_FIT_PRINT=y
+CONFIG_SPL_FIT=y
+# CONFIG_SPL_FIT_SIGNATURE is not set
+CONFIG_SPL_LOAD_FIT=y
+CONFIG_SPL_FIT_IMAGE_POST_PROCESS=y
+CONFIG_SPL_FIT_HW_CRYPTO=y
+# CONFIG_SPL_SYS_DCACHE_OFF is not set
+# CONFIG_SPL_FIT_PRINT is not set
+CONFIG_SPL_FIT_SOURCE=""
+CONFIG_SPL_FIT_IMAGE_KB=2560
+CONFIG_SPL_FIT_IMAGE_MULTIPLE=2
+# CONFIG_OF_BOARD_SETUP is not set
+# CONFIG_OF_SYSTEM_SETUP is not set
+# CONFIG_OF_STDOUT_VIA_ALIAS is not set
+CONFIG_SYS_EXTRA_OPTIONS=""
+CONFIG_ARCH_FIXUP_FDT_MEMORY=y
+
+#
+# API
+#
+# CONFIG_API is not set
+
+#
+# Boot timing
+#
+# CONFIG_BOOTSTAGE is not set
+CONFIG_BOOTSTAGE_USER_COUNT=20
+CONFIG_BOOTSTAGE_RECORD_COUNT=30
+CONFIG_BOOTSTAGE_STASH_ADDR=0
+CONFIG_BOOTSTAGE_STASH_SIZE=0x1000
+# CONFIG_BOOTSTAGE_PRINTF_TIMESTAMP is not set
+
+#
+# Boot media
+#
+# CONFIG_NAND_BOOT is not set
+# CONFIG_ONENAND_BOOT is not set
+# CONFIG_QSPI_BOOT is not set
+# CONFIG_SATA_BOOT is not set
+# CONFIG_SD_BOOT is not set
+# CONFIG_SPI_BOOT is not set
+CONFIG_PASS_DEVICE_SERIAL_BY_FDT=y
+CONFIG_BOOTDELAY=0
+# CONFIG_USE_BOOTARGS is not set
+# CONFIG_IO_TRACE is not set
+
+#
+# Console
+#
+CONFIG_MENU=y
+# CONFIG_CONSOLE_RECORD is not set
+# CONFIG_CONSOLE_DISABLE_CLI is not set
+# CONFIG_DISABLE_CONSOLE is not set
+CONFIG_LOGLEVEL=4
+CONFIG_SPL_LOGLEVEL=4
+# CONFIG_SILENT_CONSOLE is not set
+# CONFIG_PRE_CONSOLE_BUFFER is not set
+CONFIG_CONSOLE_MUX=y
+CONFIG_SYS_CONSOLE_IS_IN_ENV=y
+# CONFIG_SYS_CONSOLE_OVERWRITE_ROUTINE is not set
+# CONFIG_SYS_CONSOLE_ENV_OVERWRITE is not set
+CONFIG_SYS_CONSOLE_INFO_QUIET=y
+# CONFIG_SYS_STDIO_DEREGISTER is not set
+
+#
+# Logging
+#
+# CONFIG_LOG is not set
+# CONFIG_SPL_LOG is not set
+CONFIG_DEFAULT_FDT_FILE=""
+# CONFIG_VERSION_VARIABLE is not set
+CONFIG_BOARD_LATE_INIT=y
+# CONFIG_DISPLAY_CPUINFO is not set
+CONFIG_DISPLAY_BOARDINFO=y
+
+#
+# Start-up hooks
+#
+# CONFIG_ARCH_EARLY_INIT_R is not set
+# CONFIG_ARCH_MISC_INIT is not set
+# CONFIG_BOARD_EARLY_INIT_F is not set
+# CONFIG_BOARD_EARLY_INIT_R is not set
+
+#
+# Android features support
+#
+CONFIG_ANDROID_BOOTLOADER=y
+# CONFIG_ANDROID_AB is not set
+CONFIG_ANDROID_WRITE_KEYBOX=y
+CONFIG_ANDROID_AVB=y
+# CONFIG_ANDROID_AVB_ROLLBACK_INDEX is not set
+CONFIG_ANDROID_KEYMASTER_CA=y
+CONFIG_ANDROID_BOOT_IMAGE_HASH=y
+# CONFIG_SKIP_RELOCATE_UBOOT is not set
+
+#
+# Security support
+#
+CONFIG_HASH=y
+
+#
+# SPL / TPL
+#
+CONFIG_SUPPORT_SPL=y
+CONFIG_SUPPORT_TPL=y
+CONFIG_SPL=y
+# CONFIG_SPL_ADC_SUPPORT is not set
+# CONFIG_SPL_DECOMP_HEADER is not set
+CONFIG_SPL_BOARD_INIT=y
+# CONFIG_SPL_BOOTROM_SUPPORT is not set
+# CONFIG_SPL_RAW_IMAGE_SUPPORT is not set
+# CONFIG_SPL_LEGACY_IMAGE_SUPPORT is not set
+CONFIG_SPL_SYS_MALLOC_SIMPLE=y
+# CONFIG_TPL_SYS_MALLOC_SIMPLE is not set
+# CONFIG_SPL_STACK_R is not set
+CONFIG_SPL_SEPARATE_BSS=y
+# CONFIG_SPL_DISPLAY_PRINT is not set
+CONFIG_SPL_SKIP_RELOCATE=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_SECTOR=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR=0x4000
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_PARTITION=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_PARTITION=0x1
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_PARTITION_NAME="uboot"
+# CONFIG_SPL_CRC32_SUPPORT is not set
+# CONFIG_SPL_MD5_SUPPORT is not set
+# CONFIG_SPL_SHA1_SUPPORT is not set
+# CONFIG_SPL_SHA256_SUPPORT is not set
+# CONFIG_SPL_FIT_IMAGE_TINY is not set
+# CONFIG_SPL_CPU_SUPPORT is not set
+# CONFIG_SPL_CRYPTO_SUPPORT is not set
+# CONFIG_SPL_HASH_SUPPORT is not set
+# CONFIG_SPL_DMA_SUPPORT is not set
+# CONFIG_SPL_ENV_SUPPORT is not set
+# CONFIG_SPL_EXT_SUPPORT is not set
+# CONFIG_SPL_FPGA_SUPPORT is not set
+# CONFIG_SPL_I2C_SUPPORT is not set
+CONFIG_SPL_MMC_WRITE=y
+# CONFIG_SPL_MPC8XXX_INIT_DDR_SUPPORT is not set
+CONFIG_SPL_MTD_SUPPORT=y
+CONFIG_MTD_BLK_U_BOOT_OFFS=0x4000
+# CONFIG_SPL_MTD_WRITE is not set
+# CONFIG_SPL_MUSB_NEW_SUPPORT is not set
+# CONFIG_SPL_NET_SUPPORT is not set
+# CONFIG_SPL_NO_CPU_SUPPORT is not set
+# CONFIG_SPL_NOR_SUPPORT is not set
+# CONFIG_SPL_XIP_SUPPORT is not set
+# CONFIG_SPL_ONENAND_SUPPORT is not set
+# CONFIG_SPL_OS_BOOT is not set
+# CONFIG_SPL_PCI_SUPPORT is not set
+# CONFIG_SPL_PCH_SUPPORT is not set
+# CONFIG_SPL_POST_MEM_SUPPORT is not set
+# CONFIG_SPL_POWER_SUPPORT is not set
+# CONFIG_SPL_PWM_SUPPORT is not set
+# CONFIG_SPL_RAM_SUPPORT is not set
+# CONFIG_SPL_RTC_SUPPORT is not set
+# CONFIG_SPL_SATA_SUPPORT is not set
+# CONFIG_SPL_RKNAND_SUPPORT is not set
+# CONFIG_SPL_SPI_FLASH_TINY is not set
+# CONFIG_SPL_SPI_FLASH_SFDP_SUPPORT is not set
+# CONFIG_SPL_SPI_LOAD is not set
+# CONFIG_SPL_USB_HOST_SUPPORT is not set
+# CONFIG_SPL_USB_GADGET is not set
+# CONFIG_SPL_YMODEM_SUPPORT is not set
+CONFIG_SPL_ATF=y
+# CONFIG_SPL_OPTEE_SUPPORT is not set
+# CONFIG_SPL_ATF_NO_PLATFORM_PARAM is not set
+# CONFIG_SPL_OPTEE is not set
+# CONFIG_SPL_AB is not set
+# CONFIG_SPL_LOAD_RKFW is not set
+# CONFIG_SPL_KERNEL_BOOT is not set
+CONFIG_TPL=y
+# CONFIG_TPL_BOARD_INIT is not set
+# CONFIG_TPL_NEEDS_SEPARATE_TEXT_BASE is not set
+# CONFIG_TPL_NEEDS_SEPARATE_STACK is not set
+# CONFIG_TPL_BOOTROM_SUPPORT is not set
+# CONFIG_TPL_DRIVERS_MISC_SUPPORT is not set
+# CONFIG_TPL_ENV_SUPPORT is not set
+# CONFIG_TPL_I2C_SUPPORT is not set
+CONFIG_TPL_TINY_FRAMEWORK=y
+# CONFIG_TPL_MPC8XXX_INIT_DDR_SUPPORT is not set
+# CONFIG_TPL_MMC_SUPPORT is not set
+# CONFIG_TPL_NAND_SUPPORT is not set
+CONFIG_TPL_SERIAL_SUPPORT=y
+# CONFIG_TPL_SPI_FLASH_SUPPORT is not set
+# CONFIG_TPL_SPI_SUPPORT is not set
+
+#
+# USBPLUG
+#
+# CONFIG_SUPPORT_USBPLUG is not set
+
+#
+# Command line interface
+#
+CONFIG_CMDLINE=y
+CONFIG_HUSH_PARSER=y
+CONFIG_SYS_PROMPT="=> "
+
+#
+# Autoboot options
+#
+CONFIG_AUTOBOOT=y
+# CONFIG_AUTOBOOT_KEYED is not set
+
+#
+# FASTBOOT
+#
+CONFIG_FASTBOOT=y
+CONFIG_USB_FUNCTION_FASTBOOT=y
+# CONFIG_UDP_FUNCTION_FASTBOOT is not set
+CONFIG_CMD_FASTBOOT=y
+CONFIG_FASTBOOT_BUF_ADDR=0xc00800
+CONFIG_FASTBOOT_BUF_SIZE=0x07000000
+CONFIG_FASTBOOT_USB_DEV=0
+CONFIG_FASTBOOT_FLASH=y
+CONFIG_FASTBOOT_FLASH_MMC_DEV=0
+# CONFIG_FASTBOOT_OEM_UNLOCK is not set
+# CONFIG_RK_AVB_LIBAVB_ENABLE_ATH_UNLOCK is not set
+
+#
+# Commands
+#
+
+#
+# Info commands
+#
+CONFIG_CMD_BDI=y
+# CONFIG_CMD_CONFIG is not set
+CONFIG_CMD_CONSOLE=y
+# CONFIG_CMD_CPU is not set
+# CONFIG_CMD_LICENSE is not set
+
+#
+# Boot commands
+#
+CONFIG_CMD_BOOTD=y
+CONFIG_CMD_BOOTM=y
+CONFIG_CMD_BOOTZ=y
+CONFIG_CMD_BOOTI=y
+# CONFIG_CMD_BOOTMENU is not set
+CONFIG_CMD_DTIMG=y
+# CONFIG_CMD_ELF is not set
+CONFIG_CMD_FDT=y
+CONFIG_CMD_GO=y
+CONFIG_CMD_RUN=y
+# CONFIG_CMD_IMI is not set
+# CONFIG_CMD_IMLS is not set
+# CONFIG_CMD_XIMG is not set
+# CONFIG_CMD_POWEROFF is not set
+# CONFIG_CMD_SPL is not set
+# CONFIG_CMD_THOR_DOWNLOAD is not set
+# CONFIG_CMD_ZBOOT is not set
+
+#
+# Environment commands
+#
+# CONFIG_CMD_ASKENV is not set
+CONFIG_CMD_EXPORTENV=y
+CONFIG_CMD_IMPORTENV=y
+CONFIG_CMD_EDITENV=y
+# CONFIG_CMD_GREPENV is not set
+CONFIG_CMD_SAVEENV=y
+CONFIG_CMD_ENV_EXISTS=y
+# CONFIG_CMD_ENV_CALLBACK is not set
+# CONFIG_CMD_ENV_FLAGS is not set
+
+#
+# Memory commands
+#
+CONFIG_CMD_CRC32=y
+# CONFIG_CRC32_VERIFY is not set
+# CONFIG_CMD_EEPROM is not set
+# CONFIG_LOOPW is not set
+# CONFIG_CMD_MD5SUM is not set
+# CONFIG_CMD_MEMINFO is not set
+CONFIG_CMD_MEMORY=y
+# CONFIG_CMD_MEMTEST is not set
+# CONFIG_CMD_MX_CYCLIC is not set
+# CONFIG_CMD_SHA1SUM is not set
+# CONFIG_CMD_STRINGS is not set
+# CONFIG_CMD_CRYPTO is not set
+CONFIG_CMD_CRYPTO_SUM=y
+
+#
+# Compression commands
+#
+# CONFIG_CMD_LZMADEC is not set
+# CONFIG_CMD_UNZIP is not set
+# CONFIG_CMD_ZIP is not set
+
+#
+# Device access commands
+#
+# CONFIG_CMD_ARMFLASH is not set
+# CONFIG_CMD_CLK is not set
+# CONFIG_CMD_DEMO is not set
+# CONFIG_CMD_DFU is not set
+CONFIG_CMD_DM=y
+# CONFIG_CMD_FDC is not set
+# CONFIG_CMD_FLASH is not set
+# CONFIG_CMD_FPGA is not set
+# CONFIG_CMD_FPGAD is not set
+# CONFIG_CMD_FUSE is not set
+# CONFIG_CMD_GPIO is not set
+CONFIG_CMD_GPT=y
+CONFIG_RANDOM_UUID=y
+# CONFIG_CMD_GPT_RENAME is not set
+# CONFIG_CMD_IDE is not set
+# CONFIG_CMD_IO is not set
+# CONFIG_CMD_IOTRACE is not set
+# CONFIG_CMD_I2C is not set
+# CONFIG_CMD_LOADB is not set
+# CONFIG_CMD_LOADS is not set
+# CONFIG_CMD_LOAD_ANDROID is not set
+CONFIG_CMD_BOOT_ANDROID=y
+CONFIG_CMD_BOOT_FIT=y
+# CONFIG_CMD_BOOT_ROCKCHIP is not set
+CONFIG_CMD_MMC=y
+# CONFIG_CMD_MTD is not set
+# CONFIG_CMD_NAND is not set
+CONFIG_CMD_NVME=y
+# CONFIG_CMD_MMC_SPI is not set
+# CONFIG_CMD_ONENAND is not set
+CONFIG_CMD_PART=y
+CONFIG_CMD_PCI=y
+# CONFIG_CMD_PCMCIA is not set
+# CONFIG_CMD_READ is not set
+CONFIG_CMD_ROCKUSB=y
+# CONFIG_CMD_RK_SECURE_STORAGE is not set
+# CONFIG_CMD_SATA is not set
+# CONFIG_CMD_SAVES is not set
+# CONFIG_CMD_SDRAM is not set
+CONFIG_CMD_SF=y
+# CONFIG_CMD_SF_TEST is not set
+CONFIG_CMD_SPI=y
+# CONFIG_CMD_TSI148 is not set
+# CONFIG_CMD_UNIVERSE is not set
+CONFIG_CMD_USB=y
+# CONFIG_CMD_USB_SDP is not set
+CONFIG_CMD_USB_MASS_STORAGE=y
+
+#
+# Shell scripting commands
+#
+CONFIG_CMD_ECHO=y
+# CONFIG_CMD_ITEST is not set
+# CONFIG_CMD_SCRIPT_UPDATE is not set
+CONFIG_CMD_SOURCE=y
+# CONFIG_CMD_SETEXPR is not set
+
+#
+# Network commands
+#
+CONFIG_CMD_NET=y
+CONFIG_CMD_TFTPPUT=y
+CONFIG_CMD_TFTP_BOOTM=y
+CONFIG_CMD_TFTP_FLASH=y
+# CONFIG_CMD_TFTP_UPDATE is not set
+# CONFIG_CMD_TFTPSRV is not set
+# CONFIG_CMD_RARP is not set
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_PXE=y
+CONFIG_CMD_NFS=y
+CONFIG_CMD_MII=y
+CONFIG_CMD_PING=y
+# CONFIG_CMD_CDP is not set
+# CONFIG_CMD_SNTP is not set
+# CONFIG_CMD_DNS is not set
+# CONFIG_CMD_LINK_LOCAL is not set
+# CONFIG_CMD_ETHSW is not set
+# CONFIG_CMD_MEMTESTER is not set
+# CONFIG_CMD_DDR_TEST_TOOL is not set
+
+#
+# Misc commands
+#
+# CONFIG_CMD_BMP is not set
+# CONFIG_CMD_BSP is not set
+# CONFIG_CMD_BKOPS_ENABLE is not set
+# CONFIG_CMD_CACHE is not set
+# CONFIG_CMD_DISPLAY is not set
+# CONFIG_CMD_LED is not set
+# CONFIG_CMD_DATE is not set
+# CONFIG_CMD_TIME is not set
+# CONFIG_CMD_GETTIME is not set
+# CONFIG_CMD_RNG is not set
+# CONFIG_CMD_MISC is not set
+# CONFIG_CMD_TIMER is not set
+# CONFIG_CMD_QFW is not set
+# CONFIG_CMD_TERMINAL is not set
+# CONFIG_CMD_UUID is not set
+
+#
+# Power commands
+#
+# CONFIG_CMD_PMIC is not set
+# CONFIG_CMD_REGULATOR is not set
+CONFIG_CMD_CHARGE_DISPLAY=y
+
+#
+# Security commands
+#
+# CONFIG_CMD_AES is not set
+# CONFIG_CMD_BLOB is not set
+# CONFIG_CMD_HASH is not set
+
+#
+# Firmware commands
+#
+
+#
+# Filesystem commands
+#
+CONFIG_CMD_EXT2=y
+CONFIG_CMD_EXT4=y
+# CONFIG_CMD_EXT4_WRITE is not set
+# CONFIG_CMD_EXT4_SPARSE_WRITE is not set
+CONFIG_CMD_FAT=y
+CONFIG_CMD_FS_GENERIC=y
+# CONFIG_CMD_FS_UUID is not set
+# CONFIG_CMD_JFFS2 is not set
+# CONFIG_CMD_MTDPARTS is not set
+CONFIG_CMD_MTD_BLK=y
+# CONFIG_CMD_REISER is not set
+# CONFIG_CMD_SCSI is not set
+# CONFIG_CMD_ZFS is not set
+
+#
+# Debug commands
+#
+CONFIG_CMD_ATAGS=y
+# CONFIG_CMD_BEDBUG is not set
+# CONFIG_CMD_DIAG is not set
+# CONFIG_CMD_KGDB is not set
+# CONFIG_CMD_LOG is not set
+# CONFIG_CMD_TRACE is not set
+# CONFIG_CMD_UBI is not set
+
+#
+# Partition Types
+#
+CONFIG_PARTITIONS=y
+# CONFIG_MAC_PARTITION is not set
+# CONFIG_SPL_MAC_PARTITION is not set
+CONFIG_DOS_PARTITION=y
+# CONFIG_SPL_DOS_PARTITION is not set
+# CONFIG_ISO_PARTITION is not set
+# CONFIG_SPL_ISO_PARTITION is not set
+# CONFIG_AMIGA_PARTITION is not set
+# CONFIG_SPL_AMIGA_PARTITION is not set
+CONFIG_EFI_PARTITION=y
+CONFIG_EFI_PARTITION_ENTRIES_NUMBERS=64
+CONFIG_EFI_PARTITION_ENTRIES_OFF=0
+CONFIG_SPL_EFI_PARTITION=y
+CONFIG_PARTITION_UUIDS=y
+CONFIG_SPL_PARTITION_UUIDS=y
+# CONFIG_PARTITION_TYPE_GUID is not set
+# CONFIG_RKPARM_PARTITION is not set
+CONFIG_RKRAM_PARTITION=y
+# CONFIG_SPL_ROCKCHIP_PARTITION is not set
+CONFIG_SUPPORT_OF_CONTROL=y
+CONFIG_DTC=y
+
+#
+# Device Tree Control
+#
+CONFIG_OF_CONTROL=y
+# CONFIG_OF_BOARD_FIXUP is not set
+CONFIG_SPL_OF_CONTROL=y
+CONFIG_SPL_DTB_MINIMUM=y
+# CONFIG_TPL_OF_CONTROL is not set
+CONFIG_OF_LIVE=y
+CONFIG_OF_SEPARATE=y
+# CONFIG_OF_EMBED is not set
+# CONFIG_OF_BOARD is not set
+# CONFIG_OF_PRIOR_STAGE is not set
+# CONFIG_MULTI_DTB_FIT is not set
+# CONFIG_SPL_MULTI_DTB_FIT is not set
+CONFIG_OF_SPL_REMOVE_PROPS="clock-names interrupt-parent assigned-clocks assigned-clock-rates assigned-clock-parents"
+CONFIG_OF_U_BOOT_REMOVE_PROPS="pinctrl-0 pinctrl-names clock-names interrupt-parent assigned-clocks assigned-clock-rates assigned-clock-parents"
+# CONFIG_SPL_OF_PLATDATA is not set
+CONFIG_MKIMAGE_DTC_PATH="dtc"
+
+#
+# Environment
+#
+CONFIG_ENV_IS_NOWHERE=y
+# CONFIG_ENVF is not set
+# CONFIG_ENV_IS_IN_EEPROM is not set
+# CONFIG_ENV_IS_IN_FAT is not set
+# CONFIG_ENV_IS_IN_FLASH is not set
+# CONFIG_ENV_IS_IN_MMC is not set
+# CONFIG_ENV_IS_IN_NAND is not set
+# CONFIG_ENV_IS_IN_NVRAM is not set
+# CONFIG_ENV_IS_IN_ONENAND is not set
+# CONFIG_ENV_IS_IN_REMOTE is not set
+# CONFIG_ENV_IS_IN_SPI_FLASH is not set
+# CONFIG_ENV_IS_IN_UBI is not set
+# CONFIG_ENV_IS_IN_BLK_DEV is not set
+# CONFIG_ENV_AES is not set
+CONFIG_NET=y
+# CONFIG_NET_RANDOM_ETHADDR is not set
+# CONFIG_NETCONSOLE is not set
+# CONFIG_NET_TFTP_VARS is not set
+CONFIG_BOOTP_PXE_CLIENTARCH=0x16
+CONFIG_BOOTP_VCI_STRING="U-Boot.armv8"
+
+#
+# Device Drivers
+#
+
+#
+# Generic Driver Options
+#
+CONFIG_DM=y
+CONFIG_SPL_DM=y
+# CONFIG_TPL_DM is not set
+CONFIG_DM_WARN=y
+# CONFIG_DM_DEBUG is not set
+CONFIG_DM_DEVICE_REMOVE=y
+CONFIG_DM_STDIO=y
+CONFIG_DM_SEQ_ALIAS=y
+# CONFIG_SPL_DM_SEQ_ALIAS is not set
+CONFIG_REGMAP=y
+CONFIG_SPL_REGMAP=y
+CONFIG_SYSCON=y
+CONFIG_SPL_SYSCON=y
+# CONFIG_DEVRES is not set
+CONFIG_SIMPLE_BUS=y
+CONFIG_SPL_SIMPLE_BUS=y
+CONFIG_OF_TRANSLATE=y
+# CONFIG_SPL_OF_TRANSLATE is not set
+CONFIG_ADC=y
+# CONFIG_ADC_REQ_REGULATOR is not set
+# CONFIG_ADC_EXYNOS is not set
+# CONFIG_ADC_SANDBOX is not set
+# CONFIG_SARADC_ROCKCHIP is not set
+CONFIG_SARADC_ROCKCHIP_V2=y
+# CONFIG_SATA is not set
+# CONFIG_SCSI_AHCI is not set
+
+#
+# SATA/SCSI device support
+#
+CONFIG_BLK=y
+CONFIG_SPL_BLK=y
+# CONFIG_SPL_BLK_READ_PREPARE is not set
+# CONFIG_BLOCK_CACHE is not set
+# CONFIG_IDE is not set
+
+#
+# Boot count support
+#
+# CONFIG_BOOTCOUNT is not set
+
+#
+# Clock
+#
+CONFIG_CLK=y
+CONFIG_SPL_CLK=y
+CONFIG_CLK_SCMI=y
+CONFIG_SPL_CLK_SCMI=y
+# CONFIG_CLK_AT91 is not set
+CONFIG_ROCKCHIP_CLK_PLL=y
+# CONFIG_CPU is not set
+# CONFIG_AMP is not set
+
+#
+# Hardware crypto devices
+#
+CONFIG_DM_CRYPTO=y
+CONFIG_SPL_DM_CRYPTO=y
+# CONFIG_FSL_CAAM is not set
+# CONFIG_SYS_FSL_SEC_BE is not set
+# CONFIG_SYS_FSL_SEC_LE is not set
+CONFIG_ROCKCHIP_RSA=y
+CONFIG_SPL_ROCKCHIP_RSA=y
+# CONFIG_ROCKCHIP_CIPHER is not set
+# CONFIG_SPL_ROCKCHIP_CIPHER is not set
+# CONFIG_ROCKCHIP_HMAC is not set
+# CONFIG_SPL_ROCKCHIP_HMAC is not set
+# CONFIG_ROCKCHIP_CRYPTO_V1 is not set
+# CONFIG_SPL_ROCKCHIP_CRYPTO_V1 is not set
+CONFIG_ROCKCHIP_CRYPTO_V2=y
+CONFIG_SPL_ROCKCHIP_CRYPTO_V2=y
+CONFIG_DM_RNG=y
+CONFIG_RNG_ROCKCHIP=y
+
+#
+# Demo for driver model
+#
+# CONFIG_DM_DEMO is not set
+
+#
+# DFU support
+#
+
+#
+# DMA Support
+#
+# CONFIG_DMA is not set
+# CONFIG_TI_EDMA3 is not set
+CONFIG_FIRMWARE=y
+CONFIG_ARM_PSCI_FW=y
+CONFIG_SCMI_FIRMWARE=y
+CONFIG_SPL_SCMI_FIRMWARE=y
+CONFIG_GPIO_HOG=y
+
+#
+# FPGA support
+#
+# CONFIG_FPGA_ALTERA is not set
+# CONFIG_FPGA_SOCFPGA is not set
+# CONFIG_FPGA_XILINX is not set
+# CONFIG_FPGA_ROCKCHIP is not set
+
+#
+# GPIO Support
+#
+CONFIG_DM_GPIO=y
+CONFIG_GPIO_HOG=y
+# CONFIG_ALTERA_PIO is not set
+# CONFIG_DWAPB_GPIO is not set
+# CONFIG_AT91_GPIO is not set
+# CONFIG_ATMEL_PIO4 is not set
+# CONFIG_INTEL_BROADWELL_GPIO is not set
+# CONFIG_INTEL_ICH6_GPIO is not set
+# CONFIG_IMX_RGPIO2P is not set
+# CONFIG_LPC32XX_GPIO is not set
+# CONFIG_MSM_GPIO is not set
+# CONFIG_CMD_PCA953X is not set
+# CONFIG_PCF8575_GPIO is not set
+>>>>>>> Support pcie ssd boot
+CONFIG_ROCKCHIP_GPIO=y
+CONFIG_ROCKCHIP_GPIO_V2=y
+# CONFIG_CMD_TCA642X is not set
+# CONFIG_TEGRA_GPIO is not set
+# CONFIG_TEGRA186_GPIO is not set
+CONFIG_GPIO_MAX96752F=y
+# CONFIG_VYBRID_GPIO is not set
+# CONFIG_DM_74X164 is not set
+# CONFIG_DM_PCA953X is not set
+# CONFIG_MPC85XX_GPIO is not set
+
+#
+# I2C support
+#
+CONFIG_DM_I2C=y
+# CONFIG_DM_I2C_COMPAT is not set
+# CONFIG_I2C_SET_DEFAULT_BUS_NUM is not set
+# CONFIG_DM_I2C_GPIO is not set
+# CONFIG_SYS_I2C_FSL is not set
+# CONFIG_SYS_I2C_CADENCE is not set
+# CONFIG_SYS_I2C_DW is not set
+# CONFIG_SYS_I2C_INTEL is not set
+# CONFIG_SYS_I2C_IMX_LPI2C is not set
+CONFIG_SYS_I2C_ROCKCHIP=y
+# CONFIG_SYS_I2C_MVTWSI is not set
+CONFIG_I2C_MUX=y
+# CONFIG_SPL_I2C_MUX is not set
+# CONFIG_I2C_ARB_GPIO_CHALLENGE is not set
+# CONFIG_I2C_MUX_PCA954x is not set
+# CONFIG_I2C_MUX_GPIO is not set
+CONFIG_I2C_MUX_MAX96745=y
+CONFIG_I2C_MUX_MAX96752F=y
+CONFIG_I2C_MUX_MAX96755F=y
+CONFIG_INPUT=y
+# CONFIG_SPL_INPUT is not set
+# CONFIG_DM_KEYBOARD is not set
+CONFIG_DM_KEY=y
+# CONFIG_DM_RC is not set
+# CONFIG_SPL_DM_KEYBOARD is not set
+# CONFIG_CROS_EC_KEYB is not set
+CONFIG_RK8XX_PWRKEY=y
+CONFIG_ADC_KEY=y
+# CONFIG_GPIO_KEY is not set
+# CONFIG_RK_KEY is not set
+CONFIG_PWRKEY_DNL_TRIGGER_NUM=0
+
+#
+# LED Support
+#
+# CONFIG_LED is not set
+# CONFIG_SPL_LED is not set
+# CONFIG_LED_STATUS is not set
+
+#
+# Mailbox Controller Support
+#
+# CONFIG_DM_MAILBOX is not set
+
+#
+# Memory Controller drivers
+#
+
+#
+# Multifunction device drivers
+#
+CONFIG_MISC=y
+CONFIG_SPL_MISC=y
+CONFIG_MISC_DECOMPRESS=y
+CONFIG_SPL_MISC_DECOMPRESS=y
+# CONFIG_ALTERA_SYSID is not set
+# CONFIG_ATSHA204A is not set
+# CONFIG_ROCKCHIP_EFUSE is not set
+CONFIG_ROCKCHIP_OTP=y
+CONFIG_ROCKCHIP_HW_DECOMPRESS=y
+CONFIG_SPL_ROCKCHIP_HW_DECOMPRESS=y
+CONFIG_SPL_ROCKCHIP_SECURE_OTP=y
+# CONFIG_CROS_EC is not set
+# CONFIG_DS4510 is not set
+# CONFIG_FSL_SEC_MON is not set
+# CONFIG_MXC_OCOTP is not set
+# CONFIG_NUVOTON_NCT6102D is not set
+# CONFIG_PWRSEQ is not set
+# CONFIG_PCA9551_LED is not set
+# CONFIG_WINBOND_W83627 is not set
+# CONFIG_I2C_EEPROM is not set
+
+#
+# MMC Host controller Support
+#
+CONFIG_MMC=y
+CONFIG_MMC_WRITE=y
+CONFIG_DM_MMC=y
+CONFIG_SPL_DM_MMC=y
+# CONFIG_SPL_MMC_TINY is not set
+# CONFIG_MMC_SIMPLE is not set
+CONFIG_SUPPORT_EMMC_RPMB=y
+CONFIG_MMC_DW=y
+# CONFIG_MMC_DW_K3 is not set
+CONFIG_MMC_DW_ROCKCHIP=y
+# CONFIG_MMC_MXC is not set
+# CONFIG_MMC_PCI is not set
+# CONFIG_MMC_OMAP_HS is not set
+CONFIG_MMC_SDHCI=y
+CONFIG_MMC_SDHCI_SDMA=y
+# CONFIG_MMC_SDHCI_BCMSTB is not set
+# CONFIG_MMC_SDHCI_CADENCE is not set
+# CONFIG_MMC_SDHCI_KONA is not set
+# CONFIG_MMC_SDHCI_MSM is not set
+CONFIG_MMC_SDHCI_ROCKCHIP=y
+# CONFIG_MMC_SDHCI_S5P is not set
+# CONFIG_MMC_SDHCI_SPEAR is not set
+# CONFIG_MMC_SDHCI_STI is not set
+# CONFIG_MMC_SDHCI_XENON is not set
+# CONFIG_MMC_SDHCI_TANGIER is not set
+# CONFIG_MMC_USE_PRE_CONFIG is not set
+
+#
+# MTD Support
+#
+CONFIG_MTD=y
+CONFIG_MTD_BLK=y
+CONFIG_MTD_WRITE=y
+# CONFIG_MTD_NOR_FLASH is not set
+CONFIG_MTD_DEVICE=y
+# CONFIG_FLASH_CFI_DRIVER is not set
+# CONFIG_CFI_FLASH is not set
+# CONFIG_ALTERA_QSPI is not set
+CONFIG_MTD_NAND_CORE=y
+CONFIG_MTD_NAND_BBT_USING_FLASH=y
+CONFIG_NAND=y
+# CONFIG_NAND_ATMEL is not set
+# CONFIG_NAND_BRCMNAND is not set
+# CONFIG_NAND_DAVINCI is not set
+# CONFIG_NAND_DENALI_DT is not set
+# CONFIG_NAND_LPC32XX_SLC is not set
+# CONFIG_NAND_VF610_NFC is not set
+# CONFIG_NAND_PXA3XX is not set
+# CONFIG_NAND_ARASAN is not set
+# CONFIG_NAND_ROCKCHIP is not set
+# CONFIG_NAND_ROCKCHIP_V9 is not set
+# CONFIG_NAND_ZYNQ is not set
+
+#
+# Generic NAND options
+#
+# CONFIG_SYS_NAND_U_BOOT_LOCATIONS is not set
+# CONFIG_SPL_NAND_DENALI is not set
+# CONFIG_SPL_NAND_SIMPLE is not set
+CONFIG_MTD_SPI_NAND=y
+CONFIG_SPI_NAND_GIGADEVICE=y
+CONFIG_SPI_NAND_MACRONIX=y
+CONFIG_SPI_NAND_MICRON=y
+CONFIG_SPI_NAND_TOSHIBA=y
+CONFIG_SPI_NAND_WINBOND=y
+CONFIG_SPI_NAND_DOSILICON=y
+CONFIG_SPI_NAND_ESMT=y
+CONFIG_SPI_NAND_XTX=y
+CONFIG_SPI_NAND_HYF=y
+CONFIG_SPI_NAND_FMSH=y
+CONFIG_SPI_NAND_FORESEE=y
+CONFIG_SPI_NAND_BIWIN=y
+CONFIG_SPI_NAND_ETRON=y
+CONFIG_SPI_NAND_JSC=y
+CONFIG_SPI_NAND_SILICONGO=y
+CONFIG_SPI_NAND_UNIM=y
+CONFIG_SPI_NAND_SKYHIGH=y
+
+#
+# SPI Flash Support
+#
+CONFIG_DM_SPI_FLASH=y
+CONFIG_SPI_FLASH=y
+CONFIG_SF_DEFAULT_BUS=0
+CONFIG_SF_DEFAULT_CS=0
+CONFIG_SF_DEFAULT_MODE=3
+CONFIG_SF_DEFAULT_SPEED=80000000
+# CONFIG_SPI_FLASH_SFDP_SUPPORT is not set
+# CONFIG_SPI_FLASH_BAR is not set
+# CONFIG_SF_DUAL_FLASH is not set
+# CONFIG_SPI_FLASH_ATMEL is not set
+CONFIG_SPI_FLASH_EON=y
+CONFIG_SPI_FLASH_GIGADEVICE=y
+# CONFIG_SPI_FLASH_ISSI is not set
+CONFIG_SPI_FLASH_MACRONIX=y
+# CONFIG_SPI_FLASH_SPANSION is not set
+# CONFIG_SPI_FLASH_STMICRO is not set
+CONFIG_SPI_FLASH_SST=y
+CONFIG_SPI_FLASH_WINBOND=y
+CONFIG_SPI_FLASH_XMC=y
+CONFIG_SPI_FLASH_XTX=y
+# CONFIG_SPI_FLASH_PUYA is not set
+# CONFIG_SPI_FLASH_FMSH is not set
+# CONFIG_SPI_FLASH_DOSILICON is not set
+# CONFIG_SPI_FLASH_BOYA is not set
+CONFIG_SPI_FLASH_USE_4K_SECTORS=y
+# CONFIG_SPI_FLASH_DATAFLASH is not set
+CONFIG_SPI_FLASH_MTD=y
+# CONFIG_SPL_SPI_FLASH_MTD is not set
+
+#
+# UBI support
+#
+# CONFIG_CONFIG_UBI_SILENCE_MSG is not set
+# CONFIG_MTD_UBI is not set
+# CONFIG_BITBANGMII is not set
+# CONFIG_MV88E6352_SWITCH is not set
+CONFIG_PHYLIB=y
+# CONFIG_MV88E61XX_SWITCH is not set
+# CONFIG_PHYLIB_10G is not set
+# CONFIG_PHY_AQUANTIA is not set
+# CONFIG_PHY_ATHEROS is not set
+# CONFIG_PHY_BROADCOM is not set
+# CONFIG_PHY_CORTINA is not set
+# CONFIG_PHY_DAVICOM is not set
+# CONFIG_PHY_ET1011C is not set
+# CONFIG_PHY_LXT is not set
+# CONFIG_PHY_MARVELL is not set
+# CONFIG_PHY_MICREL is not set
+# CONFIG_PHY_MSCC is not set
+# CONFIG_PHY_NATSEMI is not set
+# CONFIG_PHY_REALTEK is not set
+# CONFIG_PHY_RK630 is not set
+# CONFIG_PHY_SMSC is not set
+# CONFIG_PHY_TERANETICS is not set
+# CONFIG_PHY_TI is not set
+# CONFIG_PHY_VITESSE is not set
+# CONFIG_PHY_XILINX is not set
+# CONFIG_PHY_FIXED is not set
+CONFIG_DM_ETH=y
+# CONFIG_DM_MDIO is not set
+CONFIG_DM_ETH_PHY=y
+CONFIG_NETDEVICES=y
+# CONFIG_PHY_GIGE is not set
+# CONFIG_ALTERA_TSE is not set
+# CONFIG_BCM_SF2_ETH is not set
+CONFIG_DWC_ETH_QOS=y
+CONFIG_DWC_ETH_QOS_FULL=y
+# CONFIG_E1000 is not set
+# CONFIG_ETH_DESIGNWARE is not set
+# CONFIG_ETHOC is not set
+# CONFIG_FTMAC100 is not set
+# CONFIG_MACB is not set
+# CONFIG_PCH_GBE is not set
+# CONFIG_RGMII is not set
+# CONFIG_RTL8139 is not set
+# CONFIG_RTL8169 is not set
+# CONFIG_SUN7I_GMAC is not set
+# CONFIG_SUN4I_EMAC is not set
+# CONFIG_SUN8I_EMAC is not set
+CONFIG_GMAC_ROCKCHIP=y
+CONFIG_NVME=y
+CONFIG_PCI=y
+CONFIG_DM_PCI=y
+CONFIG_DM_PCI_COMPAT=y
+CONFIG_PCI_PNP=y
+# CONFIG_PCI_XILINX is not set
+# CONFIG_PCIE_LAYERSCAPE is not set
+CONFIG_PCIE_DW_ROCKCHIP=y
+
+#
+# PHY Subsystem
+#
+CONFIG_PHY=y
+# CONFIG_SPL_PHY is not set
+# CONFIG_NOP_PHY is not set
+CONFIG_PHY_ROCKCHIP_INNO_USB2=y
+CONFIG_PHY_ROCKCHIP_NANENG_COMBOPHY=y
+# CONFIG_PHY_ROCKCHIP_NANENG_USB2 is not set
+# CONFIG_PHY_ROCKCHIP_INNO_USB3 is not set
+# CONFIG_PHY_ROCKCHIP_NANENG_EDP is not set
+CONFIG_PHY_ROCKCHIP_SAMSUNG_HDPTX=y
+CONFIG_PHY_ROCKCHIP_SNPS_PCIE3=y
+CONFIG_PHY_ROCKCHIP_USBDP=y
+# CONFIG_PHY_ROCKCHIP_TYPEC is not set
+# CONFIG_MVEBU_COMPHY_SUPPORT is not set
+
+#
+# Pin controllers
+#
+CONFIG_PINCTRL=y
+CONFIG_PINCTRL_FULL=y
+CONFIG_PINCTRL_GENERIC=y
+CONFIG_PINMUX=y
+CONFIG_PINCONF=y
+CONFIG_SPL_PINCTRL=y
+CONFIG_SPL_PINCTRL_FULL=y
+CONFIG_SPL_PINCTRL_GENERIC=y
+CONFIG_SPL_PINMUX=y
+# CONFIG_SPL_PINCONF is not set
+# CONFIG_PINCTRL_AT91 is not set
+# CONFIG_PINCTRL_AT91PIO4 is not set
+CONFIG_PINCTRL_MAX96745=y
+CONFIG_PINCTRL_MAX96752F=y
+CONFIG_PINCTRL_MAX96755F=y
+CONFIG_PINCTRL_ROCKCHIP=y
+CONFIG_SPL_PINCTRL_ROCKCHIP=y
+# CONFIG_PINCTRL_SINGLE is not set
+# CONFIG_PINCTRL_STM32 is not set
+
+#
+# Power
+#
+
+#
+# Power Domain Support
+#
+# CONFIG_POWER_DOMAIN is not set
+CONFIG_DM_FUEL_GAUGE=y
+# CONFIG_SPL_DM_FUEL_GAUGE is not set
+CONFIG_POWER_FG_CW201X=y
+CONFIG_POWER_FG_CW221X=y
+
+#
+# IO Domain Support
+#
+# CONFIG_IO_DOMAIN is not set
+>>>>>>> Support pcie ssd boot
+CONFIG_DM_PMIC=y
+# CONFIG_SPL_DM_PMIC is not set
+CONFIG_PMIC_CHILDREN=y
+CONFIG_SPL_PMIC_CHILDREN=y
+# CONFIG_PMIC_ACT8846 is not set
+# CONFIG_PMIC_AS3722 is not set
+# CONFIG_DM_PMIC_PFUZE100 is not set
+# CONFIG_DM_PMIC_MAX77686 is not set
+# CONFIG_DM_PMIC_MAX8998 is not set
+# CONFIG_PMIC_MAX8997 is not set
+# CONFIG_PMIC_PM8916 is not set
+# CONFIG_PMIC_RK8XX is not set
+CONFIG_PMIC_SPI_RK8XX=y
+# CONFIG_PMIC_S2MPS11 is not set
+# CONFIG_DM_PMIC_SANDBOX is not set
+# CONFIG_PMIC_S5M8767 is not set
+# CONFIG_PMIC_RN5T567 is not set
+# CONFIG_PMIC_TPS65090 is not set
+# CONFIG_PMIC_PALMAS is not set
+# CONFIG_PMIC_LP873X is not set
+# CONFIG_PMIC_LP87565 is not set
+# CONFIG_POWER_MC34VR500 is not set
+CONFIG_DM_POWER_DELIVERY=y
+CONFIG_TYPEC_TCPM=y
+CONFIG_TYPEC_TCPCI=y
+CONFIG_TYPEC_HUSB311=y
+CONFIG_TYPEC_FUSB302=y
+CONFIG_DM_REGULATOR=y
+# CONFIG_SPL_DM_REGULATOR is not set
+# CONFIG_REGULATOR_FAN53555 is not set
+CONFIG_REGULATOR_PWM=y
+CONFIG_DM_REGULATOR_FIXED=y
+# CONFIG_SPL_DM_REGULATOR_FIXED is not set
+CONFIG_DM_REGULATOR_GPIO=y
+CONFIG_REGULATOR_RK860X=y
+CONFIG_REGULATOR_RK806=y
+# CONFIG_DM_DVFS is not set
+CONFIG_CHARGER_BQ25700=y
+CONFIG_CHARGER_BQ25890=y
+CONFIG_CHARGER_SC8551=y
+CONFIG_CHARGER_SGM41542=y
+CONFIG_DM_CHARGE_DISPLAY=y
+CONFIG_CHARGE_ANIMATION=y
+CONFIG_ROCKCHIP_PM=y
+CONFIG_DM_PWM=y
+# CONFIG_PWM_EXYNOS is not set
+CONFIG_PWM_ROCKCHIP=y
+# CONFIG_PWM_SANDBOX is not set
+# CONFIG_PWM_TEGRA is not set
+CONFIG_RAM=y
+CONFIG_SPL_RAM=y
+CONFIG_TPL_RAM=y
+# CONFIG_STM32_SDRAM is not set
+CONFIG_DM_RAMDISK=y
+CONFIG_RAMDISK_RO=y
+# CONFIG_DM_DMC is not set
+# CONFIG_ROCKCHIP_DMC is not set
+# CONFIG_ROCKCHIP_SDRAM_COMMON is not set
+# CONFIG_ROCKCHIP_DRAM_EXTENDED_TEMP_SUPPORT is not set
+CONFIG_ROCKCHIP_TPL_INIT_DRAM_TYPE=3
+
+#
+# Remote Processor drivers
+#
+
+#
+# Reset Controller Support
+#
+CONFIG_DM_RESET=y
+CONFIG_SPL_DM_RESET=y
+CONFIG_RESET_ROCKCHIP=y
+CONFIG_SPL_RESET_ROCKCHIP=y
+# CONFIG_RESET_SCMI is not set
+# CONFIG_RKNAND is not set
+# CONFIG_RKFLASH is not set
+
+#
+# Real Time Clock
+#
+# CONFIG_DM_RTC is not set
+# CONFIG_SCSI is not set
+# CONFIG_DM_SCSI is not set
+
+#
+# Serial drivers
+#
+CONFIG_BAUDRATE=1500000
+CONFIG_REQUIRE_SERIAL_CONSOLE=y
+CONFIG_SERIAL_PRESENT=y
+CONFIG_SPL_SERIAL_PRESENT=y
+CONFIG_DM_SERIAL=y
+# CONFIG_SERIAL_RX_BUFFER is not set
+CONFIG_SPL_DM_SERIAL=y
+CONFIG_TPL_DM_SERIAL=y
+# CONFIG_DEBUG_UART_ALTERA_JTAGUART is not set
+# CONFIG_DEBUG_UART_ALTERA_UART is not set
+# CONFIG_DEBUG_UART_ATMEL is not set
+CONFIG_DEBUG_UART_NS16550=y
+# CONFIG_DEBUG_UART_S5P is not set
+# CONFIG_DEBUG_UART_UARTLITE is not set
+# CONFIG_DEBUG_UART_ARM_DCC is not set
+# CONFIG_DEBUG_MVEBU_A3700_UART is not set
+# CONFIG_DEBUG_UART_ZYNQ is not set
+# CONFIG_DEBUG_UART_PL010 is not set
+# CONFIG_DEBUG_UART_PL011 is not set
+# CONFIG_DEBUG_UART_OMAP is not set
+CONFIG_DEBUG_UART_BASE=0xFEB50000
+CONFIG_DEBUG_UART_CLOCK=24000000
+CONFIG_DEBUG_UART_SHIFT=2
+CONFIG_DEBUG_UART_BOARD_INIT=y
+# CONFIG_DEBUG_UART_ANNOUNCE is not set
+# CONFIG_DEBUG_UART_SKIP_INIT is not set
+CONFIG_DEBUG_UART_ALWAYS=y
+# CONFIG_ALTERA_JTAG_UART is not set
+# CONFIG_ALTERA_UART is not set
+# CONFIG_ATMEL_USART is not set
+# CONFIG_FSL_LPUART is not set
+# CONFIG_MVEBU_A3700_UART is not set
+CONFIG_SYS_NS16550=y
+# CONFIG_MSM_SERIAL is not set
+# CONFIG_PXA_SERIAL is not set
+
+#
+# Sound support
+#
+# CONFIG_SOUND is not set
+CONFIG_SPI=y
+CONFIG_DM_SPI=y
+CONFIG_SPI_MEM=y
+# CONFIG_ALTERA_SPI is not set
+# CONFIG_ATCSPI200_SPI is not set
+# CONFIG_ATMEL_SPI is not set
+# CONFIG_BCMSTB_SPI is not set
+# CONFIG_CADENCE_QSPI is not set
+# CONFIG_DESIGNWARE_SPI is not set
+# CONFIG_EXYNOS_SPI is not set
+# CONFIG_FSL_DSPI is not set
+# CONFIG_ICH_SPI is not set
+# CONFIG_MVEBU_A3700_SPI is not set
+CONFIG_ROCKCHIP_SPI=y
+CONFIG_ROCKCHIP_SFC=y
+# CONFIG_TEGRA114_SPI is not set
+# CONFIG_TEGRA20_SFLASH is not set
+# CONFIG_TEGRA20_SLINK is not set
+# CONFIG_TEGRA210_QSPI is not set
+# CONFIG_XILINX_SPI is not set
+# CONFIG_SOFT_SPI is not set
+# CONFIG_CF_SPI is not set
+# CONFIG_FSL_ESPI is not set
+# CONFIG_FSL_QSPI is not set
+# CONFIG_SH_SPI is not set
+# CONFIG_SH_QSPI is not set
+# CONFIG_TI_QSPI is not set
+# CONFIG_KIRKWOOD_SPI is not set
+# CONFIG_LPC32XX_SSP is not set
+# CONFIG_MPC8XXX_SPI is not set
+# CONFIG_MXC_SPI is not set
+# CONFIG_MXS_SPI is not set
+# CONFIG_OMAP3_SPI is not set
+
+#
+# SPMI support
+#
+# CONFIG_SPMI is not set
+
+#
+# System reset device drivers
+#
+CONFIG_SYSRESET=y
+CONFIG_SPL_SYSRESET=y
+CONFIG_SYSRESET_PSCI=y
+# CONFIG_SYSRESET_SYSCON is not set
+CONFIG_SYSRESET_SYSCON_REBOOT=y
+# CONFIG_SYSRESET_WATCHDOG is not set
+# CONFIG_DM_THERMAL is not set
+
+#
+# Timer Support
+#
+# CONFIG_TIMER is not set
+
+#
+# TPM support
+#
+CONFIG_USB=y
+CONFIG_DM_USB=y
+CONFIG_SPL_DM_USB=y
+# CONFIG_DM_USB_GADGET is not set
+# CONFIG_SPL_DM_USB_GADGET is not set
+
+#
+# USB Host Controller Drivers
+#
+CONFIG_USB_HOST=y
+CONFIG_USB_XHCI_HCD=y
+CONFIG_USB_XHCI_DWC3=y
+# CONFIG_USB_XHCI_DWC3_OF_SIMPLE is not set
+CONFIG_USB_XHCI_PCI=y
+CONFIG_USB_EHCI_HCD=y
+# CONFIG_USB_EHCI_MSM is not set
+# CONFIG_USB_EHCI_PCI is not set
+CONFIG_USB_EHCI_GENERIC=y
+CONFIG_USB_OHCI_HCD=y
+# CONFIG_USB_OHCI_PCI is not set
+CONFIG_USB_OHCI_GENERIC=y
+# CONFIG_USB_OHCI_DA8XX is not set
+# CONFIG_USB_UHCI_HCD is not set
+# CONFIG_USB_DWC2 is not set
+# CONFIG_USB_R8A66597_HCD is not set
+# CONFIG_USB_CDNS3 is not set
+CONFIG_USB_DWC3=y
+# CONFIG_USB_DWC3_HOST is not set
+CONFIG_USB_DWC3_GADGET=y
+
+#
+# Platform Glue Driver Support
+#
+# CONFIG_USB_DWC3_OMAP is not set
+CONFIG_USB_DWC3_GENERIC=y
+
+#
+# PHY Subsystem
+#
+# CONFIG_USB_DWC3_PHY_OMAP is not set
+# CONFIG_USB_DWC3_PHY_SAMSUNG is not set
+
+#
+# MUSB Controller Driver
+#
+# CONFIG_USB_MUSB_HOST is not set
+# CONFIG_USB_MUSB_GADGET is not set
+# CONFIG_USB_MUSB_DA8XX is not set
+# CONFIG_USB_MUSB_TI is not set
+
+#
+# ULPI drivers
+#
+
+#
+# USB peripherals
+#
+CONFIG_USB_STORAGE=y
+# CONFIG_USB_KEYBOARD is not set
+CONFIG_USB_GADGET=y
+CONFIG_USB_GADGET_MANUFACTURER="Rockchip"
+CONFIG_USB_GADGET_VENDOR_NUM=0x2207
+CONFIG_USB_GADGET_PRODUCT_NUM=0x350a
+# CONFIG_USB_GADGET_ATMEL_USBA is not set
+# CONFIG_USB_GADGET_BCM_UDC_OTG_PHY is not set
+# CONFIG_USB_GADGET_DWC2_OTG is not set
+# CONFIG_CI_UDC is not set
+CONFIG_USB_GADGET_VBUS_DRAW=2
+CONFIG_USB_GADGET_DUALSPEED=y
+CONFIG_USB_GADGET_DOWNLOAD=y
+# CONFIG_USB_FUNCTION_SDP is not set
+# CONFIG_USB_ETHER is not set
+# CONFIG_USB_HOST_ETHER is not set
+
+#
+# Graphics support
+#
+CONFIG_DM_VIDEO=y
+CONFIG_BACKLIGHT_PWM=y
+# CONFIG_BACKLIGHT_GPIO is not set
+CONFIG_VIDEO_BPP8=y
+CONFIG_VIDEO_BPP16=y
+CONFIG_VIDEO_BPP32=y
+CONFIG_CONSOLE_NORMAL=y
+# CONFIG_CONSOLE_ROTATION is not set
+# CONFIG_CONSOLE_TRUETYPE is not set
+CONFIG_SYS_WHITE_ON_BLACK=y
+
+#
+# TrueType Fonts
+#
+# CONFIG_VIDCONSOLE_AS_LCD is not set
+# CONFIG_VIDEO_VESA is not set
+# CONFIG_VIDEO_LCD_ANX9804 is not set
+# CONFIG_VIDEO_LCD_SSD2828 is not set
+# CONFIG_VIDEO_MVEBU is not set
+CONFIG_I2C_EDID=y
+CONFIG_DISPLAY=y
+# CONFIG_ATMEL_HLCD is not set
+# CONFIG_VIDEO_ROCKCHIP is not set
+CONFIG_DRM_ROCKCHIP=y
+CONFIG_DRM_MEM_RESERVED_SIZE_MBYTES=32
+CONFIG_DRM_DP_HELPER=y
+CONFIG_DRM_MAXIM_MAX96745=y
+CONFIG_DRM_MAXIM_MAX96752F=y
+CONFIG_DRM_MAXIM_MAX96755F=y
+CONFIG_DRM_PANEL_MAXIM_DESERIALIZER=y
+CONFIG_DRM_ROHM_BU18XL82=y
+CONFIG_DRM_ROCKCHIP_PANEL=y
+CONFIG_DRM_ROHM_BU18XL82=y
+# CONFIG_DRM_ROCKCHIP_DW_HDMI is not set
+CONFIG_DRM_ROCKCHIP_DW_HDMI_QP=y
+# CONFIG_DRM_ROCKCHIP_INNO_HDMI is not set
+# CONFIG_ROCKCHIP_INNO_HDMI_PHY is not set
+# CONFIG_DRM_ROCKCHIP_INNO_MIPI_PHY is not set
+# CONFIG_DRM_ROCKCHIP_INNO_VIDEO_PHY is not set
+# CONFIG_DRM_ROCKCHIP_INNO_VIDEO_COMBO_PHY is not set
+CONFIG_DRM_MIPI_DSI=y
+CONFIG_DRM_DSC=y
+# CONFIG_DRM_ROCKCHIP_DW_MIPI_DSI is not set
+CONFIG_DRM_ROCKCHIP_DW_MIPI_DSI2=y
+CONFIG_DRM_ROCKCHIP_ANALOGIX_DP=y
+CONFIG_DRM_ROCKCHIP_DW_DP=y
+CONFIG_DRM_ROCKCHIP_ANALOGIX_DP=y
+# CONFIG_DRM_ROCKCHIP_LVDS is not set
+# CONFIG_DRM_ROCKCHIP_RGB is not set
+# CONFIG_DRM_ROCKCHIP_RK618 is not set
+# CONFIG_DRM_ROCKCHIP_RK1000 is not set
+CONFIG_DRM_ROCKCHIP_SAMSUNG_MIPI_DCPHY=y
+CONFIG_PHY_ROCKCHIP_SAMSUNG_HDPTX_HDMI=y
+# CONFIG_ROCKCHIP_DRM_TVE is not set
+CONFIG_ROCKCHIP_CUBIC_LUT_SIZE=0
+# CONFIG_VIDEO_TEGRA20 is not set
+# CONFIG_VIDEO_TEGRA124 is not set
+CONFIG_VIDEO_BRIDGE=y
+# CONFIG_VIDEO_BRIDGE_PARADE_PS862X is not set
+# CONFIG_VIDEO_BRIDGE_NXP_PTN3460 is not set
+# CONFIG_VIDEO_BRIDGE_ANALOGIX_ANX6345 is not set
+CONFIG_CONSOLE_SCROLL_LINES=1
+# CONFIG_LCD is not set
+# CONFIG_ROCKCHIP_EINK is not set
+
+#
+# Watchdog Timer Support
+#
+# CONFIG_BCM2835_WDT is not set
+# CONFIG_ULP_WATCHDOG is not set
+# CONFIG_WDT is not set
+CONFIG_IRQ=y
+# CONFIG_PHYS_TO_BUS is not set
+
+#
+# File systems
+#
+# CONFIG_FS_CBFS is not set
+CONFIG_FS_FAT=y
+CONFIG_FAT_WRITE=y
+CONFIG_FS_FAT_MAX_CLUSTSIZE=65536
+# CONFIG_FS_JFFS2 is not set
+# CONFIG_FS_CRAMFS is not set
+# CONFIG_YAFFS2 is not set
+
+#
+# Library routines
+#
+# CONFIG_BCH is not set
+# CONFIG_CC_OPTIMIZE_LIBS_FOR_SPEED is not set
+CONFIG_SYS_HZ=1000
+CONFIG_SYS_STACK_SIZE=0x200000
+CONFIG_USE_TINY_PRINTF=y
+CONFIG_PANIC_HANG=y
+CONFIG_REGEX=y
+CONFIG_LIB_RAND=y
+CONFIG_SPL_TINY_MEMSET=y
+# CONFIG_TPL_TINY_MEMSET is not set
+CONFIG_SYSMEM=y
+CONFIG_BIDRAM=y
+# CONFIG_CMD_DHRYSTONE is not set
+
+#
+# Security support
+#
+# CONFIG_AES is not set
+CONFIG_RSA=y
+CONFIG_SPL_RSA=y
+CONFIG_RSA_SOFTWARE_EXP=y
+CONFIG_RSA_N_SIZE=0x200
+CONFIG_RSA_E_SIZE=0x10
+CONFIG_RSA_C_SIZE=0x20
+# CONFIG_TPM is not set
+
+#
+# Boot Configuration
+#
+CONFIG_XBC=y
+
+#
+# Hashing Support
+#
+# CONFIG_SHA1 is not set
+# CONFIG_SHA256 is not set
+# CONFIG_SHA512 is not set
+# CONFIG_SHA_HW_ACCEL is not set
+
+#
+# Compression Support
+#
+CONFIG_LZ4=y
+CONFIG_LZMA=y
+# CONFIG_SPL_LZMA is not set
+# CONFIG_LZO is not set
+# CONFIG_SPL_LZO is not set
+# CONFIG_SPL_GZIP is not set
+CONFIG_ERRNO_STR=y
+# CONFIG_HEXDUMP is not set
+CONFIG_OF_LIBFDT=y
+CONFIG_OF_LIBFDT_OVERLAY=y
+CONFIG_SPL_OF_LIBFDT=y
+# CONFIG_TPL_OF_LIBFDT is not set
+# CONFIG_FDT_FIXUP_PARTITIONS is not set
+
+#
+# System tables
+#
+CONFIG_LIB_RATIONAL=y
+# CONFIG_SPL_LIB_RATIONAL is not set
+# CONFIG_EFI_LOADER is not set
+CONFIG_AVB_LIBAVB=y
+# CONFIG_SPL_AVB_LIBAVB is not set
+# CONFIG_TPL_AVB_LIBAVB is not set
+CONFIG_AVB_LIBAVB_AB=y
+# CONFIG_SPL_AVB_LIBAVB_AB is not set
+# CONFIG_TPL_AVB_LIBAVB_AB is not set
+CONFIG_AVB_LIBAVB_ATX=y
+# CONFIG_SPL_AVB_LIBAVB_ATX is not set
+# CONFIG_TPL_AVB_LIBAVB_ATX is not set
+CONFIG_AVB_LIBAVB_USER=y
+# CONFIG_AVB_VBMETA_PUBLIC_KEY_VALIDATE is not set
+# CONFIG_SPL_AVB_LIBAVB_USER is not set
+# CONFIG_TPL_AVB_LIBAVB_USER is not set
+CONFIG_RK_AVB_LIBAVB_USER=y
+# CONFIG_SPL_RK_AVB_LIBAVB_USER is not set
+# CONFIG_TPL_RK_AVB_LIBAVB_USER is not set
+# CONFIG_ROCKCHIP_PRELOADER_PUB_KEY is not set
+CONFIG_OPTEE_CLIENT=y
+# CONFIG_OPTEE_V1 is not set
+CONFIG_OPTEE_V2=y
+CONFIG_OPTEE_ALWAYS_USE_SECURITY_PARTITION=y
+CONFIG_OPTEE_SECURITY_LEVEL=0
+# CONFIG_UNIT_TEST is not set
+# CONFIG_TEST_ROCKCHIP is not set
+# CONFIG_AHCI_PCI is not set
+CONFIG_AHCI=y
+CONFIG_CMD_SCSI=y
+CONFIG_DM_SCSI=y
+CONFIG_DWC_AHCI=y
+CONFIG_LIBATA=y
+# CONFIG_SATA_CEVA is not set
+CONFIG_SCSI_AHCI=y
+CONFIG_SCSI=y
diff --git a/configs/px30_defconfig b/configs/px30_defconfig
index edd77f7..1882d48 100644
--- a/configs/px30_defconfig
+++ b/configs/px30_defconfig
@@ -7,8 +7,8 @@ CONFIG_ROCKCHIP_PX30=y
 CONFIG_SPL_FIT_GENERATOR="arch/arm/mach-rockchip/make_fit_atf.py"
 CONFIG_ROCKCHIP_SPL_RESERVE_IRAM=0x0
 CONFIG_ROCKCHIP_VENDOR_PARTITION=y
-CONFIG_DM_DMC=y
-CONFIG_ROCKCHIP_DMC_FSP=y
+CONFIG_UBOOT_SIZE_KB=2048
+CONFIG_UBOOT_NUM=2
 CONFIG_TRUST_RSA_MODE=3
 CONFIG_TARGET_EVB_PX30=y
 CONFIG_SPL_DRIVERS_MISC_SUPPORT=y
@@ -79,6 +79,8 @@ CONFIG_GMAC_ROCKCHIP=y
 CONFIG_PHY_ROCKCHIP_INNO_USB2=y
 CONFIG_PINCTRL=y
 CONFIG_DM_FUEL_GAUGE=y
+CONFIG_IO_DOMAIN=y
+CONFIG_ROCKCHIP_IO_DOMAIN=y
 CONFIG_DM_PMIC=y
 CONFIG_PMIC_RK8XX=y
 CONFIG_REGULATOR_PWM=y
@@ -92,6 +94,8 @@ CONFIG_PWM_ROCKCHIP=y
 CONFIG_RAM=y
 CONFIG_SPL_RAM=y
 CONFIG_TPL_RAM=y
+CONFIG_DM_DMC=y
+CONFIG_ROCKCHIP_DMC_FSP=y
 CONFIG_ROCKCHIP_SDRAM_COMMON=y
 CONFIG_DM_RESET=y
 CONFIG_RKNAND=y
@@ -104,8 +108,6 @@ CONFIG_SOUND=y
 CONFIG_I2S_ROCKCHIP=y
 CONFIG_SOUND_RK817=y
 CONFIG_SOUND_ROCKCHIP=y
-CONFIG_UBOOT_SIZE_KB=2048
-CONFIG_UBOOT_NUM=2
 CONFIG_SYSRESET=y
 CONFIG_DM_THERMAL=y
 CONFIG_ROCKCHIP_THERMAL=y
diff --git a/configs/rk3036_defconfig b/configs/rk3036_defconfig
index f8970d7..2b91aaf 100644
--- a/configs/rk3036_defconfig
+++ b/configs/rk3036_defconfig
@@ -28,6 +28,7 @@ CONFIG_BOOTDELAY=0
 CONFIG_SYS_CONSOLE_INFO_QUIET=y
 # CONFIG_DISPLAY_CPUINFO is not set
 CONFIG_ANDROID_BOOTLOADER=y
+# CONFIG_SKIP_RELOCATE_UBOOT is not set
 # CONFIG_SPL_RAW_IMAGE_SUPPORT is not set
 # CONFIG_SPL_LEGACY_IMAGE_SUPPORT is not set
 CONFIG_SPL_STACK_R=y
diff --git a/configs/rk3126_defconfig b/configs/rk3126_defconfig
index bcb27de..a95e38d 100644
--- a/configs/rk3126_defconfig
+++ b/configs/rk3126_defconfig
@@ -9,6 +9,7 @@ CONFIG_DEFAULT_DEVICE_TREE="rk3126-evb"
 CONFIG_DEBUG_UART=y
 CONFIG_FIT=y
 CONFIG_NAND_BOOT=y
+# CONFIG_PASS_DEVICE_SERIAL_BY_FDT is not set
 CONFIG_BOOTDELAY=0
 CONFIG_SYS_CONSOLE_INFO_QUIET=y
 # CONFIG_DISPLAY_CPUINFO is not set
diff --git a/configs/rk3326-aarch32_defconfig b/configs/rk3326-aarch32_defconfig
index 9c0737c..88a2e53 100644
--- a/configs/rk3326-aarch32_defconfig
+++ b/configs/rk3326-aarch32_defconfig
@@ -6,11 +6,11 @@ CONFIG_ROCKCHIP_RK3326=y
 CONFIG_ARM64_BOOT_AARCH32=y
 CONFIG_ROCKCHIP_SPL_RESERVE_IRAM=0x0
 CONFIG_ROCKCHIP_VENDOR_PARTITION=y
-CONFIG_DM_DMC=y
-CONFIG_ROCKCHIP_DMC_FSP=y
+CONFIG_CHIP_NAME="RK3326"
 CONFIG_LOADER_INI="RK3326AARCH32MINIALL.ini"
+CONFIG_UBOOT_SIZE_KB=2048
+CONFIG_UBOOT_NUM=2
 CONFIG_TRUST_RSA_MODE=3
-CONFIG_CHIP_NAME="RK3326"
 CONFIG_TARGET_EVB_PX30=y
 CONFIG_DEFAULT_DEVICE_TREE="rk3326-evb"
 CONFIG_DEBUG_UART=y
@@ -66,6 +66,8 @@ CONFIG_PHY_ROCKCHIP_INNO_USB2=y
 CONFIG_PINCTRL=y
 CONFIG_DM_FUEL_GAUGE=y
 CONFIG_POWER_FG_RK817=y
+CONFIG_IO_DOMAIN=y
+CONFIG_ROCKCHIP_IO_DOMAIN=y
 CONFIG_DM_PMIC=y
 CONFIG_PMIC_RK8XX=y
 CONFIG_REGULATOR_PWM=y
@@ -76,6 +78,8 @@ CONFIG_CHARGE_ANIMATION=y
 CONFIG_PWM_ROCKCHIP=y
 CONFIG_RAM=y
 CONFIG_TPL_RAM=y
+CONFIG_DM_DMC=y
+CONFIG_ROCKCHIP_DMC_FSP=y
 CONFIG_ROCKCHIP_SDRAM_COMMON=y
 CONFIG_DM_RESET=y
 CONFIG_RKNAND=y
@@ -84,8 +88,6 @@ CONFIG_DEBUG_UART_BASE=0xFF160000
 CONFIG_DEBUG_UART_CLOCK=24000000
 CONFIG_DEBUG_UART_SHIFT=2
 CONFIG_DEBUG_UART_SKIP_INIT=y
-CONFIG_UBOOT_SIZE_KB=2048
-CONFIG_UBOOT_NUM=2
 CONFIG_SYSRESET=y
 CONFIG_USB=y
 CONFIG_USB_EHCI_HCD=y
@@ -108,7 +110,6 @@ CONFIG_DRM_ROCKCHIP_LVDS=y
 CONFIG_DRM_ROCKCHIP_RGB=y
 CONFIG_LCD=y
 CONFIG_USE_TINY_PRINTF=y
-CONFIG_SPL_TINY_MEMSET=y
 CONFIG_LZ4=y
 CONFIG_LZO=y
 CONFIG_ERRNO_STR=y
diff --git a/configs/rk3326_defconfig b/configs/rk3326_defconfig
index d39a4a5..290a283 100644
--- a/configs/rk3326_defconfig
+++ b/configs/rk3326_defconfig
@@ -8,10 +8,10 @@ CONFIG_ROCKCHIP_RK3326=y
 CONFIG_SPL_FIT_GENERATOR="arch/arm/mach-rockchip/make_fit_atf.py"
 CONFIG_ROCKCHIP_SPL_RESERVE_IRAM=0x0
 CONFIG_ROCKCHIP_VENDOR_PARTITION=y
-CONFIG_DM_DMC=y
-CONFIG_ROCKCHIP_DMC_FSP=y
-CONFIG_TRUST_RSA_MODE=3
 CONFIG_CHIP_NAME="RK3326"
+CONFIG_UBOOT_SIZE_KB=2048
+CONFIG_UBOOT_NUM=2
+CONFIG_TRUST_RSA_MODE=3
 CONFIG_TARGET_EVB_PX30=y
 CONFIG_SPL_DRIVERS_MISC_SUPPORT=y
 CONFIG_SPL_STACK_R_ADDR=0x600000
@@ -82,6 +82,8 @@ CONFIG_PHY_ROCKCHIP_INNO_USB2=y
 CONFIG_PINCTRL=y
 CONFIG_DM_FUEL_GAUGE=y
 CONFIG_POWER_FG_RK817=y
+CONFIG_IO_DOMAIN=y
+CONFIG_ROCKCHIP_IO_DOMAIN=y
 CONFIG_DM_PMIC=y
 CONFIG_PMIC_RK8XX=y
 CONFIG_REGULATOR_PWM=y
@@ -93,6 +95,8 @@ CONFIG_PWM_ROCKCHIP=y
 CONFIG_RAM=y
 CONFIG_SPL_RAM=y
 CONFIG_TPL_RAM=y
+CONFIG_DM_DMC=y
+CONFIG_ROCKCHIP_DMC_FSP=y
 CONFIG_ROCKCHIP_SDRAM_COMMON=y
 CONFIG_DM_RESET=y
 CONFIG_RKNAND=y
@@ -101,8 +105,6 @@ CONFIG_DEBUG_UART_BASE=0xFF160000
 CONFIG_DEBUG_UART_CLOCK=24000000
 CONFIG_DEBUG_UART_SHIFT=2
 CONFIG_DEBUG_UART_SKIP_INIT=y
-CONFIG_UBOOT_SIZE_KB=2048
-CONFIG_UBOOT_NUM=2
 CONFIG_SYSRESET=y
 CONFIG_USB=y
 CONFIG_USB_EHCI_HCD=y
diff --git a/configs/rk3399_defconfig b/configs/rk3399_defconfig
index 6195f9d..cfadc7b 100644
--- a/configs/rk3399_defconfig
+++ b/configs/rk3399_defconfig
@@ -92,6 +92,8 @@ CONFIG_SPL_PINCTRL=y
 CONFIG_DM_FUEL_GAUGE=y
 CONFIG_POWER_FG_RK817=y
 CONFIG_POWER_FG_RK818=y
+CONFIG_IO_DOMAIN=y
+CONFIG_ROCKCHIP_IO_DOMAIN=y
 CONFIG_DM_PMIC=y
 CONFIG_PMIC_RK8XX=y
 CONFIG_REGULATOR_PWM=y
diff --git a/configs/rk3568_defconfig b/configs/rk3568_defconfig
index d274245..fbd9820 100644
--- a/configs/rk3568_defconfig
+++ b/configs/rk3568_defconfig
@@ -7,6 +7,8 @@ CONFIG_SPL_FIT_GENERATOR="arch/arm/mach-rockchip/make_fit_atf.sh"
 CONFIG_ROCKCHIP_RK3568=y
 CONFIG_ROCKCHIP_FIT_IMAGE=y
 CONFIG_ROCKCHIP_VENDOR_PARTITION=y
+CONFIG_DM_DMC=y
+CONFIG_ROCKCHIP_DMC_FSP=y
 CONFIG_ROCKCHIP_FIT_IMAGE_PACK=y
 CONFIG_ROCKCHIP_NEW_IDB=y
 CONFIG_SPL_SERIAL_SUPPORT=y
diff --git a/configs/rk3588_defconfig b/configs/rk3588_defconfig
index f817bea..3eeefea 100644
--- a/configs/rk3588_defconfig
+++ b/configs/rk3588_defconfig
@@ -217,6 +217,7 @@ CONFIG_TRUST_INI="RK3588TRUST.ini"
 CONFIG_PSTORE=y
 CONFIG_PERSISTENT_RAM_ADDR=0x0
 CONFIG_PERSISTENT_RAM_SIZE=0x0
+>>>>>>> Support pcie ssd boot
 CONFIG_SPL_SERIAL_SUPPORT=y
 CONFIG_BOARD_SPECIFIC_OPTIONS=y
 # CONFIG_TPL_LIBCOMMON_SUPPORT is not set
@@ -884,6 +885,7 @@ CONFIG_FIRMWARE=y
 CONFIG_ARM_PSCI_FW=y
 CONFIG_SCMI_FIRMWARE=y
 CONFIG_SPL_SCMI_FIRMWARE=y
+CONFIG_GPIO_HOG=y
 
 #
 # FPGA support
@@ -909,6 +911,7 @@ CONFIG_GPIO_HOG=y
 # CONFIG_MSM_GPIO is not set
 # CONFIG_CMD_PCA953X is not set
 # CONFIG_PCF8575_GPIO is not set
+>>>>>>> Support pcie ssd boot
 CONFIG_ROCKCHIP_GPIO=y
 CONFIG_ROCKCHIP_GPIO_V2=y
 # CONFIG_CMD_TCA642X is not set
@@ -1225,6 +1228,7 @@ CONFIG_POWER_FG_CW221X=y
 # IO Domain Support
 #
 # CONFIG_IO_DOMAIN is not set
+>>>>>>> Support pcie ssd boot
 CONFIG_DM_PMIC=y
 # CONFIG_SPL_DM_PMIC is not set
 CONFIG_PMIC_CHILDREN=y
@@ -1516,6 +1520,7 @@ CONFIG_DRM_MAXIM_MAX96745=y
 CONFIG_DRM_MAXIM_MAX96752F=y
 CONFIG_DRM_MAXIM_MAX96755F=y
 CONFIG_DRM_PANEL_MAXIM_DESERIALIZER=y
+CONFIG_DRM_ROHM_BU18XL82=y
 CONFIG_DRM_ROCKCHIP_PANEL=y
 CONFIG_DRM_ROHM_BU18XL82=y
 # CONFIG_DRM_ROCKCHIP_DW_HDMI is not set
diff --git a/configs/rv1106-display.config b/configs/rv1106-display.config
new file mode 100644
index 0000000..842cde0
--- /dev/null
+++ b/configs/rv1106-display.config
@@ -0,0 +1,63 @@
+# CONFIG_ATMEL_HLCD is not set
+# CONFIG_BACKLIGHT_GPIO is not set
+CONFIG_BACKLIGHT_PWM=y
+CONFIG_BASE_DEFCONFIG="rv1106_defconfig"
+# CONFIG_CMD_BMP is not set
+# CONFIG_CMD_REGULATOR is not set
+CONFIG_CONSOLE_NORMAL=y
+# CONFIG_CONSOLE_ROTATION is not set
+CONFIG_CONSOLE_SCROLL_LINES=1
+# CONFIG_CONSOLE_TRUETYPE is not set
+CONFIG_DISPLAY=y
+CONFIG_DM_PWM=y
+# CONFIG_DM_REGULATOR_FIXED is not set
+# CONFIG_DM_REGULATOR_GPIO is not set
+CONFIG_DM_REGULATOR=y
+CONFIG_DM_VIDEO=y
+# CONFIG_DRM_MAXIM_MAX96745 is not set
+# CONFIG_DRM_MAXIM_MAX96752F is not set
+# CONFIG_DRM_MAXIM_MAX96755F is not set
+CONFIG_DRM_MEM_RESERVED_SIZE_MBYTES=32
+CONFIG_DRM_MIPI_DSI=y
+# CONFIG_DRM_PANEL_MAXIM_DESERIALIZER is not set
+# CONFIG_DRM_ROCKCHIP_ANALOGIX_DP is not set
+# CONFIG_DRM_ROCKCHIP_DW_DP is not set
+# CONFIG_DRM_ROCKCHIP_DW_HDMI is not set
+# CONFIG_DRM_ROCKCHIP_DW_HDMI_QP is not set
+# CONFIG_DRM_ROCKCHIP_DW_MIPI_DSI2 is not set
+# CONFIG_DRM_ROCKCHIP_DW_MIPI_DSI is not set
+# CONFIG_DRM_ROCKCHIP_INNO_HDMI is not set
+# CONFIG_DRM_ROCKCHIP_INNO_MIPI_PHY is not set
+# CONFIG_DRM_ROCKCHIP_INNO_VIDEO_COMBO_PHY is not set
+# CONFIG_DRM_ROCKCHIP_INNO_VIDEO_PHY is not set
+# CONFIG_DRM_ROCKCHIP_LVDS is not set
+CONFIG_DRM_ROCKCHIP_PANEL=y
+CONFIG_DRM_ROCKCHIP_RGB=y
+# CONFIG_DRM_ROCKCHIP_RK1000 is not set
+# CONFIG_DRM_ROCKCHIP_RK618 is not set
+# CONFIG_DRM_ROCKCHIP_SAMSUNG_MIPI_DCPHY is not set
+CONFIG_DRM_ROCKCHIP=y
+CONFIG_I2C_EDID=y
+# CONFIG_NOP_PHY is not set
+# CONFIG_PHY_ROCKCHIP_SAMSUNG_HDPTX_HDMI is not set
+CONFIG_PHY=y
+# CONFIG_PWM_EXYNOS is not set
+CONFIG_PWM_ROCKCHIP=y
+# CONFIG_PWM_TEGRA is not set
+# CONFIG_REGULATOR_FAN53555 is not set
+# CONFIG_REGULATOR_PWM is not set
+# CONFIG_REGULATOR_RK860X is not set
+CONFIG_ROCKCHIP_CUBIC_LUT_SIZE=0
+# CONFIG_ROCKCHIP_DRM_TVE is not set
+# CONFIG_ROCKCHIP_INNO_HDMI_PHY is not set
+# CONFIG_SPL_DM_REGULATOR is not set
+# CONFIG_VIDCONSOLE_AS_LCD is not set
+CONFIG_VIDEO_BPP16=y
+CONFIG_VIDEO_BPP32=y
+CONFIG_VIDEO_BPP8=y
+# CONFIG_VIDEO_BRIDGE_ANALOGIX_ANX6345 is not set
+# CONFIG_VIDEO_BRIDGE_NXP_PTN3460 is not set
+# CONFIG_VIDEO_BRIDGE_PARADE_PS862X is not set
+CONFIG_VIDEO_BRIDGE=y
+# CONFIG_VIDEO_ROCKCHIP is not set
+# CONFIG_VIDEO_TEGRA124 is not set
diff --git a/configs/rv1106-emmc-tb_defconfig b/configs/rv1106-emmc-tb_defconfig
index 2ee77a5..6929db4 100644
--- a/configs/rv1106-emmc-tb_defconfig
+++ b/configs/rv1106-emmc-tb_defconfig
@@ -8,6 +8,7 @@ CONFIG_ROCKCHIP_RV1106=y
 CONFIG_ROCKCHIP_SPL_RESERVE_IRAM=0x0
 CONFIG_ROCKCHIP_FIT_IMAGE=y
 CONFIG_USING_KERNEL_DTB_V2=y
+CONFIG_ROCKCHIP_META=y
 CONFIG_ROCKCHIP_FIT_IMAGE_PACK=y
 # CONFIG_ROCKCHIP_SET_SN is not set
 # CONFIG_ROCKCHIP_SET_ETHADDR is not set
diff --git a/configs/rv1106-spi-nor-tb_defconfig b/configs/rv1106-spi-nor-tb_defconfig
index e66267f..d518921 100644
--- a/configs/rv1106-spi-nor-tb_defconfig
+++ b/configs/rv1106-spi-nor-tb_defconfig
@@ -8,6 +8,7 @@ CONFIG_ROCKCHIP_RV1106=y
 CONFIG_ROCKCHIP_SPL_RESERVE_IRAM=0x0
 CONFIG_ROCKCHIP_FIT_IMAGE=y
 CONFIG_USING_KERNEL_DTB_V2=y
+CONFIG_ROCKCHIP_META=y
 CONFIG_ROCKCHIP_FIT_IMAGE_PACK=y
 # CONFIG_ROCKCHIP_SET_SN is not set
 # CONFIG_ROCKCHIP_SET_ETHADDR is not set
diff --git a/disk/Kconfig b/disk/Kconfig
index cce5fe6..cbc2514 100644
--- a/disk/Kconfig
+++ b/disk/Kconfig
@@ -137,14 +137,15 @@ config PARTITION_TYPE_GUID
 
 config ENV_PARTITION
 	bool "Enable ENV partition table support"
-	depends on PARTITIONS
+	depends on PARTITIONS && ENVF
+	default y
 	help
 	  Say Y here if you would like to use ENV partition table.
 
 config SPL_ENV_PARTITION
 	bool "Enable ENV partition table support in SPL"
-	depends on SPL && PARTITIONS
-	default y if ENV_PARTITION
+	depends on SPL && PARTITIONS && SPL_ENVF
+	default y
 	help
 	  Say Y here if you would like to use ENV partition table in SPL.
 
diff --git a/doc/device-tree-bindings/gpio/gpio.txt b/doc/device-tree-bindings/gpio/gpio.txt
index f7a158d..e146917 100644
--- a/doc/device-tree-bindings/gpio/gpio.txt
+++ b/doc/device-tree-bindings/gpio/gpio.txt
@@ -210,3 +210,63 @@ Example 2:
 Here, three GPIO ranges are defined wrt. two pin controllers. pinctrl1 GPIO
 ranges are defined using pin numbers whereas the GPIO ranges wrt. pinctrl2
 are named "foo" and "bar".
+
+3) GPIO hog definitions
+-----------------------
+
+The GPIO chip may contain GPIO hog definitions. GPIO hogging is a mechanism
+providing automatic GPIO request and configuration as part of the
+gpio-controller's driver probe function.
+
+Each GPIO hog definition is represented as a child node of the GPIO controller.
+Required properties:
+- gpio-hog:   A property specifying that this child node represents a GPIO hog.
+- gpios:      Store the GPIO information (id, flags) for the GPIO to
+	      affect.
+
+              ! Not yet support more than one gpio !
+
+Only one of the following properties scanned in the order shown below.
+- input:      A property specifying to set the GPIO direction as input.
+- output-low  A property specifying to set the GPIO direction as output with
+	      the value low.
+- output-high A property specifying to set the GPIO direction as output with
+	      the value high.
+
+Optional properties:
+- line-name:  The GPIO label name. If not present the node name is used.
+
+Example:
+
+        tca6416@20 {
+                compatible = "ti,tca6416";
+                reg = <0x20>;
+                #gpio-cells = <2>;
+                gpio-controller;
+
+                env_reset {
+                        gpio-hog;
+                        input;
+                        gpios = <6 GPIO_ACTIVE_LOW>;
+                };
+                boot_rescue {
+                        gpio-hog;
+                        input;
+                        line-name = "foo-bar-gpio";
+                        gpios = <7 GPIO_ACTIVE_LOW>;
+                };
+        };
+
+For the above Example you can than access the gpio in your boardcode
+with:
+
+	struct gpio_desc *desc;
+	int ret;
+
+	ret = gpio_hog_lookup_name("boot_rescue", &desc);
+	if (ret)
+		return;
+	if (dm_gpio_get_value(desc) == 1)
+		printf("\nBooting into Rescue System\n");
+	else if (dm_gpio_get_value(desc) == 0)
+		printf("\nBoot normal\n");
diff --git a/drivers/clk/rockchip/clk_rk3588.c b/drivers/clk/rockchip/clk_rk3588.c
index 7d93d84..598d744 100644
--- a/drivers/clk/rockchip/clk_rk3588.c
+++ b/drivers/clk/rockchip/clk_rk3588.c
@@ -34,6 +34,7 @@ static struct rockchip_pll_rate_table rk3588_pll_rates[] = {
 	RK3588_PLL_RATE(816000000, 2, 272, 2, 0),
 	RK3588_PLL_RATE(786432000, 2, 262, 2, 9437),
 	RK3588_PLL_RATE(786000000, 1, 131, 2, 0),
+	RK3588_PLL_RATE(742500000, 4, 495, 2, 0),
 	RK3588_PLL_RATE(722534400, 8, 963, 2, 24850),
 	RK3588_PLL_RATE(600000000, 2, 200, 2, 0),
 	RK3588_PLL_RATE(594000000, 2, 198, 2, 0),
diff --git a/drivers/clk/rockchip/clk_rv1106.c b/drivers/clk/rockchip/clk_rv1106.c
index 967e7c4..dcf02e7 100644
--- a/drivers/clk/rockchip/clk_rv1106.c
+++ b/drivers/clk/rockchip/clk_rv1106.c
@@ -1311,6 +1311,11 @@ static int rv1106_clk_probe(struct udevice *dev)
 	rk_clrsetreg(&priv->cru->core_clksel_con[0],
 		     CLK_CORE_DIV_MASK,
 		     0 << CLK_CORE_DIV_SHIFT);
+
+#if defined(CONFIG_SPL_BUILD) && defined(CONFIG_SPL_KERNEL_BOOT)
+	/* increase the aclk_decom frequency */
+	rv1106_peri_set_clk(priv, ACLK_PERI_ROOT, 400 * MHz);
+#endif
 	return 0;
 }
 
diff --git a/drivers/cpu/rockchip_amp.c b/drivers/cpu/rockchip_amp.c
index bddb2a7..6cf9c35 100644
--- a/drivers/cpu/rockchip_amp.c
+++ b/drivers/cpu/rockchip_amp.c
@@ -93,7 +93,7 @@ static int parse_cpus_boot_by_linux(void)
 		if (mpidr == 0xffffffff)
 			continue;
 		g_cpus_boot_by_linux[i++] = mpidr;
-		printf("CPU[0x%x] is required boot by Linux\n", mpidr);
+		printf("CPU[0x%llx] is required boot by Linux\n", mpidr);
 	}
 
 	return 0;
diff --git a/drivers/fpga/Kconfig b/drivers/fpga/Kconfig
index 2dc4bd5..ffc8284 100644
--- a/drivers/fpga/Kconfig
+++ b/drivers/fpga/Kconfig
@@ -58,6 +58,7 @@ config FPGA_MMC
 config FPGA_RAM
 	bool "FPGA board with RAM"
 	depends on FPGA_ROCKCHIP
+	select SPL_RAM_SUPPORT
 	select DM_RAMDISK
 	select RAMDISK_RO
 endmenu
diff --git a/drivers/gpio/Kconfig b/drivers/gpio/Kconfig
index 735bc65..f059ea7 100644
--- a/drivers/gpio/Kconfig
+++ b/drivers/gpio/Kconfig
@@ -14,6 +14,16 @@ config DM_GPIO
 	  particular GPIOs that they provide. The uclass interface
 	  is defined in include/asm-generic/gpio.h.
 
+config GPIO_HOG
+	bool "Enable GPIO hog support"
+	depends on DM_GPIO
+	default n
+	help
+	  Enable gpio hog support
+	  The GPIO chip may contain GPIO hog definitions. GPIO hogging
+	  is a mechanism providing automatic GPIO request and config-
+	  uration as part of the gpio-controller's driver probe function.
+
 config ALTERA_PIO
 	bool "Altera PIO driver"
 	depends on DM_GPIO
diff --git a/drivers/gpio/gpio-uclass.c b/drivers/gpio/gpio-uclass.c
index 9faf335..5868dd4 100644
--- a/drivers/gpio/gpio-uclass.c
+++ b/drivers/gpio/gpio-uclass.c
@@ -6,6 +6,9 @@
 
 #include <common.h>
 #include <dm.h>
+#include <dm/device-internal.h>
+#include <dm/lists.h>
+#include <dm/uclass-internal.h>
 #include <dt-bindings/gpio/gpio.h>
 #include <errno.h>
 #include <fdtdec.h>
@@ -142,6 +145,129 @@ static int gpio_find_and_xlate(struct gpio_desc *desc,
 		return gpio_xlate_offs_flags(desc->dev, desc, args);
 }
 
+#if defined(CONFIG_GPIO_HOG)
+
+struct gpio_hog_priv {
+	struct gpio_desc gpiod;
+};
+
+struct gpio_hog_data {
+	int gpiod_flags;
+	int value;
+	u32 val[2];
+};
+
+static int gpio_hog_ofdata_to_platdata(struct udevice *dev)
+{
+	struct gpio_hog_data *plat = dev_get_platdata(dev);
+	const char *nodename;
+	int ret;
+
+	plat->value = 0;
+	if (dev_read_bool(dev, "input")) {
+		plat->gpiod_flags = GPIOD_IS_IN;
+	} else if (dev_read_bool(dev, "output-high")) {
+		plat->value = 1;
+		plat->gpiod_flags = GPIOD_IS_OUT;
+	} else if (dev_read_bool(dev, "output-low")) {
+		plat->gpiod_flags = GPIOD_IS_OUT;
+	} else {
+		printf("%s: missing gpio-hog state.\n", __func__);
+		return -EINVAL;
+	}
+	ret = dev_read_u32_array(dev, "gpios", plat->val, 2);
+	if (ret) {
+		printf("%s: wrong gpios property, 2 values needed %d\n",
+		       __func__, ret);
+		return ret;
+	}
+	nodename = dev_read_string(dev, "line-name");
+	if (nodename)
+		device_set_name(dev, nodename);
+
+	return 0;
+}
+
+static int gpio_hog_probe(struct udevice *dev)
+{
+	struct gpio_hog_data *plat = dev_get_platdata(dev);
+	struct gpio_hog_priv *priv = dev_get_priv(dev);
+	int ret;
+
+	ret = gpio_dev_request_index(dev->parent, dev->name, "gpio-hog",
+				     plat->val[0], plat->gpiod_flags,
+				     plat->val[1], &priv->gpiod);
+	if (ret < 0) {
+		debug("%s: node %s could not get gpio.\n", __func__,
+		      dev->name);
+		return ret;
+	}
+
+	if (plat->gpiod_flags == GPIOD_IS_OUT) {
+		ret = dm_gpio_set_value(&priv->gpiod, plat->value);
+		if (ret < 0) {
+			debug("%s: node %s could not set gpio.\n", __func__,
+			      dev->name);
+			return ret;
+		}
+	}
+
+	return 0;
+}
+
+int gpio_hog_probe_all(void)
+{
+	struct udevice *dev;
+	int ret;
+	int retval = 0;
+
+	for (uclass_find_first_device(UCLASS_NOP, &dev);
+	     dev;
+	     uclass_find_next_device(&dev)) {
+		if (dev->driver == DM_GET_DRIVER(gpio_hog)) {
+			ret = device_probe(dev);
+			if (ret) {
+				printf("Failed to probe device %s err: %d\n",
+				       dev->name, ret);
+				retval = ret;
+			}
+		}
+	}
+
+	return retval;
+}
+
+int gpio_hog_lookup_name(const char *name, struct gpio_desc **desc)
+{
+	struct udevice *dev;
+
+	*desc = NULL;
+	gpio_hog_probe_all();
+	if (!uclass_get_device_by_name(UCLASS_NOP, name, &dev)) {
+		struct gpio_hog_priv *priv = dev_get_priv(dev);
+
+		*desc = &priv->gpiod;
+		return 0;
+	}
+
+	return -ENODEV;
+}
+
+U_BOOT_DRIVER(gpio_hog) = {
+	.name	= "gpio_hog",
+	.id	= UCLASS_NOP,
+	.ofdata_to_platdata = gpio_hog_ofdata_to_platdata,
+	.probe = gpio_hog_probe,
+	.priv_auto_alloc_size = sizeof(struct gpio_hog_priv),
+	.platdata_auto_alloc_size = sizeof(struct gpio_hog_data),
+};
+#else
+int gpio_hog_lookup_name(const char *name, struct gpio_desc **desc)
+{
+	return 0;
+}
+#endif
+
 int dm_gpio_request(struct gpio_desc *desc, const char *label)
 {
 	struct udevice *dev = desc->dev;
@@ -641,22 +767,58 @@ int dm_gpio_get_values_as_int(const struct gpio_desc *desc_list, int count)
 	return vector;
 }
 
-static int gpio_request_tail(int ret, ofnode node,
+/**
+ * gpio_request_tail: common work for requesting a gpio.
+ *
+ * ret:		return value from previous work in function which calls
+ *		this function.
+ *		This seems bogus (why calling this function instead not
+ *		calling it and end caller function instead?).
+ *		Because on error in caller function we want to set some
+ *		default values in gpio desc and have a common error
+ *		debug message, which provides this function.
+ * nodename:	Name of node for which gpio gets requested
+ *		used for gpio label name.
+ * args:	pointer to output arguments structure
+ * list_name:	Name of GPIO list
+ *		used for gpio label name.
+ * index:	gpio index in gpio list
+ *		used for gpio label name.
+ * desc:	pointer to gpio descriptor, filled from this
+ *		function.
+ * flags:	gpio flags to use.
+ * add_index:	should index added to gpio label name
+ * gpio_dev:	pointer to gpio device from which the gpio
+ *		will be requested. If NULL try to get the
+ *		gpio device with uclass_get_device_by_ofnode()
+ *
+ * return:	In error case this function sets default values in
+ *		gpio descriptor, also emmits a debug message.
+ *		On success it returns 0 else the error code from
+ *		function calls, or the error code passed through
+ *		ret to this function.
+ *
+ */
+static int gpio_request_tail(int ret, const char *nodename,
 			     struct ofnode_phandle_args *args,
 			     const char *list_name, int index,
-			     struct gpio_desc *desc, int flags, bool add_index)
+			     struct gpio_desc *desc, int flags,
+			     bool add_index, struct udevice *gpio_dev)
 {
-	desc->dev = NULL;
+	desc->dev = gpio_dev;
 	desc->offset = 0;
 	desc->flags = 0;
 	if (ret)
 		goto err;
 
-	ret = uclass_get_device_by_ofnode(UCLASS_GPIO, args->node,
-					  &desc->dev);
-	if (ret) {
-		debug("%s: uclass_get_device_by_of_offset failed\n", __func__);
-		goto err;
+	if (!desc->dev) {
+		ret = uclass_get_device_by_ofnode(UCLASS_GPIO, args->node,
+						  &desc->dev);
+		if (ret) {
+			debug("%s: uclass_get_device_by_ofnode failed\n",
+			      __func__);
+			goto err;
+		}
 	}
 	ret = gpio_find_and_xlate(desc, args);
 	if (ret) {
@@ -664,8 +826,7 @@ static int gpio_request_tail(int ret, ofnode node,
 		goto err;
 	}
 	ret = dm_gpio_requestf(desc, add_index ? "%s.%s%d" : "%s.%s",
-			       ofnode_get_name(node),
-			       list_name, index);
+			       nodename, list_name, index);
 	if (ret) {
 		debug("%s: dm_gpio_requestf failed\n", __func__);
 		goto err;
@@ -679,7 +840,7 @@ static int gpio_request_tail(int ret, ofnode node,
 	return 0;
 err:
 	debug("%s: Node '%s', property '%s', failed to request GPIO index %d: %d\n",
-	      __func__, ofnode_get_name(node), list_name, index, ret);
+	      __func__, nodename, list_name, index, ret);
 	return ret;
 }
 
@@ -693,8 +854,8 @@ static int _gpio_request_by_name_nodev(ofnode node, const char *list_name,
 	ret = ofnode_parse_phandle_with_args(node, list_name, "#gpio-cells", 0,
 					     index, &args);
 
-	return gpio_request_tail(ret, node, &args, list_name, index, desc,
-				 flags, add_index);
+	return gpio_request_tail(ret, ofnode_get_name(node), &args, list_name,
+				 index, desc, flags, add_index, NULL);
 }
 
 int gpio_request_by_name_nodev(ofnode node, const char *list_name, int index,
@@ -708,13 +869,14 @@ int gpio_request_by_name(struct udevice *dev, const char *list_name, int index,
 			 struct gpio_desc *desc, int flags)
 {
 	struct ofnode_phandle_args args;
+	ofnode node;
 	int ret;
 
 	ret = dev_read_phandle_with_args(dev, list_name, "#gpio-cells", 0,
 					 index, &args);
-
-	return gpio_request_tail(ret, dev_ofnode(dev), &args, list_name,
-				 index, desc, flags, index > 0);
+	node = dev_ofnode(dev);
+	return gpio_request_tail(ret, ofnode_get_name(node), &args, list_name,
+				 index, desc, flags, index > 0, NULL);
 }
 
 int gpio_request_list_by_name_nodev(ofnode node, const char *list_name,
@@ -855,11 +1017,50 @@ static int gpio_pre_remove(struct udevice *dev)
 	return gpio_renumber(dev);
 }
 
+int gpio_dev_request_index(struct udevice *dev, const char *nodename,
+			   char *list_name, int index, int flags,
+			   int dtflags, struct gpio_desc *desc)
+{
+	struct ofnode_phandle_args args;
+
+	args.node =  ofnode_null();
+	args.args_count = 2;
+	args.args[0] = index;
+	args.args[1] = dtflags;
+
+	return gpio_request_tail(0, nodename, &args, list_name, index, desc,
+				 flags, 0, dev);
+}
+
+static int gpio_post_bind(struct udevice *dev)
+{
+	struct udevice *child;
+	ofnode node;
+
+	if (IS_ENABLED(CONFIG_GPIO_HOG)) {
+		dev_for_each_subnode(node, dev) {
+			if (ofnode_read_bool(node, "gpio-hog")) {
+				const char *name = ofnode_get_name(node);
+				int ret;
+
+				ret = device_bind_driver_to_node(dev,
+								 "gpio_hog",
+								 name, node,
+								 &child);
+				if (ret)
+					return ret;
+			}
+		}
+	}
+	return 0;
+}
+
 UCLASS_DRIVER(gpio) = {
 	.id		= UCLASS_GPIO,
 	.name		= "gpio",
 	.flags		= DM_UC_FLAG_SEQ_ALIAS,
 	.post_probe	= gpio_post_probe,
+	.post_bind	= gpio_post_bind,
 	.pre_remove	= gpio_pre_remove,
 	.per_device_auto_alloc_size = sizeof(struct gpio_dev_priv),
 };
diff --git a/drivers/i2c/muxes/max96745.c b/drivers/i2c/muxes/max96745.c
index 359b1db..1a76c3f 100644
--- a/drivers/i2c/muxes/max96745.c
+++ b/drivers/i2c/muxes/max96745.c
@@ -52,23 +52,18 @@ static int max96745_power_on(struct max96745_priv *priv)
 
 	if (dm_gpio_is_valid(&priv->enable_gpio)) {
 		dm_gpio_set_value(&priv->enable_gpio, 1);
-		mdelay(100);
+		mdelay(200);
 	}
 
-	ret = dm_i2c_reg_clrset(priv->dev, 0x0010, RESET_ALL,
-				FIELD_PREP(RESET_ALL, 1));
+	ret = dm_i2c_reg_clrset(priv->dev, 0x0076, DIS_REM_CC,
+				FIELD_PREP(DIS_REM_CC, 1));
 	if (ret < 0)
 		return ret;
 
-	mdelay(100);
-
-	return 0;
-}
-
-static int max96745_power_off(struct max96745_priv *priv)
-{
-	if (dm_gpio_is_valid(&priv->enable_gpio))
-		dm_gpio_set_value(&priv->enable_gpio, 0);
+	ret = dm_i2c_reg_clrset(priv->dev, 0x0086, DIS_REM_CC,
+				FIELD_PREP(DIS_REM_CC, 1));
+	if (ret < 0)
+		return ret;
 
 	return 0;
 }
@@ -91,21 +86,7 @@ static int max96745_probe(struct udevice *dev)
 		return ret;
 	}
 
-	ret = max96745_power_on(priv);
-	if (ret) {
-		dev_err(dev, "%s: failed to power on: %d\n", __func__, ret);
-		return ret;
-	}
-
-	ret = dm_i2c_reg_read(dev, 0x002a);
-	if (ret < 0 || !FIELD_GET(LINK_LOCKED, ret)) {
-		max96745_power_off(priv);
-		dev_err(dev, "%s: GMSL link not locked\n", __func__);
-		return -ENODEV;
-	}
-
-	dm_i2c_reg_clrset(dev, 0x0076, DIS_REM_CC, FIELD_PREP(DIS_REM_CC, 1));
-	dm_i2c_reg_clrset(dev, 0x0086, DIS_REM_CC, FIELD_PREP(DIS_REM_CC, 1));
+	max96745_power_on(priv);
 
 	return 0;
 }
diff --git a/drivers/i2c/muxes/max96752f.c b/drivers/i2c/muxes/max96752f.c
index 1a227b7..b979859 100644
--- a/drivers/i2c/muxes/max96752f.c
+++ b/drivers/i2c/muxes/max96752f.c
@@ -9,6 +9,8 @@
 #include <i2c.h>
 #include <max96752f.h>
 
+#include <asm-generic/gpio.h>
+
 static int max96752f_select(struct udevice *mux, struct udevice *bus,
 			    uint channel)
 {
@@ -27,12 +29,13 @@ static const struct i2c_mux_ops max96752f_ops = {
 };
 
 static uint addr_list[] = {
-	0x48, 0x4a, 0x4c, 0x68, 0x6a, 0x6c, 0x28, 0x2a
+	0x48, 0x68, 0x6a, 0x4a, 0x4c, 0x6c, 0x28, 0x2a
 };
 
-static void max96752f_check_addr(struct udevice *dev)
+void max96752f_init(struct udevice *dev)
 {
 	struct dm_i2c_chip *chip = dev_get_parent_platdata(dev);
+	u32 stream_id = dev_read_u32_default(dev->parent, "reg", 0);
 	uint addr = chip->chip_addr;
 	int i, ret;
 
@@ -50,27 +53,34 @@ static void max96752f_check_addr(struct udevice *dev)
 	}
 
 	chip->chip_addr = addr;
+
+	dm_i2c_reg_clrset(dev, 0x0050, STR_SEL,
+			  FIELD_PREP(STR_SEL, stream_id));
+	dm_i2c_reg_clrset(dev, 0x0073, TX_SRC_ID,
+			  FIELD_PREP(TX_SRC_ID, stream_id));
 }
 
 static int max96752f_probe(struct udevice *dev)
 {
-	u32 stream_id = dev_read_u32_default(dev->parent, "reg", 0);
+	struct gpio_desc enable_gpio;
 	int ret;
 
 	ret = i2c_set_chip_offset_len(dev, 2);
 	if (ret)
 		return ret;
 
-	max96752f_check_addr(dev);
-
-	ret = dm_i2c_reg_read(dev, 0x000d);
-	if (ret < 0) {
-		dev_err(dev, "%s: failed to get dev id: %d\n", __func__, ret);
+	ret = gpio_request_by_name(dev, "enable-gpios", 0, &enable_gpio,
+				   GPIOD_IS_OUT);
+	if (ret && ret != -ENOENT) {
+		dev_err(dev, "%s: failed to get enable GPIO: %d\n",
+			__func__, ret);
 		return ret;
 	}
 
-	dm_i2c_reg_clrset(dev, 0x0050, STR_SEL, FIELD_PREP(STR_SEL, stream_id));
-	dm_i2c_reg_clrset(dev, 0x0073, TX_SRC_ID, FIELD_PREP(TX_SRC_ID, stream_id));
+	if (dm_gpio_is_valid(&enable_gpio)) {
+		dm_gpio_set_value(&enable_gpio, 1);
+		mdelay(200);
+	}
 
 	return 0;
 }
diff --git a/drivers/i2c/muxes/max96755f.c b/drivers/i2c/muxes/max96755f.c
index 7c2a53f..b9906da 100644
--- a/drivers/i2c/muxes/max96755f.c
+++ b/drivers/i2c/muxes/max96755f.c
@@ -82,14 +82,6 @@ static int max96755f_power_on(struct max96755f_priv *priv)
 	return 0;
 }
 
-static int max96755f_power_off(struct max96755f_priv *priv)
-{
-	if (dm_gpio_is_valid(&priv->enable_gpio))
-		dm_gpio_set_value(&priv->enable_gpio, 0);
-
-	return 0;
-}
-
 static int max96755f_probe(struct udevice *dev)
 {
 	struct max96755f_priv *priv = dev_get_priv(dev);
@@ -116,13 +108,6 @@ static int max96755f_probe(struct udevice *dev)
 		return ret;
 	}
 
-	ret = dm_i2c_reg_read(dev, 0x0013);
-	if (ret < 0 || !FIELD_GET(LOCKED, ret)) {
-		max96755f_power_off(priv);
-		dev_err(dev, "%s: GMSL link not locked\n", __func__);
-		return -ENODEV;
-	}
-
 	ofnode_for_each_subnode(child, dev_ofnode(dev)) {
 		if (!ofnode_is_available(child) ||
 		    !of_find_property(ofnode_to_np(child), "reg", NULL))
diff --git a/drivers/i2c/rk_i2c.c b/drivers/i2c/rk_i2c.c
index 9654214..52618ba 100644
--- a/drivers/i2c/rk_i2c.c
+++ b/drivers/i2c/rk_i2c.c
@@ -343,6 +343,7 @@ static int rk_i2c_read(struct rk_i2c *i2c, uchar chip, uint reg, uint r_len,
 			if (readl(&regs->ipd) & I2C_NAKRCVIPD) {
 				writel(I2C_NAKRCVIPD, &regs->ipd);
 				err = -EREMOTEIO;
+				goto i2c_exit;
 			}
 			if (readl(&regs->ipd) & I2C_MBRFIPD) {
 				writel(I2C_MBRFIPD, &regs->ipd);
@@ -438,6 +439,7 @@ static int rk_i2c_write(struct rk_i2c *i2c, uchar chip, uint reg, uint r_len,
 			if (readl(&regs->ipd) & I2C_NAKRCVIPD) {
 				writel(I2C_NAKRCVIPD, &regs->ipd);
 				err = -EREMOTEIO;
+				goto i2c_exit;
 			}
 			if (readl(&regs->ipd) & I2C_MBTFIPD) {
 				writel(I2C_MBTFIPD, &regs->ipd);
@@ -479,6 +481,8 @@ static int rockchip_i2c_xfer(struct udevice *bus, struct i2c_msg *msg,
 #ifdef CONFIG_IRQ
 	local_irq_save(flags);
 #endif
+	/* Nack enabled */
+	i2c->cfg |= I2C_CON_ACTACK;
 	for (; nmsgs > 0; nmsgs--, msg++) {
 		debug("i2c_xfer: chip=0x%x, len=0x%x\n", msg->addr, msg->len);
 
diff --git a/drivers/input/key-uclass.c b/drivers/input/key-uclass.c
index 1fe9f2c..f28869a 100644
--- a/drivers/input/key-uclass.c
+++ b/drivers/input/key-uclass.c
@@ -194,8 +194,7 @@ static void power_key_download(struct dm_key_uclass_platdata *uc_key)
 		if (uc_key->trig_cnt >= trig_cnt) {
 			printf("\nEnter download mode by pwrkey\n");
 			irq_handler_disable(uc_key->irq);
-			run_command("rockusb 0 $devtype $devnum", 0);
-			run_command("rbrom", 0);
+			run_command("download", 0);
 		}
 	}
 }
diff --git a/drivers/irq/irq-gpio-v2.c b/drivers/irq/irq-gpio-v2.c
index 0d1b9c4..9ad58d6 100644
--- a/drivers/irq/irq-gpio-v2.c
+++ b/drivers/irq/irq-gpio-v2.c
@@ -270,7 +270,8 @@ static int gpio_irq_get_gpio_level(int gpio_irq)
 	if (gpio >= bank->ngpio)
 		return -EINVAL;
 
-	return gpio_bit_rd(bank->regbase, GPIO_EXT_PORT, offset_to_bit(gpio));
+	/* NOTE: GPIO_EXT_PORT doesn't have _H/_L registers */
+	return readl(bank->regbase + GPIO_EXT_PORT) & offset_to_bit(gpio) ? 1 : 0;
 }
 
 static int gpio_irq_enable(int gpio_irq)
diff --git a/drivers/misc/Kconfig b/drivers/misc/Kconfig
index 7e009fc..9b238e0 100644
--- a/drivers/misc/Kconfig
+++ b/drivers/misc/Kconfig
@@ -92,6 +92,12 @@ config SPL_ROCKCHIP_HW_DECOMPRESS
 	  This driver support Decompress IP built-in Rockchip SoC, support
 	  LZ4, GZIP, PNG, ZLIB.
 
+config ROCKCHIP_SECURE_OTP
+	bool "Rockchip Secure OTP Support"
+	depends on MISC && !OPTEE_CLIENT
+	help
+	  Support read & write secure otp.
+
 config SPL_ROCKCHIP_SECURE_OTP
 	bool "Rockchip Secure OTP Support in spl"
 	depends on SPL_MISC
diff --git a/drivers/misc/rv1106-secure-otp.S b/drivers/misc/rv1106-secure-otp.S
index e08fa08..db318df 100644
--- a/drivers/misc/rv1106-secure-otp.S
+++ b/drivers/misc/rv1106-secure-otp.S
@@ -624,14 +624,19 @@ rv1106_secure_otp_write_2_bytes_noecc:
 	bls	.L36
 	.loc 1 222 0 discriminator 2
 	sub	r3, r6, #72
-	cmp	r3, #30
+	cmp	r3, #31
 	bls	.L36
 	.loc 1 222 0 discriminator 3
-	sub	r3, r6, #229
-	cmp	r3, #218
+	sub	r3, r6, #224
+	cmp	r3, #31
+	bls	.L36
+	.loc 1 222 0 discriminator 4
+	mvn	r3, #336
+	adds	r3, r6, r3
+	cmp	r3, #110
 	bls	.L36
 	.loc 1 225 0 is_stmt 1
-	mov	r1, r6
+	bic	r1, r10, #1
 	ldr	r0, .L48
 .LVL65:
 	bl	printf
@@ -2267,16 +2272,16 @@ rv1106_secure_otp_read:
 	.cfi_offset 11, -8
 	.cfi_offset 14, -4
 	.loc 1 150 0
-	mov	r5, r1
+	mov	r4, r1
 	mov	r8, r0
 	mov	r10, r2
 	mov	r7, r3
 	.loc 1 157 0
-	asrs	r5, r5, #1
+	asrs	r4, r4, #1
 	.loc 1 151 0
 	bl	dev_get_platdata
 .LVL213:
-	mov	r4, r0
+	mov	r5, r0
 .LVL214:
 	.loc 1 152 0
 	mov	r0, r8
@@ -2286,18 +2291,18 @@ rv1106_secure_otp_read:
 	mov	r8, r0
 .LVL217:
 	.loc 1 158 0
-	ldr	r1, [r4, #12]
-	mov	r3, r5
-	ldr	r2, [r4, #8]
-	ldr	r0, [r4, #4]
+	ldr	r1, [r5, #12]
+	mov	r3, r4
+	ldr	r2, [r5, #8]
+	ldr	r0, [r5, #4]
 .LVL218:
 	ldr	r6, [r8, #8]
 	blx	r6
 .LVL219:
 	.loc 1 161 0
-	sub	r3, r5, #112
+	sub	r3, r4, #112
 	.loc 1 164 0
-	mov	r0, r4
+	mov	r0, r5
 	.loc 1 161 0
 	cmp	r3, #3
 	.loc 1 162 0
@@ -2315,7 +2320,7 @@ rv1106_secure_otp_read:
 @ 0 "" 2
 	.thumb
 	.syntax unified
-	ldr	r3, [r4]
+	ldr	r3, [r5]
 	mov	fp, #65537
 .LBE171:
 	.loc 1 167 0
@@ -2341,25 +2346,29 @@ rv1106_secure_otp_read:
 	.loc 1 168 0
 	cbz	r7, .L69
 	.loc 1 170 0
-	cmp	r5, #448
+	cmp	r4, #448
 	bgt	.L73
 	.loc 1 173 0
-	cmp	r5, #64
+	cmp	r4, #64
 	beq	.L67
 	.loc 1 173 0 is_stmt 0 discriminator 1
-	sub	r3, r5, #112
+	sub	r3, r4, #112
 	cmp	r3, #3
 	bls	.L67
 	.loc 1 173 0 discriminator 2
-	sub	r3, r5, #72
-	cmp	r3, #30
+	sub	r3, r4, #72
+	cmp	r3, #31
 	bls	.L67
 	.loc 1 173 0 discriminator 3
-	sub	r3, r5, #229
-	cmp	r3, #218
+	sub	r3, r4, #224
+	cmp	r3, #31
+	bls	.L67
+	.loc 1 173 0 discriminator 4
+	sub	r3, r4, #336
+	cmp	r3, #111
 	bls	.L67
 	.loc 1 176 0 is_stmt 1
-	mov	r1, r5
+	lsls	r1, r4, #1
 	ldr	r0, .L78+4
 	bl	printf
 .LVL224:
@@ -2370,7 +2379,7 @@ rv1106_secure_otp_read:
 .L67:
 .LBB174:
 	.loc 1 180 0
-	orr	r1, r5, r2
+	orr	r1, r4, r2
 	str	r2, [sp, #4]
 .LVL225:
 	.syntax unified
@@ -2379,10 +2388,10 @@ rv1106_secure_otp_read:
 @ 0 "" 2
 	.thumb
 	.syntax unified
-	ldr	r3, [r4]
+	ldr	r3, [r5]
 .LBE174:
 	.loc 1 182 0
-	adds	r5, r5, #1
+	adds	r4, r4, #1
 .LVL226:
 .LBB175:
 	.loc 1 180 0
@@ -2396,12 +2405,12 @@ rv1106_secure_otp_read:
 @ 0 "" 2
 	.thumb
 	.syntax unified
-	ldr	r3, [r4]
+	ldr	r3, [r5]
 .LBE176:
 	.loc 1 185 0
 	movs	r1, #4
 .LVL227:
-	mov	r0, r4
+	mov	r0, r5
 .LBB177:
 	.loc 1 183 0
 	str	fp, [r3, #264]
@@ -2429,20 +2438,20 @@ rv1106_secure_otp_read:
 @ 0 "" 2
 	.thumb
 	.syntax unified
-	ldr	r3, [r4]
+	ldr	r3, [r5]
 	mov	r2, #65536
 .LBE178:
 	.loc 1 203 0
 	ldr	r6, [r8, #12]
-	ldr	r1, [r4, #12]
+	ldr	r1, [r5, #12]
 .LBB179:
 	.loc 1 201 0
 	str	r2, [r3, #256]
 .LBE179:
 	.loc 1 203 0
-	mov	r3, r5
-	ldr	r2, [r4, #8]
-	ldr	r0, [r4, #4]
+	mov	r3, r4
+	ldr	r2, [r5, #8]
+	ldr	r0, [r5, #4]
 	blx	r6
 .LVL232:
 .L62:
@@ -2458,7 +2467,7 @@ rv1106_secure_otp_read:
 	.cfi_restore_state
 .LBB180:
 	.loc 1 191 0
-	ldr	r3, [r4]
+	ldr	r3, [r5]
 	ldrh	r3, [r3, #292]
 	uxth	r3, r3
 .LVL234:
@@ -2652,13 +2661,16 @@ rv1106_secure_otp_write:
 	cmp	r3, #3
 	bls	.L95
 	sub	r3, r10, #72
-	cmp	r3, #30
+	cmp	r3, #31
+	bls	.L95
+	sub	r3, r10, #224
+	cmp	r3, #31
 	bls	.L95
-	sub	r3, r10, #229
-	cmp	r3, #218
+	sub	r3, r10, #336
+	cmp	r3, #111
 	bls	.L95
 	.loc 1 458 0
-	mov	r1, r10
+	bic	r1, r5, #1
 	ldr	r0, .L118+4
 .LVL262:
 	bl	printf
@@ -3876,35 +3888,35 @@ rv1106_secure_otp_write:
 .LFE276:
 	.size	rv1106_secure_otp_write, .-rv1106_secure_otp_write
 	.global	_u_boot_list_2_driver_2_rockchip_secure_otp
-	.section	.rodata.__func__.10166,"a",%progbits
+	.section	.rodata.__func__.10129,"a",%progbits
 	.set	.LANCHOR0,. + 0
-	.type	__func__.10166, %object
-	.size	__func__.10166, 32
-__func__.10166:
+	.type	__func__.10129, %object
+	.size	__func__.10129, 32
+__func__.10129:
 	.ascii	"rockchip_secure_otp_wait_status\000"
-	.section	.rodata.__func__.10209,"a",%progbits
+	.section	.rodata.__func__.10172,"a",%progbits
 	.set	.LANCHOR2,. + 0
-	.type	__func__.10209, %object
-	.size	__func__.10209, 31
-__func__.10209:
+	.type	__func__.10172, %object
+	.size	__func__.10172, 31
+__func__.10172:
 	.ascii	"rockchip_secure_otp_ecc_enable\000"
-	.section	.rodata.__func__.10227,"a",%progbits
+	.section	.rodata.__func__.10190,"a",%progbits
 	.set	.LANCHOR3,. + 0
-	.type	__func__.10227, %object
-	.size	__func__.10227, 23
-__func__.10227:
+	.type	__func__.10190, %object
+	.size	__func__.10190, 23
+__func__.10190:
 	.ascii	"rv1106_secure_otp_read\000"
-	.section	.rodata.__func__.10262,"a",%progbits
+	.section	.rodata.__func__.10225,"a",%progbits
 	.set	.LANCHOR1,. + 0
-	.type	__func__.10262, %object
-	.size	__func__.10262, 38
-__func__.10262:
+	.type	__func__.10225, %object
+	.size	__func__.10225, 38
+__func__.10225:
 	.ascii	"rv1106_secure_otp_write_2_bytes_noecc\000"
-	.section	.rodata.__func__.10483,"a",%progbits
+	.section	.rodata.__func__.10446,"a",%progbits
 	.set	.LANCHOR4,. + 0
-	.type	__func__.10483, %object
-	.size	__func__.10483, 32
-__func__.10483:
+	.type	__func__.10446, %object
+	.size	__func__.10446, 32
+__func__.10446:
 	.ascii	"rv1106_secure_otp_write_2_bytes\000"
 	.section	.rodata.rockchip_otp_ids,"a",%progbits
 	.align	2
@@ -3967,7 +3979,7 @@ rv1106_data:
 	.ascii	"%s timeout during write setup 8\012\000"
 	.section	.rodata.rv1106_secure_otp_write_2_bytes_noecc.str1.1,"aMS",%progbits,1
 .LC4:
-	.ascii	"Please input correct addr, offset is %x\012\000"
+	.ascii	"Please input correct addr, offset is 0x%x\012\000"
 .LC5:
 	.ascii	"%s timeout during write setup 1\012\000"
 .LC6:
@@ -4014,35 +4026,33 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.file 17 "include/linux/../../scripts/dtc/libfdt/fdt.h"
 	.file 18 "include/linux/libfdt.h"
 	.file 19 "include/image.h"
-	.file 20 "include/u-boot/sha1.h"
-	.file 21 "include/u-boot/sha256.h"
-	.file 22 "./arch/arm/include/asm/global_data.h"
-	.file 23 "include/asm-generic/global_data.h"
-	.file 24 "include/dm/of.h"
-	.file 25 "include/net.h"
-	.file 26 "include/dm/uclass-id.h"
-	.file 27 "include/dm/ofnode.h"
-	.file 28 "include/malloc.h"
-	.file 29 "include/linux/compat.h"
-	.file 30 "include/dm/uclass.h"
-	.file 31 "include/asm-generic/ioctl.h"
-	.file 32 "include/misc.h"
-	.file 33 "include/rockchip-otp.h"
-	.file 34 "include/dm/read.h"
-	.file 35 "include/stdio.h"
-	.file 36 "include/linux/delay.h"
-	.file 37 "include/log.h"
+	.file 20 "./arch/arm/include/asm/global_data.h"
+	.file 21 "include/asm-generic/global_data.h"
+	.file 22 "include/dm/of.h"
+	.file 23 "include/net.h"
+	.file 24 "include/dm/uclass-id.h"
+	.file 25 "include/dm/ofnode.h"
+	.file 26 "include/malloc.h"
+	.file 27 "include/linux/compat.h"
+	.file 28 "include/dm/uclass.h"
+	.file 29 "include/asm-generic/ioctl.h"
+	.file 30 "include/misc.h"
+	.file 31 "include/rockchip-otp.h"
+	.file 32 "include/dm/read.h"
+	.file 33 "include/stdio.h"
+	.file 34 "include/linux/delay.h"
+	.file 35 "include/log.h"
 	.section	.debug_info,"",%progbits
 .Ldebug_info0:
-	.4byte	0x3c7f
+	.4byte	0x3c4f
 	.2byte	0x4
 	.4byte	.Ldebug_abbrev0
 	.byte	0x4
 	.uleb128 0x1
-	.4byte	.LASF457
+	.4byte	.LASF454
 	.byte	0xc
-	.4byte	.LASF458
-	.4byte	.LASF459
+	.4byte	.LASF455
+	.4byte	.LASF456
 	.4byte	.Ldebug_ranges0+0x380
 	.4byte	0
 	.4byte	.Ldebug_line0
@@ -4169,8 +4179,6 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.byte	0x4
 	.byte	0x69
 	.4byte	0x5e
-	.uleb128 0x7
-	.4byte	0x112
 	.uleb128 0x2
 	.4byte	.LASF19
 	.byte	0x4
@@ -4194,35 +4202,35 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LASF23
 	.uleb128 0xa
 	.4byte	0xe3
-	.4byte	0x157
+	.4byte	0x152
 	.uleb128 0xb
 	.byte	0
 	.uleb128 0xc
 	.4byte	.LASF24
 	.byte	0x7
 	.2byte	0x140
-	.4byte	0x14c
+	.4byte	0x147
 	.uleb128 0xc
 	.4byte	.LASF25
 	.byte	0x7
 	.2byte	0x143
-	.4byte	0x14c
+	.4byte	0x147
 	.uleb128 0xc
 	.4byte	.LASF26
 	.byte	0x7
 	.2byte	0x143
-	.4byte	0x14c
+	.4byte	0x147
 	.uleb128 0xd
 	.4byte	.LASF45
 	.byte	0x54
 	.byte	0x8
 	.byte	0x83
-	.4byte	0x260
+	.4byte	0x25b
 	.uleb128 0xe
 	.4byte	.LASF27
 	.byte	0x8
 	.byte	0x84
-	.4byte	0x1381
+	.4byte	0x1349
 	.byte	0
 	.uleb128 0xe
 	.4byte	.LASF28
@@ -4234,25 +4242,25 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LASF29
 	.byte	0x8
 	.byte	0x86
-	.4byte	0x138
+	.4byte	0x133
 	.byte	0x8
 	.uleb128 0xe
 	.4byte	.LASF30
 	.byte	0x8
 	.byte	0x87
-	.4byte	0x138
+	.4byte	0x133
 	.byte	0xc
 	.uleb128 0xe
 	.4byte	.LASF31
 	.byte	0x8
 	.byte	0x88
-	.4byte	0x138
+	.4byte	0x133
 	.byte	0x10
 	.uleb128 0xe
 	.4byte	.LASF32
 	.byte	0x8
 	.byte	0x89
-	.4byte	0x1328
+	.4byte	0x12f0
 	.byte	0x14
 	.uleb128 0xe
 	.4byte	.LASF33
@@ -4264,55 +4272,55 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LASF34
 	.byte	0x8
 	.byte	0x8b
-	.4byte	0x260
+	.4byte	0x25b
 	.byte	0x1c
 	.uleb128 0xe
 	.4byte	.LASF35
 	.byte	0x8
 	.byte	0x8c
-	.4byte	0x138
+	.4byte	0x133
 	.byte	0x20
 	.uleb128 0xe
 	.4byte	.LASF36
 	.byte	0x8
 	.byte	0x8d
-	.4byte	0x13d0
+	.4byte	0x1398
 	.byte	0x24
 	.uleb128 0xe
 	.4byte	.LASF37
 	.byte	0x8
 	.byte	0x8e
-	.4byte	0x138
+	.4byte	0x133
 	.byte	0x28
 	.uleb128 0xe
 	.4byte	.LASF38
 	.byte	0x8
 	.byte	0x8f
-	.4byte	0x138
+	.4byte	0x133
 	.byte	0x2c
 	.uleb128 0xe
 	.4byte	.LASF39
 	.byte	0x8
 	.byte	0x90
-	.4byte	0x293
+	.4byte	0x28e
 	.byte	0x30
 	.uleb128 0xe
 	.4byte	.LASF40
 	.byte	0x8
 	.byte	0x91
-	.4byte	0x293
+	.4byte	0x28e
 	.byte	0x38
 	.uleb128 0xe
 	.4byte	.LASF41
 	.byte	0x8
 	.byte	0x92
-	.4byte	0x293
+	.4byte	0x28e
 	.byte	0x40
 	.uleb128 0xe
 	.4byte	.LASF42
 	.byte	0x8
 	.byte	0x93
-	.4byte	0x122
+	.4byte	0x11d
 	.byte	0x48
 	.uleb128 0xe
 	.4byte	.LASF43
@@ -4329,24 +4337,24 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.byte	0
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x17b
+	.4byte	0x176
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x26c
+	.4byte	0x267
 	.uleb128 0x10
 	.uleb128 0xa
 	.4byte	0x107
-	.4byte	0x278
+	.4byte	0x273
 	.uleb128 0xb
 	.byte	0
 	.uleb128 0x4
 	.4byte	.LASF44
 	.byte	0x9
 	.byte	0x10
-	.4byte	0x26d
+	.4byte	0x268
 	.uleb128 0xa
 	.4byte	0x30
-	.4byte	0x293
+	.4byte	0x28e
 	.uleb128 0x11
 	.4byte	0xd6
 	.byte	0x5
@@ -4356,29 +4364,29 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.byte	0x8
 	.byte	0xa
 	.byte	0x16
-	.4byte	0x2b8
+	.4byte	0x2b3
 	.uleb128 0xe
 	.4byte	.LASF47
 	.byte	0xa
 	.byte	0x17
-	.4byte	0x2b8
+	.4byte	0x2b3
 	.byte	0
 	.uleb128 0xe
 	.4byte	.LASF48
 	.byte	0xa
 	.byte	0x17
-	.4byte	0x2b8
+	.4byte	0x2b3
 	.byte	0x4
 	.byte	0
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x293
+	.4byte	0x28e
 	.uleb128 0xd
 	.4byte	.LASF49
 	.byte	0x8
 	.byte	0xb
 	.byte	0xf
-	.4byte	0x2e3
+	.4byte	0x2de
 	.uleb128 0xe
 	.4byte	.LASF28
 	.byte	0xb
@@ -4389,14 +4397,14 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LASF50
 	.byte	0xb
 	.byte	0x11
-	.4byte	0x2fc
+	.4byte	0x2f7
 	.byte	0x4
 	.byte	0
 	.uleb128 0x7
-	.4byte	0x2be
+	.4byte	0x2b9
 	.uleb128 0x12
 	.4byte	0x50
-	.4byte	0x2fc
+	.4byte	0x2f7
 	.uleb128 0x13
 	.4byte	0x50
 	.uleb128 0x13
@@ -4404,24 +4412,24 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.byte	0
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x2e8
-	.uleb128 0xa
 	.4byte	0x2e3
-	.4byte	0x30d
+	.uleb128 0xa
+	.4byte	0x2de
+	.4byte	0x308
 	.uleb128 0xb
 	.byte	0
 	.uleb128 0x7
-	.4byte	0x302
+	.4byte	0x2fd
 	.uleb128 0x4
 	.4byte	.LASF49
 	.byte	0xb
 	.byte	0xe1
-	.4byte	0x30d
+	.4byte	0x308
 	.uleb128 0x14
 	.2byte	0xa10
 	.byte	0xc
 	.byte	0x13
-	.4byte	0x371
+	.4byte	0x36c
 	.uleb128 0xe
 	.4byte	.LASF51
 	.byte	0xc
@@ -4444,55 +4452,55 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LASF54
 	.byte	0xc
 	.byte	0x17
-	.4byte	0x371
+	.4byte	0x36c
 	.byte	0xc
 	.uleb128 0x15
 	.4byte	.LASF55
 	.byte	0xc
 	.byte	0x18
-	.4byte	0x382
+	.4byte	0x37d
 	.2byte	0x80c
 	.uleb128 0x16
 	.ascii	"mtd\000"
 	.byte	0xc
 	.byte	0x31
-	.4byte	0x398
+	.4byte	0x393
 	.2byte	0xa0c
 	.byte	0
 	.uleb128 0xa
 	.4byte	0x107
-	.4byte	0x382
+	.4byte	0x37d
 	.uleb128 0x17
 	.4byte	0xd6
 	.2byte	0x1ff
 	.byte	0
 	.uleb128 0xa
 	.4byte	0x25
-	.4byte	0x393
+	.4byte	0x38e
 	.uleb128 0x17
 	.4byte	0xd6
 	.2byte	0x1ff
 	.byte	0
 	.uleb128 0x18
-	.4byte	.LASF316
+	.4byte	.LASF313
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x393
+	.4byte	0x38e
 	.uleb128 0x2
 	.4byte	.LASF56
 	.byte	0xc
 	.byte	0x37
-	.4byte	0x31d
+	.4byte	0x318
 	.uleb128 0xa
-	.4byte	0x39e
-	.4byte	0x3b4
+	.4byte	0x399
+	.4byte	0x3af
 	.uleb128 0xb
 	.byte	0
 	.uleb128 0x4
 	.4byte	.LASF57
 	.byte	0xc
 	.byte	0x39
-	.4byte	0x3a9
+	.4byte	0x3a4
 	.uleb128 0x3
 	.byte	0x8
 	.byte	0x4
@@ -4502,7 +4510,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.byte	0x8
 	.byte	0xd
 	.byte	0x10
-	.4byte	0x3eb
+	.4byte	0x3e6
 	.uleb128 0xe
 	.4byte	.LASF60
 	.byte	0xd
@@ -4521,7 +4529,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.byte	0x90
 	.byte	0xd
 	.byte	0x15
-	.4byte	0x41c
+	.4byte	0x417
 	.uleb128 0xf
 	.ascii	"cnt\000"
 	.byte	0xd
@@ -4538,12 +4546,12 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LASF62
 	.byte	0xd
 	.byte	0x18
-	.4byte	0x41c
+	.4byte	0x417
 	.byte	0x8
 	.byte	0
 	.uleb128 0xa
-	.4byte	0x3c6
-	.4byte	0x42c
+	.4byte	0x3c1
+	.4byte	0x427
 	.uleb128 0x11
 	.4byte	0xd6
 	.byte	0x10
@@ -4553,30 +4561,30 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.2byte	0x120
 	.byte	0xd
 	.byte	0x1b
-	.4byte	0x452
+	.4byte	0x44d
 	.uleb128 0xe
 	.4byte	.LASF63
 	.byte	0xd
 	.byte	0x1c
-	.4byte	0x3eb
+	.4byte	0x3e6
 	.byte	0
 	.uleb128 0xe
 	.4byte	.LASF64
 	.byte	0xd
 	.byte	0x1d
-	.4byte	0x3eb
+	.4byte	0x3e6
 	.byte	0x90
 	.byte	0
 	.uleb128 0x1a
 	.ascii	"lmb\000"
 	.byte	0xd
 	.byte	0x20
-	.4byte	0x42c
+	.4byte	0x427
 	.uleb128 0x1b
 	.byte	0x10
 	.byte	0xe
 	.byte	0x5d
-	.4byte	0x47e
+	.4byte	0x479
 	.uleb128 0xe
 	.4byte	.LASF54
 	.byte	0xe
@@ -4595,7 +4603,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.byte	0x70
 	.byte	0xe
 	.byte	0x1b
-	.4byte	0x57b
+	.4byte	0x576
 	.uleb128 0xe
 	.4byte	.LASF66
 	.byte	0xe
@@ -4672,7 +4680,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LASF78
 	.byte	0xe
 	.byte	0x33
-	.4byte	0x283
+	.4byte	0x27e
 	.byte	0x30
 	.uleb128 0xe
 	.4byte	.LASF79
@@ -4714,12 +4722,12 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LASF85
 	.byte	0xe
 	.byte	0x60
-	.4byte	0x57b
+	.4byte	0x576
 	.byte	0x50
 	.byte	0
 	.uleb128 0xa
-	.4byte	0x45d
-	.4byte	0x58b
+	.4byte	0x458
+	.4byte	0x586
 	.uleb128 0x11
 	.4byte	0xd6
 	.byte	0x1
@@ -4728,7 +4736,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LASF86
 	.byte	0xe
 	.byte	0x62
-	.4byte	0x47e
+	.4byte	0x479
 	.uleb128 0x4
 	.4byte	.LASF87
 	.byte	0xf
@@ -4768,129 +4776,129 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LASF94
 	.byte	0x10
 	.byte	0x11
-	.4byte	0x12d
+	.4byte	0x128
 	.uleb128 0xd
 	.4byte	.LASF95
 	.byte	0x28
 	.byte	0x11
 	.byte	0x39
-	.4byte	0x673
+	.4byte	0x66e
 	.uleb128 0xe
 	.4byte	.LASF96
 	.byte	0x11
 	.byte	0x3a
-	.4byte	0x5e3
+	.4byte	0x5de
 	.byte	0
 	.uleb128 0xe
 	.4byte	.LASF97
 	.byte	0x11
 	.byte	0x3b
-	.4byte	0x5e3
+	.4byte	0x5de
 	.byte	0x4
 	.uleb128 0xe
 	.4byte	.LASF98
 	.byte	0x11
 	.byte	0x3c
-	.4byte	0x5e3
+	.4byte	0x5de
 	.byte	0x8
 	.uleb128 0xe
 	.4byte	.LASF99
 	.byte	0x11
 	.byte	0x3d
-	.4byte	0x5e3
+	.4byte	0x5de
 	.byte	0xc
 	.uleb128 0xe
 	.4byte	.LASF100
 	.byte	0x11
 	.byte	0x3e
-	.4byte	0x5e3
+	.4byte	0x5de
 	.byte	0x10
 	.uleb128 0xe
 	.4byte	.LASF101
 	.byte	0x11
 	.byte	0x3f
-	.4byte	0x5e3
+	.4byte	0x5de
 	.byte	0x14
 	.uleb128 0xe
 	.4byte	.LASF102
 	.byte	0x11
 	.byte	0x40
-	.4byte	0x5e3
+	.4byte	0x5de
 	.byte	0x18
 	.uleb128 0xe
 	.4byte	.LASF103
 	.byte	0x11
 	.byte	0x43
-	.4byte	0x5e3
+	.4byte	0x5de
 	.byte	0x1c
 	.uleb128 0xe
 	.4byte	.LASF104
 	.byte	0x11
 	.byte	0x46
-	.4byte	0x5e3
+	.4byte	0x5de
 	.byte	0x20
 	.uleb128 0xe
 	.4byte	.LASF105
 	.byte	0x11
 	.byte	0x49
-	.4byte	0x5e3
+	.4byte	0x5de
 	.byte	0x24
 	.byte	0
 	.uleb128 0xc
 	.4byte	.LASF106
 	.byte	0x12
 	.2byte	0x136
-	.4byte	0x67f
+	.4byte	0x67a
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x5ee
+	.4byte	0x5e9
 	.uleb128 0x1c
 	.4byte	.LASF107
 	.byte	0x40
 	.byte	0x13
 	.2byte	0x137
-	.4byte	0x72f
+	.4byte	0x72a
 	.uleb128 0x1d
 	.4byte	.LASF108
 	.byte	0x13
 	.2byte	0x138
-	.4byte	0x12d
+	.4byte	0x128
 	.byte	0
 	.uleb128 0x1d
 	.4byte	.LASF109
 	.byte	0x13
 	.2byte	0x139
-	.4byte	0x12d
+	.4byte	0x128
 	.byte	0x4
 	.uleb128 0x1d
 	.4byte	.LASF110
 	.byte	0x13
 	.2byte	0x13a
-	.4byte	0x12d
+	.4byte	0x128
 	.byte	0x8
 	.uleb128 0x1d
 	.4byte	.LASF111
 	.byte	0x13
 	.2byte	0x13b
-	.4byte	0x12d
+	.4byte	0x128
 	.byte	0xc
 	.uleb128 0x1d
 	.4byte	.LASF112
 	.byte	0x13
 	.2byte	0x13c
-	.4byte	0x12d
+	.4byte	0x128
 	.byte	0x10
 	.uleb128 0x1d
 	.4byte	.LASF113
 	.byte	0x13
 	.2byte	0x13d
-	.4byte	0x12d
+	.4byte	0x128
 	.byte	0x14
 	.uleb128 0x1d
 	.4byte	.LASF114
 	.byte	0x13
 	.2byte	0x13e
-	.4byte	0x12d
+	.4byte	0x128
 	.byte	0x18
 	.uleb128 0x1d
 	.4byte	.LASF115
@@ -4920,12 +4928,12 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LASF119
 	.byte	0x13
 	.2byte	0x143
-	.4byte	0x72f
+	.4byte	0x72a
 	.byte	0x20
 	.byte	0
 	.uleb128 0xa
 	.4byte	0x112
-	.4byte	0x73f
+	.4byte	0x73a
 	.uleb128 0x11
 	.4byte	0xd6
 	.byte	0x1f
@@ -4934,13 +4942,13 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LASF120
 	.byte	0x13
 	.2byte	0x144
-	.4byte	0x685
+	.4byte	0x680
 	.uleb128 0x1c
 	.4byte	.LASF121
 	.byte	0x18
 	.byte	0x13
 	.2byte	0x146
-	.4byte	0x7cd
+	.4byte	0x7c8
 	.uleb128 0x1d
 	.4byte	.LASF54
 	.byte	0x13
@@ -5000,24 +5008,24 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LASF128
 	.byte	0x13
 	.2byte	0x14c
-	.4byte	0x74b
+	.4byte	0x746
 	.uleb128 0x20
 	.4byte	.LASF129
 	.2byte	0x1e4
 	.byte	0x13
 	.2byte	0x152
-	.4byte	0x96c
+	.4byte	0x967
 	.uleb128 0x1d
 	.4byte	.LASF130
 	.byte	0x13
 	.2byte	0x158
-	.4byte	0x96c
+	.4byte	0x967
 	.byte	0
 	.uleb128 0x1d
 	.4byte	.LASF131
 	.byte	0x13
 	.2byte	0x159
-	.4byte	0x73f
+	.4byte	0x73a
 	.byte	0x4
 	.uleb128 0x1d
 	.4byte	.LASF132
@@ -5035,7 +5043,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LASF134
 	.byte	0x13
 	.2byte	0x15f
-	.4byte	0x138
+	.4byte	0x133
 	.byte	0x4c
 	.uleb128 0x1d
 	.4byte	.LASF135
@@ -5053,7 +5061,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LASF137
 	.byte	0x13
 	.2byte	0x163
-	.4byte	0x138
+	.4byte	0x133
 	.byte	0x58
 	.uleb128 0x1d
 	.4byte	.LASF138
@@ -5071,7 +5079,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LASF140
 	.byte	0x13
 	.2byte	0x167
-	.4byte	0x138
+	.4byte	0x133
 	.byte	0x64
 	.uleb128 0x1d
 	.4byte	.LASF141
@@ -5089,7 +5097,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LASF143
 	.byte	0x13
 	.2byte	0x16b
-	.4byte	0x138
+	.4byte	0x133
 	.byte	0x70
 	.uleb128 0x1d
 	.4byte	.LASF144
@@ -5107,7 +5115,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.ascii	"os\000"
 	.byte	0x13
 	.2byte	0x171
-	.4byte	0x7cd
+	.4byte	0x7c8
 	.byte	0x7c
 	.uleb128 0x1f
 	.ascii	"ep\000"
@@ -5167,7 +5175,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.ascii	"kbd\000"
 	.byte	0x13
 	.2byte	0x17d
-	.4byte	0x972
+	.4byte	0x96d
 	.byte	0xb8
 	.uleb128 0x1d
 	.4byte	.LASF154
@@ -5185,836 +5193,813 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.ascii	"lmb\000"
 	.byte	0x13
 	.2byte	0x190
-	.4byte	0x42c
+	.4byte	0x427
 	.byte	0xc4
 	.byte	0
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x73f
+	.4byte	0x73a
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x58b
+	.4byte	0x586
 	.uleb128 0x1e
 	.4byte	.LASF156
 	.byte	0x13
 	.2byte	0x196
-	.4byte	0x7d9
+	.4byte	0x7d4
 	.uleb128 0xc
 	.4byte	.LASF157
 	.byte	0x13
 	.2byte	0x198
-	.4byte	0x978
-	.uleb128 0xa
-	.4byte	0x11d
-	.4byte	0x99b
-	.uleb128 0xb
-	.byte	0
-	.uleb128 0x7
-	.4byte	0x990
-	.uleb128 0x4
-	.4byte	.LASF158
-	.byte	0x14
-	.byte	0x1a
-	.4byte	0x99b
-	.uleb128 0x4
-	.4byte	.LASF159
-	.byte	0x15
-	.byte	0x7
-	.4byte	0x99b
+	.4byte	0x973
 	.uleb128 0x21
-	.4byte	.LASF350
+	.4byte	.LASF347
 	.byte	0x4
 	.4byte	0x50
-	.byte	0x1a
+	.byte	0x18
 	.byte	0xe
-	.4byte	0xc19
+	.4byte	0xbee
 	.uleb128 0x22
-	.4byte	.LASF160
+	.4byte	.LASF158
 	.byte	0
 	.uleb128 0x22
-	.4byte	.LASF161
+	.4byte	.LASF159
 	.byte	0x1
 	.uleb128 0x22
-	.4byte	.LASF162
+	.4byte	.LASF160
 	.byte	0x2
 	.uleb128 0x22
-	.4byte	.LASF163
+	.4byte	.LASF161
 	.byte	0x3
 	.uleb128 0x22
-	.4byte	.LASF164
+	.4byte	.LASF162
 	.byte	0x4
 	.uleb128 0x22
-	.4byte	.LASF165
+	.4byte	.LASF163
 	.byte	0x5
 	.uleb128 0x22
-	.4byte	.LASF166
+	.4byte	.LASF164
 	.byte	0x6
 	.uleb128 0x22
-	.4byte	.LASF167
+	.4byte	.LASF165
 	.byte	0x7
 	.uleb128 0x22
-	.4byte	.LASF168
+	.4byte	.LASF166
 	.byte	0x8
 	.uleb128 0x22
-	.4byte	.LASF169
+	.4byte	.LASF167
 	.byte	0x9
 	.uleb128 0x22
-	.4byte	.LASF170
+	.4byte	.LASF168
 	.byte	0xa
 	.uleb128 0x22
-	.4byte	.LASF171
+	.4byte	.LASF169
 	.byte	0xb
 	.uleb128 0x22
-	.4byte	.LASF172
+	.4byte	.LASF170
 	.byte	0xc
 	.uleb128 0x22
-	.4byte	.LASF173
+	.4byte	.LASF171
 	.byte	0xd
 	.uleb128 0x22
-	.4byte	.LASF174
+	.4byte	.LASF172
 	.byte	0xe
 	.uleb128 0x22
-	.4byte	.LASF175
+	.4byte	.LASF173
 	.byte	0xf
 	.uleb128 0x22
-	.4byte	.LASF176
+	.4byte	.LASF174
 	.byte	0x10
 	.uleb128 0x22
-	.4byte	.LASF177
+	.4byte	.LASF175
 	.byte	0x11
 	.uleb128 0x22
-	.4byte	.LASF178
+	.4byte	.LASF176
 	.byte	0x12
 	.uleb128 0x22
-	.4byte	.LASF179
+	.4byte	.LASF177
 	.byte	0x13
 	.uleb128 0x22
-	.4byte	.LASF180
+	.4byte	.LASF178
 	.byte	0x14
 	.uleb128 0x22
-	.4byte	.LASF181
+	.4byte	.LASF179
 	.byte	0x15
 	.uleb128 0x22
-	.4byte	.LASF182
+	.4byte	.LASF180
 	.byte	0x16
 	.uleb128 0x22
-	.4byte	.LASF183
+	.4byte	.LASF181
 	.byte	0x17
 	.uleb128 0x22
-	.4byte	.LASF184
+	.4byte	.LASF182
 	.byte	0x18
 	.uleb128 0x22
-	.4byte	.LASF185
+	.4byte	.LASF183
 	.byte	0x19
 	.uleb128 0x22
-	.4byte	.LASF186
+	.4byte	.LASF184
 	.byte	0x1a
 	.uleb128 0x22
-	.4byte	.LASF187
+	.4byte	.LASF185
 	.byte	0x1b
 	.uleb128 0x22
-	.4byte	.LASF188
+	.4byte	.LASF186
 	.byte	0x1c
 	.uleb128 0x22
-	.4byte	.LASF189
+	.4byte	.LASF187
 	.byte	0x1d
 	.uleb128 0x22
-	.4byte	.LASF190
+	.4byte	.LASF188
 	.byte	0x1e
 	.uleb128 0x22
-	.4byte	.LASF191
+	.4byte	.LASF189
 	.byte	0x1f
 	.uleb128 0x22
-	.4byte	.LASF192
+	.4byte	.LASF190
 	.byte	0x20
 	.uleb128 0x22
-	.4byte	.LASF193
+	.4byte	.LASF191
 	.byte	0x21
 	.uleb128 0x22
-	.4byte	.LASF194
+	.4byte	.LASF192
 	.byte	0x22
 	.uleb128 0x22
-	.4byte	.LASF195
+	.4byte	.LASF193
 	.byte	0x23
 	.uleb128 0x22
-	.4byte	.LASF196
+	.4byte	.LASF194
 	.byte	0x24
 	.uleb128 0x22
-	.4byte	.LASF197
+	.4byte	.LASF195
 	.byte	0x25
 	.uleb128 0x22
-	.4byte	.LASF198
+	.4byte	.LASF196
 	.byte	0x26
 	.uleb128 0x22
-	.4byte	.LASF199
+	.4byte	.LASF197
 	.byte	0x27
 	.uleb128 0x22
-	.4byte	.LASF200
+	.4byte	.LASF198
 	.byte	0x28
 	.uleb128 0x22
-	.4byte	.LASF201
+	.4byte	.LASF199
 	.byte	0x29
 	.uleb128 0x22
-	.4byte	.LASF202
+	.4byte	.LASF200
 	.byte	0x2a
 	.uleb128 0x22
-	.4byte	.LASF203
+	.4byte	.LASF201
 	.byte	0x2b
 	.uleb128 0x22
-	.4byte	.LASF204
+	.4byte	.LASF202
 	.byte	0x2c
 	.uleb128 0x22
-	.4byte	.LASF205
+	.4byte	.LASF203
 	.byte	0x2d
 	.uleb128 0x22
-	.4byte	.LASF206
+	.4byte	.LASF204
 	.byte	0x2e
 	.uleb128 0x22
-	.4byte	.LASF207
+	.4byte	.LASF205
 	.byte	0x2f
 	.uleb128 0x22
-	.4byte	.LASF208
+	.4byte	.LASF206
 	.byte	0x30
 	.uleb128 0x22
-	.4byte	.LASF209
+	.4byte	.LASF207
 	.byte	0x31
 	.uleb128 0x22
-	.4byte	.LASF210
+	.4byte	.LASF208
 	.byte	0x32
 	.uleb128 0x22
-	.4byte	.LASF211
+	.4byte	.LASF209
 	.byte	0x33
 	.uleb128 0x22
-	.4byte	.LASF212
+	.4byte	.LASF210
 	.byte	0x34
 	.uleb128 0x22
-	.4byte	.LASF213
+	.4byte	.LASF211
 	.byte	0x35
 	.uleb128 0x22
-	.4byte	.LASF214
+	.4byte	.LASF212
 	.byte	0x36
 	.uleb128 0x22
-	.4byte	.LASF215
+	.4byte	.LASF213
 	.byte	0x37
 	.uleb128 0x22
-	.4byte	.LASF216
+	.4byte	.LASF214
 	.byte	0x38
 	.uleb128 0x22
-	.4byte	.LASF217
+	.4byte	.LASF215
 	.byte	0x39
 	.uleb128 0x22
-	.4byte	.LASF218
+	.4byte	.LASF216
 	.byte	0x3a
 	.uleb128 0x22
-	.4byte	.LASF219
+	.4byte	.LASF217
 	.byte	0x3b
 	.uleb128 0x22
-	.4byte	.LASF220
+	.4byte	.LASF218
 	.byte	0x3c
 	.uleb128 0x22
-	.4byte	.LASF221
+	.4byte	.LASF219
 	.byte	0x3d
 	.uleb128 0x22
-	.4byte	.LASF222
+	.4byte	.LASF220
 	.byte	0x3e
 	.uleb128 0x22
-	.4byte	.LASF223
+	.4byte	.LASF221
 	.byte	0x3f
 	.uleb128 0x22
-	.4byte	.LASF224
+	.4byte	.LASF222
 	.byte	0x40
 	.uleb128 0x22
-	.4byte	.LASF225
+	.4byte	.LASF223
 	.byte	0x41
 	.uleb128 0x22
-	.4byte	.LASF226
+	.4byte	.LASF224
 	.byte	0x42
 	.uleb128 0x22
-	.4byte	.LASF227
+	.4byte	.LASF225
 	.byte	0x43
 	.uleb128 0x22
-	.4byte	.LASF228
+	.4byte	.LASF226
 	.byte	0x44
 	.uleb128 0x22
-	.4byte	.LASF229
+	.4byte	.LASF227
 	.byte	0x45
 	.uleb128 0x22
-	.4byte	.LASF230
+	.4byte	.LASF228
 	.byte	0x46
 	.uleb128 0x22
-	.4byte	.LASF231
+	.4byte	.LASF229
 	.byte	0x47
 	.uleb128 0x22
-	.4byte	.LASF232
+	.4byte	.LASF230
 	.byte	0x48
 	.uleb128 0x22
-	.4byte	.LASF233
+	.4byte	.LASF231
 	.byte	0x49
 	.uleb128 0x22
-	.4byte	.LASF234
+	.4byte	.LASF232
 	.byte	0x4a
 	.uleb128 0x22
-	.4byte	.LASF235
+	.4byte	.LASF233
 	.byte	0x4b
 	.uleb128 0x22
-	.4byte	.LASF236
+	.4byte	.LASF234
 	.byte	0x4c
 	.uleb128 0x22
-	.4byte	.LASF237
+	.4byte	.LASF235
 	.byte	0x4d
 	.uleb128 0x22
-	.4byte	.LASF238
+	.4byte	.LASF236
 	.byte	0x4e
 	.uleb128 0x22
-	.4byte	.LASF239
+	.4byte	.LASF237
 	.byte	0x4f
 	.uleb128 0x22
-	.4byte	.LASF240
+	.4byte	.LASF238
 	.byte	0x50
 	.uleb128 0x22
-	.4byte	.LASF241
+	.4byte	.LASF239
 	.byte	0x51
 	.uleb128 0x22
-	.4byte	.LASF242
+	.4byte	.LASF240
 	.byte	0x52
 	.uleb128 0x22
-	.4byte	.LASF243
+	.4byte	.LASF241
 	.byte	0x53
 	.uleb128 0x22
-	.4byte	.LASF244
+	.4byte	.LASF242
 	.byte	0x54
 	.uleb128 0x22
-	.4byte	.LASF245
+	.4byte	.LASF243
 	.byte	0x55
 	.uleb128 0x22
-	.4byte	.LASF246
+	.4byte	.LASF244
 	.byte	0x56
 	.uleb128 0x22
-	.4byte	.LASF247
+	.4byte	.LASF245
 	.byte	0x57
 	.uleb128 0x22
-	.4byte	.LASF248
+	.4byte	.LASF246
 	.byte	0x58
 	.uleb128 0x22
-	.4byte	.LASF249
+	.4byte	.LASF247
 	.byte	0x59
 	.uleb128 0x22
-	.4byte	.LASF250
+	.4byte	.LASF248
 	.byte	0x5a
 	.uleb128 0x22
-	.4byte	.LASF251
+	.4byte	.LASF249
 	.byte	0x5b
 	.uleb128 0x22
-	.4byte	.LASF252
+	.4byte	.LASF250
 	.byte	0x5c
 	.uleb128 0x22
-	.4byte	.LASF253
+	.4byte	.LASF251
 	.byte	0x5d
 	.uleb128 0x22
-	.4byte	.LASF254
+	.4byte	.LASF252
 	.byte	0x5e
 	.uleb128 0x22
-	.4byte	.LASF255
+	.4byte	.LASF253
 	.byte	0x5f
 	.uleb128 0x22
-	.4byte	.LASF256
+	.4byte	.LASF254
 	.byte	0x60
 	.uleb128 0x22
-	.4byte	.LASF257
+	.4byte	.LASF255
 	.byte	0x61
 	.uleb128 0x23
-	.4byte	.LASF258
+	.4byte	.LASF256
 	.sleb128 -1
 	.byte	0
 	.uleb128 0x24
 	.byte	0x4
 	.4byte	0x7b
-	.byte	0x25
+	.byte	0x23
 	.byte	0xf6
-	.4byte	0xc2c
+	.4byte	0xc01
 	.uleb128 0x22
-	.4byte	.LASF259
+	.4byte	.LASF257
 	.byte	0x5
 	.byte	0
 	.uleb128 0xd
-	.4byte	.LASF260
+	.4byte	.LASF258
 	.byte	0x20
-	.byte	0x16
+	.byte	0x14
 	.byte	0xc
-	.4byte	0xc8d
+	.4byte	0xc62
 	.uleb128 0xe
-	.4byte	.LASF261
-	.byte	0x16
+	.4byte	.LASF259
+	.byte	0x14
 	.byte	0x22
 	.4byte	0x37
 	.byte	0
 	.uleb128 0xf
 	.ascii	"tbu\000"
-	.byte	0x16
+	.byte	0x14
 	.byte	0x23
 	.4byte	0x7b
 	.byte	0x4
 	.uleb128 0xf
 	.ascii	"tbl\000"
-	.byte	0x16
+	.byte	0x14
 	.byte	0x24
 	.4byte	0x7b
 	.byte	0x8
 	.uleb128 0xe
-	.4byte	.LASF262
-	.byte	0x16
+	.4byte	.LASF260
+	.byte	0x14
 	.byte	0x25
 	.4byte	0x37
 	.byte	0xc
 	.uleb128 0xe
-	.4byte	.LASF263
-	.byte	0x16
+	.4byte	.LASF261
+	.byte	0x14
 	.byte	0x26
 	.4byte	0x89
 	.byte	0x10
 	.uleb128 0xe
-	.4byte	.LASF264
-	.byte	0x16
+	.4byte	.LASF262
+	.byte	0x14
 	.byte	0x29
 	.4byte	0x37
 	.byte	0x18
 	.uleb128 0xe
-	.4byte	.LASF265
-	.byte	0x16
+	.4byte	.LASF263
+	.byte	0x14
 	.byte	0x2a
 	.4byte	0x37
 	.byte	0x1c
 	.byte	0
 	.uleb128 0xd
-	.4byte	.LASF266
+	.4byte	.LASF264
 	.byte	0x14
-	.byte	0x17
+	.byte	0x15
 	.byte	0x22
-	.4byte	0xcd5
+	.4byte	0xcaa
 	.uleb128 0xe
-	.4byte	.LASF267
-	.byte	0x17
+	.4byte	.LASF265
+	.byte	0x15
 	.byte	0x23
 	.4byte	0xaa
 	.byte	0
 	.uleb128 0xe
-	.4byte	.LASF268
-	.byte	0x17
+	.4byte	.LASF266
+	.byte	0x15
 	.byte	0x24
 	.4byte	0xaa
 	.byte	0x4
 	.uleb128 0xf
 	.ascii	"id\000"
-	.byte	0x17
+	.byte	0x15
 	.byte	0x25
 	.4byte	0xaa
 	.byte	0x8
 	.uleb128 0xe
-	.4byte	.LASF269
-	.byte	0x17
+	.4byte	.LASF267
+	.byte	0x15
 	.byte	0x26
 	.4byte	0xaa
 	.byte	0xc
 	.uleb128 0xe
-	.4byte	.LASF270
-	.byte	0x17
+	.4byte	.LASF268
+	.byte	0x15
 	.byte	0x27
 	.4byte	0x107
 	.byte	0x10
 	.byte	0
-	.uleb128 0x25
-	.4byte	.LASF271
-	.2byte	0x100
-	.byte	0x17
+	.uleb128 0xd
+	.4byte	.LASF269
+	.byte	0xf8
+	.byte	0x15
 	.byte	0x2a
-	.4byte	0xee5
+	.4byte	0xead
 	.uleb128 0xf
 	.ascii	"bd\000"
-	.byte	0x17
+	.byte	0x15
 	.byte	0x2b
-	.4byte	0x972
+	.4byte	0x96d
 	.byte	0
 	.uleb128 0xe
 	.4byte	.LASF42
-	.byte	0x17
+	.byte	0x15
 	.byte	0x2c
 	.4byte	0x37
 	.byte	0x4
 	.uleb128 0xe
-	.4byte	.LASF269
-	.byte	0x17
+	.4byte	.LASF267
+	.byte	0x15
 	.byte	0x2d
 	.4byte	0x7b
 	.byte	0x8
 	.uleb128 0xe
-	.4byte	.LASF272
-	.byte	0x17
+	.4byte	.LASF270
+	.byte	0x15
 	.byte	0x2e
 	.4byte	0x37
 	.byte	0xc
 	.uleb128 0xe
-	.4byte	.LASF273
-	.byte	0x17
+	.4byte	.LASF271
+	.byte	0x15
 	.byte	0x2f
 	.4byte	0x37
 	.byte	0x10
 	.uleb128 0xe
-	.4byte	.LASF274
-	.byte	0x17
+	.4byte	.LASF272
+	.byte	0x15
 	.byte	0x31
 	.4byte	0x37
 	.byte	0x14
 	.uleb128 0xe
-	.4byte	.LASF275
-	.byte	0x17
+	.4byte	.LASF273
+	.byte	0x15
 	.byte	0x32
 	.4byte	0x37
 	.byte	0x18
 	.uleb128 0xe
-	.4byte	.LASF276
-	.byte	0x17
+	.4byte	.LASF274
+	.byte	0x15
 	.byte	0x3e
 	.4byte	0x37
 	.byte	0x1c
 	.uleb128 0xe
-	.4byte	.LASF277
-	.byte	0x17
+	.4byte	.LASF275
+	.byte	0x15
 	.byte	0x42
 	.4byte	0x37
 	.byte	0x20
 	.uleb128 0xe
-	.4byte	.LASF278
-	.byte	0x17
+	.4byte	.LASF276
+	.byte	0x15
 	.byte	0x43
 	.4byte	0x37
 	.byte	0x24
 	.uleb128 0xe
-	.4byte	.LASF279
-	.byte	0x17
+	.4byte	.LASF277
+	.byte	0x15
 	.byte	0x45
 	.4byte	0x37
 	.byte	0x28
 	.uleb128 0xe
-	.4byte	.LASF280
-	.byte	0x17
+	.4byte	.LASF278
+	.byte	0x15
 	.byte	0x46
 	.4byte	0x37
 	.byte	0x2c
 	.uleb128 0xe
-	.4byte	.LASF281
-	.byte	0x17
+	.4byte	.LASF279
+	.byte	0x15
 	.byte	0x47
 	.4byte	0x37
 	.byte	0x30
 	.uleb128 0xe
-	.4byte	.LASF282
-	.byte	0x17
+	.4byte	.LASF280
+	.byte	0x15
 	.byte	0x48
 	.4byte	0xcb
 	.byte	0x34
 	.uleb128 0xe
-	.4byte	.LASF283
-	.byte	0x17
+	.4byte	.LASF281
+	.byte	0x15
 	.byte	0x49
 	.4byte	0x37
 	.byte	0x38
 	.uleb128 0xe
-	.4byte	.LASF284
-	.byte	0x17
+	.4byte	.LASF282
+	.byte	0x15
 	.byte	0x4a
 	.4byte	0x37
 	.byte	0x3c
 	.uleb128 0xe
-	.4byte	.LASF285
-	.byte	0x17
+	.4byte	.LASF283
+	.byte	0x15
 	.byte	0x4b
 	.4byte	0x37
 	.byte	0x40
 	.uleb128 0xe
-	.4byte	.LASF286
-	.byte	0x17
+	.4byte	.LASF284
+	.byte	0x15
 	.byte	0x4c
 	.4byte	0x37
 	.byte	0x44
 	.uleb128 0xe
-	.4byte	.LASF287
-	.byte	0x17
+	.4byte	.LASF285
+	.byte	0x15
 	.byte	0x4d
-	.4byte	0xee5
+	.4byte	0xead
 	.byte	0x48
 	.uleb128 0xe
-	.4byte	.LASF288
-	.byte	0x17
+	.4byte	.LASF286
+	.byte	0x15
 	.byte	0x50
-	.4byte	0x260
+	.4byte	0x25b
 	.byte	0x4c
 	.uleb128 0xe
-	.4byte	.LASF289
-	.byte	0x17
+	.4byte	.LASF287
+	.byte	0x15
 	.byte	0x51
-	.4byte	0x260
+	.4byte	0x25b
 	.byte	0x50
 	.uleb128 0xe
-	.4byte	.LASF290
-	.byte	0x17
+	.4byte	.LASF288
+	.byte	0x15
 	.byte	0x52
-	.4byte	0x293
+	.4byte	0x28e
 	.byte	0x54
 	.uleb128 0xe
-	.4byte	.LASF291
-	.byte	0x17
+	.4byte	.LASF289
+	.byte	0x15
 	.byte	0x57
-	.4byte	0x266
+	.4byte	0x261
 	.byte	0x5c
 	.uleb128 0xe
-	.4byte	.LASF292
-	.byte	0x17
+	.4byte	.LASF290
+	.byte	0x15
 	.byte	0x58
-	.4byte	0x138
+	.4byte	0x133
 	.byte	0x60
 	.uleb128 0xe
-	.4byte	.LASF293
-	.byte	0x17
+	.4byte	.LASF291
+	.byte	0x15
 	.byte	0x59
 	.4byte	0x37
 	.byte	0x64
 	.uleb128 0xe
-	.4byte	.LASF294
-	.byte	0x17
+	.4byte	.LASF292
+	.byte	0x15
 	.byte	0x5b
-	.4byte	0xf5d
+	.4byte	0xf25
 	.byte	0x68
 	.uleb128 0xe
-	.4byte	.LASF295
-	.byte	0x17
+	.4byte	.LASF293
+	.byte	0x15
 	.byte	0x5c
-	.4byte	0xf5d
+	.4byte	0xf25
 	.byte	0x6c
 	.uleb128 0xe
-	.4byte	.LASF296
-	.byte	0x17
+	.4byte	.LASF294
+	.byte	0x15
 	.byte	0x5e
-	.4byte	0x266
+	.4byte	0x261
 	.byte	0x70
 	.uleb128 0xe
-	.4byte	.LASF297
-	.byte	0x17
+	.4byte	.LASF295
+	.byte	0x15
 	.byte	0x5f
-	.4byte	0x266
+	.4byte	0x261
 	.byte	0x74
 	.uleb128 0xf
 	.ascii	"jt\000"
-	.byte	0x17
+	.byte	0x15
 	.byte	0x60
-	.4byte	0xf68
+	.4byte	0xf30
 	.byte	0x78
 	.uleb128 0xe
-	.4byte	.LASF298
-	.byte	0x17
+	.4byte	.LASF296
+	.byte	0x15
 	.byte	0x61
-	.4byte	0xf6e
+	.4byte	0xf36
 	.byte	0x7c
 	.uleb128 0xe
-	.4byte	.LASF299
-	.byte	0x17
+	.4byte	.LASF297
+	.byte	0x15
 	.byte	0x6b
 	.4byte	0x7b
 	.byte	0x9c
 	.uleb128 0xe
-	.4byte	.LASF300
-	.byte	0x17
+	.4byte	.LASF298
+	.byte	0x15
 	.byte	0x6c
 	.4byte	0x7b
 	.byte	0xa0
 	.uleb128 0xe
-	.4byte	.LASF301
-	.byte	0x17
+	.4byte	.LASF299
+	.byte	0x15
 	.byte	0x6e
 	.4byte	0x37
 	.byte	0xa4
 	.uleb128 0xe
-	.4byte	.LASF302
-	.byte	0x17
+	.4byte	.LASF300
+	.byte	0x15
 	.byte	0x6f
 	.4byte	0x37
 	.byte	0xa8
 	.uleb128 0xe
-	.4byte	.LASF303
-	.byte	0x17
+	.4byte	.LASF301
+	.byte	0x15
 	.byte	0x70
 	.4byte	0x37
 	.byte	0xac
 	.uleb128 0xe
-	.4byte	.LASF304
-	.byte	0x17
+	.4byte	.LASF302
+	.byte	0x15
 	.byte	0x79
-	.4byte	0x260
+	.4byte	0x25b
 	.byte	0xb0
 	.uleb128 0xe
 	.4byte	.LASF127
-	.byte	0x17
+	.byte	0x15
 	.byte	0x7a
-	.4byte	0xc2c
+	.4byte	0xc01
 	.byte	0xb8
 	.uleb128 0xe
-	.4byte	.LASF305
-	.byte	0x17
+	.4byte	.LASF303
+	.byte	0x15
 	.byte	0x87
 	.4byte	0xc0
 	.byte	0xd8
 	.uleb128 0xe
-	.4byte	.LASF306
-	.byte	0x17
+	.4byte	.LASF304
+	.byte	0x15
 	.byte	0x8c
-	.4byte	0xc8d
+	.4byte	0xc62
 	.byte	0xdc
 	.uleb128 0xe
-	.4byte	.LASF307
-	.byte	0x17
+	.4byte	.LASF305
+	.byte	0x15
 	.byte	0x8d
 	.4byte	0x107
 	.byte	0xf0
 	.uleb128 0xe
-	.4byte	.LASF308
-	.byte	0x17
+	.4byte	.LASF306
+	.byte	0x15
 	.byte	0x8e
 	.4byte	0x50
 	.byte	0xf4
-	.uleb128 0xe
-	.4byte	.LASF309
-	.byte	0x17
-	.byte	0x95
-	.4byte	0xaa
-	.byte	0xf8
 	.byte	0
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0xcd5
+	.4byte	0xcaa
 	.uleb128 0xd
-	.4byte	.LASF310
+	.4byte	.LASF307
 	.byte	0x20
-	.byte	0x18
+	.byte	0x16
 	.byte	0x2c
-	.4byte	0xf58
+	.4byte	0xf20
 	.uleb128 0xe
 	.4byte	.LASF28
-	.byte	0x18
+	.byte	0x16
 	.byte	0x2d
 	.4byte	0xdd
 	.byte	0
 	.uleb128 0xe
 	.4byte	.LASF126
-	.byte	0x18
+	.byte	0x16
 	.byte	0x2e
 	.4byte	0xdd
 	.byte	0x4
 	.uleb128 0xe
-	.4byte	.LASF311
-	.byte	0x18
+	.4byte	.LASF308
+	.byte	0x16
 	.byte	0x2f
-	.4byte	0x12a2
+	.4byte	0x126a
 	.byte	0x8
 	.uleb128 0xe
-	.4byte	.LASF312
-	.byte	0x18
+	.4byte	.LASF309
+	.byte	0x16
 	.byte	0x30
 	.4byte	0xdd
 	.byte	0xc
 	.uleb128 0xe
-	.4byte	.LASF313
-	.byte	0x18
+	.4byte	.LASF310
+	.byte	0x16
 	.byte	0x32
-	.4byte	0x12ea
+	.4byte	0x12b2
 	.byte	0x10
 	.uleb128 0xe
 	.4byte	.LASF34
-	.byte	0x18
+	.byte	0x16
 	.byte	0x33
-	.4byte	0xf5d
+	.4byte	0xf25
 	.byte	0x14
 	.uleb128 0xe
-	.4byte	.LASF314
-	.byte	0x18
+	.4byte	.LASF311
+	.byte	0x16
 	.byte	0x34
-	.4byte	0xf5d
+	.4byte	0xf25
 	.byte	0x18
 	.uleb128 0xe
-	.4byte	.LASF315
-	.byte	0x18
+	.4byte	.LASF312
+	.byte	0x16
 	.byte	0x35
-	.4byte	0xf5d
+	.4byte	0xf25
 	.byte	0x1c
 	.byte	0
 	.uleb128 0x7
-	.4byte	0xeeb
+	.4byte	0xeb3
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0xeeb
+	.4byte	0xeb3
 	.uleb128 0x18
-	.4byte	.LASF317
+	.4byte	.LASF314
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0xf63
+	.4byte	0xf2b
 	.uleb128 0xa
 	.4byte	0xe3
-	.4byte	0xf7e
+	.4byte	0xf46
 	.uleb128 0x11
 	.4byte	0xd6
 	.byte	0x1f
 	.byte	0
 	.uleb128 0x2
-	.4byte	.LASF318
-	.byte	0x17
+	.4byte	.LASF315
+	.byte	0x15
 	.byte	0x97
-	.4byte	0xcd5
-	.uleb128 0x26
-	.4byte	0xf7e
+	.4byte	0xcaa
+	.uleb128 0x25
+	.4byte	0xf46
 	.uleb128 0x4
-	.4byte	.LASF319
+	.4byte	.LASF316
 	.byte	0x2
 	.byte	0xad
 	.4byte	0x107
 	.uleb128 0xa
 	.4byte	0x90
-	.4byte	0xfa4
+	.4byte	0xf6c
 	.uleb128 0xb
 	.byte	0
 	.uleb128 0x4
-	.4byte	.LASF320
+	.4byte	.LASF317
 	.byte	0x2
 	.byte	0xaf
-	.4byte	0xf99
+	.4byte	0xf61
 	.uleb128 0x4
-	.4byte	.LASF321
+	.4byte	.LASF318
 	.byte	0x2
 	.byte	0xb0
-	.4byte	0xf99
+	.4byte	0xf61
 	.uleb128 0x4
-	.4byte	.LASF322
+	.4byte	.LASF319
 	.byte	0x2
 	.byte	0xfe
 	.4byte	0x107
 	.uleb128 0x4
-	.4byte	.LASF323
+	.4byte	.LASF320
 	.byte	0x2
 	.byte	0xff
 	.4byte	0x107
 	.uleb128 0xc
-	.4byte	.LASF324
+	.4byte	.LASF321
 	.byte	0x2
 	.2byte	0x100
 	.4byte	0x107
 	.uleb128 0xd
-	.4byte	.LASF325
+	.4byte	.LASF322
 	.byte	0x4
-	.byte	0x19
+	.byte	0x17
 	.byte	0x2e
-	.4byte	0xff5
+	.4byte	0xfbd
 	.uleb128 0xe
-	.4byte	.LASF326
-	.byte	0x19
+	.4byte	.LASF323
+	.byte	0x17
 	.byte	0x2f
-	.4byte	0x12d
+	.4byte	0x128
 	.byte	0
 	.byte	0
 	.uleb128 0x8
@@ -6022,190 +6007,190 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	0x25
 	.uleb128 0x12
 	.4byte	0x50
-	.4byte	0x100a
+	.4byte	0xfd2
 	.uleb128 0x13
-	.4byte	0x260
+	.4byte	0x25b
 	.byte	0
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0xffb
+	.4byte	0xfc3
 	.uleb128 0xa
 	.4byte	0x90
-	.4byte	0x1020
+	.4byte	0xfe8
 	.uleb128 0x11
 	.4byte	0xd6
 	.byte	0x5
 	.byte	0
 	.uleb128 0xc
-	.4byte	.LASF327
-	.byte	0x19
+	.4byte	.LASF324
+	.byte	0x17
 	.2byte	0x1fd
-	.4byte	0xfdc
+	.4byte	0xfa4
 	.uleb128 0xc
-	.4byte	.LASF328
-	.byte	0x19
+	.4byte	.LASF325
+	.byte	0x17
 	.2byte	0x1fe
-	.4byte	0xfdc
+	.4byte	0xfa4
 	.uleb128 0xc
-	.4byte	.LASF329
-	.byte	0x19
+	.4byte	.LASF326
+	.byte	0x17
 	.2byte	0x200
-	.4byte	0xfdc
-	.uleb128 0xc
-	.4byte	.LASF330
-	.byte	0x19
+	.4byte	0xfa4
+	.uleb128 0xc
+	.4byte	.LASF327
+	.byte	0x17
 	.2byte	0x205
-	.4byte	0xf6e
+	.4byte	0xf36
 	.uleb128 0xc
-	.4byte	.LASF331
-	.byte	0x19
+	.4byte	.LASF328
+	.byte	0x17
 	.2byte	0x206
-	.4byte	0xf6e
+	.4byte	0xf36
 	.uleb128 0xa
 	.4byte	0xe3
-	.4byte	0x106c
+	.4byte	0x1034
 	.uleb128 0x11
 	.4byte	0xd6
 	.byte	0x3f
 	.byte	0
 	.uleb128 0xc
-	.4byte	.LASF332
-	.byte	0x19
+	.4byte	.LASF329
+	.byte	0x17
 	.2byte	0x207
-	.4byte	0x105c
+	.4byte	0x1024
 	.uleb128 0xc
-	.4byte	.LASF333
-	.byte	0x19
+	.4byte	.LASF330
+	.byte	0x17
 	.2byte	0x209
-	.4byte	0x1010
+	.4byte	0xfd8
 	.uleb128 0xc
-	.4byte	.LASF334
-	.byte	0x19
+	.4byte	.LASF331
+	.byte	0x17
 	.2byte	0x20a
-	.4byte	0x1010
+	.4byte	0xfd8
 	.uleb128 0xc
-	.4byte	.LASF335
-	.byte	0x19
+	.4byte	.LASF332
+	.byte	0x17
 	.2byte	0x20b
-	.4byte	0xfdc
+	.4byte	0xfa4
 	.uleb128 0xc
-	.4byte	.LASF336
-	.byte	0x19
+	.4byte	.LASF333
+	.byte	0x17
 	.2byte	0x20c
-	.4byte	0xfdc
+	.4byte	0xfa4
 	.uleb128 0xc
-	.4byte	.LASF337
-	.byte	0x19
+	.4byte	.LASF334
+	.byte	0x17
 	.2byte	0x20d
-	.4byte	0xff5
+	.4byte	0xfbd
 	.uleb128 0xa
-	.4byte	0xff5
-	.4byte	0x10c4
+	.4byte	0xfbd
+	.4byte	0x108c
 	.uleb128 0x11
 	.4byte	0xd6
 	.byte	0x3
 	.byte	0
 	.uleb128 0xc
-	.4byte	.LASF338
-	.byte	0x19
+	.4byte	.LASF335
+	.byte	0x17
 	.2byte	0x20e
-	.4byte	0x10b4
+	.4byte	0x107c
 	.uleb128 0xc
-	.4byte	.LASF339
-	.byte	0x19
+	.4byte	.LASF336
+	.byte	0x17
 	.2byte	0x20f
-	.4byte	0xff5
+	.4byte	0xfbd
 	.uleb128 0xc
-	.4byte	.LASF340
-	.byte	0x19
+	.4byte	.LASF337
+	.byte	0x17
 	.2byte	0x210
 	.4byte	0x50
 	.uleb128 0xa
 	.4byte	0x9a
-	.4byte	0x10f8
+	.4byte	0x10c0
 	.uleb128 0x11
 	.4byte	0xd6
 	.byte	0x5
 	.byte	0
 	.uleb128 0x7
-	.4byte	0x10e8
+	.4byte	0x10b0
 	.uleb128 0xc
-	.4byte	.LASF341
-	.byte	0x19
+	.4byte	.LASF338
+	.byte	0x17
 	.2byte	0x211
-	.4byte	0x10f8
+	.4byte	0x10c0
 	.uleb128 0xc
-	.4byte	.LASF342
-	.byte	0x19
+	.4byte	.LASF339
+	.byte	0x17
 	.2byte	0x212
-	.4byte	0x10f8
+	.4byte	0x10c0
 	.uleb128 0xc
-	.4byte	.LASF343
-	.byte	0x19
+	.4byte	.LASF340
+	.byte	0x17
 	.2byte	0x216
 	.4byte	0xfc
 	.uleb128 0xc
-	.4byte	.LASF344
-	.byte	0x19
+	.4byte	.LASF341
+	.byte	0x17
 	.2byte	0x217
 	.4byte	0xfc
 	.uleb128 0xc
-	.4byte	.LASF345
-	.byte	0x19
+	.4byte	.LASF342
+	.byte	0x17
 	.2byte	0x219
 	.4byte	0x50
 	.uleb128 0xa
 	.4byte	0xe3
-	.4byte	0x114a
+	.4byte	0x1112
 	.uleb128 0x17
 	.4byte	0xd6
 	.2byte	0x3ff
 	.byte	0
 	.uleb128 0xc
-	.4byte	.LASF346
-	.byte	0x19
+	.4byte	.LASF343
+	.byte	0x17
 	.2byte	0x220
-	.4byte	0x1139
+	.4byte	0x1101
 	.uleb128 0xc
-	.4byte	.LASF347
-	.byte	0x19
+	.4byte	.LASF344
+	.byte	0x17
 	.2byte	0x222
 	.4byte	0xaa
 	.uleb128 0xc
-	.4byte	.LASF348
-	.byte	0x19
+	.4byte	.LASF345
+	.byte	0x17
 	.2byte	0x224
 	.4byte	0xaa
 	.uleb128 0xc
-	.4byte	.LASF349
-	.byte	0x19
+	.4byte	.LASF346
+	.byte	0x17
 	.2byte	0x230
-	.4byte	0xfdc
-	.uleb128 0x27
-	.4byte	.LASF351
+	.4byte	0xfa4
+	.uleb128 0x26
+	.4byte	.LASF348
 	.byte	0x4
 	.4byte	0x7b
-	.byte	0x19
+	.byte	0x17
 	.2byte	0x286
-	.4byte	0x11a4
+	.4byte	0x116c
 	.uleb128 0x22
-	.4byte	.LASF352
+	.4byte	.LASF349
 	.byte	0
 	.uleb128 0x22
-	.4byte	.LASF353
+	.4byte	.LASF350
 	.byte	0x1
 	.uleb128 0x22
-	.4byte	.LASF354
+	.4byte	.LASF351
 	.byte	0x2
 	.uleb128 0x22
-	.4byte	.LASF355
+	.4byte	.LASF352
 	.byte	0x3
 	.byte	0
 	.uleb128 0xc
-	.4byte	.LASF356
-	.byte	0x19
+	.4byte	.LASF353
+	.byte	0x17
 	.2byte	0x28c
-	.4byte	0x117a
+	.4byte	0x1142
 	.uleb128 0x8
 	.byte	0x4
 	.4byte	0x90
@@ -6220,7 +6205,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.byte	0x44
 	.byte	0x8
 	.byte	0xf1
-	.4byte	0x129d
+	.4byte	0x1265
 	.uleb128 0xe
 	.4byte	.LASF28
 	.byte	0x8
@@ -6231,82 +6216,82 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.ascii	"id\000"
 	.byte	0x8
 	.byte	0xf3
-	.4byte	0x9b6
+	.4byte	0x98b
 	.byte	0x4
 	.uleb128 0xe
-	.4byte	.LASF357
+	.4byte	.LASF354
 	.byte	0x8
 	.byte	0xf4
-	.4byte	0x1400
+	.4byte	0x13c8
 	.byte	0x8
 	.uleb128 0xe
-	.4byte	.LASF358
+	.4byte	.LASF355
 	.byte	0x8
 	.byte	0xf5
-	.4byte	0x100a
+	.4byte	0xfd2
 	.byte	0xc
 	.uleb128 0xe
-	.4byte	.LASF359
+	.4byte	.LASF356
 	.byte	0x8
 	.byte	0xf6
-	.4byte	0x100a
+	.4byte	0xfd2
 	.byte	0x10
 	.uleb128 0xe
-	.4byte	.LASF360
+	.4byte	.LASF357
 	.byte	0x8
 	.byte	0xf7
-	.4byte	0x100a
+	.4byte	0xfd2
 	.byte	0x14
 	.uleb128 0xe
-	.4byte	.LASF361
+	.4byte	.LASF358
 	.byte	0x8
 	.byte	0xf8
-	.4byte	0x100a
+	.4byte	0xfd2
 	.byte	0x18
 	.uleb128 0xe
-	.4byte	.LASF362
+	.4byte	.LASF359
 	.byte	0x8
 	.byte	0xf9
-	.4byte	0x100a
+	.4byte	0xfd2
 	.byte	0x1c
 	.uleb128 0xe
-	.4byte	.LASF363
+	.4byte	.LASF360
 	.byte	0x8
 	.byte	0xfa
-	.4byte	0x100a
+	.4byte	0xfd2
 	.byte	0x20
 	.uleb128 0xe
-	.4byte	.LASF364
+	.4byte	.LASF361
 	.byte	0x8
 	.byte	0xfb
-	.4byte	0x100a
+	.4byte	0xfd2
 	.byte	0x24
 	.uleb128 0xe
-	.4byte	.LASF365
+	.4byte	.LASF362
 	.byte	0x8
 	.byte	0xfc
-	.4byte	0x100a
+	.4byte	0xfd2
 	.byte	0x28
 	.uleb128 0xe
-	.4byte	.LASF366
+	.4byte	.LASF363
 	.byte	0x8
 	.byte	0xfd
 	.4byte	0x50
 	.byte	0x2c
 	.uleb128 0xe
-	.4byte	.LASF367
+	.4byte	.LASF364
 	.byte	0x8
 	.byte	0xfe
 	.4byte	0x50
 	.byte	0x30
 	.uleb128 0xe
-	.4byte	.LASF368
+	.4byte	.LASF365
 	.byte	0x8
 	.byte	0xff
 	.4byte	0x50
 	.byte	0x34
 	.uleb128 0x1d
-	.4byte	.LASF369
+	.4byte	.LASF366
 	.byte	0x8
 	.2byte	0x100
 	.4byte	0x50
@@ -6315,512 +6300,512 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.ascii	"ops\000"
 	.byte	0x8
 	.2byte	0x101
-	.4byte	0x266
+	.4byte	0x261
 	.byte	0x3c
 	.uleb128 0x1d
 	.4byte	.LASF42
 	.byte	0x8
 	.2byte	0x102
-	.4byte	0x122
+	.4byte	0x11d
 	.byte	0x40
 	.byte	0
 	.uleb128 0x7
-	.4byte	0x11c2
+	.4byte	0x118a
 	.uleb128 0x2
-	.4byte	.LASF311
-	.byte	0x18
+	.4byte	.LASF308
+	.byte	0x16
 	.byte	0xf
 	.4byte	0xaa
 	.uleb128 0xd
-	.4byte	.LASF370
+	.4byte	.LASF367
 	.byte	0x10
-	.byte	0x18
+	.byte	0x16
 	.byte	0x19
-	.4byte	0x12ea
+	.4byte	0x12b2
 	.uleb128 0xe
 	.4byte	.LASF28
-	.byte	0x18
+	.byte	0x16
 	.byte	0x1a
 	.4byte	0xf6
 	.byte	0
 	.uleb128 0xe
-	.4byte	.LASF371
-	.byte	0x18
+	.4byte	.LASF368
+	.byte	0x16
 	.byte	0x1b
 	.4byte	0x50
 	.byte	0x4
 	.uleb128 0xe
-	.4byte	.LASF372
-	.byte	0x18
+	.4byte	.LASF369
+	.byte	0x16
 	.byte	0x1c
-	.4byte	0x138
+	.4byte	0x133
 	.byte	0x8
 	.uleb128 0xe
 	.4byte	.LASF47
-	.byte	0x18
+	.byte	0x16
 	.byte	0x1d
-	.4byte	0x12ea
+	.4byte	0x12b2
 	.byte	0xc
 	.byte	0
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x12ad
-	.uleb128 0x28
+	.4byte	0x1275
+	.uleb128 0x27
 	.ascii	"gd\000"
-	.byte	0x18
+	.byte	0x16
 	.byte	0x57
-	.4byte	0x12fa
+	.4byte	0x12c2
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0xf89
-	.uleb128 0x29
-	.4byte	.LASF460
+	.4byte	0xf51
+	.uleb128 0x28
+	.4byte	.LASF457
 	.byte	0x4
-	.byte	0x1b
+	.byte	0x19
 	.byte	0x33
-	.4byte	0x1322
-	.uleb128 0x2a
+	.4byte	0x12ea
+	.uleb128 0x29
 	.ascii	"np\000"
-	.byte	0x1b
+	.byte	0x19
 	.byte	0x34
-	.4byte	0x1322
-	.uleb128 0x2b
-	.4byte	.LASF373
-	.byte	0x1b
+	.4byte	0x12ea
+	.uleb128 0x2a
+	.4byte	.LASF370
+	.byte	0x19
 	.byte	0x35
 	.4byte	0xef
 	.byte	0
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0xf58
+	.4byte	0xf20
 	.uleb128 0x2
-	.4byte	.LASF374
-	.byte	0x1b
+	.4byte	.LASF371
+	.byte	0x19
 	.byte	0x36
-	.4byte	0x1300
+	.4byte	0x12c8
 	.uleb128 0xc
-	.4byte	.LASF375
-	.byte	0x1c
+	.4byte	.LASF372
+	.byte	0x1a
 	.2byte	0x3ba
 	.4byte	0x107
 	.uleb128 0xc
-	.4byte	.LASF376
-	.byte	0x1c
+	.4byte	.LASF373
+	.byte	0x1a
 	.2byte	0x3bb
 	.4byte	0x107
 	.uleb128 0xc
-	.4byte	.LASF377
-	.byte	0x1c
+	.4byte	.LASF374
+	.byte	0x1a
 	.2byte	0x3bc
 	.4byte	0x107
 	.uleb128 0xd
-	.4byte	.LASF378
+	.4byte	.LASF375
 	.byte	0x4
-	.byte	0x1d
+	.byte	0x1b
 	.byte	0xd
-	.4byte	0x1370
+	.4byte	0x1338
 	.uleb128 0xf
 	.ascii	"pid\000"
-	.byte	0x1d
+	.byte	0x1b
 	.byte	0xe
 	.4byte	0x50
 	.byte	0
 	.byte	0
 	.uleb128 0x4
-	.4byte	.LASF379
-	.byte	0x1d
+	.4byte	.LASF376
+	.byte	0x1b
 	.byte	0x11
-	.4byte	0x137b
+	.4byte	0x1343
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x1357
+	.4byte	0x131f
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x129d
+	.4byte	0x1265
 	.uleb128 0xd
 	.4byte	.LASF36
 	.byte	0x1c
-	.byte	0x1e
+	.byte	0x1c
 	.byte	0x23
-	.4byte	0x13d0
+	.4byte	0x1398
 	.uleb128 0xe
 	.4byte	.LASF35
-	.byte	0x1e
+	.byte	0x1c
 	.byte	0x24
-	.4byte	0x138
+	.4byte	0x133
 	.byte	0
 	.uleb128 0xe
-	.4byte	.LASF380
-	.byte	0x1e
+	.4byte	.LASF377
+	.byte	0x1c
 	.byte	0x25
-	.4byte	0x14ea
+	.4byte	0x14b2
 	.byte	0x4
 	.uleb128 0xe
-	.4byte	.LASF381
-	.byte	0x1e
+	.4byte	.LASF378
+	.byte	0x1c
 	.byte	0x26
-	.4byte	0x293
+	.4byte	0x28e
 	.byte	0x8
 	.uleb128 0xe
 	.4byte	.LASF41
-	.byte	0x1e
+	.byte	0x1c
 	.byte	0x27
-	.4byte	0x293
+	.4byte	0x28e
 	.byte	0x10
 	.uleb128 0xe
-	.4byte	.LASF382
-	.byte	0x1e
+	.4byte	.LASF379
+	.byte	0x1c
 	.byte	0x29
-	.4byte	0x2b8
+	.4byte	0x2b3
 	.byte	0x18
 	.byte	0
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x1387
+	.4byte	0x134f
 	.uleb128 0xd
-	.4byte	.LASF383
+	.4byte	.LASF380
 	.byte	0x8
 	.byte	0x8
 	.byte	0xb8
-	.4byte	0x13fb
+	.4byte	0x13c3
 	.uleb128 0xe
-	.4byte	.LASF384
+	.4byte	.LASF381
 	.byte	0x8
 	.byte	0xb9
 	.4byte	0xdd
 	.byte	0
 	.uleb128 0xe
-	.4byte	.LASF385
+	.4byte	.LASF382
 	.byte	0x8
 	.byte	0xba
 	.4byte	0x107
 	.byte	0x4
 	.byte	0
 	.uleb128 0x7
-	.4byte	0x13d6
+	.4byte	0x139e
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x13fb
+	.4byte	0x13c3
 	.uleb128 0xd
-	.4byte	.LASF386
+	.4byte	.LASF383
 	.byte	0x48
-	.byte	0x1e
+	.byte	0x1c
 	.byte	0x57
-	.4byte	0x14ea
+	.4byte	0x14b2
 	.uleb128 0xe
 	.4byte	.LASF28
-	.byte	0x1e
+	.byte	0x1c
 	.byte	0x58
 	.4byte	0xdd
 	.byte	0
 	.uleb128 0xf
 	.ascii	"id\000"
-	.byte	0x1e
+	.byte	0x1c
 	.byte	0x59
-	.4byte	0x9b6
+	.4byte	0x98b
 	.byte	0x4
 	.uleb128 0xe
-	.4byte	.LASF387
-	.byte	0x1e
+	.4byte	.LASF384
+	.byte	0x1c
 	.byte	0x5a
-	.4byte	0x100a
+	.4byte	0xfd2
 	.byte	0x8
 	.uleb128 0xe
-	.4byte	.LASF388
-	.byte	0x1e
+	.4byte	.LASF385
+	.byte	0x1c
 	.byte	0x5b
-	.4byte	0x100a
+	.4byte	0xfd2
 	.byte	0xc
 	.uleb128 0xe
-	.4byte	.LASF389
-	.byte	0x1e
+	.4byte	.LASF386
+	.byte	0x1c
 	.byte	0x5c
-	.4byte	0x100a
+	.4byte	0xfd2
 	.byte	0x10
 	.uleb128 0xe
-	.4byte	.LASF390
-	.byte	0x1e
+	.4byte	.LASF387
+	.byte	0x1c
 	.byte	0x5d
-	.4byte	0x100a
+	.4byte	0xfd2
 	.byte	0x14
 	.uleb128 0xe
-	.4byte	.LASF391
-	.byte	0x1e
+	.4byte	.LASF388
+	.byte	0x1c
 	.byte	0x5e
-	.4byte	0x100a
+	.4byte	0xfd2
 	.byte	0x18
 	.uleb128 0xe
-	.4byte	.LASF363
-	.byte	0x1e
+	.4byte	.LASF360
+	.byte	0x1c
 	.byte	0x5f
-	.4byte	0x100a
+	.4byte	0xfd2
 	.byte	0x1c
 	.uleb128 0xe
-	.4byte	.LASF364
-	.byte	0x1e
+	.4byte	.LASF361
+	.byte	0x1c
 	.byte	0x60
-	.4byte	0x100a
+	.4byte	0xfd2
 	.byte	0x20
 	.uleb128 0xe
-	.4byte	.LASF392
-	.byte	0x1e
+	.4byte	.LASF389
+	.byte	0x1c
 	.byte	0x61
-	.4byte	0x14ff
+	.4byte	0x14c7
 	.byte	0x24
 	.uleb128 0xe
-	.4byte	.LASF393
-	.byte	0x1e
+	.4byte	.LASF390
+	.byte	0x1c
 	.byte	0x62
-	.4byte	0x14ff
+	.4byte	0x14c7
 	.byte	0x28
 	.uleb128 0xe
-	.4byte	.LASF366
-	.byte	0x1e
+	.4byte	.LASF363
+	.byte	0x1c
 	.byte	0x63
 	.4byte	0x50
 	.byte	0x2c
 	.uleb128 0xe
-	.4byte	.LASF394
-	.byte	0x1e
+	.4byte	.LASF391
+	.byte	0x1c
 	.byte	0x64
 	.4byte	0x50
 	.byte	0x30
 	.uleb128 0xe
-	.4byte	.LASF395
-	.byte	0x1e
+	.4byte	.LASF392
+	.byte	0x1c
 	.byte	0x65
 	.4byte	0x50
 	.byte	0x34
 	.uleb128 0xe
-	.4byte	.LASF368
-	.byte	0x1e
+	.4byte	.LASF365
+	.byte	0x1c
 	.byte	0x66
 	.4byte	0x50
 	.byte	0x38
 	.uleb128 0xe
-	.4byte	.LASF369
-	.byte	0x1e
+	.4byte	.LASF366
+	.byte	0x1c
 	.byte	0x67
 	.4byte	0x50
 	.byte	0x3c
 	.uleb128 0xf
 	.ascii	"ops\000"
-	.byte	0x1e
+	.byte	0x1c
 	.byte	0x68
-	.4byte	0x266
+	.4byte	0x261
 	.byte	0x40
 	.uleb128 0xe
 	.4byte	.LASF42
-	.byte	0x1e
+	.byte	0x1c
 	.byte	0x69
-	.4byte	0x122
+	.4byte	0x11d
 	.byte	0x44
 	.byte	0
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x1406
+	.4byte	0x13ce
 	.uleb128 0x12
 	.4byte	0x50
-	.4byte	0x14ff
+	.4byte	0x14c7
 	.uleb128 0x13
-	.4byte	0x13d0
+	.4byte	0x1398
 	.byte	0
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x14f0
+	.4byte	0x14b8
 	.uleb128 0x4
-	.4byte	.LASF396
-	.byte	0x1f
+	.4byte	.LASF393
+	.byte	0x1d
 	.byte	0x49
 	.4byte	0x7b
 	.uleb128 0x21
-	.4byte	.LASF397
+	.4byte	.LASF394
 	.byte	0x4
 	.4byte	0x7b
-	.byte	0x20
+	.byte	0x1e
 	.byte	0x15
-	.4byte	0x153f
+	.4byte	0x1507
 	.uleb128 0x22
-	.4byte	.LASF398
+	.4byte	.LASF395
 	.byte	0x1
 	.uleb128 0x22
-	.4byte	.LASF399
+	.4byte	.LASF396
 	.byte	0x2
 	.uleb128 0x22
-	.4byte	.LASF400
+	.4byte	.LASF397
 	.byte	0x4
 	.uleb128 0x22
-	.4byte	.LASF401
+	.4byte	.LASF398
 	.byte	0x8
 	.uleb128 0x22
-	.4byte	.LASF402
+	.4byte	.LASF399
 	.byte	0x10
 	.byte	0
 	.uleb128 0xd
-	.4byte	.LASF403
+	.4byte	.LASF400
 	.byte	0x10
-	.byte	0x20
+	.byte	0x1e
 	.byte	0x61
-	.4byte	0x157c
+	.4byte	0x1544
 	.uleb128 0xe
-	.4byte	.LASF404
-	.byte	0x20
+	.4byte	.LASF401
+	.byte	0x1e
 	.byte	0x6b
-	.4byte	0x159f
+	.4byte	0x1567
 	.byte	0
 	.uleb128 0xe
-	.4byte	.LASF405
-	.byte	0x20
+	.4byte	.LASF402
+	.byte	0x1e
 	.byte	0x75
-	.4byte	0x15c3
+	.4byte	0x158b
 	.byte	0x4
 	.uleb128 0xe
-	.4byte	.LASF406
-	.byte	0x20
+	.4byte	.LASF403
+	.byte	0x1e
 	.byte	0x7f
-	.4byte	0x15e2
+	.4byte	0x15aa
 	.byte	0x8
 	.uleb128 0xe
-	.4byte	.LASF407
-	.byte	0x20
+	.4byte	.LASF404
+	.byte	0x1e
 	.byte	0x8c
-	.4byte	0x1610
+	.4byte	0x15d8
 	.byte	0xc
 	.byte	0
 	.uleb128 0x7
-	.4byte	0x153f
+	.4byte	0x1507
 	.uleb128 0x12
 	.4byte	0x50
-	.4byte	0x159f
+	.4byte	0x1567
 	.uleb128 0x13
-	.4byte	0x260
+	.4byte	0x25b
 	.uleb128 0x13
 	.4byte	0x50
 	.uleb128 0x13
-	.4byte	0x138
+	.4byte	0x133
 	.uleb128 0x13
 	.4byte	0x50
 	.byte	0
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x1581
+	.4byte	0x1549
 	.uleb128 0x12
 	.4byte	0x50
-	.4byte	0x15c3
+	.4byte	0x158b
 	.uleb128 0x13
-	.4byte	0x260
+	.4byte	0x25b
 	.uleb128 0x13
 	.4byte	0x50
 	.uleb128 0x13
-	.4byte	0x266
+	.4byte	0x261
 	.uleb128 0x13
 	.4byte	0x50
 	.byte	0
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x15a5
+	.4byte	0x156d
 	.uleb128 0x12
 	.4byte	0x50
-	.4byte	0x15e2
+	.4byte	0x15aa
 	.uleb128 0x13
-	.4byte	0x260
+	.4byte	0x25b
 	.uleb128 0x13
 	.4byte	0x37
 	.uleb128 0x13
-	.4byte	0x138
+	.4byte	0x133
 	.byte	0
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x15c9
+	.4byte	0x1591
 	.uleb128 0x12
 	.4byte	0x50
-	.4byte	0x1610
+	.4byte	0x15d8
 	.uleb128 0x13
-	.4byte	0x260
+	.4byte	0x25b
 	.uleb128 0x13
 	.4byte	0x50
 	.uleb128 0x13
-	.4byte	0x138
+	.4byte	0x133
 	.uleb128 0x13
 	.4byte	0x50
 	.uleb128 0x13
-	.4byte	0x138
+	.4byte	0x133
 	.uleb128 0x13
 	.4byte	0x50
 	.byte	0
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x15e8
+	.4byte	0x15b0
 	.uleb128 0xd
-	.4byte	.LASF408
+	.4byte	.LASF405
 	.byte	0x10
-	.byte	0x21
+	.byte	0x1f
 	.byte	0x5e
-	.4byte	0x1653
+	.4byte	0x161b
 	.uleb128 0xe
 	.4byte	.LASF60
-	.byte	0x21
+	.byte	0x1f
 	.byte	0x5f
-	.4byte	0x138
+	.4byte	0x133
 	.byte	0
 	.uleb128 0xe
-	.4byte	.LASF409
-	.byte	0x21
+	.4byte	.LASF406
+	.byte	0x1f
 	.byte	0x60
 	.4byte	0x37
 	.byte	0x4
 	.uleb128 0xe
-	.4byte	.LASF410
-	.byte	0x21
+	.4byte	.LASF407
+	.byte	0x1f
 	.byte	0x61
 	.4byte	0x37
 	.byte	0x8
 	.uleb128 0xe
-	.4byte	.LASF411
-	.byte	0x21
+	.4byte	.LASF408
+	.byte	0x1f
 	.byte	0x62
 	.4byte	0x37
 	.byte	0xc
 	.byte	0
 	.uleb128 0xd
-	.4byte	.LASF412
+	.4byte	.LASF409
 	.byte	0x10
 	.byte	0x1
 	.byte	0xf
-	.4byte	0x1690
+	.4byte	0x1658
 	.uleb128 0xe
-	.4byte	.LASF404
+	.4byte	.LASF401
 	.byte	0x1
 	.byte	0x10
-	.4byte	0x159f
+	.4byte	0x1567
 	.byte	0
 	.uleb128 0xe
-	.4byte	.LASF405
+	.4byte	.LASF402
 	.byte	0x1
 	.byte	0x11
-	.4byte	0x15c3
+	.4byte	0x158b
 	.byte	0x4
 	.uleb128 0xe
-	.4byte	.LASF413
+	.4byte	.LASF410
 	.byte	0x1
 	.byte	0x12
-	.4byte	0x16b5
+	.4byte	0x167d
 	.byte	0x8
 	.uleb128 0xe
-	.4byte	.LASF414
+	.4byte	.LASF411
 	.byte	0x1
 	.byte	0x15
-	.4byte	0x16b5
+	.4byte	0x167d
 	.byte	0xc
 	.byte	0
 	.uleb128 0x7
-	.4byte	0x1653
-	.uleb128 0x2c
-	.4byte	0x16af
+	.4byte	0x161b
+	.uleb128 0x2b
+	.4byte	0x1677
 	.uleb128 0x13
-	.4byte	0x16af
+	.4byte	0x1677
 	.uleb128 0x13
-	.4byte	0x16af
+	.4byte	0x1677
 	.uleb128 0x13
 	.4byte	0x37
 	.uleb128 0x13
@@ -6831,50 +6816,50 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	0x7b
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x1695
-	.uleb128 0x2d
-	.4byte	.LASF415
+	.4byte	0x165d
+	.uleb128 0x2c
+	.4byte	.LASF412
 	.byte	0x1
 	.2byte	0x2ad
-	.4byte	0x157c
+	.4byte	0x1544
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	rockchip_secure_otp_ops
-	.uleb128 0x2d
-	.4byte	.LASF416
+	.uleb128 0x2c
+	.4byte	.LASF413
 	.byte	0x1
 	.2byte	0x2c2
-	.4byte	0x1690
+	.4byte	0x1658
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	rv1106_data
 	.uleb128 0xa
-	.4byte	0x13fb
-	.4byte	0x16ef
+	.4byte	0x13c3
+	.4byte	0x16b7
 	.uleb128 0x11
 	.4byte	0xd6
 	.byte	0x1
 	.byte	0
 	.uleb128 0x7
-	.4byte	0x16df
-	.uleb128 0x2d
-	.4byte	.LASF417
+	.4byte	0x16a7
+	.uleb128 0x2c
+	.4byte	.LASF414
 	.byte	0x1
 	.2byte	0x2c9
-	.4byte	0x16ef
+	.4byte	0x16b7
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	rockchip_otp_ids
-	.uleb128 0x2e
-	.4byte	.LASF418
+	.uleb128 0x2d
+	.4byte	.LASF415
 	.byte	0x1
 	.2byte	0x2d1
-	.4byte	0x11c2
+	.4byte	0x118a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	_u_boot_list_2_driver_2_rockchip_secure_otp
-	.uleb128 0x2f
-	.4byte	.LASF419
+	.uleb128 0x2e
+	.4byte	.LASF416
 	.byte	0x1
 	.2byte	0x2b3
 	.4byte	0x50
@@ -6882,101 +6867,101 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LFE281-.LFB281
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x17dd
-	.uleb128 0x30
+	.4byte	0x17a5
+	.uleb128 0x2f
 	.ascii	"dev\000"
 	.byte	0x1
 	.2byte	0x2b3
-	.4byte	0x260
+	.4byte	0x25b
 	.4byte	.LLST14
-	.uleb128 0x31
+	.uleb128 0x30
 	.ascii	"otp\000"
 	.byte	0x1
 	.2byte	0x2b5
-	.4byte	0x17dd
+	.4byte	0x17a5
 	.4byte	.LLST15
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL18
-	.4byte	0x3c32
-	.4byte	0x1766
-	.uleb128 0x33
+	.4byte	0x3c02
+	.4byte	0x172e
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x75
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL21
-	.4byte	0x3c3e
-	.4byte	0x177a
-	.uleb128 0x33
+	.4byte	0x3c0e
+	.4byte	0x1742
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x75
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL22
-	.4byte	0x3c49
-	.4byte	0x179c
-	.uleb128 0x33
+	.4byte	0x3c19
+	.4byte	0x1764
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x75
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	.LC0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x52
 	.uleb128 0x1
 	.byte	0x30
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL23
-	.4byte	0x3c49
-	.4byte	0x17be
-	.uleb128 0x33
+	.4byte	0x3c19
+	.4byte	0x1786
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x75
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	.LC1
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x52
 	.uleb128 0x1
 	.byte	0x30
 	.byte	0
-	.uleb128 0x34
-	.4byte	.LVL24
-	.4byte	0x3c49
 	.uleb128 0x33
+	.4byte	.LVL24
+	.4byte	0x3c19
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x75
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	.LC2
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x52
 	.uleb128 0x1
@@ -6985,9 +6970,9 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.byte	0
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x1616
-	.uleb128 0x2f
-	.4byte	.LASF420
+	.4byte	0x15de
+	.uleb128 0x2e
+	.4byte	.LASF417
 	.byte	0x1
 	.2byte	0x29c
 	.4byte	0x50
@@ -6995,59 +6980,59 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LFE280-.LFB280
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x1854
-	.uleb128 0x30
+	.4byte	0x181c
+	.uleb128 0x2f
 	.ascii	"dev\000"
 	.byte	0x1
 	.2byte	0x29c
-	.4byte	0x260
+	.4byte	0x25b
 	.4byte	.LLST1
-	.uleb128 0x35
-	.4byte	.LASF421
+	.uleb128 0x34
+	.4byte	.LASF418
 	.byte	0x1
 	.2byte	0x29d
 	.4byte	0x37
 	.uleb128 0x1
 	.byte	0x51
-	.uleb128 0x36
+	.uleb128 0x35
 	.ascii	"buf\000"
 	.byte	0x1
 	.2byte	0x29e
-	.4byte	0x138
+	.4byte	0x133
 	.uleb128 0x1
 	.byte	0x52
-	.uleb128 0x31
+	.uleb128 0x30
 	.ascii	"ret\000"
 	.byte	0x1
 	.2byte	0x2a0
 	.4byte	0x50
 	.4byte	.LLST2
-	.uleb128 0x37
-	.4byte	0x1854
+	.uleb128 0x36
+	.4byte	0x181c
 	.4byte	.LBB23
 	.4byte	.Ldebug_ranges0+0
 	.byte	0x1
 	.2byte	0x2a4
-	.uleb128 0x38
-	.4byte	0x1865
+	.uleb128 0x37
+	.4byte	0x182d
 	.4byte	.LLST3
 	.byte	0
 	.byte	0
-	.uleb128 0x39
-	.4byte	.LASF429
+	.uleb128 0x38
+	.4byte	.LASF426
 	.byte	0x1
 	.2byte	0x295
 	.4byte	0x50
 	.byte	0x1
-	.4byte	0x1872
-	.uleb128 0x3a
+	.4byte	0x183a
+	.uleb128 0x39
 	.ascii	"buf\000"
 	.byte	0x1
 	.2byte	0x295
-	.4byte	0x11bc
+	.4byte	0x1184
 	.byte	0
-	.uleb128 0x2f
-	.4byte	.LASF422
+	.uleb128 0x2e
+	.4byte	.LASF419
 	.byte	0x1
 	.2byte	0x28d
 	.4byte	0x50
@@ -7055,72 +7040,72 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LFE278-.LFB278
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x1913
-	.uleb128 0x30
+	.4byte	0x18db
+	.uleb128 0x2f
 	.ascii	"dev\000"
 	.byte	0x1
 	.2byte	0x28d
-	.4byte	0x260
+	.4byte	0x25b
 	.4byte	.LLST4
-	.uleb128 0x3b
-	.4byte	.LASF423
+	.uleb128 0x3a
+	.4byte	.LASF420
 	.byte	0x1
 	.2byte	0x28d
 	.4byte	0x50
 	.4byte	.LLST5
-	.uleb128 0x30
+	.uleb128 0x2f
 	.ascii	"buf\000"
 	.byte	0x1
 	.2byte	0x28e
-	.4byte	0x266
+	.4byte	0x261
 	.4byte	.LLST6
-	.uleb128 0x3b
+	.uleb128 0x3a
 	.4byte	.LASF51
 	.byte	0x1
 	.2byte	0x28e
 	.4byte	0x50
 	.4byte	.LLST7
-	.uleb128 0x3c
-	.4byte	.LASF424
+	.uleb128 0x3b
+	.4byte	.LASF421
 	.byte	0x1
 	.2byte	0x290
-	.4byte	0x1913
+	.4byte	0x18db
 	.4byte	.LLST8
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL8
-	.4byte	0x3c54
-	.4byte	0x18f0
-	.uleb128 0x33
+	.4byte	0x3c24
+	.4byte	0x18b8
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x75
 	.sleb128 0
 	.byte	0
-	.uleb128 0x3d
+	.uleb128 0x3c
 	.4byte	.LVL11
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x3
 	.byte	0xf3
 	.uleb128 0x1
 	.byte	0x50
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x3
 	.byte	0xf3
 	.uleb128 0x1
 	.byte	0x51
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x52
 	.uleb128 0x3
 	.byte	0xf3
 	.uleb128 0x1
 	.byte	0x52
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x53
 	.uleb128 0x3
@@ -7131,9 +7116,9 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.byte	0
 	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x1653
-	.uleb128 0x2f
-	.4byte	.LASF425
+	.4byte	0x161b
+	.uleb128 0x2e
+	.4byte	.LASF422
 	.byte	0x1
 	.2byte	0x285
 	.4byte	0x50
@@ -7141,72 +7126,72 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LFE277-.LFB277
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x19ba
-	.uleb128 0x30
+	.4byte	0x1982
+	.uleb128 0x2f
 	.ascii	"dev\000"
 	.byte	0x1
 	.2byte	0x285
-	.4byte	0x260
+	.4byte	0x25b
 	.4byte	.LLST9
-	.uleb128 0x3b
-	.4byte	.LASF423
+	.uleb128 0x3a
+	.4byte	.LASF420
 	.byte	0x1
 	.2byte	0x285
 	.4byte	0x50
 	.4byte	.LLST10
-	.uleb128 0x30
+	.uleb128 0x2f
 	.ascii	"buf\000"
 	.byte	0x1
 	.2byte	0x286
-	.4byte	0x138
+	.4byte	0x133
 	.4byte	.LLST11
-	.uleb128 0x3b
+	.uleb128 0x3a
 	.4byte	.LASF51
 	.byte	0x1
 	.2byte	0x286
 	.4byte	0x50
 	.4byte	.LLST12
-	.uleb128 0x3c
-	.4byte	.LASF424
+	.uleb128 0x3b
+	.4byte	.LASF421
 	.byte	0x1
 	.2byte	0x288
-	.4byte	0x1913
+	.4byte	0x18db
 	.4byte	.LLST13
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL13
-	.4byte	0x3c54
-	.4byte	0x1997
-	.uleb128 0x33
+	.4byte	0x3c24
+	.4byte	0x195f
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x75
 	.sleb128 0
 	.byte	0
-	.uleb128 0x3d
+	.uleb128 0x3c
 	.4byte	.LVL16
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x3
 	.byte	0xf3
 	.uleb128 0x1
 	.byte	0x50
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x3
 	.byte	0xf3
 	.uleb128 0x1
 	.byte	0x51
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x52
 	.uleb128 0x3
 	.byte	0xf3
 	.uleb128 0x1
 	.byte	0x52
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x53
 	.uleb128 0x3
@@ -7215,8 +7200,8 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.byte	0x53
 	.byte	0
 	.byte	0
-	.uleb128 0x2f
-	.4byte	.LASF426
+	.uleb128 0x2e
+	.4byte	.LASF423
 	.byte	0x1
 	.2byte	0x251
 	.4byte	0x50
@@ -7224,142 +7209,142 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LFE276-.LFB276
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x223d
-	.uleb128 0x30
+	.4byte	0x2208
+	.uleb128 0x2f
 	.ascii	"dev\000"
 	.byte	0x1
 	.2byte	0x251
-	.4byte	0x260
+	.4byte	0x25b
 	.4byte	.LLST144
-	.uleb128 0x3b
-	.4byte	.LASF423
+	.uleb128 0x3a
+	.4byte	.LASF420
 	.byte	0x1
 	.2byte	0x251
 	.4byte	0x50
 	.4byte	.LLST145
-	.uleb128 0x30
+	.uleb128 0x2f
 	.ascii	"buf\000"
 	.byte	0x1
 	.2byte	0x252
-	.4byte	0x266
+	.4byte	0x261
 	.4byte	.LLST146
-	.uleb128 0x3b
+	.uleb128 0x3a
 	.4byte	.LASF51
 	.byte	0x1
 	.2byte	0x252
 	.4byte	0x50
 	.4byte	.LLST147
-	.uleb128 0x31
+	.uleb128 0x30
 	.ascii	"otp\000"
 	.byte	0x1
 	.2byte	0x254
-	.4byte	0x17dd
+	.4byte	0x17a5
 	.4byte	.LLST148
-	.uleb128 0x2d
-	.4byte	.LASF385
+	.uleb128 0x2c
+	.4byte	.LASF382
 	.byte	0x1
 	.2byte	0x255
-	.4byte	0x11b6
+	.4byte	0x117e
 	.uleb128 0x2
 	.byte	0x91
 	.sleb128 -60
-	.uleb128 0x2d
-	.4byte	.LASF427
+	.uleb128 0x2c
+	.4byte	.LASF424
 	.byte	0x1
 	.2byte	0x256
 	.4byte	0xf6
 	.uleb128 0x2
 	.byte	0x91
 	.sleb128 -60
-	.uleb128 0x3c
-	.4byte	.LASF428
+	.uleb128 0x3b
+	.4byte	.LASF425
 	.byte	0x1
 	.2byte	0x257
 	.4byte	0xf6
 	.4byte	.LLST149
-	.uleb128 0x31
+	.uleb128 0x30
 	.ascii	"i\000"
 	.byte	0x1
 	.2byte	0x258
 	.4byte	0x50
 	.4byte	.LLST150
-	.uleb128 0x31
+	.uleb128 0x30
 	.ascii	"ret\000"
 	.byte	0x1
 	.2byte	0x258
 	.4byte	0x50
 	.4byte	.LLST151
-	.uleb128 0x3e
-	.4byte	0x272b
+	.uleb128 0x3d
+	.4byte	0x26f6
 	.4byte	.LBB248
 	.4byte	.Ldebug_ranges0+0x230
 	.byte	0x1
 	.2byte	0x276
-	.4byte	0x1b02
-	.uleb128 0x38
-	.4byte	0x2760
+	.4byte	0x1aca
+	.uleb128 0x37
+	.4byte	0x272b
 	.4byte	.LLST152
-	.uleb128 0x38
-	.4byte	0x2754
+	.uleb128 0x37
+	.4byte	0x271f
 	.4byte	.LLST153
-	.uleb128 0x3f
-	.4byte	0x2748
-	.uleb128 0x38
-	.4byte	0x273c
+	.uleb128 0x3e
+	.4byte	0x2713
+	.uleb128 0x37
+	.4byte	0x2707
 	.4byte	.LLST154
-	.uleb128 0x40
+	.uleb128 0x3f
 	.4byte	.Ldebug_ranges0+0x230
-	.uleb128 0x41
-	.4byte	0x276c
+	.uleb128 0x40
+	.4byte	0x2737
 	.4byte	.LLST155
-	.uleb128 0x42
-	.4byte	0x2778
+	.uleb128 0x41
+	.4byte	0x2743
 	.uleb128 0x2
 	.byte	0x91
 	.sleb128 -34
-	.uleb128 0x41
-	.4byte	0x2784
+	.uleb128 0x40
+	.4byte	0x274f
 	.4byte	.LLST156
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL272
-	.4byte	0x34aa
-	.4byte	0x1ae9
-	.uleb128 0x33
+	.4byte	0x3478
+	.4byte	0x1ab1
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x3
 	.byte	0x7d
 	.sleb128 0
 	.byte	0x6
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x2
 	.byte	0x75
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x52
 	.uleb128 0x2
 	.byte	0x91
 	.sleb128 -34
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x53
 	.uleb128 0x1
 	.byte	0x32
 	.byte	0
-	.uleb128 0x34
-	.4byte	.LVL276
-	.4byte	0x2791
 	.uleb128 0x33
+	.4byte	.LVL276
+	.4byte	0x275c
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x3
 	.byte	0x7d
 	.sleb128 0
 	.byte	0x6
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x2
@@ -7368,537 +7353,537 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x3e
-	.4byte	0x223d
+	.uleb128 0x3d
+	.4byte	0x2208
 	.4byte	.LBB253
 	.4byte	.Ldebug_ranges0+0x258
 	.byte	0x1
 	.2byte	0x27c
-	.4byte	0x21e5
-	.uleb128 0x38
-	.4byte	0x2272
+	.4byte	0x21b0
+	.uleb128 0x37
+	.4byte	0x223d
 	.4byte	.LLST157
-	.uleb128 0x38
-	.4byte	0x2266
+	.uleb128 0x37
+	.4byte	0x2231
 	.4byte	.LLST158
-	.uleb128 0x3f
-	.4byte	0x225a
-	.uleb128 0x38
-	.4byte	0x224e
+	.uleb128 0x3e
+	.4byte	0x2225
+	.uleb128 0x37
+	.4byte	0x2219
 	.4byte	.LLST159
-	.uleb128 0x40
+	.uleb128 0x3f
 	.4byte	.Ldebug_ranges0+0x258
-	.uleb128 0x41
-	.4byte	0x227e
+	.uleb128 0x40
+	.4byte	0x2249
 	.4byte	.LLST160
-	.uleb128 0x41
-	.4byte	0x228a
+	.uleb128 0x40
+	.4byte	0x2255
 	.4byte	.LLST161
-	.uleb128 0x43
-	.4byte	0x22a3
+	.uleb128 0x42
+	.4byte	0x226e
 	.4byte	.L98
+	.uleb128 0x43
+	.4byte	0x2261
 	.uleb128 0x44
-	.4byte	0x2296
-	.uleb128 0x45
 	.4byte	.LBB255
 	.4byte	.LBE255-.LBB255
-	.4byte	0x1b72
-	.uleb128 0x46
-	.4byte	0x22b0
+	.4byte	0x1b3a
+	.uleb128 0x45
+	.4byte	0x227b
 	.4byte	0x10000
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB256
 	.4byte	.LBE256-.LBB256
-	.4byte	0x1b89
-	.uleb128 0x46
-	.4byte	0x22c2
+	.4byte	0x1b51
+	.uleb128 0x45
+	.4byte	0x228d
 	.4byte	0x40004
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB257
 	.4byte	.LBE257-.LBB257
-	.4byte	0x1b9f
-	.uleb128 0x47
-	.4byte	0x22d4
+	.4byte	0x1b67
+	.uleb128 0x46
+	.4byte	0x229f
 	.sleb128 -65536
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB258
 	.4byte	.LBE258-.LBB258
-	.4byte	0x1bb6
-	.uleb128 0x47
-	.4byte	0x22e6
+	.4byte	0x1b7e
+	.uleb128 0x46
+	.4byte	0x22b1
 	.sleb128 -16776704
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB259
 	.4byte	.LBE259-.LBB259
-	.4byte	0x1bcc
-	.uleb128 0x47
-	.4byte	0x22f8
+	.4byte	0x1b94
+	.uleb128 0x46
+	.4byte	0x22c3
 	.sleb128 -65522
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB260
 	.4byte	.LBE260-.LBB260
-	.4byte	0x1be0
-	.uleb128 0x48
-	.4byte	0x230a
+	.4byte	0x1ba8
+	.uleb128 0x47
+	.4byte	0x22d5
 	.byte	0xf0
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB261
 	.4byte	.LBE261-.LBB261
-	.4byte	0x1bf4
-	.uleb128 0x48
-	.4byte	0x231c
+	.4byte	0x1bbc
+	.uleb128 0x47
+	.4byte	0x22e7
 	.byte	0x1
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB262
 	.4byte	.LBE262-.LBB262
-	.4byte	0x1c08
-	.uleb128 0x48
-	.4byte	0x232e
+	.4byte	0x1bd0
+	.uleb128 0x47
+	.4byte	0x22f9
 	.byte	0x7a
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB263
 	.4byte	.LBE263-.LBB263
-	.4byte	0x1c1c
-	.uleb128 0x48
-	.4byte	0x2340
+	.4byte	0x1be4
+	.uleb128 0x47
+	.4byte	0x230b
 	.byte	0x25
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB264
 	.4byte	.LBE264-.LBB264
-	.4byte	0x1c30
-	.uleb128 0x48
-	.4byte	0x2352
+	.4byte	0x1bf8
+	.uleb128 0x47
+	.4byte	0x231d
 	.byte	0
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB265
 	.4byte	.LBE265-.LBB265
-	.4byte	0x1c44
-	.uleb128 0x48
-	.4byte	0x2364
+	.4byte	0x1c0c
+	.uleb128 0x47
+	.4byte	0x232f
 	.byte	0
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB266
 	.4byte	.LBE266-.LBB266
-	.4byte	0x1c58
-	.uleb128 0x48
-	.4byte	0x2376
+	.4byte	0x1c20
+	.uleb128 0x47
+	.4byte	0x2341
 	.byte	0
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB267
 	.4byte	.LBE267-.LBB267
-	.4byte	0x1c6c
-	.uleb128 0x48
-	.4byte	0x2388
+	.4byte	0x1c34
+	.uleb128 0x47
+	.4byte	0x2353
 	.byte	0x1f
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB268
 	.4byte	.LBE268-.LBB268
-	.4byte	0x1c80
-	.uleb128 0x48
-	.4byte	0x239a
+	.4byte	0x1c48
+	.uleb128 0x47
+	.4byte	0x2365
 	.byte	0xb
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB269
 	.4byte	.LBE269-.LBB269
-	.4byte	0x1c94
-	.uleb128 0x48
-	.4byte	0x23ac
+	.4byte	0x1c5c
+	.uleb128 0x47
+	.4byte	0x2377
 	.byte	0x8
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB270
 	.4byte	.LBE270-.LBB270
-	.4byte	0x1ca8
-	.uleb128 0x48
-	.4byte	0x23be
+	.4byte	0x1c70
+	.uleb128 0x47
+	.4byte	0x2389
 	.byte	0
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB271
 	.4byte	.LBE271-.LBB271
-	.4byte	0x1cbc
-	.uleb128 0x48
-	.4byte	0x23d0
+	.4byte	0x1c84
+	.uleb128 0x47
+	.4byte	0x239b
 	.byte	0
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB272
 	.4byte	.LBE272-.LBB272
-	.4byte	0x1cd0
-	.uleb128 0x48
-	.4byte	0x23e2
+	.4byte	0x1c98
+	.uleb128 0x47
+	.4byte	0x23ad
 	.byte	0
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x290
-	.4byte	0x1ce1
-	.uleb128 0x42
-	.4byte	0x23f4
+	.4byte	0x1ca9
+	.uleb128 0x41
+	.4byte	0x23bf
 	.uleb128 0x1
 	.byte	0x51
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x2a8
-	.4byte	0x1cf4
-	.uleb128 0x41
-	.4byte	0x2406
+	.4byte	0x1cbc
+	.uleb128 0x40
+	.4byte	0x23d1
 	.4byte	.LLST162
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x2c0
-	.4byte	0x1d07
-	.uleb128 0x46
-	.4byte	0x2418
+	.4byte	0x1ccf
+	.uleb128 0x45
+	.4byte	0x23e3
 	.4byte	0x10001
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x2d8
-	.4byte	0x1d1a
-	.uleb128 0x41
-	.4byte	0x2708
+	.4byte	0x1ce2
+	.uleb128 0x40
+	.4byte	0x26d3
 	.4byte	.LLST163
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB281
 	.4byte	.LBE281-.LBB281
-	.4byte	0x1d31
-	.uleb128 0x47
-	.4byte	0x242a
+	.4byte	0x1cf9
+	.uleb128 0x46
+	.4byte	0x23f5
 	.sleb128 -16762368
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB282
 	.4byte	.LBE282-.LBB282
-	.4byte	0x1d45
-	.uleb128 0x48
-	.4byte	0x243c
+	.4byte	0x1d0d
+	.uleb128 0x47
+	.4byte	0x2407
 	.byte	0xf0
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB283
 	.4byte	.LBE283-.LBB283
-	.4byte	0x1d59
-	.uleb128 0x48
-	.4byte	0x244e
+	.4byte	0x1d21
+	.uleb128 0x47
+	.4byte	0x2419
 	.byte	0x1
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB284
 	.4byte	.LBE284-.LBB284
-	.4byte	0x1d6d
-	.uleb128 0x48
-	.4byte	0x2460
+	.4byte	0x1d35
+	.uleb128 0x47
+	.4byte	0x242b
 	.byte	0x7a
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB285
 	.4byte	.LBE285-.LBB285
-	.4byte	0x1d81
-	.uleb128 0x48
-	.4byte	0x2472
+	.4byte	0x1d49
+	.uleb128 0x47
+	.4byte	0x243d
 	.byte	0x15
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB286
 	.4byte	.LBE286-.LBB286
-	.4byte	0x1d95
-	.uleb128 0x48
-	.4byte	0x2484
+	.4byte	0x1d5d
+	.uleb128 0x47
+	.4byte	0x244f
 	.byte	0xdc
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB287
 	.4byte	.LBE287-.LBB287
-	.4byte	0x1da9
-	.uleb128 0x48
-	.4byte	0x2496
+	.4byte	0x1d71
+	.uleb128 0x47
+	.4byte	0x2461
 	.byte	0x92
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB288
 	.4byte	.LBE288-.LBB288
-	.4byte	0x1dbd
-	.uleb128 0x48
-	.4byte	0x24a8
+	.4byte	0x1d85
+	.uleb128 0x47
+	.4byte	0x2473
 	.byte	0x79
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB289
 	.4byte	.LBE289-.LBB289
-	.4byte	0x1dd1
-	.uleb128 0x48
-	.4byte	0x24ba
+	.4byte	0x1d99
+	.uleb128 0x47
+	.4byte	0x2485
 	.byte	0x81
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB290
 	.4byte	.LBE290-.LBB290
-	.4byte	0x1de5
-	.uleb128 0x48
-	.4byte	0x24cc
+	.4byte	0x1dad
+	.uleb128 0x47
+	.4byte	0x2497
 	.byte	0x7e
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB291
 	.4byte	.LBE291-.LBB291
-	.4byte	0x1df9
-	.uleb128 0x48
-	.4byte	0x24de
+	.4byte	0x1dc1
+	.uleb128 0x47
+	.4byte	0x24a9
 	.byte	0x21
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB292
 	.4byte	.LBE292-.LBB292
-	.4byte	0x1e0d
-	.uleb128 0x48
-	.4byte	0x24f0
+	.4byte	0x1dd5
+	.uleb128 0x47
+	.4byte	0x24bb
 	.byte	0x11
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB293
 	.4byte	.LBE293-.LBB293
-	.4byte	0x1e21
-	.uleb128 0x48
-	.4byte	0x2502
+	.4byte	0x1de9
+	.uleb128 0x47
+	.4byte	0x24cd
 	.byte	0x9d
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB294
 	.4byte	.LBE294-.LBB294
-	.4byte	0x1e35
-	.uleb128 0x48
-	.4byte	0x2514
+	.4byte	0x1dfd
+	.uleb128 0x47
+	.4byte	0x24df
 	.byte	0x2
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB295
 	.4byte	.LBE295-.LBB295
-	.4byte	0x1e49
-	.uleb128 0x48
-	.4byte	0x2526
+	.4byte	0x1e11
+	.uleb128 0x47
+	.4byte	0x24f1
 	.byte	0
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB296
 	.4byte	.LBE296-.LBB296
-	.4byte	0x1e5d
-	.uleb128 0x48
-	.4byte	0x2538
+	.4byte	0x1e25
+	.uleb128 0x47
+	.4byte	0x2503
 	.byte	0
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x2f0
-	.4byte	0x1e70
-	.uleb128 0x46
-	.4byte	0x254a
+	.4byte	0x1e38
+	.uleb128 0x45
+	.4byte	0x2515
 	.4byte	0x10001
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB299
 	.4byte	.LBE299-.LBB299
-	.4byte	0x1e87
-	.uleb128 0x47
-	.4byte	0x255c
+	.4byte	0x1e4f
+	.uleb128 0x46
+	.4byte	0x2527
 	.sleb128 -16776704
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB300
 	.4byte	.LBE300-.LBB300
-	.4byte	0x1e9d
-	.uleb128 0x47
-	.4byte	0x256e
+	.4byte	0x1e65
+	.uleb128 0x46
+	.4byte	0x2539
 	.sleb128 -65535
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB301
 	.4byte	.LBE301-.LBB301
-	.4byte	0x1eb1
-	.uleb128 0x48
-	.4byte	0x2580
+	.4byte	0x1e79
+	.uleb128 0x47
+	.4byte	0x254b
 	.byte	0xfb
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB302
 	.4byte	.LBE302-.LBB302
-	.4byte	0x1ec5
-	.uleb128 0x48
-	.4byte	0x2592
+	.4byte	0x1e8d
+	.uleb128 0x47
+	.4byte	0x255d
 	.byte	0
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x308
-	.4byte	0x1ed8
-	.uleb128 0x46
-	.4byte	0x25a4
+	.4byte	0x1ea0
+	.uleb128 0x45
+	.4byte	0x256f
 	.4byte	0x10001
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB305
 	.4byte	.LBE305-.LBB305
-	.4byte	0x1eee
-	.uleb128 0x47
-	.4byte	0x25b6
+	.4byte	0x1eb6
+	.uleb128 0x46
+	.4byte	0x2581
 	.sleb128 -65534
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB306
 	.4byte	.LBE306-.LBB306
-	.4byte	0x1f02
-	.uleb128 0x48
-	.4byte	0x25c8
+	.4byte	0x1eca
+	.uleb128 0x47
+	.4byte	0x2593
 	.byte	0xc0
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB307
 	.4byte	.LBE307-.LBB307
-	.4byte	0x1f19
-	.uleb128 0x41
-	.4byte	0x25da
+	.4byte	0x1ee1
+	.uleb128 0x40
+	.4byte	0x25a5
 	.4byte	.LLST164
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB308
 	.4byte	.LBE308-.LBB308
-	.4byte	0x1f30
-	.uleb128 0x41
-	.4byte	0x25ec
+	.4byte	0x1ef8
+	.uleb128 0x40
+	.4byte	0x25b7
 	.4byte	.LLST165
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x320
-	.4byte	0x1f43
-	.uleb128 0x46
-	.4byte	0x25fe
+	.4byte	0x1f0b
+	.uleb128 0x45
+	.4byte	0x25c9
 	.4byte	0x10001
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB311
 	.4byte	.LBE311-.LBB311
-	.4byte	0x1f5a
-	.uleb128 0x47
-	.4byte	0x2610
+	.4byte	0x1f22
+	.uleb128 0x46
+	.4byte	0x25db
 	.sleb128 -16762368
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB312
 	.4byte	.LBE312-.LBB312
-	.4byte	0x1f70
-	.uleb128 0x47
-	.4byte	0x2622
+	.4byte	0x1f38
+	.uleb128 0x46
+	.4byte	0x25ed
 	.sleb128 -65535
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB313
 	.4byte	.LBE313-.LBB313
-	.4byte	0x1f84
-	.uleb128 0x48
-	.4byte	0x2634
+	.4byte	0x1f4c
+	.uleb128 0x47
+	.4byte	0x25ff
 	.byte	0xff
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB314
 	.4byte	.LBE314-.LBB314
-	.4byte	0x1f98
-	.uleb128 0x48
-	.4byte	0x2646
+	.4byte	0x1f60
+	.uleb128 0x47
+	.4byte	0x2611
 	.byte	0xa
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x338
-	.4byte	0x1fab
-	.uleb128 0x46
-	.4byte	0x2658
+	.4byte	0x1f73
+	.uleb128 0x45
+	.4byte	0x2623
 	.4byte	0x10001
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB317
 	.4byte	.LBE317-.LBB317
-	.4byte	0x1fc1
-	.uleb128 0x47
-	.4byte	0x266a
+	.4byte	0x1f89
+	.uleb128 0x46
+	.4byte	0x2635
 	.sleb128 -65534
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB318
 	.4byte	.LBE318-.LBB318
-	.4byte	0x1fd5
-	.uleb128 0x48
-	.4byte	0x267c
+	.4byte	0x1f9d
+	.uleb128 0x47
+	.4byte	0x2647
 	.byte	0x1
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB319
 	.4byte	.LBE319-.LBB319
-	.4byte	0x1fe9
-	.uleb128 0x48
-	.4byte	0x268e
+	.4byte	0x1fb1
+	.uleb128 0x47
+	.4byte	0x2659
 	.byte	0xbf
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB320
 	.4byte	.LBE320-.LBB320
-	.4byte	0x1ffd
-	.uleb128 0x48
-	.4byte	0x26a0
+	.4byte	0x1fc5
+	.uleb128 0x47
+	.4byte	0x266b
 	.byte	0
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x350
-	.4byte	0x2010
-	.uleb128 0x46
-	.4byte	0x26b2
+	.4byte	0x1fd8
+	.uleb128 0x45
+	.4byte	0x267d
 	.4byte	0x10001
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB323
 	.4byte	.LBE323-.LBB323
-	.4byte	0x2026
-	.uleb128 0x47
-	.4byte	0x26c4
+	.4byte	0x1fee
+	.uleb128 0x46
+	.4byte	0x268f
 	.sleb128 -65535
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB324
 	.4byte	.LBE324-.LBB324
-	.4byte	0x203a
-	.uleb128 0x48
-	.4byte	0x26d6
+	.4byte	0x2002
+	.uleb128 0x47
+	.4byte	0x26a1
 	.byte	0x2
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB325
 	.4byte	.LBE325-.LBB325
-	.4byte	0x204e
-	.uleb128 0x48
-	.4byte	0x26e8
+	.4byte	0x2016
+	.uleb128 0x47
+	.4byte	0x26b3
 	.byte	0xbf
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x368
-	.4byte	0x2061
-	.uleb128 0x46
-	.4byte	0x26fa
+	.4byte	0x2029
+	.uleb128 0x45
+	.4byte	0x26c5
 	.4byte	0x10001
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL260
-	.4byte	0x3c54
-	.4byte	0x2076
-	.uleb128 0x33
+	.4byte	0x3c24
+	.4byte	0x203e
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x3
@@ -7906,243 +7891,246 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.sleb128 0
 	.byte	0x6
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL263
-	.4byte	0x3c60
-	.4byte	0x2093
-	.uleb128 0x33
+	.4byte	0x3c30
+	.4byte	0x205e
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	.LC4
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
-	.uleb128 0x2
-	.byte	0x7a
+	.uleb128 0x5
+	.byte	0x75
 	.sleb128 0
+	.byte	0x9
+	.byte	0xfe
+	.byte	0x1a
 	.byte	0
-	.uleb128 0x4a
+	.uleb128 0x49
 	.4byte	.LVL287
 	.uleb128 0x2
 	.byte	0x76
 	.sleb128 0
-	.4byte	0x20a6
-	.uleb128 0x33
+	.4byte	0x2071
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x53
 	.uleb128 0x2
 	.byte	0x7a
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL307
-	.4byte	0x3a63
-	.4byte	0x20c7
-	.uleb128 0x33
+	.4byte	0x3a33
+	.4byte	0x2092
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x1
 	.byte	0x32
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x4c
+	.uleb128 0x4b
 	.4byte	.LVL310
-	.4byte	0x3c60
-	.uleb128 0x4a
+	.4byte	0x3c30
+	.uleb128 0x49
 	.4byte	.LVL311
 	.uleb128 0x2
 	.byte	0x76
 	.sleb128 0
-	.4byte	0x20e3
-	.uleb128 0x33
+	.4byte	0x20ae
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x53
 	.uleb128 0x2
 	.byte	0x7a
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL331
-	.4byte	0x3a63
-	.4byte	0x2105
-	.uleb128 0x33
+	.4byte	0x3a33
+	.4byte	0x20d0
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x2
 	.byte	0x77
 	.sleb128 0
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL339
-	.4byte	0x3a63
-	.4byte	0x2127
-	.uleb128 0x33
+	.4byte	0x3a33
+	.4byte	0x20f2
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x2
 	.byte	0x77
 	.sleb128 0
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL352
-	.4byte	0x3a63
-	.4byte	0x2149
-	.uleb128 0x33
+	.4byte	0x3a33
+	.4byte	0x2114
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x2
 	.byte	0x77
 	.sleb128 0
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL360
-	.4byte	0x3a63
-	.4byte	0x216b
-	.uleb128 0x33
+	.4byte	0x3a33
+	.4byte	0x2136
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x2
 	.byte	0x77
 	.sleb128 0
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL368
-	.4byte	0x3a63
-	.4byte	0x218d
-	.uleb128 0x33
+	.4byte	0x3a33
+	.4byte	0x2158
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x2
 	.byte	0x77
 	.sleb128 0
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL372
-	.4byte	0x39b6
-	.4byte	0x21a9
-	.uleb128 0x33
+	.4byte	0x3986
+	.4byte	0x2174
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x4b
-	.4byte	0x3791
+	.uleb128 0x4a
+	.4byte	0x3761
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL379
-	.4byte	0x3a63
-	.4byte	0x21cb
-	.uleb128 0x33
+	.4byte	0x3a33
+	.4byte	0x2196
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x2
 	.byte	0x77
 	.sleb128 0
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x34
-	.4byte	.LVL383
-	.4byte	0x3a0c
 	.uleb128 0x33
+	.4byte	.LVL383
+	.4byte	0x39dc
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x4b
-	.4byte	0x37db
+	.uleb128 0x4a
+	.4byte	0x37ab
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL241
-	.4byte	0x3c32
-	.4byte	0x21fa
-	.uleb128 0x33
+	.4byte	0x3c02
+	.4byte	0x21c5
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x3
@@ -8150,44 +8138,44 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.sleb128 0
 	.byte	0x6
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL244
-	.4byte	0x3c6b
-	.4byte	0x220e
-	.uleb128 0x33
+	.4byte	0x3c3b
+	.4byte	0x21d9
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x76
 	.sleb128 0
 	.byte	0
-	.uleb128 0x4c
+	.uleb128 0x4b
 	.4byte	.LVL247
-	.4byte	0x3c60
-	.uleb128 0x34
-	.4byte	.LVL252
-	.4byte	0x34aa
+	.4byte	0x3c30
 	.uleb128 0x33
+	.4byte	.LVL252
+	.4byte	0x3478
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x3
 	.byte	0x7d
 	.sleb128 0
 	.byte	0x6
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x4
 	.byte	0x91
 	.sleb128 -76
 	.byte	0x6
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x52
 	.uleb128 0x2
 	.byte	0x75
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x53
 	.uleb128 0x2
@@ -8195,549 +8183,549 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.sleb128 0
 	.byte	0
 	.byte	0
-	.uleb128 0x39
-	.4byte	.LASF430
+	.uleb128 0x38
+	.4byte	.LASF427
 	.byte	0x1
 	.2byte	0x1bb
 	.4byte	0x50
 	.byte	0x1
-	.4byte	0x2716
-	.uleb128 0x3a
+	.4byte	0x26e1
+	.uleb128 0x39
 	.ascii	"dev\000"
 	.byte	0x1
 	.2byte	0x1bb
-	.4byte	0x260
-	.uleb128 0x3a
+	.4byte	0x25b
+	.uleb128 0x39
 	.ascii	"otp\000"
 	.byte	0x1
 	.2byte	0x1bc
-	.4byte	0x17dd
-	.uleb128 0x4d
-	.4byte	.LASF423
+	.4byte	0x17a5
+	.uleb128 0x4c
+	.4byte	.LASF420
 	.byte	0x1
 	.2byte	0x1bd
 	.4byte	0x50
-	.uleb128 0x4d
-	.4byte	.LASF385
+	.uleb128 0x4c
+	.4byte	.LASF382
 	.byte	0x1
 	.2byte	0x1bd
 	.4byte	0x9f
-	.uleb128 0x4e
+	.uleb128 0x4d
 	.ascii	"ret\000"
 	.byte	0x1
 	.2byte	0x1bf
 	.4byte	0x50
-	.uleb128 0x4f
-	.4byte	.LASF424
+	.uleb128 0x4e
+	.4byte	.LASF421
 	.byte	0x1
 	.2byte	0x1c0
-	.4byte	0x1913
+	.4byte	0x18db
+	.uleb128 0x4f
+	.4byte	.LASF428
+	.4byte	0x26f1
+	.4byte	.LASF427
 	.uleb128 0x50
-	.4byte	.LASF431
-	.4byte	0x2726
-	.4byte	.LASF430
-	.uleb128 0x51
-	.4byte	.LASF437
+	.4byte	.LASF434
 	.byte	0x1
 	.2byte	0x248
-	.uleb128 0x52
-	.4byte	0x22bd
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2288
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1d4
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x22cf
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x229a
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1d5
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x22e1
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x22ac
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1d6
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x22f3
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x22be
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1d7
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2305
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x22d0
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1d8
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2317
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x22e2
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1d9
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2329
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x22f4
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1da
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x233b
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2306
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1db
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x234d
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2318
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1dc
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x235f
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x232a
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1dd
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2371
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x233c
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1de
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2383
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x234e
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1df
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2395
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2360
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1e0
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x23a7
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2372
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1e1
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x23b9
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2384
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1e2
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x23cb
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2396
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1e3
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x23dd
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x23a8
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1e4
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x23ef
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x23ba
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1e5
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2401
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x23cc
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1e6
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2413
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x23de
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1e7
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2425
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x23f0
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1e8
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2437
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2402
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1ef
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2449
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2414
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1f0
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x245b
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2426
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1f1
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x246d
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2438
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1f2
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x247f
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x244a
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1f3
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2491
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x245c
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1f4
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x24a3
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x246e
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1f5
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x24b5
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2480
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1f6
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x24c7
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2492
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1f7
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x24d9
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x24a4
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1f8
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x24eb
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x24b6
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1f9
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x24fd
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x24c8
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1fa
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x250f
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x24da
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1fb
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2521
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x24ec
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1fc
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2533
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x24fe
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1fd
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2545
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2510
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1fe
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2557
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2522
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x1ff
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2569
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2534
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x206
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x257b
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2546
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x207
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x258d
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2558
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x208
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x259f
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x256a
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x209
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x25b1
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x257c
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x20a
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x25c3
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x258e
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x211
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x25d5
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x25a0
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x212
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x25e7
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x25b2
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x213
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x25f9
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x25c4
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x214
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x260b
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x25d6
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x215
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x261d
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x25e8
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x21c
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x262f
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x25fa
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x21d
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2641
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x260c
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x21e
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2653
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x261e
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x21f
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2665
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2630
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x220
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2677
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2642
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x227
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2689
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2654
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x228
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x269b
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2666
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x229
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x26ad
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x2678
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x22a
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x26bf
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x268a
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x22b
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x26d1
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x269c
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x238
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x26e3
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x26ae
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x239
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x26f5
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x26c0
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x23a
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x2707
-	.uleb128 0x4e
+	.uleb128 0x51
+	.4byte	0x26d2
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x23b
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x53
-	.uleb128 0x4e
+	.uleb128 0x52
+	.uleb128 0x4d
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x249
@@ -8746,58 +8734,58 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.byte	0
 	.uleb128 0xa
 	.4byte	0xea
-	.4byte	0x2726
+	.4byte	0x26f1
 	.uleb128 0x11
 	.4byte	0xd6
 	.byte	0x1f
 	.byte	0
 	.uleb128 0x7
-	.4byte	0x2716
-	.uleb128 0x39
-	.4byte	.LASF432
+	.4byte	0x26e1
+	.uleb128 0x38
+	.4byte	.LASF429
 	.byte	0x1
 	.2byte	0x1a5
 	.4byte	0x50
 	.byte	0x1
-	.4byte	0x2791
-	.uleb128 0x3a
+	.4byte	0x275c
+	.uleb128 0x39
 	.ascii	"dev\000"
 	.byte	0x1
 	.2byte	0x1a5
-	.4byte	0x260
-	.uleb128 0x3a
+	.4byte	0x25b
+	.uleb128 0x39
 	.ascii	"otp\000"
 	.byte	0x1
 	.2byte	0x1a6
-	.4byte	0x17dd
-	.uleb128 0x4d
-	.4byte	.LASF423
+	.4byte	0x17a5
+	.uleb128 0x4c
+	.4byte	.LASF420
 	.byte	0x1
 	.2byte	0x1a7
 	.4byte	0x50
-	.uleb128 0x4d
-	.4byte	.LASF385
+	.uleb128 0x4c
+	.4byte	.LASF382
 	.byte	0x1
 	.2byte	0x1a7
 	.4byte	0x90
-	.uleb128 0x4f
-	.4byte	.LASF433
+	.uleb128 0x4e
+	.4byte	.LASF430
 	.byte	0x1
 	.2byte	0x1a9
 	.4byte	0x9f
-	.uleb128 0x4f
-	.4byte	.LASF428
+	.uleb128 0x4e
+	.4byte	.LASF425
 	.byte	0x1
 	.2byte	0x1a9
 	.4byte	0x9f
-	.uleb128 0x4e
+	.uleb128 0x4d
 	.ascii	"ret\000"
 	.byte	0x1
 	.2byte	0x1aa
 	.4byte	0x50
 	.byte	0
-	.uleb128 0x54
-	.4byte	.LASF434
+	.uleb128 0x53
+	.4byte	.LASF431
 	.byte	0x1
 	.byte	0xd2
 	.4byte	0x50
@@ -8805,311 +8793,311 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LFE273-.LFB273
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x3495
-	.uleb128 0x55
+	.4byte	0x3463
+	.uleb128 0x54
 	.ascii	"dev\000"
 	.byte	0x1
 	.byte	0xd2
-	.4byte	0x260
+	.4byte	0x25b
 	.4byte	.LLST31
-	.uleb128 0x55
+	.uleb128 0x54
 	.ascii	"otp\000"
 	.byte	0x1
 	.byte	0xd3
-	.4byte	0x17dd
+	.4byte	0x17a5
 	.4byte	.LLST32
-	.uleb128 0x56
-	.4byte	.LASF423
+	.uleb128 0x55
+	.4byte	.LASF420
 	.byte	0x1
 	.byte	0xd4
 	.4byte	0x50
 	.4byte	.LLST33
-	.uleb128 0x56
-	.4byte	.LASF385
+	.uleb128 0x55
+	.4byte	.LASF382
 	.byte	0x1
 	.byte	0xd4
 	.4byte	0x9f
 	.4byte	.LLST34
-	.uleb128 0x57
+	.uleb128 0x56
 	.ascii	"ret\000"
 	.byte	0x1
 	.byte	0xd6
 	.4byte	0x50
 	.4byte	.LLST35
-	.uleb128 0x58
-	.4byte	.LASF424
+	.uleb128 0x57
+	.4byte	.LASF421
 	.byte	0x1
 	.byte	0xd7
-	.4byte	0x1913
+	.4byte	0x18db
 	.4byte	.LLST36
-	.uleb128 0x59
-	.4byte	.LASF431
-	.4byte	0x34a5
+	.uleb128 0x58
+	.4byte	.LASF428
+	.4byte	0x3473
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.10262
-	.uleb128 0x5a
-	.4byte	.LASF437
+	.4byte	__func__.10225
+	.uleb128 0x59
+	.4byte	.LASF434
 	.byte	0x1
 	.2byte	0x19e
 	.4byte	.L38
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB45
 	.4byte	.LBE45-.LBB45
-	.4byte	0x283c
-	.uleb128 0x57
+	.4byte	0x2807
+	.uleb128 0x56
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0xeb
 	.4byte	0xaa
 	.4byte	.LLST37
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB46
 	.4byte	.LBE46-.LBB46
-	.4byte	0x2859
-	.uleb128 0x57
+	.4byte	0x2824
+	.uleb128 0x56
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0xec
 	.4byte	0xaa
 	.4byte	.LLST38
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB47
 	.4byte	.LBE47-.LBB47
-	.4byte	0x2876
-	.uleb128 0x57
+	.4byte	0x2841
+	.uleb128 0x56
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0xed
 	.4byte	0xaa
 	.4byte	.LLST39
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB48
 	.4byte	.LBE48-.LBB48
-	.4byte	0x2893
-	.uleb128 0x57
+	.4byte	0x285e
+	.uleb128 0x56
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0xee
 	.4byte	0xaa
 	.4byte	.LLST40
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB49
 	.4byte	.LBE49-.LBB49
-	.4byte	0x28b0
-	.uleb128 0x57
+	.4byte	0x287b
+	.uleb128 0x56
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0xef
 	.4byte	0xaa
 	.4byte	.LLST41
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB50
 	.4byte	.LBE50-.LBB50
-	.4byte	0x28cd
-	.uleb128 0x57
+	.4byte	0x2898
+	.uleb128 0x56
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0xf0
 	.4byte	0xaa
 	.4byte	.LLST42
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB51
 	.4byte	.LBE51-.LBB51
-	.4byte	0x28ea
-	.uleb128 0x57
+	.4byte	0x28b5
+	.uleb128 0x56
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0xf1
 	.4byte	0xaa
 	.4byte	.LLST43
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB52
 	.4byte	.LBE52-.LBB52
-	.4byte	0x2907
-	.uleb128 0x57
+	.4byte	0x28d2
+	.uleb128 0x56
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0xf2
 	.4byte	0xaa
 	.4byte	.LLST44
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x60
-	.4byte	0x2920
-	.uleb128 0x57
+	.4byte	0x28eb
+	.uleb128 0x56
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0xf3
 	.4byte	0xaa
 	.4byte	.LLST45
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB55
 	.4byte	.LBE55-.LBB55
-	.4byte	0x293d
-	.uleb128 0x57
+	.4byte	0x2908
+	.uleb128 0x56
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0xfa
 	.4byte	0xaa
 	.4byte	.LLST46
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB56
 	.4byte	.LBE56-.LBB56
-	.4byte	0x295a
-	.uleb128 0x57
+	.4byte	0x2925
+	.uleb128 0x56
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0xfb
 	.4byte	0xaa
 	.4byte	.LLST47
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB57
 	.4byte	.LBE57-.LBB57
-	.4byte	0x2977
-	.uleb128 0x57
+	.4byte	0x2942
+	.uleb128 0x56
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0xfc
 	.4byte	0xaa
 	.4byte	.LLST48
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB58
 	.4byte	.LBE58-.LBB58
-	.4byte	0x2994
-	.uleb128 0x57
+	.4byte	0x295f
+	.uleb128 0x56
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0xfd
 	.4byte	0xaa
 	.4byte	.LLST49
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB59
 	.4byte	.LBE59-.LBB59
-	.4byte	0x29b1
-	.uleb128 0x57
+	.4byte	0x297c
+	.uleb128 0x56
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0xfe
 	.4byte	0xaa
 	.4byte	.LLST50
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB60
 	.4byte	.LBE60-.LBB60
-	.4byte	0x29ce
-	.uleb128 0x57
+	.4byte	0x2999
+	.uleb128 0x56
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0xff
 	.4byte	0xaa
 	.4byte	.LLST51
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB61
 	.4byte	.LBE61-.LBB61
-	.4byte	0x29ec
-	.uleb128 0x31
+	.4byte	0x29b7
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x100
 	.4byte	0xaa
 	.4byte	.LLST52
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB62
 	.4byte	.LBE62-.LBB62
-	.4byte	0x2a0a
-	.uleb128 0x31
+	.4byte	0x29d5
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x101
 	.4byte	0xaa
 	.4byte	.LLST53
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB63
 	.4byte	.LBE63-.LBB63
-	.4byte	0x2a28
-	.uleb128 0x31
+	.4byte	0x29f3
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x102
 	.4byte	0xaa
 	.4byte	.LLST54
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB64
 	.4byte	.LBE64-.LBB64
-	.4byte	0x2a46
-	.uleb128 0x31
+	.4byte	0x2a11
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x103
 	.4byte	0xaa
 	.4byte	.LLST55
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB65
 	.4byte	.LBE65-.LBB65
-	.4byte	0x2a64
-	.uleb128 0x31
+	.4byte	0x2a2f
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x104
 	.4byte	0xaa
 	.4byte	.LLST56
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB66
 	.4byte	.LBE66-.LBB66
-	.4byte	0x2a82
-	.uleb128 0x31
+	.4byte	0x2a4d
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x105
 	.4byte	0xaa
 	.4byte	.LLST57
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB67
 	.4byte	.LBE67-.LBB67
-	.4byte	0x2aa0
-	.uleb128 0x31
+	.4byte	0x2a6b
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x106
 	.4byte	0xaa
 	.4byte	.LLST58
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB68
 	.4byte	.LBE68-.LBB68
-	.4byte	0x2abe
-	.uleb128 0x31
+	.4byte	0x2a89
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x107
 	.4byte	0xaa
 	.4byte	.LLST59
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB69
 	.4byte	.LBE69-.LBB69
-	.4byte	0x2ada
-	.uleb128 0x5b
+	.4byte	0x2aa5
+	.uleb128 0x5a
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x108
@@ -9117,714 +9105,714 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x1
 	.byte	0x53
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB70
 	.4byte	.LBE70-.LBB70
-	.4byte	0x2af8
-	.uleb128 0x31
+	.4byte	0x2ac3
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x109
 	.4byte	0xaa
 	.4byte	.LLST60
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x78
-	.4byte	0x2b12
-	.uleb128 0x31
+	.4byte	0x2add
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x10a
 	.4byte	0xaa
 	.4byte	.LLST61
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB73
 	.4byte	.LBE73-.LBB73
-	.4byte	0x2b30
-	.uleb128 0x31
+	.4byte	0x2afb
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x111
 	.4byte	0xaa
 	.4byte	.LLST62
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB74
 	.4byte	.LBE74-.LBB74
-	.4byte	0x2b4e
-	.uleb128 0x31
+	.4byte	0x2b19
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x112
 	.4byte	0xaa
 	.4byte	.LLST63
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB75
 	.4byte	.LBE75-.LBB75
-	.4byte	0x2b6c
-	.uleb128 0x31
+	.4byte	0x2b37
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x113
 	.4byte	0xaa
 	.4byte	.LLST64
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x90
-	.4byte	0x2b86
-	.uleb128 0x31
+	.4byte	0x2b51
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x114
 	.4byte	0xaa
 	.4byte	.LLST65
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB78
 	.4byte	.LBE78-.LBB78
-	.4byte	0x2ba4
-	.uleb128 0x31
+	.4byte	0x2b6f
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x11b
 	.4byte	0xaa
 	.4byte	.LLST66
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB79
 	.4byte	.LBE79-.LBB79
-	.4byte	0x2bc2
-	.uleb128 0x31
+	.4byte	0x2b8d
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x11c
 	.4byte	0xaa
 	.4byte	.LLST67
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB80
 	.4byte	.LBE80-.LBB80
-	.4byte	0x2be0
-	.uleb128 0x31
+	.4byte	0x2bab
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x11d
 	.4byte	0xaa
 	.4byte	.LLST68
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB81
 	.4byte	.LBE81-.LBB81
-	.4byte	0x2bfe
-	.uleb128 0x31
+	.4byte	0x2bc9
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x11e
 	.4byte	0xaa
 	.4byte	.LLST69
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB82
 	.4byte	.LBE82-.LBB82
-	.4byte	0x2c1c
-	.uleb128 0x31
+	.4byte	0x2be7
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x11f
 	.4byte	0xaa
 	.4byte	.LLST70
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB83
 	.4byte	.LBE83-.LBB83
-	.4byte	0x2c3a
-	.uleb128 0x31
+	.4byte	0x2c05
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x120
 	.4byte	0xaa
 	.4byte	.LLST71
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB84
 	.4byte	.LBE84-.LBB84
-	.4byte	0x2c58
-	.uleb128 0x31
+	.4byte	0x2c23
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x121
 	.4byte	0xaa
 	.4byte	.LLST72
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB85
 	.4byte	.LBE85-.LBB85
-	.4byte	0x2c76
-	.uleb128 0x31
+	.4byte	0x2c41
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x122
 	.4byte	0xaa
 	.4byte	.LLST73
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB86
 	.4byte	.LBE86-.LBB86
-	.4byte	0x2c94
-	.uleb128 0x31
+	.4byte	0x2c5f
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x123
 	.4byte	0xaa
 	.4byte	.LLST74
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB87
 	.4byte	.LBE87-.LBB87
-	.4byte	0x2cb2
-	.uleb128 0x31
+	.4byte	0x2c7d
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x124
 	.4byte	0xaa
 	.4byte	.LLST75
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB88
 	.4byte	.LBE88-.LBB88
-	.4byte	0x2cd0
-	.uleb128 0x31
+	.4byte	0x2c9b
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x125
 	.4byte	0xaa
 	.4byte	.LLST76
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB89
 	.4byte	.LBE89-.LBB89
-	.4byte	0x2cee
-	.uleb128 0x31
+	.4byte	0x2cb9
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x126
 	.4byte	0xaa
 	.4byte	.LLST77
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB90
 	.4byte	.LBE90-.LBB90
-	.4byte	0x2d0c
-	.uleb128 0x31
+	.4byte	0x2cd7
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x127
 	.4byte	0xaa
 	.4byte	.LLST78
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB91
 	.4byte	.LBE91-.LBB91
-	.4byte	0x2d2a
-	.uleb128 0x31
+	.4byte	0x2cf5
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x128
 	.4byte	0xaa
 	.4byte	.LLST79
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB92
 	.4byte	.LBE92-.LBB92
-	.4byte	0x2d48
-	.uleb128 0x31
+	.4byte	0x2d13
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x129
 	.4byte	0xaa
 	.4byte	.LLST80
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB93
 	.4byte	.LBE93-.LBB93
-	.4byte	0x2d66
-	.uleb128 0x31
+	.4byte	0x2d31
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x12a
 	.4byte	0xaa
 	.4byte	.LLST81
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB94
 	.4byte	.LBE94-.LBB94
-	.4byte	0x2d84
-	.uleb128 0x31
+	.4byte	0x2d4f
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x12b
 	.4byte	0xaa
 	.4byte	.LLST82
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0xa8
-	.4byte	0x2d9e
-	.uleb128 0x31
+	.4byte	0x2d69
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x12c
 	.4byte	0xaa
 	.4byte	.LLST83
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB97
 	.4byte	.LBE97-.LBB97
-	.4byte	0x2dbc
-	.uleb128 0x31
+	.4byte	0x2d87
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x133
 	.4byte	0xaa
 	.4byte	.LLST84
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB98
 	.4byte	.LBE98-.LBB98
-	.4byte	0x2dda
-	.uleb128 0x31
+	.4byte	0x2da5
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x134
 	.4byte	0xaa
 	.4byte	.LLST85
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB99
 	.4byte	.LBE99-.LBB99
-	.4byte	0x2df8
-	.uleb128 0x31
+	.4byte	0x2dc3
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x135
 	.4byte	0xaa
 	.4byte	.LLST86
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB100
 	.4byte	.LBE100-.LBB100
-	.4byte	0x2e16
-	.uleb128 0x31
+	.4byte	0x2de1
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x136
 	.4byte	0xaa
 	.4byte	.LLST87
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0xc0
-	.4byte	0x2e30
-	.uleb128 0x31
+	.4byte	0x2dfb
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x137
 	.4byte	0xaa
 	.4byte	.LLST88
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB103
 	.4byte	.LBE103-.LBB103
-	.4byte	0x2e4e
-	.uleb128 0x31
+	.4byte	0x2e19
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x13e
 	.4byte	0xaa
 	.4byte	.LLST89
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB104
 	.4byte	.LBE104-.LBB104
-	.4byte	0x2e6c
-	.uleb128 0x31
+	.4byte	0x2e37
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x13f
 	.4byte	0xaa
 	.4byte	.LLST90
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB105
 	.4byte	.LBE105-.LBB105
-	.4byte	0x2e8a
-	.uleb128 0x31
+	.4byte	0x2e55
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x140
 	.4byte	0xaa
 	.4byte	.LLST91
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB106
 	.4byte	.LBE106-.LBB106
-	.4byte	0x2ea8
-	.uleb128 0x31
+	.4byte	0x2e73
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x141
 	.4byte	0xaa
 	.4byte	.LLST92
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB107
 	.4byte	.LBE107-.LBB107
-	.4byte	0x2ec6
-	.uleb128 0x31
+	.4byte	0x2e91
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x142
 	.4byte	0xaa
 	.4byte	.LLST93
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0xd8
-	.4byte	0x2ee0
-	.uleb128 0x31
+	.4byte	0x2eab
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x143
 	.4byte	0xaa
 	.4byte	.LLST94
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB110
 	.4byte	.LBE110-.LBB110
-	.4byte	0x2efe
-	.uleb128 0x31
+	.4byte	0x2ec9
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x14a
 	.4byte	0xaa
 	.4byte	.LLST95
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB111
 	.4byte	.LBE111-.LBB111
-	.4byte	0x2f1c
-	.uleb128 0x31
+	.4byte	0x2ee7
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x14b
 	.4byte	0xaa
 	.4byte	.LLST96
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB112
 	.4byte	.LBE112-.LBB112
-	.4byte	0x2f3a
-	.uleb128 0x31
+	.4byte	0x2f05
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x14c
 	.4byte	0xaa
 	.4byte	.LLST97
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0xf0
-	.4byte	0x2f54
-	.uleb128 0x31
+	.4byte	0x2f1f
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x14d
 	.4byte	0xaa
 	.4byte	.LLST98
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB115
 	.4byte	.LBE115-.LBB115
-	.4byte	0x2f72
-	.uleb128 0x31
+	.4byte	0x2f3d
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x154
 	.4byte	0xaa
 	.4byte	.LLST99
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB116
 	.4byte	.LBE116-.LBB116
-	.4byte	0x2f90
-	.uleb128 0x31
+	.4byte	0x2f5b
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x155
 	.4byte	0xaa
 	.4byte	.LLST100
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB117
 	.4byte	.LBE117-.LBB117
-	.4byte	0x2fae
-	.uleb128 0x31
+	.4byte	0x2f79
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x156
 	.4byte	0xaa
 	.4byte	.LLST101
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB118
 	.4byte	.LBE118-.LBB118
-	.4byte	0x2fcc
-	.uleb128 0x31
+	.4byte	0x2f97
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x157
 	.4byte	0xaa
 	.4byte	.LLST102
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x108
-	.4byte	0x2fe6
-	.uleb128 0x31
+	.4byte	0x2fb1
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x158
 	.4byte	0xaa
 	.4byte	.LLST103
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB121
 	.4byte	.LBE121-.LBB121
-	.4byte	0x3004
-	.uleb128 0x31
+	.4byte	0x2fcf
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x15f
 	.4byte	0xaa
 	.4byte	.LLST104
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB122
 	.4byte	.LBE122-.LBB122
-	.4byte	0x3022
-	.uleb128 0x31
+	.4byte	0x2fed
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x160
 	.4byte	0xaa
 	.4byte	.LLST105
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB123
 	.4byte	.LBE123-.LBB123
-	.4byte	0x3040
-	.uleb128 0x31
+	.4byte	0x300b
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x161
 	.4byte	0xaa
 	.4byte	.LLST106
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x120
-	.4byte	0x305a
-	.uleb128 0x31
+	.4byte	0x3025
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x162
 	.4byte	0xaa
 	.4byte	.LLST107
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB126
 	.4byte	.LBE126-.LBB126
-	.4byte	0x3078
-	.uleb128 0x31
+	.4byte	0x3043
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x16f
 	.4byte	0xaa
 	.4byte	.LLST108
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB127
 	.4byte	.LBE127-.LBB127
-	.4byte	0x3096
-	.uleb128 0x31
+	.4byte	0x3061
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x170
 	.4byte	0xaa
 	.4byte	.LLST109
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB128
 	.4byte	.LBE128-.LBB128
-	.4byte	0x30b4
-	.uleb128 0x31
+	.4byte	0x307f
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x171
 	.4byte	0xaa
 	.4byte	.LLST110
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x138
-	.4byte	0x30ce
-	.uleb128 0x31
+	.4byte	0x3099
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x172
 	.4byte	0xaa
 	.4byte	.LLST111
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB131
 	.4byte	.LBE131-.LBB131
-	.4byte	0x30ec
-	.uleb128 0x31
+	.4byte	0x30b7
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x17f
 	.4byte	0xaa
 	.4byte	.LLST112
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB132
 	.4byte	.LBE132-.LBB132
-	.4byte	0x310a
-	.uleb128 0x31
+	.4byte	0x30d5
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x180
 	.4byte	0xaa
 	.4byte	.LLST113
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB133
 	.4byte	.LBE133-.LBB133
-	.4byte	0x3128
-	.uleb128 0x31
+	.4byte	0x30f3
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x181
 	.4byte	0xaa
 	.4byte	.LLST114
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB134
 	.4byte	.LBE134-.LBB134
-	.4byte	0x3146
-	.uleb128 0x31
+	.4byte	0x3111
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x182
 	.4byte	0xaa
 	.4byte	.LLST115
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB135
 	.4byte	.LBE135-.LBB135
-	.4byte	0x3164
-	.uleb128 0x31
+	.4byte	0x312f
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x183
 	.4byte	0xaa
 	.4byte	.LLST116
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x150
-	.4byte	0x317e
-	.uleb128 0x31
+	.4byte	0x3149
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x184
 	.4byte	0xaa
 	.4byte	.LLST117
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB138
 	.4byte	.LBE138-.LBB138
-	.4byte	0x319c
-	.uleb128 0x31
+	.4byte	0x3167
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x18b
 	.4byte	0xaa
 	.4byte	.LLST118
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB139
 	.4byte	.LBE139-.LBB139
-	.4byte	0x31ba
-	.uleb128 0x31
+	.4byte	0x3185
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x18c
 	.4byte	0xaa
 	.4byte	.LLST119
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB140
 	.4byte	.LBE140-.LBB140
-	.4byte	0x31d8
-	.uleb128 0x31
+	.4byte	0x31a3
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x18d
 	.4byte	0xaa
 	.4byte	.LLST120
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x168
-	.4byte	0x31f2
-	.uleb128 0x31
+	.4byte	0x31bd
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x18e
 	.4byte	0xaa
 	.4byte	.LLST121
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB143
 	.4byte	.LBE143-.LBB143
-	.4byte	0x3210
-	.uleb128 0x31
+	.4byte	0x31db
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x195
 	.4byte	0xaa
 	.4byte	.LLST122
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB144
 	.4byte	.LBE144-.LBB144
-	.4byte	0x322e
-	.uleb128 0x31
+	.4byte	0x31f9
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x196
 	.4byte	0xaa
 	.4byte	.LLST123
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x180
-	.4byte	0x3248
-	.uleb128 0x31
+	.4byte	0x3213
+	.uleb128 0x30
 	.ascii	"__v\000"
 	.byte	0x1
 	.2byte	0x197
 	.4byte	0xaa
 	.4byte	.LLST124
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL63
-	.4byte	0x3c54
-	.4byte	0x325d
-	.uleb128 0x33
+	.4byte	0x3c24
+	.4byte	0x3228
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x3
@@ -9832,362 +9820,365 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x1
 	.byte	0x50
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL66
-	.4byte	0x3c60
-	.4byte	0x327a
-	.uleb128 0x33
+	.4byte	0x3c30
+	.4byte	0x3248
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	.LC4
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
-	.uleb128 0x2
-	.byte	0x76
+	.uleb128 0x5
+	.byte	0x7a
 	.sleb128 0
+	.byte	0x9
+	.byte	0xfe
+	.byte	0x1a
 	.byte	0
-	.uleb128 0x4a
+	.uleb128 0x49
 	.4byte	.LVL69
 	.uleb128 0x2
 	.byte	0x75
 	.sleb128 0
-	.4byte	0x328d
-	.uleb128 0x33
+	.4byte	0x325b
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x53
 	.uleb128 0x2
 	.byte	0x76
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL78
-	.4byte	0x3a63
-	.4byte	0x32ae
-	.uleb128 0x33
+	.4byte	0x3a33
+	.4byte	0x327c
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x1
 	.byte	0x32
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x4c
+	.uleb128 0x4b
 	.4byte	.LVL80
-	.4byte	0x3c60
-	.uleb128 0x4a
+	.4byte	0x3c30
+	.uleb128 0x49
 	.4byte	.LVL81
 	.uleb128 0x2
 	.byte	0x75
 	.sleb128 0
-	.4byte	0x32ca
-	.uleb128 0x33
+	.4byte	0x3298
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x53
 	.uleb128 0x2
 	.byte	0x76
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL104
-	.4byte	0x3a63
-	.4byte	0x32eb
-	.uleb128 0x33
+	.4byte	0x3a33
+	.4byte	0x32b9
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x1
 	.byte	0x32
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL110
-	.4byte	0x3a63
-	.4byte	0x330c
-	.uleb128 0x33
+	.4byte	0x3a33
+	.4byte	0x32da
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x1
 	.byte	0x32
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL131
-	.4byte	0x3a63
-	.4byte	0x332e
-	.uleb128 0x33
+	.4byte	0x3a33
+	.4byte	0x32fc
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x2
 	.byte	0x7a
 	.sleb128 0
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL138
-	.4byte	0x3a63
-	.4byte	0x3350
-	.uleb128 0x33
+	.4byte	0x3a33
+	.4byte	0x331e
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x2
 	.byte	0x7a
 	.sleb128 0
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL147
-	.4byte	0x3a63
-	.4byte	0x3372
-	.uleb128 0x33
+	.4byte	0x3a33
+	.4byte	0x3340
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x2
 	.byte	0x7a
 	.sleb128 0
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL153
-	.4byte	0x3a63
-	.4byte	0x3394
-	.uleb128 0x33
+	.4byte	0x3a33
+	.4byte	0x3362
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x2
 	.byte	0x7a
 	.sleb128 0
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL160
-	.4byte	0x3a63
-	.4byte	0x33b6
-	.uleb128 0x33
+	.4byte	0x3a33
+	.4byte	0x3384
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x2
 	.byte	0x7a
 	.sleb128 0
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL166
-	.4byte	0x3a63
-	.4byte	0x33d8
-	.uleb128 0x33
+	.4byte	0x3a33
+	.4byte	0x33a6
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x2
 	.byte	0x7a
 	.sleb128 0
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL168
-	.4byte	0x39b6
-	.4byte	0x33f4
-	.uleb128 0x33
+	.4byte	0x3986
+	.4byte	0x33c2
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x4b
-	.4byte	0x3791
+	.uleb128 0x4a
+	.4byte	0x3761
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL175
-	.4byte	0x3a63
-	.4byte	0x3416
-	.uleb128 0x33
+	.4byte	0x3a33
+	.4byte	0x33e4
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x2
 	.byte	0x75
 	.sleb128 0
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL177
-	.4byte	0x3a0c
-	.4byte	0x3432
-	.uleb128 0x33
+	.4byte	0x39dc
+	.4byte	0x3400
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x4b
-	.4byte	0x37db
+	.uleb128 0x4a
+	.4byte	0x37ab
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL186
-	.4byte	0x3a63
-	.4byte	0x3454
-	.uleb128 0x33
+	.4byte	0x3a33
+	.4byte	0x3422
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x2
 	.byte	0x75
 	.sleb128 0
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL192
-	.4byte	0x3a63
-	.4byte	0x3476
-	.uleb128 0x33
+	.4byte	0x3a33
+	.4byte	0x3444
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x2
 	.byte	0x75
 	.sleb128 0
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x34
-	.4byte	.LVL197
-	.4byte	0x3a63
 	.uleb128 0x33
+	.4byte	.LVL197
+	.4byte	0x3a33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x2
 	.byte	0x75
 	.sleb128 0
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
 	.byte	0x74
 	.sleb128 0
@@ -10195,15 +10186,15 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.byte	0
 	.uleb128 0xa
 	.4byte	0xea
-	.4byte	0x34a5
+	.4byte	0x3473
 	.uleb128 0x11
 	.4byte	0xd6
 	.byte	0x25
 	.byte	0
 	.uleb128 0x7
-	.4byte	0x3495
-	.uleb128 0x54
-	.4byte	.LASF435
+	.4byte	0x3463
+	.uleb128 0x53
+	.4byte	.LASF432
 	.byte	0x1
 	.byte	0x94
 	.4byte	0x50
@@ -10211,325 +10202,327 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LFE272-.LFB272
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x36b6
-	.uleb128 0x55
+	.4byte	0x3686
+	.uleb128 0x54
 	.ascii	"dev\000"
 	.byte	0x1
 	.byte	0x94
-	.4byte	0x260
+	.4byte	0x25b
 	.4byte	.LLST131
-	.uleb128 0x56
-	.4byte	.LASF423
+	.uleb128 0x55
+	.4byte	.LASF420
 	.byte	0x1
 	.byte	0x94
 	.4byte	0x50
 	.4byte	.LLST132
-	.uleb128 0x55
+	.uleb128 0x54
 	.ascii	"buf\000"
 	.byte	0x1
 	.byte	0x95
-	.4byte	0x138
+	.4byte	0x133
 	.4byte	.LLST133
-	.uleb128 0x56
+	.uleb128 0x55
 	.4byte	.LASF51
 	.byte	0x1
 	.byte	0x95
 	.4byte	0x50
 	.4byte	.LLST134
-	.uleb128 0x57
+	.uleb128 0x56
 	.ascii	"otp\000"
 	.byte	0x1
 	.byte	0x97
-	.4byte	0x17dd
+	.4byte	0x17a5
 	.4byte	.LLST135
-	.uleb128 0x58
-	.4byte	.LASF385
+	.uleb128 0x57
+	.4byte	.LASF382
 	.byte	0x1
 	.byte	0x98
-	.4byte	0x1913
+	.4byte	0x18db
 	.4byte	.LLST136
-	.uleb128 0x58
-	.4byte	.LASF436
+	.uleb128 0x57
+	.4byte	.LASF433
 	.byte	0x1
 	.byte	0x99
-	.4byte	0x11b0
+	.4byte	0x1178
 	.4byte	.LLST137
-	.uleb128 0x58
-	.4byte	.LASF428
+	.uleb128 0x57
+	.4byte	.LASF425
 	.byte	0x1
 	.byte	0x9a
 	.4byte	0x9f
 	.4byte	.LLST138
-	.uleb128 0x57
+	.uleb128 0x56
 	.ascii	"ret\000"
 	.byte	0x1
 	.byte	0x9b
 	.4byte	0x50
 	.4byte	.LLST139
-	.uleb128 0x59
-	.4byte	.LASF431
-	.4byte	0x36c6
+	.uleb128 0x58
+	.4byte	.LASF428
+	.4byte	0x3696
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.10227
-	.uleb128 0x5c
-	.4byte	.LASF438
+	.4byte	__func__.10190
+	.uleb128 0x5b
+	.4byte	.LASF435
 	.byte	0x1
 	.byte	0xc8
 	.4byte	.L69
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x1c8
-	.4byte	0x357d
-	.uleb128 0x5d
+	.4byte	0x354b
+	.uleb128 0x5c
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0xa6
 	.4byte	0xaa
 	.4byte	0x10001
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x1e0
-	.4byte	0x3596
-	.uleb128 0x57
+	.4byte	0x3564
+	.uleb128 0x56
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0xb4
 	.4byte	0xaa
 	.4byte	.LLST140
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x200
-	.4byte	0x35af
-	.uleb128 0x57
+	.4byte	0x357d
+	.uleb128 0x56
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0xb7
 	.4byte	0xaa
 	.4byte	.LLST141
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB180
 	.4byte	.LBE180-.LBB180
-	.4byte	0x35cc
-	.uleb128 0x57
+	.4byte	0x359a
+	.uleb128 0x56
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0xbf
 	.4byte	0x9f
 	.4byte	.LLST143
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x218
-	.4byte	0x35e5
-	.uleb128 0x57
+	.4byte	0x35b3
+	.uleb128 0x56
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0xc9
 	.4byte	0xaa
 	.4byte	.LLST142
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL213
-	.4byte	0x3c32
-	.4byte	0x35f9
-	.uleb128 0x33
+	.4byte	0x3c02
+	.4byte	0x35c7
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x78
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL216
-	.4byte	0x3c54
-	.4byte	0x360d
-	.uleb128 0x33
+	.4byte	0x3c24
+	.4byte	0x35db
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x78
 	.sleb128 0
 	.byte	0
-	.uleb128 0x4a
+	.uleb128 0x49
 	.4byte	.LVL219
 	.uleb128 0x2
 	.byte	0x76
 	.sleb128 0
-	.4byte	0x3620
-	.uleb128 0x33
+	.4byte	0x35ee
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x53
 	.uleb128 0x2
-	.byte	0x75
+	.byte	0x74
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL220
-	.4byte	0x36cb
-	.4byte	0x3634
-	.uleb128 0x33
+	.4byte	0x369b
+	.4byte	0x3602
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
-	.byte	0x74
+	.byte	0x75
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL222
-	.4byte	0x3c77
-	.4byte	0x3648
-	.uleb128 0x33
+	.4byte	0x3c47
+	.4byte	0x3616
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
 	.byte	0x8
 	.byte	0x32
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL224
-	.4byte	0x3c60
-	.4byte	0x3665
-	.uleb128 0x33
+	.4byte	0x3c30
+	.4byte	0x3635
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	.LC4
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
-	.uleb128 0x2
-	.byte	0x75
+	.uleb128 0x4
+	.byte	0x74
 	.sleb128 0
+	.byte	0x31
+	.byte	0x24
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL229
-	.4byte	0x3a63
-	.4byte	0x3686
-	.uleb128 0x33
+	.4byte	0x3a33
+	.4byte	0x3656
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x2
-	.byte	0x74
+	.byte	0x75
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x1
 	.byte	0x34
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x2
-	.byte	0x74
+	.byte	0x75
 	.sleb128 0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL231
-	.4byte	0x3c60
-	.4byte	0x36a6
-	.uleb128 0x33
+	.4byte	0x3c30
+	.4byte	0x3676
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	.LC9
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	.LANCHOR3
 	.byte	0
-	.uleb128 0x5e
+	.uleb128 0x5d
 	.4byte	.LVL232
 	.uleb128 0x2
 	.byte	0x76
 	.sleb128 0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x53
 	.uleb128 0x2
-	.byte	0x75
+	.byte	0x74
 	.sleb128 0
 	.byte	0
 	.byte	0
 	.uleb128 0xa
 	.4byte	0xea
-	.4byte	0x36c6
+	.4byte	0x3696
 	.uleb128 0x11
 	.4byte	0xd6
 	.byte	0x16
 	.byte	0
 	.uleb128 0x7
-	.4byte	0x36b6
-	.uleb128 0x5f
-	.4byte	.LASF439
+	.4byte	0x3686
+	.uleb128 0x5e
+	.4byte	.LASF436
 	.byte	0x1
 	.byte	0x7e
 	.4byte	0x50
 	.byte	0x1
-	.4byte	0x376c
-	.uleb128 0x60
+	.4byte	0x373c
+	.uleb128 0x5f
 	.ascii	"otp\000"
 	.byte	0x1
 	.byte	0x7e
-	.4byte	0x17dd
-	.uleb128 0x61
-	.4byte	.LASF268
+	.4byte	0x17a5
+	.uleb128 0x60
+	.4byte	.LASF266
 	.byte	0x1
 	.byte	0x7f
-	.4byte	0x145
-	.uleb128 0x62
+	.4byte	0x140
+	.uleb128 0x61
 	.ascii	"ret\000"
 	.byte	0x1
 	.byte	0x81
 	.4byte	0x50
-	.uleb128 0x50
-	.4byte	.LASF431
-	.4byte	0x377c
-	.4byte	.LASF439
-	.uleb128 0x52
-	.4byte	0x371a
-	.uleb128 0x62
+	.uleb128 0x4f
+	.4byte	.LASF428
+	.4byte	0x374c
+	.4byte	.LASF436
+	.uleb128 0x51
+	.4byte	0x36ea
+	.uleb128 0x61
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0x83
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x372b
-	.uleb128 0x62
+	.uleb128 0x51
+	.4byte	0x36fb
+	.uleb128 0x61
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0x84
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x373c
-	.uleb128 0x62
+	.uleb128 0x51
+	.4byte	0x370c
+	.uleb128 0x61
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0x85
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x374d
-	.uleb128 0x62
+	.uleb128 0x51
+	.4byte	0x371d
+	.uleb128 0x61
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0x87
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x52
-	.4byte	0x375e
-	.uleb128 0x62
+	.uleb128 0x51
+	.4byte	0x372e
+	.uleb128 0x61
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0x89
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x53
-	.uleb128 0x62
+	.uleb128 0x52
+	.uleb128 0x61
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0x8b
@@ -10538,165 +10531,165 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.byte	0
 	.uleb128 0xa
 	.4byte	0xea
-	.4byte	0x377c
+	.4byte	0x374c
 	.uleb128 0x11
 	.4byte	0xd6
 	.byte	0x1e
 	.byte	0
 	.uleb128 0x7
-	.4byte	0x376c
-	.uleb128 0x5f
-	.4byte	.LASF440
+	.4byte	0x373c
+	.uleb128 0x5e
+	.4byte	.LASF437
 	.byte	0x1
 	.byte	0x68
 	.4byte	0x50
 	.byte	0x1
-	.4byte	0x37cb
-	.uleb128 0x60
+	.4byte	0x379b
+	.uleb128 0x5f
 	.ascii	"otp\000"
 	.byte	0x1
 	.byte	0x68
-	.4byte	0x17dd
-	.uleb128 0x63
-	.4byte	.LASF441
+	.4byte	0x17a5
+	.uleb128 0x62
+	.4byte	.LASF438
 	.byte	0x1
 	.byte	0x6a
 	.4byte	0x50
-	.uleb128 0x63
-	.4byte	.LASF428
+	.uleb128 0x62
+	.4byte	.LASF425
 	.byte	0x1
 	.byte	0x6b
 	.4byte	0x50
-	.uleb128 0x62
+	.uleb128 0x61
 	.ascii	"ret\000"
 	.byte	0x1
 	.byte	0x6b
 	.4byte	0x50
-	.uleb128 0x53
-	.uleb128 0x62
+	.uleb128 0x52
+	.uleb128 0x61
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0x6e
 	.4byte	0xaa
 	.byte	0
 	.byte	0
-	.uleb128 0x5f
-	.4byte	.LASF442
+	.uleb128 0x5e
+	.4byte	.LASF439
 	.byte	0x1
 	.byte	0x52
 	.4byte	0x50
 	.byte	0x1
-	.4byte	0x3815
-	.uleb128 0x60
+	.4byte	0x37e5
+	.uleb128 0x5f
 	.ascii	"otp\000"
 	.byte	0x1
 	.byte	0x52
-	.4byte	0x17dd
-	.uleb128 0x63
-	.4byte	.LASF441
+	.4byte	0x17a5
+	.uleb128 0x62
+	.4byte	.LASF438
 	.byte	0x1
 	.byte	0x54
 	.4byte	0x50
-	.uleb128 0x63
-	.4byte	.LASF428
+	.uleb128 0x62
+	.4byte	.LASF425
 	.byte	0x1
 	.byte	0x55
 	.4byte	0x50
-	.uleb128 0x62
+	.uleb128 0x61
 	.ascii	"ret\000"
 	.byte	0x1
 	.byte	0x55
 	.4byte	0x50
-	.uleb128 0x53
-	.uleb128 0x62
+	.uleb128 0x52
+	.uleb128 0x61
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0x58
 	.4byte	0xaa
 	.byte	0
 	.byte	0
-	.uleb128 0x5f
-	.4byte	.LASF443
+	.uleb128 0x5e
+	.4byte	.LASF440
 	.byte	0x1
 	.byte	0x3e
 	.4byte	0x50
 	.byte	0x1
-	.4byte	0x3872
-	.uleb128 0x60
+	.4byte	0x3842
+	.uleb128 0x5f
 	.ascii	"otp\000"
 	.byte	0x1
 	.byte	0x3e
-	.4byte	0x17dd
-	.uleb128 0x61
-	.4byte	.LASF444
+	.4byte	0x17a5
+	.uleb128 0x60
+	.4byte	.LASF441
 	.byte	0x1
 	.byte	0x3f
 	.4byte	0xaa
-	.uleb128 0x63
-	.4byte	.LASF441
+	.uleb128 0x62
+	.4byte	.LASF438
 	.byte	0x1
 	.byte	0x41
 	.4byte	0x50
-	.uleb128 0x50
-	.4byte	.LASF431
-	.4byte	0x2726
-	.4byte	.LASF443
-	.uleb128 0x52
-	.4byte	0x3864
-	.uleb128 0x62
+	.uleb128 0x4f
+	.4byte	.LASF428
+	.4byte	0x26f1
+	.4byte	.LASF440
+	.uleb128 0x51
+	.4byte	0x3834
+	.uleb128 0x61
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0x43
 	.4byte	0xaa
 	.byte	0
-	.uleb128 0x53
-	.uleb128 0x62
+	.uleb128 0x52
+	.uleb128 0x61
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0x4d
 	.4byte	0xaa
 	.byte	0
 	.byte	0
-	.uleb128 0x64
-	.4byte	.LASF448
+	.uleb128 0x63
+	.4byte	.LASF445
 	.byte	0x1
 	.byte	0x36
 	.4byte	.LFB267
 	.4byte	.LFE267-.LFB267
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x38d7
-	.uleb128 0x65
-	.4byte	.LASF445
+	.4byte	0x38a7
+	.uleb128 0x64
+	.4byte	.LASF442
 	.byte	0x1
 	.byte	0x36
-	.4byte	0x16af
+	.4byte	0x1677
 	.uleb128 0x1
 	.byte	0x50
-	.uleb128 0x65
-	.4byte	.LASF446
+	.uleb128 0x64
+	.4byte	.LASF443
 	.byte	0x1
 	.byte	0x37
-	.4byte	0x16af
+	.4byte	0x1677
 	.uleb128 0x1
 	.byte	0x51
-	.uleb128 0x65
-	.4byte	.LASF447
+	.uleb128 0x64
+	.4byte	.LASF444
 	.byte	0x1
 	.byte	0x38
 	.4byte	0x37
 	.uleb128 0x1
 	.byte	0x52
-	.uleb128 0x56
-	.4byte	.LASF423
+	.uleb128 0x55
+	.4byte	.LASF420
 	.byte	0x1
 	.byte	0x38
 	.4byte	0x50
 	.4byte	.LLST0
-	.uleb128 0x66
+	.uleb128 0x65
 	.4byte	.LBB22
 	.4byte	.LBE22-.LBB22
-	.uleb128 0x5d
+	.uleb128 0x5c
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0x3a
@@ -10704,231 +10697,231 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	0x20000
 	.byte	0
 	.byte	0
-	.uleb128 0x64
-	.4byte	.LASF449
+	.uleb128 0x63
+	.4byte	.LASF446
 	.byte	0x1
 	.byte	0x2a
 	.4byte	.LFB266
 	.4byte	.LFE266-.LFB266
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x399c
-	.uleb128 0x56
-	.4byte	.LASF445
+	.4byte	0x396c
+	.uleb128 0x55
+	.4byte	.LASF442
 	.byte	0x1
 	.byte	0x2a
-	.4byte	0x16af
+	.4byte	0x1677
 	.4byte	.LLST16
-	.uleb128 0x56
-	.4byte	.LASF446
+	.uleb128 0x55
+	.4byte	.LASF443
 	.byte	0x1
 	.byte	0x2b
-	.4byte	0x16af
+	.4byte	0x1677
 	.4byte	.LLST17
-	.uleb128 0x56
-	.4byte	.LASF447
+	.uleb128 0x55
+	.4byte	.LASF444
 	.byte	0x1
 	.byte	0x2c
 	.4byte	0x37
 	.4byte	.LLST18
-	.uleb128 0x56
-	.4byte	.LASF423
+	.uleb128 0x55
+	.4byte	.LASF420
 	.byte	0x1
 	.byte	0x2c
 	.4byte	0x50
 	.4byte	.LLST19
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB27
 	.4byte	.LBE27-.LBB27
-	.4byte	0x3945
-	.uleb128 0x5d
+	.4byte	0x3915
+	.uleb128 0x5c
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0x2f
 	.4byte	0xaa
 	.4byte	0x20002
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x18
-	.4byte	0x395f
-	.uleb128 0x67
+	.4byte	0x392f
+	.uleb128 0x66
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0x30
 	.4byte	0xaa
 	.sleb128 -2147450880
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x30
-	.4byte	0x3979
-	.uleb128 0x67
+	.4byte	0x3949
+	.uleb128 0x66
 	.ascii	"__v\000"
 	.byte	0x1
 	.byte	0x32
 	.4byte	0xaa
 	.sleb128 -2147483648
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.4byte	.LVL30
-	.4byte	0x3c77
-	.4byte	0x398c
-	.uleb128 0x33
+	.4byte	0x3c47
+	.4byte	0x395c
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x1
 	.byte	0x32
 	.byte	0
-	.uleb128 0x68
+	.uleb128 0x67
 	.4byte	.LVL32
-	.4byte	0x3c77
-	.uleb128 0x33
+	.4byte	0x3c47
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x1
 	.byte	0x31
 	.byte	0
 	.byte	0
-	.uleb128 0x69
-	.4byte	.LASF461
-	.byte	0x1c
+	.uleb128 0x68
+	.4byte	.LASF458
+	.byte	0x1a
 	.2byte	0x36f
 	.byte	0x3
-	.4byte	0x39b6
-	.uleb128 0x3a
+	.4byte	0x3986
+	.uleb128 0x39
 	.ascii	"ptr\000"
-	.byte	0x1c
+	.byte	0x1a
 	.2byte	0x36f
-	.4byte	0x138
+	.4byte	0x133
 	.byte	0
-	.uleb128 0x6a
-	.4byte	0x3781
+	.uleb128 0x69
+	.4byte	0x3751
 	.4byte	.LFB282
 	.4byte	.LFE282-.LFB282
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x3a0c
-	.uleb128 0x3f
-	.4byte	0x3791
-	.uleb128 0x41
-	.4byte	0x379c
+	.4byte	0x39dc
+	.uleb128 0x3e
+	.4byte	0x3761
+	.uleb128 0x40
+	.4byte	0x376c
 	.4byte	.LLST20
-	.uleb128 0x41
-	.4byte	0x37a7
+	.uleb128 0x40
+	.4byte	0x3777
 	.4byte	.LLST21
+	.uleb128 0x43
+	.4byte	0x3782
 	.uleb128 0x44
-	.4byte	0x37b2
-	.uleb128 0x45
 	.4byte	.LBB32
 	.4byte	.LBE32-.LBB32
-	.4byte	0x39fc
-	.uleb128 0x41
-	.4byte	0x37be
+	.4byte	0x39cc
+	.uleb128 0x40
+	.4byte	0x378e
 	.4byte	.LLST22
 	.byte	0
-	.uleb128 0x34
-	.4byte	.LVL39
-	.4byte	0x3c77
 	.uleb128 0x33
+	.4byte	.LVL39
+	.4byte	0x3c47
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x1
 	.byte	0x31
 	.byte	0
 	.byte	0
-	.uleb128 0x6a
-	.4byte	0x37cb
+	.uleb128 0x69
+	.4byte	0x379b
 	.4byte	.LFB283
 	.4byte	.LFE283-.LFB283
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x3a63
-	.uleb128 0x3f
-	.4byte	0x37db
-	.uleb128 0x41
-	.4byte	0x37e6
+	.4byte	0x3a33
+	.uleb128 0x3e
+	.4byte	0x37ab
+	.uleb128 0x40
+	.4byte	0x37b6
 	.4byte	.LLST23
-	.uleb128 0x41
-	.4byte	0x37f1
+	.uleb128 0x40
+	.4byte	0x37c1
 	.4byte	.LLST24
-	.uleb128 0x47
-	.4byte	0x37fc
+	.uleb128 0x46
+	.4byte	0x37cc
 	.sleb128 -1
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB33
 	.4byte	.LBE33-.LBB33
-	.4byte	0x3a53
-	.uleb128 0x41
-	.4byte	0x3808
+	.4byte	0x3a23
+	.uleb128 0x40
+	.4byte	0x37d8
 	.4byte	.LLST25
 	.byte	0
-	.uleb128 0x34
-	.4byte	.LVL47
-	.4byte	0x3c77
 	.uleb128 0x33
+	.4byte	.LVL47
+	.4byte	0x3c47
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x1
 	.byte	0x31
 	.byte	0
 	.byte	0
-	.uleb128 0x6a
-	.4byte	0x3815
+	.uleb128 0x69
+	.4byte	0x37e5
 	.4byte	.LFB284
 	.4byte	.LFE284-.LFB284
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x3b18
-	.uleb128 0x38
-	.4byte	0x3830
+	.4byte	0x3ae8
+	.uleb128 0x37
+	.4byte	0x3800
 	.4byte	.LLST26
-	.uleb128 0x3f
-	.4byte	0x3825
-	.uleb128 0x41
-	.4byte	0x383b
+	.uleb128 0x3e
+	.4byte	0x37f5
+	.uleb128 0x40
+	.4byte	0x380b
 	.4byte	.LLST27
+	.uleb128 0x43
+	.4byte	0x3816
 	.uleb128 0x44
-	.4byte	0x3846
-	.uleb128 0x45
 	.4byte	.LBB40
 	.4byte	.LBE40-.LBB40
-	.4byte	0x3aa9
-	.uleb128 0x41
-	.4byte	0x3858
+	.4byte	0x3a79
+	.uleb128 0x40
+	.4byte	0x3828
 	.4byte	.LLST28
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x48
-	.4byte	0x3abc
-	.uleb128 0x41
-	.4byte	0x3865
+	.4byte	0x3a8c
+	.uleb128 0x40
+	.4byte	0x3835
 	.4byte	.LLST29
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB43
 	.4byte	.LBE43-.LBB43
-	.4byte	0x3b08
-	.uleb128 0x38
-	.4byte	0x3830
+	.4byte	0x3ad8
+	.uleb128 0x37
+	.4byte	0x3800
 	.4byte	.LLST30
-	.uleb128 0x3f
-	.4byte	0x3825
-	.uleb128 0x66
+	.uleb128 0x3e
+	.4byte	0x37f5
+	.uleb128 0x65
 	.4byte	.LBB44
 	.4byte	.LBE44-.LBB44
-	.uleb128 0x44
-	.4byte	0x383b
-	.uleb128 0x44
-	.4byte	0x3846
-	.uleb128 0x34
-	.4byte	.LVL60
-	.4byte	0x3c60
+	.uleb128 0x43
+	.4byte	0x380b
+	.uleb128 0x43
+	.4byte	0x3816
 	.uleb128 0x33
+	.4byte	.LVL60
+	.4byte	0x3c30
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	.LC3
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x5
@@ -10937,106 +10930,106 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x34
-	.4byte	.LVL57
-	.4byte	0x3c77
 	.uleb128 0x33
+	.4byte	.LVL57
+	.4byte	0x3c47
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x1
 	.byte	0x31
 	.byte	0
 	.byte	0
-	.uleb128 0x6a
-	.4byte	0x36cb
+	.uleb128 0x69
+	.4byte	0x369b
 	.4byte	.LFB271
 	.4byte	.LFE271-.LFB271
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x3c32
-	.uleb128 0x38
-	.4byte	0x36db
+	.4byte	0x3c02
+	.uleb128 0x37
+	.4byte	0x36ab
 	.4byte	.LLST125
-	.uleb128 0x38
-	.4byte	0x36e6
+	.uleb128 0x37
+	.4byte	0x36b6
 	.4byte	.LLST126
-	.uleb128 0x41
-	.4byte	0x36f1
+	.uleb128 0x40
+	.4byte	0x36c1
 	.4byte	.LLST127
+	.uleb128 0x43
+	.4byte	0x36cc
 	.uleb128 0x44
-	.4byte	0x36fc
-	.uleb128 0x45
 	.4byte	.LBB161
 	.4byte	.LBE161-.LBB161
-	.4byte	0x3b62
-	.uleb128 0x47
-	.4byte	0x370e
+	.4byte	0x3b32
+	.uleb128 0x46
+	.4byte	0x36de
 	.sleb128 -16776704
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB162
 	.4byte	.LBE162-.LBB162
-	.4byte	0x3b78
-	.uleb128 0x47
-	.4byte	0x371f
+	.4byte	0x3b48
+	.uleb128 0x46
+	.4byte	0x36ef
 	.sleb128 -65535
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB163
 	.4byte	.LBE163-.LBB163
-	.4byte	0x3b8c
-	.uleb128 0x48
-	.4byte	0x3730
+	.4byte	0x3b5c
+	.uleb128 0x47
+	.4byte	0x3700
 	.byte	0xfa
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB164
 	.4byte	.LBE164-.LBB164
-	.4byte	0x3ba3
-	.uleb128 0x41
-	.4byte	0x3741
+	.4byte	0x3b73
+	.uleb128 0x40
+	.4byte	0x3711
 	.4byte	.LLST128
 	.byte	0
-	.uleb128 0x49
-	.4byte	.Ldebug_ranges0+0x198
-	.4byte	0x3bb3
 	.uleb128 0x48
-	.4byte	0x3752
+	.4byte	.Ldebug_ranges0+0x198
+	.4byte	0x3b83
+	.uleb128 0x47
+	.4byte	0x3722
 	.byte	0x9
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.4byte	.Ldebug_ranges0+0x1b0
-	.4byte	0x3bc6
-	.uleb128 0x41
-	.4byte	0x375f
+	.4byte	0x3b96
+	.uleb128 0x40
+	.4byte	0x372f
 	.4byte	.LLST129
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.4byte	.LBB168
 	.4byte	.LBE168-.LBB168
-	.4byte	0x3c12
-	.uleb128 0x38
-	.4byte	0x36db
+	.4byte	0x3be2
+	.uleb128 0x37
+	.4byte	0x36ab
 	.4byte	.LLST130
-	.uleb128 0x3f
-	.4byte	0x36e6
-	.uleb128 0x66
+	.uleb128 0x3e
+	.4byte	0x36b6
+	.uleb128 0x65
 	.4byte	.LBB169
 	.4byte	.LBE169-.LBB169
-	.uleb128 0x44
-	.4byte	0x3b3d
-	.uleb128 0x44
-	.4byte	0x3b46
-	.uleb128 0x34
-	.4byte	.LVL209
-	.4byte	0x3c60
+	.uleb128 0x43
+	.4byte	0x3b0d
+	.uleb128 0x43
+	.4byte	0x3b16
 	.uleb128 0x33
+	.4byte	.LVL209
+	.4byte	0x3c30
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	.LC8
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x5
@@ -11045,63 +11038,63 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x34
-	.4byte	.LVL206
-	.4byte	0x3a63
 	.uleb128 0x33
+	.4byte	.LVL206
+	.4byte	0x3a33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x3
 	.byte	0xf3
 	.uleb128 0x1
 	.byte	0x50
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x1
 	.byte	0x32
-	.uleb128 0x4b
-	.4byte	0x3825
+	.uleb128 0x4a
+	.4byte	0x37f5
 	.uleb128 0x3
 	.byte	0xf3
 	.uleb128 0x1
 	.byte	0x50
 	.byte	0
 	.byte	0
+	.uleb128 0x6a
+	.4byte	.LASF447
+	.4byte	.LASF447
+	.byte	0x8
+	.2byte	0x115
+	.uleb128 0x6b
+	.4byte	.LASF448
+	.4byte	.LASF448
+	.byte	0x20
+	.byte	0x85
 	.uleb128 0x6b
+	.4byte	.LASF449
+	.4byte	.LASF449
+	.byte	0x20
+	.byte	0x38
+	.uleb128 0x6a
 	.4byte	.LASF450
 	.4byte	.LASF450
 	.byte	0x8
-	.2byte	0x115
-	.uleb128 0x6c
+	.2byte	0x16e
+	.uleb128 0x6b
 	.4byte	.LASF451
 	.4byte	.LASF451
-	.byte	0x22
-	.byte	0x85
-	.uleb128 0x6c
+	.byte	0x21
+	.byte	0x13
+	.uleb128 0x6a
 	.4byte	.LASF452
 	.4byte	.LASF452
-	.byte	0x22
-	.byte	0x38
+	.byte	0x1a
+	.2byte	0x393
 	.uleb128 0x6b
 	.4byte	.LASF453
 	.4byte	.LASF453
-	.byte	0x8
-	.2byte	0x16e
-	.uleb128 0x6c
-	.4byte	.LASF454
-	.4byte	.LASF454
-	.byte	0x23
-	.byte	0x13
-	.uleb128 0x6b
-	.4byte	.LASF455
-	.4byte	.LASF455
-	.byte	0x1c
-	.2byte	0x393
-	.uleb128 0x6c
-	.4byte	.LASF456
-	.4byte	.LASF456
-	.byte	0x24
+	.byte	0x22
 	.byte	0xb
 	.byte	0
 	.section	.debug_abbrev,"",%progbits
@@ -11532,31 +11525,16 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x3
 	.uleb128 0xe
 	.uleb128 0x1c
-	.uleb128 0xd
-	.byte	0
-	.byte	0
-	.uleb128 0x24
-	.uleb128 0x4
-	.byte	0x1
-	.uleb128 0xb
-	.uleb128 0xb
-	.uleb128 0x49
-	.uleb128 0x13
-	.uleb128 0x3a
-	.uleb128 0xb
-	.uleb128 0x3b
-	.uleb128 0xb
-	.uleb128 0x1
-	.uleb128 0x13
+	.uleb128 0xd
 	.byte	0
 	.byte	0
-	.uleb128 0x25
-	.uleb128 0x13
+	.uleb128 0x24
+	.uleb128 0x4
 	.byte	0x1
-	.uleb128 0x3
-	.uleb128 0xe
 	.uleb128 0xb
-	.uleb128 0x5
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
 	.uleb128 0x3a
 	.uleb128 0xb
 	.uleb128 0x3b
@@ -11565,14 +11543,14 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x26
+	.uleb128 0x25
 	.uleb128 0x35
 	.byte	0
 	.uleb128 0x49
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x27
+	.uleb128 0x26
 	.uleb128 0x4
 	.byte	0x1
 	.uleb128 0x3
@@ -11589,7 +11567,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x28
+	.uleb128 0x27
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -11604,7 +11582,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x19
 	.byte	0
 	.byte	0
-	.uleb128 0x29
+	.uleb128 0x28
 	.uleb128 0x17
 	.byte	0x1
 	.uleb128 0x3
@@ -11619,7 +11597,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x2a
+	.uleb128 0x29
 	.uleb128 0xd
 	.byte	0
 	.uleb128 0x3
@@ -11632,7 +11610,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x2b
+	.uleb128 0x2a
 	.uleb128 0xd
 	.byte	0
 	.uleb128 0x3
@@ -11645,7 +11623,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x2c
+	.uleb128 0x2b
 	.uleb128 0x15
 	.byte	0x1
 	.uleb128 0x27
@@ -11654,7 +11632,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x2d
+	.uleb128 0x2c
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -11669,7 +11647,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x18
 	.byte	0
 	.byte	0
-	.uleb128 0x2e
+	.uleb128 0x2d
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -11686,7 +11664,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x18
 	.byte	0
 	.byte	0
-	.uleb128 0x2f
+	.uleb128 0x2e
 	.uleb128 0x2e
 	.byte	0x1
 	.uleb128 0x3
@@ -11711,7 +11689,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x30
+	.uleb128 0x2f
 	.uleb128 0x5
 	.byte	0
 	.uleb128 0x3
@@ -11726,7 +11704,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x17
 	.byte	0
 	.byte	0
-	.uleb128 0x31
+	.uleb128 0x30
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -11741,7 +11719,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x17
 	.byte	0
 	.byte	0
-	.uleb128 0x32
+	.uleb128 0x31
 	.uleb128 0x4109
 	.byte	0x1
 	.uleb128 0x11
@@ -11752,7 +11730,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x33
+	.uleb128 0x32
 	.uleb128 0x410a
 	.byte	0
 	.uleb128 0x2
@@ -11761,7 +11739,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x18
 	.byte	0
 	.byte	0
-	.uleb128 0x34
+	.uleb128 0x33
 	.uleb128 0x4109
 	.byte	0x1
 	.uleb128 0x11
@@ -11770,7 +11748,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x35
+	.uleb128 0x34
 	.uleb128 0x5
 	.byte	0
 	.uleb128 0x3
@@ -11785,7 +11763,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x18
 	.byte	0
 	.byte	0
-	.uleb128 0x36
+	.uleb128 0x35
 	.uleb128 0x5
 	.byte	0
 	.uleb128 0x3
@@ -11800,7 +11778,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x18
 	.byte	0
 	.byte	0
-	.uleb128 0x37
+	.uleb128 0x36
 	.uleb128 0x1d
 	.byte	0x1
 	.uleb128 0x31
@@ -11815,7 +11793,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x5
 	.byte	0
 	.byte	0
-	.uleb128 0x38
+	.uleb128 0x37
 	.uleb128 0x5
 	.byte	0
 	.uleb128 0x31
@@ -11824,7 +11802,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x17
 	.byte	0
 	.byte	0
-	.uleb128 0x39
+	.uleb128 0x38
 	.uleb128 0x2e
 	.byte	0x1
 	.uleb128 0x3
@@ -11843,7 +11821,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x3a
+	.uleb128 0x39
 	.uleb128 0x5
 	.byte	0
 	.uleb128 0x3
@@ -11856,7 +11834,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x3b
+	.uleb128 0x3a
 	.uleb128 0x5
 	.byte	0
 	.uleb128 0x3
@@ -11871,7 +11849,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x17
 	.byte	0
 	.byte	0
-	.uleb128 0x3c
+	.uleb128 0x3b
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -11886,7 +11864,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x17
 	.byte	0
 	.byte	0
-	.uleb128 0x3d
+	.uleb128 0x3c
 	.uleb128 0x4109
 	.byte	0x1
 	.uleb128 0x11
@@ -11895,7 +11873,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x19
 	.byte	0
 	.byte	0
-	.uleb128 0x3e
+	.uleb128 0x3d
 	.uleb128 0x1d
 	.byte	0x1
 	.uleb128 0x31
@@ -11912,21 +11890,21 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x3f
+	.uleb128 0x3e
 	.uleb128 0x5
 	.byte	0
 	.uleb128 0x31
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x40
+	.uleb128 0x3f
 	.uleb128 0xb
 	.byte	0x1
 	.uleb128 0x55
 	.uleb128 0x17
 	.byte	0
 	.byte	0
-	.uleb128 0x41
+	.uleb128 0x40
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x31
@@ -11935,7 +11913,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x17
 	.byte	0
 	.byte	0
-	.uleb128 0x42
+	.uleb128 0x41
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x31
@@ -11944,7 +11922,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x18
 	.byte	0
 	.byte	0
-	.uleb128 0x43
+	.uleb128 0x42
 	.uleb128 0xa
 	.byte	0
 	.uleb128 0x31
@@ -11953,14 +11931,14 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x1
 	.byte	0
 	.byte	0
-	.uleb128 0x44
+	.uleb128 0x43
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x31
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x45
+	.uleb128 0x44
 	.uleb128 0xb
 	.byte	0x1
 	.uleb128 0x11
@@ -11971,7 +11949,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x46
+	.uleb128 0x45
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x31
@@ -11980,7 +11958,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x6
 	.byte	0
 	.byte	0
-	.uleb128 0x47
+	.uleb128 0x46
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x31
@@ -11989,7 +11967,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0xd
 	.byte	0
 	.byte	0
-	.uleb128 0x48
+	.uleb128 0x47
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x31
@@ -11998,7 +11976,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0xb
 	.byte	0
 	.byte	0
-	.uleb128 0x49
+	.uleb128 0x48
 	.uleb128 0xb
 	.byte	0x1
 	.uleb128 0x55
@@ -12007,7 +11985,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x4a
+	.uleb128 0x49
 	.uleb128 0x4109
 	.byte	0x1
 	.uleb128 0x11
@@ -12018,7 +11996,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x4b
+	.uleb128 0x4a
 	.uleb128 0x410a
 	.byte	0
 	.uleb128 0x31
@@ -12027,7 +12005,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x18
 	.byte	0
 	.byte	0
-	.uleb128 0x4c
+	.uleb128 0x4b
 	.uleb128 0x4109
 	.byte	0
 	.uleb128 0x11
@@ -12036,7 +12014,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x4d
+	.uleb128 0x4c
 	.uleb128 0x5
 	.byte	0
 	.uleb128 0x3
@@ -12049,7 +12027,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x4e
+	.uleb128 0x4d
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -12062,7 +12040,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x4f
+	.uleb128 0x4e
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -12075,7 +12053,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x50
+	.uleb128 0x4f
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -12088,7 +12066,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0xe
 	.byte	0
 	.byte	0
-	.uleb128 0x51
+	.uleb128 0x50
 	.uleb128 0xa
 	.byte	0
 	.uleb128 0x3
@@ -12099,19 +12077,19 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x5
 	.byte	0
 	.byte	0
-	.uleb128 0x52
+	.uleb128 0x51
 	.uleb128 0xb
 	.byte	0x1
 	.uleb128 0x1
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x53
+	.uleb128 0x52
 	.uleb128 0xb
 	.byte	0x1
 	.byte	0
 	.byte	0
-	.uleb128 0x54
+	.uleb128 0x53
 	.uleb128 0x2e
 	.byte	0x1
 	.uleb128 0x3
@@ -12136,7 +12114,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x55
+	.uleb128 0x54
 	.uleb128 0x5
 	.byte	0
 	.uleb128 0x3
@@ -12151,7 +12129,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x17
 	.byte	0
 	.byte	0
-	.uleb128 0x56
+	.uleb128 0x55
 	.uleb128 0x5
 	.byte	0
 	.uleb128 0x3
@@ -12166,7 +12144,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x17
 	.byte	0
 	.byte	0
-	.uleb128 0x57
+	.uleb128 0x56
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -12181,7 +12159,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x17
 	.byte	0
 	.byte	0
-	.uleb128 0x58
+	.uleb128 0x57
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -12196,7 +12174,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x17
 	.byte	0
 	.byte	0
-	.uleb128 0x59
+	.uleb128 0x58
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -12209,7 +12187,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x18
 	.byte	0
 	.byte	0
-	.uleb128 0x5a
+	.uleb128 0x59
 	.uleb128 0xa
 	.byte	0
 	.uleb128 0x3
@@ -12222,7 +12200,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x1
 	.byte	0
 	.byte	0
-	.uleb128 0x5b
+	.uleb128 0x5a
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -12237,7 +12215,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x18
 	.byte	0
 	.byte	0
-	.uleb128 0x5c
+	.uleb128 0x5b
 	.uleb128 0xa
 	.byte	0
 	.uleb128 0x3
@@ -12250,7 +12228,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x1
 	.byte	0
 	.byte	0
-	.uleb128 0x5d
+	.uleb128 0x5c
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -12265,7 +12243,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x6
 	.byte	0
 	.byte	0
-	.uleb128 0x5e
+	.uleb128 0x5d
 	.uleb128 0x4109
 	.byte	0x1
 	.uleb128 0x11
@@ -12274,7 +12252,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x18
 	.byte	0
 	.byte	0
-	.uleb128 0x5f
+	.uleb128 0x5e
 	.uleb128 0x2e
 	.byte	0x1
 	.uleb128 0x3
@@ -12293,7 +12271,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x60
+	.uleb128 0x5f
 	.uleb128 0x5
 	.byte	0
 	.uleb128 0x3
@@ -12306,7 +12284,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x61
+	.uleb128 0x60
 	.uleb128 0x5
 	.byte	0
 	.uleb128 0x3
@@ -12319,7 +12297,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x62
+	.uleb128 0x61
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -12332,7 +12310,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x63
+	.uleb128 0x62
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -12345,7 +12323,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x64
+	.uleb128 0x63
 	.uleb128 0x2e
 	.byte	0x1
 	.uleb128 0x3
@@ -12368,7 +12346,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x65
+	.uleb128 0x64
 	.uleb128 0x5
 	.byte	0
 	.uleb128 0x3
@@ -12383,7 +12361,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x18
 	.byte	0
 	.byte	0
-	.uleb128 0x66
+	.uleb128 0x65
 	.uleb128 0xb
 	.byte	0x1
 	.uleb128 0x11
@@ -12392,7 +12370,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x6
 	.byte	0
 	.byte	0
-	.uleb128 0x67
+	.uleb128 0x66
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -12407,7 +12385,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0xd
 	.byte	0
 	.byte	0
-	.uleb128 0x68
+	.uleb128 0x67
 	.uleb128 0x4109
 	.byte	0x1
 	.uleb128 0x11
@@ -12418,7 +12396,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x69
+	.uleb128 0x68
 	.uleb128 0x2e
 	.byte	0x1
 	.uleb128 0x3
@@ -12435,7 +12413,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x6a
+	.uleb128 0x69
 	.uleb128 0x2e
 	.byte	0x1
 	.uleb128 0x31
@@ -12452,7 +12430,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x6b
+	.uleb128 0x6a
 	.uleb128 0x2e
 	.byte	0
 	.uleb128 0x3f
@@ -12469,7 +12447,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.uleb128 0x5
 	.byte	0
 	.byte	0
-	.uleb128 0x6c
+	.uleb128 0x6b
 	.uleb128 0x2e
 	.byte	0
 	.uleb128 0x3f
@@ -14585,7 +14563,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LVL217
 	.4byte	.LFE272
 	.2byte	0x1
-	.byte	0x55
+	.byte	0x54
 	.4byte	0
 	.4byte	0
 .LLST133:
@@ -14639,7 +14617,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LVL215
 	.4byte	.LFE272
 	.2byte	0x1
-	.byte	0x54
+	.byte	0x55
 	.4byte	0
 	.4byte	0
 .LLST136:
@@ -14719,7 +14697,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LVL227
 	.4byte	.LVL228
 	.2byte	0x6
-	.byte	0x74
+	.byte	0x75
 	.sleb128 0
 	.byte	0x6
 	.byte	0x23
@@ -14727,7 +14705,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LVL228
 	.4byte	.LVL229-1
 	.2byte	0x6
-	.byte	0x75
+	.byte	0x74
 	.sleb128 -1
 	.byte	0x72
 	.sleb128 0
@@ -14736,7 +14714,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LVL229-1
 	.4byte	.LVL231
 	.2byte	0x7
-	.byte	0x75
+	.byte	0x74
 	.sleb128 -1
 	.byte	0x91
 	.sleb128 -36
@@ -14746,7 +14724,7 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.4byte	.LVL233
 	.4byte	.LFE272
 	.2byte	0x7
-	.byte	0x75
+	.byte	0x74
 	.sleb128 -1
 	.byte	0x91
 	.sleb128 -36
@@ -15392,91 +15370,91 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.section	.debug_str,"MS",%progbits,1
 .LASF30:
 	.ascii	"parent_platdata\000"
-.LASF446:
+.LASF443:
 	.ascii	"otp_cru_rst\000"
 .LASF100:
 	.ascii	"off_mem_rsvmap\000"
-.LASF185:
+.LASF183:
 	.ascii	"UCLASS_I2C_EEPROM\000"
-.LASF317:
+.LASF314:
 	.ascii	"jt_funcs\000"
-.LASF190:
+.LASF188:
 	.ascii	"UCLASS_IRQ\000"
 .LASF150:
 	.ascii	"initrd_start\000"
-.LASF184:
+.LASF182:
 	.ascii	"UCLASS_I2C\000"
 .LASF13:
 	.ascii	"sizetype\000"
-.LASF331:
+.LASF328:
 	.ascii	"net_hostname\000"
 .LASF54:
 	.ascii	"start\000"
-.LASF225:
+.LASF223:
 	.ascii	"UCLASS_SPI\000"
-.LASF314:
+.LASF311:
 	.ascii	"child\000"
-.LASF188:
+.LASF186:
 	.ascii	"UCLASS_I2S\000"
-.LASF353:
+.LASF350:
 	.ascii	"NETLOOP_RESTART\000"
-.LASF424:
+.LASF421:
 	.ascii	"otp_data\000"
-.LASF186:
+.LASF184:
 	.ascii	"UCLASS_I2C_GENERIC\000"
-.LASF198:
+.LASF196:
 	.ascii	"UCLASS_MOD_EXP\000"
-.LASF248:
+.LASF246:
 	.ascii	"UCLASS_IO_DOMAIN\000"
-.LASF267:
+.LASF265:
 	.ascii	"using_pre_serial\000"
 .LASF37:
 	.ascii	"uclass_priv\000"
-.LASF219:
+.LASF217:
 	.ascii	"UCLASS_RKNAND\000"
-.LASF161:
+.LASF159:
 	.ascii	"UCLASS_DEMO\000"
-.LASF401:
+.LASF398:
 	.ascii	"OTP_S\000"
 .LASF108:
 	.ascii	"ih_magic\000"
 .LASF46:
 	.ascii	"list_head\000"
-.LASF364:
+.LASF361:
 	.ascii	"child_pre_probe\000"
-.LASF419:
+.LASF416:
 	.ascii	"rockchip_secure_otp_ofdata_to_platdata\000"
-.LASF305:
+.LASF303:
 	.ascii	"pm_ctx_phys\000"
-.LASF165:
+.LASF163:
 	.ascii	"UCLASS_TEST_PROBE\000"
-.LASF312:
+.LASF309:
 	.ascii	"full_name\000"
-.LASF244:
+.LASF242:
 	.ascii	"UCLASS_KEY\000"
 .LASF80:
 	.ascii	"bi_intfreq\000"
-.LASF431:
+.LASF428:
 	.ascii	"__func__\000"
 .LASF11:
 	.ascii	"phys_addr_t\000"
-.LASF405:
+.LASF402:
 	.ascii	"write\000"
-.LASF239:
+.LASF237:
 	.ascii	"UCLASS_VIDEO_BRIDGE\000"
 .LASF5:
 	.ascii	"__u8\000"
-.LASF352:
+.LASF349:
 	.ascii	"NETLOOP_CONTINUE\000"
-.LASF228:
+.LASF226:
 	.ascii	"UCLASS_SPI_GENERIC\000"
-.LASF301:
+.LASF299:
 	.ascii	"malloc_base\000"
-.LASF451:
+.LASF448:
 	.ascii	"dev_read_addr_ptr\000"
 .LASF56:
 	.ascii	"flash_info_t\000"
-.LASF203:
+.LASF201:
 	.ascii	"UCLASS_PANEL\000"
 .LASF125:
 	.ascii	"comp\000"
@@ -15484,113 +15462,113 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.ascii	"image_header_t\000"
 .LASF155:
 	.ascii	"state\000"
-.LASF178:
+.LASF176:
 	.ascii	"UCLASS_CROS_EC\000"
 .LASF74:
 	.ascii	"bi_dsp_freq\000"
-.LASF417:
+.LASF414:
 	.ascii	"rockchip_otp_ids\000"
 .LASF122:
 	.ascii	"image_start\000"
-.LASF163:
+.LASF161:
 	.ascii	"UCLASS_TEST_FDT\000"
 .LASF65:
 	.ascii	"bd_info\000"
-.LASF350:
+.LASF347:
 	.ascii	"uclass_id\000"
 .LASF112:
 	.ascii	"ih_load\000"
-.LASF399:
+.LASF396:
 	.ascii	"DECOM_GZIP\000"
-.LASF321:
+.LASF318:
 	.ascii	"__dtb_dt_spl_begin\000"
-.LASF391:
+.LASF388:
 	.ascii	"pre_remove\000"
-.LASF382:
+.LASF379:
 	.ascii	"u_boot_dev_head\000"
-.LASF425:
+.LASF422:
 	.ascii	"secure_otp_read\000"
 .LASF7:
 	.ascii	"__u32\000"
 .LASF35:
 	.ascii	"priv\000"
-.LASF304:
+.LASF302:
 	.ascii	"cur_serial_dev\000"
-.LASF432:
+.LASF429:
 	.ascii	"rv1106_secure_otp_write_byte_noecc\000"
-.LASF337:
+.LASF334:
 	.ascii	"net_tx_packet\000"
-.LASF243:
+.LASF241:
 	.ascii	"UCLASS_FG\000"
-.LASF336:
+.LASF333:
 	.ascii	"net_server_ip\000"
-.LASF460:
+.LASF457:
 	.ascii	"ofnode_union\000"
-.LASF344:
+.LASF341:
 	.ascii	"net_native_vlan\000"
-.LASF280:
+.LASF278:
 	.ascii	"ram_top_ext_size\000"
-.LASF241:
+.LASF239:
 	.ascii	"UCLASS_VIDEO_CRTC\000"
-.LASF177:
+.LASF175:
 	.ascii	"UCLASS_CODEC\000"
-.LASF298:
+.LASF296:
 	.ascii	"env_buf\000"
 .LASF21:
 	.ascii	"errno\000"
 .LASF15:
 	.ascii	"long int\000"
-.LASF396:
+.LASF393:
 	.ascii	"__invalid_size_argument_for_IOC\000"
 .LASF69:
 	.ascii	"bi_flashsize\000"
 .LASF29:
 	.ascii	"platdata\000"
-.LASF208:
+.LASF206:
 	.ascii	"UCLASS_PHY\000"
-.LASF422:
+.LASF419:
 	.ascii	"secure_otp_write\000"
 .LASF93:
 	.ascii	"IRQ_STACK_START_IN\000"
 .LASF104:
 	.ascii	"size_dt_strings\000"
-.LASF238:
+.LASF236:
 	.ascii	"UCLASS_VIDEO\000"
-.LASF430:
+.LASF427:
 	.ascii	"rv1106_secure_otp_write_2_bytes\000"
-.LASF281:
+.LASF279:
 	.ascii	"relocaddr\000"
-.LASF381:
+.LASF378:
 	.ascii	"dev_head\000"
-.LASF459:
+.LASF456:
 	.ascii	"/home/zzz/code/u-boot\000"
-.LASF347:
+.LASF344:
 	.ascii	"net_boot_file_size\000"
 .LASF114:
 	.ascii	"ih_dcrc\000"
 .LASF79:
 	.ascii	"bi_ethspeed\000"
-.LASF160:
+.LASF158:
 	.ascii	"UCLASS_ROOT\000"
 .LASF44:
 	.ascii	"ide_bus_offset\000"
-.LASF334:
+.LASF331:
 	.ascii	"net_server_ethaddr\000"
 .LASF82:
 	.ascii	"bi_arch_number\000"
 .LASF3:
 	.ascii	"signed char\000"
-.LASF191:
+.LASF189:
 	.ascii	"UCLASS_KEYBOARD\000"
 .LASF18:
 	.ascii	"uint8_t\000"
-.LASF418:
+.LASF415:
 	.ascii	"_u_boot_list_2_driver_2_rockchip_secure_otp\000"
-.LASF369:
+.LASF366:
 	.ascii	"per_child_platdata_auto_alloc_size\000"
 .LASF45:
 	.ascii	"udevice\000"
-.LASF456:
+.LASF453:
 	.ascii	"udelay\000"
 .LASF116:
 	.ascii	"ih_arch\000"
@@ -15598,13 +15576,13 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.ascii	"totalsize\000"
 .LASF109:
 	.ascii	"ih_hcrc\000"
-.LASF283:
+.LASF281:
 	.ascii	"mon_len\000"
-.LASF407:
+.LASF404:
 	.ascii	"call\000"
 .LASF124:
 	.ascii	"load\000"
-.LASF233:
+.LASF231:
 	.ascii	"UCLASS_TPM\000"
 .LASF59:
 	.ascii	"lmb_property\000"
@@ -15616,79 +15594,79 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.ascii	"bi_andr_version\000"
 .LASF157:
 	.ascii	"images\000"
-.LASF247:
+.LASF245:
 	.ascii	"UCLASS_DVFS\000"
 .LASF75:
 	.ascii	"bi_ddr_freq\000"
-.LASF192:
+.LASF190:
 	.ascii	"UCLASS_LED\000"
 .LASF111:
 	.ascii	"ih_size\000"
 .LASF39:
 	.ascii	"uclass_node\000"
-.LASF222:
+.LASF220:
 	.ascii	"UCLASS_SCMI_AGENT\000"
-.LASF408:
+.LASF405:
 	.ascii	"rockchip_otp_platdata\000"
-.LASF251:
+.LASF249:
 	.ascii	"UCLASS_MDIO\000"
 .LASF23:
 	.ascii	"_Bool\000"
-.LASF370:
+.LASF367:
 	.ascii	"property\000"
-.LASF429:
+.LASF426:
 	.ascii	"rockchip_secure_otp_capability\000"
-.LASF356:
+.LASF353:
 	.ascii	"net_state\000"
-.LASF372:
+.LASF369:
 	.ascii	"value\000"
-.LASF440:
+.LASF437:
 	.ascii	"rockchip_secure_otp_check_flag\000"
-.LASF187:
+.LASF185:
 	.ascii	"UCLASS_I2C_MUX\000"
 .LASF14:
 	.ascii	"char\000"
 .LASF25:
 	.ascii	"_binary_u_boot_bin_start\000"
-.LASF237:
+.LASF235:
 	.ascii	"UCLASS_USB_GADGET_GENERIC\000"
-.LASF354:
+.LASF351:
 	.ascii	"NETLOOP_SUCCESS\000"
 .LASF36:
 	.ascii	"uclass\000"
-.LASF378:
+.LASF375:
 	.ascii	"p_current\000"
-.LASF380:
+.LASF377:
 	.ascii	"uc_drv\000"
-.LASF351:
+.LASF348:
 	.ascii	"net_loop_state\000"
 .LASF43:
 	.ascii	"req_seq\000"
-.LASF449:
+.LASF446:
 	.ascii	"rv1106_spl_rockchip_otp_start\000"
-.LASF315:
+.LASF312:
 	.ascii	"sibling\000"
-.LASF289:
+.LASF287:
 	.ascii	"dm_root_f\000"
-.LASF176:
+.LASF174:
 	.ascii	"UCLASS_AMP\000"
-.LASF214:
+.LASF212:
 	.ascii	"UCLASS_PWRSEQ\000"
-.LASF373:
+.LASF370:
 	.ascii	"of_offset\000"
 .LASF140:
 	.ascii	"fit_hdr_fdt\000"
-.LASF345:
+.LASF342:
 	.ascii	"net_restart_wrap\000"
-.LASF333:
+.LASF330:
 	.ascii	"net_ethaddr\000"
 .LASF42:
 	.ascii	"flags\000"
-.LASF433:
+.LASF430:
 	.ascii	"data_2b\000"
-.LASF435:
+.LASF432:
 	.ascii	"rv1106_secure_otp_read\000"
-.LASF455:
+.LASF452:
 	.ascii	"malloc_simple\000"
 .LASF117:
 	.ascii	"ih_type\000"
@@ -15696,19 +15674,19 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.ascii	"off_dt_struct\000"
 .LASF70:
 	.ascii	"bi_flashoffset\000"
-.LASF346:
+.LASF343:
 	.ascii	"net_boot_file_name\000"
-.LASF384:
+.LASF381:
 	.ascii	"compatible\000"
-.LASF162:
+.LASF160:
 	.ascii	"UCLASS_TEST\000"
 .LASF110:
 	.ascii	"ih_time\000"
-.LASF273:
+.LASF271:
 	.ascii	"bus_clk\000"
-.LASF215:
+.LASF213:
 	.ascii	"UCLASS_RAM\000"
-.LASF181:
+.LASF179:
 	.ascii	"UCLASS_ETH\000"
 .LASF32:
 	.ascii	"node\000"
@@ -15716,21 +15694,19 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.ascii	"image_info\000"
 .LASF127:
 	.ascii	"arch\000"
-.LASF275:
+.LASF273:
 	.ascii	"mem_clk\000"
-.LASF274:
-	.ascii	"pci_clk\000"
-.LASF428:
+.LASF425:
 	.ascii	"temp\000"
-.LASF458:
+.LASF455:
 	.ascii	"drivers/misc/rv1106-secure-otp.c\000"
 .LASF50:
 	.ascii	"select_hwpart\000"
-.LASF338:
+.LASF335:
 	.ascii	"net_rx_packets\000"
-.LASF375:
+.LASF372:
 	.ascii	"mem_malloc_start\000"
-.LASF442:
+.LASF439:
 	.ascii	"rockchip_secure_otp_wait_flag\000"
 .LASF92:
 	.ascii	"_datarelro_start_ofs\000"
@@ -15740,289 +15716,287 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.ascii	"ih_ep\000"
 .LASF61:
 	.ascii	"lmb_region\000"
-.LASF389:
+.LASF386:
 	.ascii	"pre_probe\000"
-.LASF454:
+.LASF451:
 	.ascii	"printf\000"
-.LASF400:
+.LASF397:
 	.ascii	"DECOM_ZLIB\000"
 .LASF135:
 	.ascii	"fit_uname_os\000"
 .LASF76:
 	.ascii	"bi_bootflags\000"
-.LASF335:
+.LASF332:
 	.ascii	"net_ip\000"
-.LASF443:
+.LASF440:
 	.ascii	"rockchip_secure_otp_wait_status\000"
-.LASF293:
+.LASF291:
 	.ascii	"fdt_size\000"
-.LASF329:
+.LASF326:
 	.ascii	"net_dns_server\000"
-.LASF349:
+.LASF346:
 	.ascii	"net_ping_ip\000"
 .LASF63:
 	.ascii	"memory\000"
 .LASF95:
 	.ascii	"fdt_header\000"
-.LASF376:
+.LASF373:
 	.ascii	"mem_malloc_end\000"
-.LASF194:
+.LASF192:
 	.ascii	"UCLASS_MAILBOX\000"
 .LASF147:
 	.ascii	"rd_end\000"
-.LASF358:
+.LASF355:
 	.ascii	"bind\000"
-.LASF284:
+.LASF282:
 	.ascii	"irq_sp\000"
 .LASF152:
 	.ascii	"cmdline_start\000"
-.LASF271:
+.LASF269:
 	.ascii	"global_data\000"
-.LASF394:
+.LASF391:
 	.ascii	"per_device_auto_alloc_size\000"
-.LASF223:
+.LASF221:
 	.ascii	"UCLASS_SCSI\000"
-.LASF235:
+.LASF233:
 	.ascii	"UCLASS_USB_DEV_GENERIC\000"
-.LASF195:
+.LASF193:
 	.ascii	"UCLASS_MASS_STORAGE\000"
 .LASF1:
 	.ascii	"long unsigned int\000"
-.LASF170:
+.LASF168:
 	.ascii	"UCLASS_SIMPLE_BUS\000"
-.LASF318:
+.LASF315:
 	.ascii	"gd_t\000"
-.LASF330:
+.LASF327:
 	.ascii	"net_nis_domain\000"
 .LASF142:
 	.ascii	"fit_noffset_fdt\000"
-.LASF426:
+.LASF423:
 	.ascii	"rv1106_secure_otp_write\000"
-.LASF415:
+.LASF412:
 	.ascii	"rockchip_secure_otp_ops\000"
-.LASF355:
+.LASF352:
 	.ascii	"NETLOOP_FAIL\000"
-.LASF242:
+.LASF240:
 	.ascii	"UCLASS_WDT\000"
-.LASF263:
+.LASF261:
 	.ascii	"timer_reset_value\000"
-.LASF285:
+.LASF283:
 	.ascii	"start_addr_sp\000"
 .LASF71:
 	.ascii	"bi_sramstart\000"
 .LASF26:
 	.ascii	"_binary_u_boot_bin_end\000"
-.LASF286:
+.LASF284:
 	.ascii	"reloc_off\000"
 .LASF103:
 	.ascii	"boot_cpuid_phys\000"
-.LASF262:
+.LASF260:
 	.ascii	"lastinc\000"
 .LASF138:
 	.ascii	"fit_uname_rd\000"
-.LASF229:
+.LASF227:
 	.ascii	"UCLASS_SYSCON\000"
-.LASF175:
+.LASF173:
 	.ascii	"UCLASS_CPU\000"
 .LASF133:
 	.ascii	"fit_uname_cfg\000"
-.LASF224:
+.LASF222:
 	.ascii	"UCLASS_SERIAL\000"
-.LASF343:
+.LASF340:
 	.ascii	"net_our_vlan\000"
-.LASF306:
+.LASF304:
 	.ascii	"serial\000"
-.LASF359:
+.LASF356:
 	.ascii	"probe\000"
-.LASF173:
+.LASF171:
 	.ascii	"UCLASS_BLK\000"
 .LASF128:
 	.ascii	"image_info_t\000"
-.LASF169:
+.LASF167:
 	.ascii	"UCLASS_USB_EMUL\000"
-.LASF264:
+.LASF262:
 	.ascii	"tlb_addr\000"
-.LASF207:
+.LASF205:
 	.ascii	"UCLASS_PCI_GENERIC\000"
 .LASF123:
 	.ascii	"image_len\000"
 .LASF77:
 	.ascii	"bi_ip_addr\000"
-.LASF209:
+.LASF207:
 	.ascii	"UCLASS_PINCONFIG\000"
-.LASF231:
+.LASF229:
 	.ascii	"UCLASS_THERMAL\000"
 .LASF131:
 	.ascii	"legacy_hdr_os_copy\000"
-.LASF159:
-	.ascii	"sha256_der_prefix\000"
 .LASF9:
 	.ascii	"long long int\000"
-.LASF397:
+.LASF394:
 	.ascii	"misc_mode\000"
-.LASF292:
+.LASF290:
 	.ascii	"new_fdt\000"
 .LASF22:
 	.ascii	"___strtok\000"
-.LASF348:
+.LASF345:
 	.ascii	"net_boot_file_expected_size_in_blocks\000"
-.LASF268:
+.LASF266:
 	.ascii	"enable\000"
-.LASF357:
+.LASF354:
 	.ascii	"of_match\000"
-.LASF202:
+.LASF200:
 	.ascii	"UCLASS_NVME\000"
 .LASF129:
 	.ascii	"bootm_headers\000"
 .LASF55:
 	.ascii	"protect\000"
-.LASF234:
+.LASF232:
 	.ascii	"UCLASS_USB\000"
-.LASF386:
+.LASF383:
 	.ascii	"uclass_driver\000"
-.LASF245:
+.LASF243:
 	.ascii	"UCLASS_RC\000"
-.LASF299:
+.LASF297:
 	.ascii	"timebase_h\000"
-.LASF300:
+.LASF298:
 	.ascii	"timebase_l\000"
-.LASF179:
+.LASF177:
 	.ascii	"UCLASS_DISPLAY\000"
-.LASF342:
+.LASF339:
 	.ascii	"net_null_ethaddr\000"
-.LASF278:
+.LASF276:
 	.ascii	"env_valid\000"
 .LASF34:
 	.ascii	"parent\000"
-.LASF168:
+.LASF166:
 	.ascii	"UCLASS_PCI_EMUL\000"
 .LASF89:
 	.ascii	"_datarel_start_ofs\000"
 .LASF38:
 	.ascii	"parent_priv\000"
-.LASF402:
+.LASF399:
 	.ascii	"OTP_NS\000"
-.LASF246:
+.LASF244:
 	.ascii	"UCLASS_CHARGE_DISPLAY\000"
-.LASF322:
+.LASF319:
 	.ascii	"load_addr\000"
-.LASF434:
+.LASF431:
 	.ascii	"rv1106_secure_otp_write_2_bytes_noecc\000"
 .LASF134:
 	.ascii	"fit_hdr_os\000"
 .LASF90:
 	.ascii	"_datarelrolocal_start_ofs\000"
-.LASF453:
+.LASF450:
 	.ascii	"dev_get_driver_data\000"
-.LASF414:
+.LASF411:
 	.ascii	"spl_rockchip_otp_stop\000"
-.LASF270:
+.LASF268:
 	.ascii	"addr\000"
-.LASF404:
+.LASF401:
 	.ascii	"read\000"
-.LASF447:
+.LASF444:
 	.ascii	"mask\000"
 .LASF8:
 	.ascii	"unsigned int\000"
 .LASF16:
 	.ascii	"ushort\000"
-.LASF406:
+.LASF403:
 	.ascii	"ioctl\000"
-.LASF452:
+.LASF449:
 	.ascii	"dev_read_u32_default\000"
-.LASF296:
+.LASF294:
 	.ascii	"ufdt_blob\000"
-.LASF366:
+.LASF363:
 	.ascii	"priv_auto_alloc_size\000"
-.LASF302:
+.LASF300:
 	.ascii	"malloc_limit\000"
-.LASF211:
+.LASF209:
 	.ascii	"UCLASS_PMIC\000"
-.LASF445:
+.LASF442:
 	.ascii	"secure_conf\000"
 .LASF130:
 	.ascii	"legacy_hdr_os\000"
 .LASF99:
 	.ascii	"off_dt_strings\000"
-.LASF319:
+.LASF316:
 	.ascii	"monitor_flash_len\000"
-.LASF196:
+.LASF194:
 	.ascii	"UCLASS_MISC\000"
 .LASF67:
 	.ascii	"bi_memsize\000"
-.LASF444:
+.LASF441:
 	.ascii	"flag\000"
 .LASF24:
 	.ascii	"image_base\000"
-.LASF230:
+.LASF228:
 	.ascii	"UCLASS_SYSRESET\000"
-.LASF379:
+.LASF376:
 	.ascii	"current\000"
-.LASF183:
+.LASF181:
 	.ascii	"UCLASS_FIRMWARE\000"
-.LASF193:
+.LASF191:
 	.ascii	"UCLASS_LPC\000"
-.LASF423:
+.LASF420:
 	.ascii	"offset\000"
-.LASF189:
+.LASF187:
 	.ascii	"UCLASS_IDE\000"
-.LASF403:
+.LASF400:
 	.ascii	"misc_ops\000"
-.LASF311:
+.LASF308:
 	.ascii	"phandle\000"
-.LASF295:
+.LASF293:
 	.ascii	"of_root_f\000"
-.LASF367:
+.LASF364:
 	.ascii	"platdata_auto_alloc_size\000"
-.LASF395:
+.LASF392:
 	.ascii	"per_device_platdata_auto_alloc_size\000"
 .LASF156:
 	.ascii	"bootm_headers_t\000"
 .LASF73:
 	.ascii	"bi_arm_freq\000"
-.LASF217:
+.LASF215:
 	.ascii	"UCLASS_REMOTEPROC\000"
 .LASF126:
 	.ascii	"type\000"
 .LASF137:
 	.ascii	"fit_hdr_rd\000"
-.LASF277:
+.LASF275:
 	.ascii	"env_addr\000"
 .LASF72:
 	.ascii	"bi_sramsize\000"
-.LASF290:
+.LASF288:
 	.ascii	"uclass_root\000"
-.LASF182:
+.LASF180:
 	.ascii	"UCLASS_GPIO\000"
-.LASF411:
+.LASF408:
 	.ascii	"otp_cru_rst_base\000"
-.LASF438:
+.LASF435:
 	.ascii	"read_end\000"
-.LASF212:
+.LASF210:
 	.ascii	"UCLASS_PWM\000"
 .LASF58:
 	.ascii	"long double\000"
-.LASF279:
+.LASF277:
 	.ascii	"ram_top\000"
-.LASF308:
+.LASF306:
 	.ascii	"console_evt\000"
 .LASF146:
 	.ascii	"rd_start\000"
-.LASF437:
+.LASF434:
 	.ascii	"write_end\000"
-.LASF213:
+.LASF211:
 	.ascii	"UCLASS_POWER_DOMAIN\000"
-.LASF216:
+.LASF214:
 	.ascii	"UCLASS_REGULATOR\000"
-.LASF324:
+.LASF321:
 	.ascii	"save_size\000"
-.LASF174:
+.LASF172:
 	.ascii	"UCLASS_CLK\000"
 .LASF31:
 	.ascii	"uclass_platdata\000"
-.LASF450:
+.LASF447:
 	.ascii	"dev_get_platdata\000"
-.LASF266:
+.LASF264:
 	.ascii	"pre_serial\000"
 .LASF119:
 	.ascii	"ih_name\000"
@@ -16030,25 +16004,25 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.ascii	"ih_os\000"
 .LASF153:
 	.ascii	"cmdline_end\000"
-.LASF339:
+.LASF336:
 	.ascii	"net_rx_packet\000"
-.LASF259:
+.LASF257:
 	.ascii	"LOGF_MAX_CATEGORIES\000"
-.LASF291:
+.LASF289:
 	.ascii	"fdt_blob\000"
-.LASF383:
+.LASF380:
 	.ascii	"udevice_id\000"
-.LASF416:
+.LASF413:
 	.ascii	"rv1106_data\000"
 .LASF51:
 	.ascii	"size\000"
 .LASF10:
 	.ascii	"long long unsigned int\000"
-.LASF393:
+.LASF390:
 	.ascii	"destroy\000"
 .LASF107:
 	.ascii	"image_header\000"
-.LASF371:
+.LASF368:
 	.ascii	"length\000"
 .LASF20:
 	.ascii	"__be32\000"
@@ -16056,19 +16030,19 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.ascii	"bi_flashstart\000"
 .LASF136:
 	.ascii	"fit_noffset_os\000"
-.LASF197:
+.LASF195:
 	.ascii	"UCLASS_MMC\000"
-.LASF258:
+.LASF256:
 	.ascii	"UCLASS_INVALID\000"
-.LASF236:
+.LASF234:
 	.ascii	"UCLASS_USB_HUB\000"
-.LASF365:
+.LASF362:
 	.ascii	"child_post_remove\000"
 .LASF41:
 	.ascii	"sibling_node\000"
-.LASF294:
+.LASF292:
 	.ascii	"of_root\000"
-.LASF252:
+.LASF250:
 	.ascii	"UCLASS_EBC\000"
 .LASF57:
 	.ascii	"flash_info\000"
@@ -16078,43 +16052,43 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.ascii	"region\000"
 .LASF105:
 	.ascii	"size_dt_struct\000"
-.LASF288:
+.LASF286:
 	.ascii	"dm_root\000"
-.LASF254:
+.LASF252:
 	.ascii	"UCLASS_RNG\000"
-.LASF307:
+.LASF305:
 	.ascii	"sys_start_tick\000"
-.LASF313:
+.LASF310:
 	.ascii	"properties\000"
-.LASF199:
+.LASF197:
 	.ascii	"UCLASS_MTD\000"
 .LASF94:
 	.ascii	"fdt32_t\000"
-.LASF287:
+.LASF285:
 	.ascii	"new_gd\000"
-.LASF201:
+.LASF199:
 	.ascii	"UCLASS_NORTHBRIDGE\000"
 .LASF78:
 	.ascii	"bi_enetaddr\000"
-.LASF316:
+.LASF313:
 	.ascii	"mtd_info\000"
-.LASF363:
+.LASF360:
 	.ascii	"child_post_bind\000"
-.LASF325:
+.LASF322:
 	.ascii	"in_addr\000"
-.LASF340:
+.LASF337:
 	.ascii	"net_rx_packet_len\000"
-.LASF392:
+.LASF389:
 	.ascii	"init\000"
-.LASF439:
+.LASF436:
 	.ascii	"rockchip_secure_otp_ecc_enable\000"
-.LASF320:
+.LASF317:
 	.ascii	"__dtb_dt_begin\000"
-.LASF218:
+.LASF216:
 	.ascii	"UCLASS_RESET\000"
 .LASF139:
 	.ascii	"fit_noffset_rd\000"
-.LASF172:
+.LASF170:
 	.ascii	"UCLASS_AHCI\000"
 .LASF12:
 	.ascii	"phys_size_t\000"
@@ -16124,117 +16098,115 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.ascii	"FIQ_STACK_START\000"
 .LASF154:
 	.ascii	"verify\000"
-.LASF374:
+.LASF371:
 	.ascii	"ofnode\000"
 .LASF28:
 	.ascii	"name\000"
-.LASF436:
+.LASF433:
 	.ascii	"buffer\000"
-.LASF253:
+.LASF251:
 	.ascii	"UCLASS_EINK_DISPLAY\000"
-.LASF204:
+.LASF202:
 	.ascii	"UCLASS_PANEL_BACKLIGHT\000"
-.LASF232:
+.LASF230:
 	.ascii	"UCLASS_TIMER\000"
-.LASF227:
+.LASF225:
 	.ascii	"UCLASS_SPI_FLASH\000"
-.LASF276:
+.LASF274:
 	.ascii	"have_console\000"
 .LASF81:
 	.ascii	"bi_busfreq\000"
 .LASF6:
 	.ascii	"short int\000"
-.LASF441:
+.LASF438:
 	.ascii	"delay\000"
-.LASF410:
+.LASF407:
 	.ascii	"otp_mask_base\000"
-.LASF210:
+.LASF208:
 	.ascii	"UCLASS_PINCTRL\000"
-.LASF220:
+.LASF218:
 	.ascii	"UCLASS_RAMDISK\000"
-.LASF167:
+.LASF165:
 	.ascii	"UCLASS_I2C_EMUL\000"
-.LASF226:
+.LASF224:
 	.ascii	"UCLASS_SPMI\000"
-.LASF360:
+.LASF357:
 	.ascii	"remove\000"
-.LASF272:
+.LASF270:
 	.ascii	"cpu_clk\000"
-.LASF164:
+.LASF162:
 	.ascii	"UCLASS_TEST_BUS\000"
-.LASF323:
+.LASF320:
 	.ascii	"save_addr\000"
-.LASF368:
+.LASF365:
 	.ascii	"per_child_auto_alloc_size\000"
-.LASF303:
+.LASF301:
 	.ascii	"malloc_ptr\000"
-.LASF409:
+.LASF406:
 	.ascii	"secure_conf_base\000"
 .LASF151:
 	.ascii	"initrd_end\000"
-.LASF388:
+.LASF385:
 	.ascii	"pre_unbind\000"
-.LASF412:
+.LASF409:
 	.ascii	"secure_otp_data\000"
-.LASF269:
+.LASF267:
 	.ascii	"baudrate\000"
 .LASF91:
 	.ascii	"_datarellocal_start_ofs\000"
 .LASF40:
 	.ascii	"child_head\000"
-.LASF260:
+.LASF258:
 	.ascii	"arch_global_data\000"
-.LASF257:
+.LASF255:
 	.ascii	"UCLASS_COUNT\000"
-.LASF158:
-	.ascii	"sha1_der_prefix\000"
+.LASF272:
+	.ascii	"pci_clk\000"
 .LASF49:
 	.ascii	"block_drvr\000"
-.LASF309:
-	.ascii	"rollback_index\000"
 .LASF53:
 	.ascii	"flash_id\000"
-.LASF249:
+.LASF247:
 	.ascii	"UCLASS_CRYPTO\000"
-.LASF310:
+.LASF307:
 	.ascii	"device_node\000"
-.LASF282:
+.LASF280:
 	.ascii	"ram_size\000"
 .LASF145:
 	.ascii	"fit_noffset_setup\000"
 .LASF106:
 	.ascii	"working_fdt\000"
-.LASF297:
+.LASF295:
 	.ascii	"fdt_blob_kern\000"
-.LASF332:
+.LASF329:
 	.ascii	"net_root_path\000"
-.LASF180:
+.LASF178:
 	.ascii	"UCLASS_DMA\000"
 .LASF86:
 	.ascii	"bd_t\000"
-.LASF255:
+.LASF253:
 	.ascii	"UCLASS_DMC\000"
-.LASF326:
+.LASF323:
 	.ascii	"s_addr\000"
-.LASF421:
+.LASF418:
 	.ascii	"request\000"
-.LASF427:
+.LASF424:
 	.ascii	"data_byte\000"
-.LASF390:
+.LASF387:
 	.ascii	"post_probe\000"
-.LASF341:
+.LASF338:
 	.ascii	"net_bcast_ethaddr\000"
 .LASF83:
 	.ascii	"bi_boot_params\000"
-.LASF413:
+.LASF410:
 	.ascii	"spl_rockchip_otp_start\000"
 .LASF19:
 	.ascii	"uint32_t\000"
-.LASF377:
+.LASF374:
 	.ascii	"mem_malloc_brk\000"
-.LASF327:
+.LASF324:
 	.ascii	"net_gateway\000"
-.LASF457:
+.LASF454:
 	.ascii	"GNU C11 6.3.1 20170404 -mthumb -mthumb-interwork -m"
 	.ascii	"abi=aapcs-linux -mno-unaligned-access -mfloat-abi=s"
 	.ascii	"oft -march=armv7-a -mtune=cortex-a9 -mfpu=vfpv3-d16"
@@ -16244,17 +16216,17 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.ascii	"s -fdata-sections -fno-common -ffixed-r9\000"
 .LASF66:
 	.ascii	"bi_memstart\000"
-.LASF398:
+.LASF395:
 	.ascii	"DECOM_LZ4\000"
-.LASF240:
+.LASF238:
 	.ascii	"UCLASS_VIDEO_CONSOLE\000"
-.LASF362:
+.LASF359:
 	.ascii	"ofdata_to_platdata\000"
 .LASF64:
 	.ascii	"reserved\000"
-.LASF461:
+.LASF458:
 	.ascii	"free\000"
-.LASF256:
+.LASF254:
 	.ascii	"UCLASS_PD\000"
 .LASF85:
 	.ascii	"bi_dram\000"
@@ -16268,21 +16240,21 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.ascii	"legacy_hdr_valid\000"
 .LASF60:
 	.ascii	"base\000"
-.LASF221:
+.LASF219:
 	.ascii	"UCLASS_RTC\000"
-.LASF261:
+.LASF259:
 	.ascii	"timer_rate_hz\000"
 .LASF52:
 	.ascii	"sector_count\000"
 .LASF118:
 	.ascii	"ih_comp\000"
-.LASF387:
+.LASF384:
 	.ascii	"post_bind\000"
-.LASF361:
+.LASF358:
 	.ascii	"unbind\000"
 .LASF148:
 	.ascii	"ft_addr\000"
-.LASF250:
+.LASF248:
 	.ascii	"UCLASS_ETH_PHY\000"
 .LASF4:
 	.ascii	"uchar\000"
@@ -16290,33 +16262,33 @@ _u_boot_list_2_driver_2_rockchip_secure_otp:
 	.ascii	"ft_len\000"
 .LASF47:
 	.ascii	"next\000"
-.LASF420:
+.LASF417:
 	.ascii	"secure_otp_ioctl\000"
-.LASF385:
+.LASF382:
 	.ascii	"data\000"
-.LASF200:
+.LASF198:
 	.ascii	"UCLASS_NOP\000"
-.LASF448:
+.LASF445:
 	.ascii	"rv1106_spl_rockchip_otp_stop\000"
 .LASF144:
 	.ascii	"fit_uname_setup\000"
 .LASF48:
 	.ascii	"prev\000"
-.LASF205:
+.LASF203:
 	.ascii	"UCLASS_PCH\000"
-.LASF206:
+.LASF204:
 	.ascii	"UCLASS_PCI\000"
-.LASF328:
+.LASF325:
 	.ascii	"net_netmask\000"
 .LASF33:
 	.ascii	"driver_data\000"
 .LASF87:
 	.ascii	"IRQ_STACK_START\000"
-.LASF171:
+.LASF169:
 	.ascii	"UCLASS_ADC\000"
-.LASF166:
+.LASF164:
 	.ascii	"UCLASS_SPI_EMUL\000"
-.LASF265:
+.LASF263:
 	.ascii	"tlb_size\000"
 .LASF141:
 	.ascii	"fit_uname_fdt\000"
diff --git a/drivers/mmc/sdhci.c b/drivers/mmc/sdhci.c
index 75bb150..8c2a9a6 100644
--- a/drivers/mmc/sdhci.c
+++ b/drivers/mmc/sdhci.c
@@ -174,9 +174,10 @@ static int sdhci_send_command(struct mmc *mmc, struct mmc_cmd *cmd,
 				cmd_timeout += cmd_timeout;
 				printf("timeout increasing to: %u ms.\n",
 				       cmd_timeout);
+				sdhci_writel(host, SDHCI_INT_ALL_MASK, SDHCI_INT_STATUS);
 			} else {
 				puts("timeout.\n");
-				return -ECOMM;
+				/* remove timeout return error and try to send command */
 			}
 		}
 		time++;
diff --git a/drivers/mtd/mtd_blk.c b/drivers/mtd/mtd_blk.c
index efb6870..a8226d7 100644
--- a/drivers/mtd/mtd_blk.c
+++ b/drivers/mtd/mtd_blk.c
@@ -133,7 +133,7 @@ void mtd_blk_map_partitions(struct blk_desc *desc)
 	for (i = 1; i < MAX_SEARCH_PARTITIONS; i++) {
 		ret = part_get_info(desc, i, &info);
 		if (ret != 0)
-			continue;
+			break;
 
 		if (mtd_blk_map_table_init(desc,
 					   info.start << 9,
diff --git a/drivers/mtd/mtd_uboot.c b/drivers/mtd/mtd_uboot.c
index 774461a..01ae254 100644
--- a/drivers/mtd/mtd_uboot.c
+++ b/drivers/mtd/mtd_uboot.c
@@ -6,6 +6,7 @@
  */
 #include <common.h>
 #include <dm/device.h>
+#include <dm/device-internal.h>
 #include <dm/uclass-internal.h>
 #include <jffs2/jffs2.h> /* LEGACY */
 #include <linux/mtd/mtd.h>
@@ -115,6 +116,22 @@ static void mtd_probe_uclass_mtd_devs(void)
 static void mtd_probe_uclass_mtd_devs(void) { }
 #endif
 
+#if IS_ENABLED(CONFIG_DM_SPI_FLASH) && IS_ENABLED(CONFIG_SPI_FLASH_MTD)
+static void __maybe_unused mtd_probe_uclass_spi_nor_devs(void)
+{
+	struct udevice *dev;
+	int idx = 0;
+
+	/* Probe devices with DM compliant drivers */
+	while (!uclass_find_device(UCLASS_SPI_FLASH, idx, &dev) && dev) {
+		device_probe(dev);
+		idx++;
+	}
+}
+#else
+static void __maybe_unused mtd_probe_uclass_spi_nor_devs(void) { }
+#endif
+
 #if defined(CONFIG_MTD_PARTITIONS)
 
 #define MTDPARTS_MAXLEN         512
@@ -205,6 +222,7 @@ int mtd_probe_devices(void)
 	struct mtd_info *mtd;
 
 	mtd_probe_uclass_mtd_devs();
+	mtd_probe_uclass_spi_nor_devs();
 
 	/*
 	 * Check if mtdparts/mtdids changed, if the MTD dev list was updated
@@ -352,6 +370,7 @@ int mtd_probe_devices(void)
 int mtd_probe_devices(void)
 {
 	mtd_probe_uclass_mtd_devs();
+	mtd_probe_uclass_spi_nor_devs();
 
 	return 0;
 }
diff --git a/drivers/mtd/nand/spi/dosilicon.c b/drivers/mtd/nand/spi/dosilicon.c
index 8189eb1..fc87add 100644
--- a/drivers/mtd/nand/spi/dosilicon.c
+++ b/drivers/mtd/nand/spi/dosilicon.c
@@ -170,7 +170,27 @@ static const struct spinand_info dosilicon_spinand_table[] = {
 				     ds35xxgb_ecc_get_status)),
 	SPINAND_INFO("DS35M1GB",
 		     SPINAND_ID(SPINAND_READID_METHOD_OPCODE_DUMMY, 0xA1),
-		     NAND_MEMORG(1, 2048, 128, 64, 1024, 2, 1, 1),
+		     NAND_MEMORG(1, 2048, 128, 64, 1024, 1, 1, 1),
+		     NAND_ECCREQ(8, 512),
+		     SPINAND_INFO_OP_VARIANTS(&read_cache_variants,
+					      &write_cache_variants,
+					      &update_cache_variants),
+		     SPINAND_HAS_QE_BIT,
+		     SPINAND_ECCINFO(&ds35xxgb_ooblayout,
+				     ds35xxgb_ecc_get_status)),
+	SPINAND_INFO("DS35Q1GB",
+		     SPINAND_ID(SPINAND_READID_METHOD_OPCODE_DUMMY, 0xF1),
+		     NAND_MEMORG(1, 2048, 128, 64, 1024, 1, 1, 1),
+		     NAND_ECCREQ(8, 512),
+		     SPINAND_INFO_OP_VARIANTS(&read_cache_variants,
+					      &write_cache_variants,
+					      &update_cache_variants),
+		     SPINAND_HAS_QE_BIT,
+		     SPINAND_ECCINFO(&ds35xxgb_ooblayout,
+				     ds35xxgb_ecc_get_status)),
+	SPINAND_INFO("DS35Q4GM",
+		     SPINAND_ID(SPINAND_READID_METHOD_OPCODE_DUMMY, 0xF4),
+		     NAND_MEMORG(1, 2048, 128, 64, 4096, 2, 1, 1),
 		     NAND_ECCREQ(8, 512),
 		     SPINAND_INFO_OP_VARIANTS(&read_cache_variants,
 					      &write_cache_variants,
diff --git a/drivers/mtd/nand/spi/foresee.c b/drivers/mtd/nand/spi/foresee.c
index b4d5eec..a67931f 100644
--- a/drivers/mtd/nand/spi/foresee.c
+++ b/drivers/mtd/nand/spi/foresee.c
@@ -99,6 +99,24 @@ static const struct spinand_info foresee_spinand_table[] = {
 					      &update_cache_variants),
 		     SPINAND_HAS_QE_BIT,
 		     SPINAND_ECCINFO(&fsxxndxxg_ooblayout, NULL)),
+	SPINAND_INFO("F35SQA512M",
+		     SPINAND_ID(SPINAND_READID_METHOD_OPCODE_DUMMY, 0x70),
+		     NAND_MEMORG(1, 2048, 64, 64, 512, 1, 1, 1),
+		     NAND_ECCREQ(1, 512),
+		     SPINAND_INFO_OP_VARIANTS(&read_cache_variants,
+					      &write_cache_variants,
+					      &update_cache_variants),
+		     SPINAND_HAS_QE_BIT,
+		     SPINAND_ECCINFO(&fsxxndxxg_ooblayout, NULL)),
+	SPINAND_INFO("F35UQA512M",
+		     SPINAND_ID(SPINAND_READID_METHOD_OPCODE_DUMMY, 0x60),
+		     NAND_MEMORG(1, 2048, 64, 64, 512, 1, 1, 1),
+		     NAND_ECCREQ(1, 512),
+		     SPINAND_INFO_OP_VARIANTS(&read_cache_variants,
+					      &write_cache_variants,
+					      &update_cache_variants),
+		     SPINAND_HAS_QE_BIT,
+		     SPINAND_ECCINFO(&fsxxndxxg_ooblayout, NULL)),
 };
 
 static const struct spinand_manufacturer_ops foresee_spinand_manuf_ops = {
diff --git a/drivers/mtd/nand/spi/gigadevice.c b/drivers/mtd/nand/spi/gigadevice.c
index 020a0b1..704ad55 100644
--- a/drivers/mtd/nand/spi/gigadevice.c
+++ b/drivers/mtd/nand/spi/gigadevice.c
@@ -465,7 +465,26 @@ static const struct spinand_info gigadevice_spinand_table[] = {
 				     gd5fxgq4xa_ecc_get_status)),
 };
 
+static int gigadevice_spinand_set_ds(struct spinand_device *spinand, u8 ds_io)
+{
+	struct spi_mem_op op = SPINAND_SET_FEATURE_OP(0xD0,
+						      spinand->scratchbuf);
+
+	*spinand->scratchbuf = (ds_io & 0x3) << 5;
+	return spi_mem_exec_op(spinand->slave, &op);
+}
+
+static int gigadevice_spinand_init(struct spinand_device *spinand)
+{
+	/* GD5F1GQ5UExxG */
+	if (spinand->id.data[1] == 0x51)
+		gigadevice_spinand_set_ds(spinand, 3);
+
+	return 0;
+}
+
 static const struct spinand_manufacturer_ops gigadevice_spinand_manuf_ops = {
+	.init = gigadevice_spinand_init,
 };
 
 const struct spinand_manufacturer gigadevice_spinand_manufacturer = {
diff --git a/drivers/mtd/nand/spi/macronix.c b/drivers/mtd/nand/spi/macronix.c
index 1a1d044..46e19b8 100644
--- a/drivers/mtd/nand/spi/macronix.c
+++ b/drivers/mtd/nand/spi/macronix.c
@@ -298,7 +298,36 @@ static const struct spinand_info macronix_spinand_table[] = {
 		     SPINAND_HAS_QE_BIT,
 		     SPINAND_ECCINFO(&mx35lfxge4ab_ooblayout,
 				     mx35lf1ge4ab_ecc_get_status)),
-
+	SPINAND_INFO("MX35UF1GE4AD",
+		     SPINAND_ID(SPINAND_READID_METHOD_OPCODE_DUMMY, 0x96),
+		     NAND_MEMORG(1, 2048, 64, 64, 1024, 1, 1, 1),
+		     NAND_ECCREQ(8, 512),
+		     SPINAND_INFO_OP_VARIANTS(&read_cache_variants,
+					      &write_cache_variants,
+					      &update_cache_variants),
+		     SPINAND_HAS_QE_BIT,
+		     SPINAND_ECCINFO(&mx35lfxge4ab_ooblayout,
+				     mx35lf1ge4ab_ecc_get_status)),
+	SPINAND_INFO("MX35UF2GE4AD",
+		     SPINAND_ID(SPINAND_READID_METHOD_OPCODE_DUMMY, 0xA6),
+		     NAND_MEMORG(1, 2048, 64, 64, 2048, 1, 1, 1),
+		     NAND_ECCREQ(8, 512),
+		     SPINAND_INFO_OP_VARIANTS(&read_cache_variants,
+					      &write_cache_variants,
+					      &update_cache_variants),
+		     SPINAND_HAS_QE_BIT,
+		     SPINAND_ECCINFO(&mx35lfxge4ab_ooblayout,
+				     mx35lf1ge4ab_ecc_get_status)),
+	SPINAND_INFO("MX35UF4GE4AD",
+		     SPINAND_ID(SPINAND_READID_METHOD_OPCODE_DUMMY, 0xB7),
+		     NAND_MEMORG(1, 4096, 128, 64, 2048, 1, 1, 1),
+		     NAND_ECCREQ(8, 512),
+		     SPINAND_INFO_OP_VARIANTS(&read_cache_variants,
+					      &write_cache_variants,
+					      &update_cache_variants),
+		     SPINAND_HAS_QE_BIT,
+		     SPINAND_ECCINFO(&mx35lfxge4ab_ooblayout,
+				     mx35lf1ge4ab_ecc_get_status)),
 };
 
 static const struct spinand_manufacturer_ops macronix_spinand_manuf_ops = {
diff --git a/drivers/mtd/nand/spi/winbond.c b/drivers/mtd/nand/spi/winbond.c
index 4750590..e05a0f7 100644
--- a/drivers/mtd/nand/spi/winbond.c
+++ b/drivers/mtd/nand/spi/winbond.c
@@ -16,7 +16,6 @@
 #define SPINAND_MFR_WINBOND		0xEF
 
 #define WINBOND_CFG_BUF_READ		BIT(3)
-#define WINBOND_STATUS_ECC_HAS_BITFLIPS_T	(3 << 4)
 
 static SPINAND_OP_VARIANTS(read_cache_variants,
 		SPINAND_PAGE_READ_FROM_CACHE_QUADIO_OP(0, 2, NULL, 0),
@@ -111,8 +110,6 @@ static int w25n02kv_ecc_get_status(struct spinand_device *spinand,
 				   u8 status)
 {
 	struct nand_device *nand = spinand_to_nand(spinand);
-	u8 mbf = 0;
-	struct spi_mem_op op = SPINAND_GET_FEATURE_OP(0x30, &mbf);
 
 	switch (status & STATUS_ECC_MASK) {
 	case STATUS_ECC_NO_BITFLIPS:
@@ -122,24 +119,10 @@ static int w25n02kv_ecc_get_status(struct spinand_device *spinand,
 		return -EBADMSG;
 
 	case STATUS_ECC_HAS_BITFLIPS:
-	case WINBOND_STATUS_ECC_HAS_BITFLIPS_T:
-		/*
-		 * Let's try to retrieve the real maximum number of bitflips
-		 * in order to avoid forcing the wear-leveling layer to move
-		 * data around if it's not necessary.
-		 */
-		if (spi_mem_exec_op(spinand->slave, &op))
-			return nand->eccreq.strength;
-
-		mbf >>= 4;
-
-		if (WARN_ON(mbf > nand->eccreq.strength || !mbf))
-			return nand->eccreq.strength;
-
-		return mbf;
+		return 1;
 
 	default:
-		break;
+		return nand->eccreq.strength;
 	}
 
 	return -EINVAL;
@@ -179,7 +162,7 @@ static const struct spinand_info winbond_spinand_table[] = {
 		     SPINAND_SELECT_TARGET(w25m02gv_select_target)),
 	SPINAND_INFO("W25N02KV",
 		     SPINAND_ID(SPINAND_READID_METHOD_OPCODE_DUMMY, 0xAA, 0x22),
-		     NAND_MEMORG(1, 2048, 64, 64, 2048, 1, 1, 1),
+		     NAND_MEMORG(1, 2048, 128, 64, 2048, 1, 1, 1),
 		     NAND_ECCREQ(8, 512),
 		     SPINAND_INFO_OP_VARIANTS(&read_cache_variants,
 					      &write_cache_variants,
@@ -189,7 +172,7 @@ static const struct spinand_info winbond_spinand_table[] = {
 				     w25n02kv_ecc_get_status)),
 	SPINAND_INFO("W25N04KV",
 		     SPINAND_ID(SPINAND_READID_METHOD_OPCODE_DUMMY, 0xAA, 0x23),
-		     NAND_MEMORG(1, 2048, 64, 64, 4096, 1, 1, 1),
+		     NAND_MEMORG(1, 2048, 128, 64, 4096, 1, 1, 1),
 		     NAND_ECCREQ(8, 512),
 		     SPINAND_INFO_OP_VARIANTS(&read_cache_variants,
 					      &write_cache_variants,
@@ -209,7 +192,7 @@ static const struct spinand_info winbond_spinand_table[] = {
 		     SPINAND_SELECT_TARGET(w25m02gv_select_target)),
 	SPINAND_INFO("W25N02KW",
 		     SPINAND_ID(SPINAND_READID_METHOD_OPCODE_DUMMY, 0xBA, 0x22),
-		     NAND_MEMORG(1, 2048, 64, 64, 2048, 1, 1, 1),
+		     NAND_MEMORG(1, 2048, 128, 64, 2048, 1, 1, 1),
 		     NAND_ECCREQ(8, 512),
 		     SPINAND_INFO_OP_VARIANTS(&read_cache_variants,
 					      &write_cache_variants,
@@ -217,6 +200,16 @@ static const struct spinand_info winbond_spinand_table[] = {
 		     0,
 		     SPINAND_ECCINFO(&w25n02kv_ooblayout,
 				     w25n02kv_ecc_get_status)),
+	SPINAND_INFO("W25N01KV",
+		     SPINAND_ID(SPINAND_READID_METHOD_OPCODE_DUMMY, 0xAE, 0x21),
+		     NAND_MEMORG(1, 2048, 128, 64, 1024, 1, 1, 1),
+		     NAND_ECCREQ(4, 512),
+		     SPINAND_INFO_OP_VARIANTS(&read_cache_variants,
+					      &write_cache_variants,
+					      &update_cache_variants),
+		     0,
+		     SPINAND_ECCINFO(&w25n02kv_ooblayout,
+				     w25n02kv_ecc_get_status)),
 };
 
 static int winbond_spinand_init(struct spinand_device *spinand)
diff --git a/drivers/mtd/spi/Kconfig b/drivers/mtd/spi/Kconfig
index 16e4527..bf4bd7a 100644
--- a/drivers/mtd/spi/Kconfig
+++ b/drivers/mtd/spi/Kconfig
@@ -175,6 +175,12 @@ config SPI_FLASH_DOSILICON
 	  Add support for various DOSILICON (Dosilicon Co., Ltd)
 	  SPI flash chips (FM25Qxxx and FM25Mxxx).
 
+config SPI_FLASH_BOYA
+	bool "BOYA SPI flash support"
+	help
+	  Add support for various BOYA (Dosilicon Co., Ltd)
+	  SPI flash chips (BY25Qxxxx).
+
 endif
 
 config SPI_FLASH_USE_4K_SECTORS
@@ -209,7 +215,7 @@ config SPI_FLASH_DATAFLASH
 
 config SPI_FLASH_MTD
 	bool "SPI Flash MTD support"
-	depends on SPI_FLASH
+	depends on SPI_FLASH && MTD_BLK
 	help
           Enable the MTD support for spi flash layer, this adapter is for
 	  translating mtd_read/mtd_write commands into spi_flash_read/write
diff --git a/drivers/mtd/spi/spi-nor-ids.c b/drivers/mtd/spi/spi-nor-ids.c
index 6ce75b1..b07542b 100644
--- a/drivers/mtd/spi/spi-nor-ids.c
+++ b/drivers/mtd/spi/spi-nor-ids.c
@@ -120,8 +120,8 @@ const struct flash_info spi_nor_ids[] = {
 	},
 	{
 		INFO("gd25lq128", 0xc86018, 0, 64 * 1024, 256,
-			SECT_4K | SPI_NOR_DUAL_READ |
-			SPI_NOR_HAS_LOCK | SPI_NOR_HAS_TB)
+			SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ |
+			SPI_NOR_HAS_TB)
 	},
 	{	INFO("gd25q256", 0xc84019, 0, 64 * 1024, 512,
 			SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ |
@@ -353,7 +353,7 @@ const struct flash_info spi_nor_ids[] = {
 	{ INFO("w25q64cv", 0xef4017, 0, 64 * 1024,  128, SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ) },
 	{ INFO("w25q128", 0xef4018, 0, 64 * 1024, 256,
 			SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ |
-			SPI_NOR_HAS_LOCK | SPI_NOR_HAS_TB)
+			SPI_NOR_HAS_TB)
 	},
 	{ INFO("w25q256", 0xef4019, 0, 64 * 1024, 512, SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ) },
 	{ INFO("w25m512jw", 0xef6119, 0, 64 * 1024, 1024, SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ) },
@@ -369,6 +369,7 @@ const struct flash_info spi_nor_ids[] = {
 	{ INFO("XM25QH128A", 0x207018, 0, 64 * 1024, 256, SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ) },
 	{ INFO("XM25QH128B", 0x206018, 0, 64 * 1024, 256, SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ) },
 	{ INFO("XM25QH128C", 0x204018, 0, 64 * 1024, 256, SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ) },
+	{ INFO("XM25QH256C", 0x204019, 0, 64 * 1024, 512, SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ) },
 	{ INFO("XM25QU128C", 0x204118, 0, 64 * 1024, 256, SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ) },
 #endif
 #ifdef CONFIG_SPI_FLASH_XTX
@@ -378,6 +379,8 @@ const struct flash_info spi_nor_ids[] = {
 #endif
 #ifdef CONFIG_SPI_FLASH_PUYA
 	/* PUYA Semiconductor (Shanghai) Co., Ltd. */
+	{ INFO("P25Q64H", 0x856017, 0, 64 * 1024, 128, SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ) },
+	{ INFO("P25Q128H", 0x856018, 0, 64 * 1024, 256, SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ) },
 	{ INFO("PY25Q128HA", 0x852018, 0, 64 * 1024, 256, SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ) },
 #endif
 #ifdef CONFIG_SPI_FLASH_FMSH
@@ -391,5 +394,9 @@ const struct flash_info spi_nor_ids[] = {
 	{ INFO("FM25M4AA", 0xf84218, 0, 64 * 1024, 256, SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ) },
 	{ INFO("FM25M64C", 0xf84317, 0, 64 * 1024, 128, SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ) },
 #endif
+#ifdef CONFIG_SPI_FLASH_BOYA
+	/* Boya Microelectronics Co., Ltd. */
+	{ INFO("BY25Q256FSEIG", 0x684919, 0, 64 * 1024, 512, SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ | SPI_NOR_4B_OPCODES) },
+#endif
 	{ },
 };
diff --git a/drivers/net/dwc_eth_qos.c b/drivers/net/dwc_eth_qos.c
index 524093a..ddcbc5c 100644
--- a/drivers/net/dwc_eth_qos.c
+++ b/drivers/net/dwc_eth_qos.c
@@ -1178,6 +1178,7 @@ int eqos_init(struct udevice *dev)
 
 	if (limit < 0) {
 		pr_err("EQOS_DMA_MODE_SWR stuck");
+		ret = -EAGAIN;
 		goto err_stop_resets;
 	}
 
@@ -1207,6 +1208,7 @@ int eqos_init(struct udevice *dev)
 		 eqos->config->ops->eqos_get_interface(dev));
 		if (!eqos->phy) {
 			pr_err("phy_connect() failed");
+			ret = -ENODEV;
 			goto err_stop_resets;
 		}
 
@@ -1233,6 +1235,7 @@ int eqos_init(struct udevice *dev)
 
 	if (!eqos->phy->link) {
 		pr_err("No link");
+		ret = -EINVAL;
 		goto err_shutdown_phy;
 	}
 
diff --git a/drivers/phy/phy-rockchip-samsung-hdptx.c b/drivers/phy/phy-rockchip-samsung-hdptx.c
index 1c75797..4044db6 100644
--- a/drivers/phy/phy-rockchip-samsung-hdptx.c
+++ b/drivers/phy/phy-rockchip-samsung-hdptx.c
@@ -323,7 +323,7 @@
 
 struct rockchip_hdptx_phy {
 	struct udevice *dev;
-	void __iomem *base;
+	struct regmap *regmap;
 	struct regmap *grf;
 
 	struct reset_ctl apb_reset;
@@ -472,32 +472,10 @@ static int rockchip_hdptx_phy_parse_training_table(struct udevice *dev)
 	return 0;
 }
 
-static inline void phy_write(struct rockchip_hdptx_phy *hdptx, uint reg,
-			     uint val)
+static inline void rockchip_grf_write(struct regmap *grf, uint reg, uint mask,
+				      uint val)
 {
-	writel(val, hdptx->base + reg);
-}
-
-static inline uint phy_read(struct rockchip_hdptx_phy *hdptx, uint reg)
-{
-	return readl(hdptx->base + reg);
-}
-
-static void phy_update_bits(struct rockchip_hdptx_phy *hdptx, uint reg,
-			    uint mask, uint val)
-{
-	uint orig, tmp;
-
-	orig = phy_read(hdptx, reg);
-	tmp = orig & ~mask;
-	tmp |= val & mask;
-	phy_write(hdptx, reg, tmp);
-}
-
-static void grf_write(struct rockchip_hdptx_phy *hdptx, uint reg,
-		      uint mask, uint val)
-{
-	regmap_write(hdptx->grf, reg, (mask << 16) | (val & mask));
+	regmap_write(grf, reg, (mask << 16) | (val & mask));
 }
 
 static int rockchip_hdptx_phy_set_mode(struct phy *phy, enum phy_mode mode,
@@ -553,59 +531,61 @@ static void rockchip_hdptx_phy_set_voltage(struct rockchip_hdptx_phy *hdptx,
 	switch (dp->link_rate) {
 	case 1620:
 		ctrl = &tx_drv_ctrl_rbr[dp->voltage[lane]][dp->pre[lane]];
-		phy_update_bits(hdptx, LANE_REG(lane, 0x0c44),
-				LN_TX_SER_40BIT_EN_RBR,
-				FIELD_PREP(LN_TX_SER_40BIT_EN_RBR, 0x1));
+		regmap_update_bits(hdptx->regmap, LANE_REG(lane, 0x0c44),
+				   LN_TX_SER_40BIT_EN_RBR,
+				   FIELD_PREP(LN_TX_SER_40BIT_EN_RBR, 0x1));
 		break;
 	case 2700:
 		ctrl = &tx_drv_ctrl_hbr[dp->voltage[lane]][dp->pre[lane]];
-		phy_update_bits(hdptx, LANE_REG(lane, 0x0c44),
-				LN_TX_SER_40BIT_EN_HBR,
-				FIELD_PREP(LN_TX_SER_40BIT_EN_HBR, 0x1));
+		regmap_update_bits(hdptx->regmap, LANE_REG(lane, 0x0c44),
+				   LN_TX_SER_40BIT_EN_HBR,
+				   FIELD_PREP(LN_TX_SER_40BIT_EN_HBR, 0x1));
 		break;
 	case 5400:
 	default:
 		ctrl = &tx_drv_ctrl_hbr2[dp->voltage[lane]][dp->pre[lane]];
-		phy_update_bits(hdptx, LANE_REG(lane, 0x0c44),
-				LN_TX_SER_40BIT_EN_HBR2,
-				FIELD_PREP(LN_TX_SER_40BIT_EN_HBR2, 0x1));
+		regmap_update_bits(hdptx->regmap, LANE_REG(lane, 0x0c44),
+				   LN_TX_SER_40BIT_EN_HBR2,
+				   FIELD_PREP(LN_TX_SER_40BIT_EN_HBR2, 0x1));
 		break;
 	}
 
-	phy_update_bits(hdptx, LANE_REG(lane, 0x0c0c),
-			OVRD_LN_TX_DRV_LVL_CTRL | LN_TX_DRV_LVL_CTRL,
-			FIELD_PREP(OVRD_LN_TX_DRV_LVL_CTRL, 0x1) |
-			FIELD_PREP(LN_TX_DRV_LVL_CTRL, ctrl->tx_drv_lvl_ctrl));
-
-	phy_update_bits(hdptx, LANE_REG(lane, 0x0c10),
-			OVRD_LN_TX_DRV_POST_LVL_CTRL | LN_TX_DRV_POST_LVL_CTRL,
-			FIELD_PREP(OVRD_LN_TX_DRV_POST_LVL_CTRL, 0x1) |
-			FIELD_PREP(LN_TX_DRV_POST_LVL_CTRL,
-				   ctrl->tx_drv_post_lvl_ctrl));
-
-	phy_update_bits(hdptx, LANE_REG(lane, 0x0c18),
-			LN_ANA_TX_DRV_IDRV_IDN_CTRL |
-			LN_ANA_TX_DRV_IDRV_IUP_CTRL | LN_ANA_TX_DRV_ACCDRV_EN,
-			FIELD_PREP(LN_ANA_TX_DRV_IDRV_IDN_CTRL,
-				   ctrl->ana_tx_drv_idrv_idn_ctrl) |
-			FIELD_PREP(LN_ANA_TX_DRV_IDRV_IUP_CTRL,
-				   ctrl->ana_tx_drv_idrv_iup_ctrl) |
-			FIELD_PREP(LN_ANA_TX_DRV_ACCDRV_EN,
-				   ctrl->ana_tx_drv_accdrv_en));
-
-	phy_update_bits(hdptx, LANE_REG(lane, 0x0c1c),
-			LN_ANA_TX_DRV_ACCDRV_POL_SEL | LN_ANA_TX_DRV_ACCDRV_CTRL,
-			FIELD_PREP(LN_ANA_TX_DRV_ACCDRV_POL_SEL, 0x1) |
-			FIELD_PREP(LN_ANA_TX_DRV_ACCDRV_CTRL,
-				   ctrl->ana_tx_drv_accdrv_ctrl));
-	phy_update_bits(hdptx, LANE_REG(lane, 0x0c6c), LN_ANA_TX_RESERVED,
-			FIELD_PREP(LN_ANA_TX_RESERVED, 0x1));
-	phy_update_bits(hdptx, LANE_REG(lane, 0x0c58),
-			LN_ANA_TX_SER_VREG_GAIN_CTRL,
-			FIELD_PREP(LN_ANA_TX_SER_VREG_GAIN_CTRL, 0x2));
-	phy_update_bits(hdptx, LANE_REG(lane, 0x0c40),
-			LN_ANA_TX_SYNC_LOSS_DET_MODE,
-			FIELD_PREP(LN_ANA_TX_SYNC_LOSS_DET_MODE, 0x3));
+	regmap_update_bits(hdptx->regmap, LANE_REG(lane, 0x0c0c),
+			   OVRD_LN_TX_DRV_LVL_CTRL | LN_TX_DRV_LVL_CTRL,
+			   FIELD_PREP(OVRD_LN_TX_DRV_LVL_CTRL, 0x1) |
+			   FIELD_PREP(LN_TX_DRV_LVL_CTRL,
+				      ctrl->tx_drv_lvl_ctrl));
+	regmap_update_bits(hdptx->regmap, LANE_REG(lane, 0x0c10),
+			   OVRD_LN_TX_DRV_POST_LVL_CTRL |
+			   LN_TX_DRV_POST_LVL_CTRL,
+			   FIELD_PREP(OVRD_LN_TX_DRV_POST_LVL_CTRL, 0x1) |
+			   FIELD_PREP(LN_TX_DRV_POST_LVL_CTRL,
+				      ctrl->tx_drv_post_lvl_ctrl));
+	regmap_update_bits(hdptx->regmap, LANE_REG(lane, 0x0c18),
+			   LN_ANA_TX_DRV_IDRV_IDN_CTRL |
+			   LN_ANA_TX_DRV_IDRV_IUP_CTRL |
+			   LN_ANA_TX_DRV_ACCDRV_EN,
+			   FIELD_PREP(LN_ANA_TX_DRV_IDRV_IDN_CTRL,
+				      ctrl->ana_tx_drv_idrv_idn_ctrl) |
+			   FIELD_PREP(LN_ANA_TX_DRV_IDRV_IUP_CTRL,
+				      ctrl->ana_tx_drv_idrv_iup_ctrl) |
+			   FIELD_PREP(LN_ANA_TX_DRV_ACCDRV_EN,
+				      ctrl->ana_tx_drv_accdrv_en));
+	regmap_update_bits(hdptx->regmap, LANE_REG(lane, 0x0c1c),
+			   LN_ANA_TX_DRV_ACCDRV_POL_SEL |
+			   LN_ANA_TX_DRV_ACCDRV_CTRL,
+			   FIELD_PREP(LN_ANA_TX_DRV_ACCDRV_POL_SEL, 0x1) |
+			   FIELD_PREP(LN_ANA_TX_DRV_ACCDRV_CTRL,
+				      ctrl->ana_tx_drv_accdrv_ctrl));
+	regmap_update_bits(hdptx->regmap, LANE_REG(lane, 0x0c6c),
+			   LN_ANA_TX_RESERVED,
+			   FIELD_PREP(LN_ANA_TX_RESERVED, 0x1));
+	regmap_update_bits(hdptx->regmap, LANE_REG(lane, 0x0c58),
+			   LN_ANA_TX_SER_VREG_GAIN_CTRL,
+			   FIELD_PREP(LN_ANA_TX_SER_VREG_GAIN_CTRL, 0x2));
+	regmap_update_bits(hdptx->regmap, LANE_REG(lane, 0x0c40),
+			   LN_ANA_TX_SYNC_LOSS_DET_MODE,
+			   FIELD_PREP(LN_ANA_TX_SYNC_LOSS_DET_MODE, 0x3));
 }
 
 static int rockchip_hdptx_phy_set_voltages(struct rockchip_hdptx_phy *hdptx,
@@ -629,9 +609,11 @@ static int rockchip_hdptx_phy_set_rate(struct rockchip_hdptx_phy *hdptx,
 	udelay(10);
 	reset_assert(&hdptx->cmn_reset);
 	udelay(10);
-	grf_write(hdptx, HDPTXPHY_GRF_CON0, PLL_EN, FIELD_PREP(PLL_EN, 0x0));
+	rockchip_grf_write(hdptx->grf, HDPTXPHY_GRF_CON0, PLL_EN,
+			   FIELD_PREP(PLL_EN, 0x0));
 	udelay(10);
-	phy_update_bits(hdptx, 0x081c, LANE_EN, FIELD_PREP(LANE_EN, 0x0));
+	regmap_update_bits(hdptx->regmap, 0x081c, LANE_EN,
+			   FIELD_PREP(LANE_EN, 0x0));
 
 	switch (dp->link_rate) {
 	case 1620:
@@ -647,30 +629,39 @@ static int rockchip_hdptx_phy_set_rate(struct rockchip_hdptx_phy *hdptx,
 		return -EINVAL;
 	}
 
-	phy_update_bits(hdptx, 0x0254, DP_TX_LINK_BW,
-			FIELD_PREP(DP_TX_LINK_BW, bw));
+	regmap_update_bits(hdptx->regmap, 0x0254, DP_TX_LINK_BW,
+			   FIELD_PREP(DP_TX_LINK_BW, bw));
 
 	if (dp->ssc) {
-		phy_update_bits(hdptx, 0x01d0, OVRD_ROPLL_SSC_EN | ROPLL_SSC_EN,
-				FIELD_PREP(OVRD_ROPLL_SSC_EN, 0x1) |
-				FIELD_PREP(ROPLL_SSC_EN, 0x1));
-		phy_update_bits(hdptx, 0x01d4, ANA_ROPLL_SSC_FM_DEVIATION,
-				FIELD_PREP(ANA_ROPLL_SSC_FM_DEVIATION, 0xc));
-		phy_update_bits(hdptx, 0x01d8, ANA_ROPLL_SSC_FM_FREQ,
-				FIELD_PREP(ANA_ROPLL_SSC_FM_FREQ, 0x1f));
-		phy_update_bits(hdptx, 0x0264, SSC_EN, FIELD_PREP(SSC_EN, 0x2));
+		regmap_update_bits(hdptx->regmap, 0x01d0,
+				   OVRD_ROPLL_SSC_EN | ROPLL_SSC_EN,
+				   FIELD_PREP(OVRD_ROPLL_SSC_EN, 0x1) |
+				   FIELD_PREP(ROPLL_SSC_EN, 0x1));
+		regmap_update_bits(hdptx->regmap, 0x01d4,
+				   ANA_ROPLL_SSC_FM_DEVIATION,
+				   FIELD_PREP(ANA_ROPLL_SSC_FM_DEVIATION, 0xc));
+		regmap_update_bits(hdptx->regmap, 0x01d8,
+				   ANA_ROPLL_SSC_FM_FREQ,
+				   FIELD_PREP(ANA_ROPLL_SSC_FM_FREQ, 0x1f));
+		regmap_update_bits(hdptx->regmap, 0x0264, SSC_EN,
+				   FIELD_PREP(SSC_EN, 0x2));
 	} else {
-		phy_update_bits(hdptx, 0x01d0, OVRD_ROPLL_SSC_EN | ROPLL_SSC_EN,
-				FIELD_PREP(OVRD_ROPLL_SSC_EN, 0x1) |
-				FIELD_PREP(ROPLL_SSC_EN, 0x0));
-		phy_update_bits(hdptx, 0x01d4, ANA_ROPLL_SSC_FM_DEVIATION,
-				FIELD_PREP(ANA_ROPLL_SSC_FM_DEVIATION, 0x20));
-		phy_update_bits(hdptx, 0x01d8, ANA_ROPLL_SSC_FM_FREQ,
-				FIELD_PREP(ANA_ROPLL_SSC_FM_FREQ, 0xc));
-		phy_update_bits(hdptx, 0x0264, SSC_EN, FIELD_PREP(SSC_EN, 0x0));
+		regmap_update_bits(hdptx->regmap, 0x01d0,
+				   OVRD_ROPLL_SSC_EN | ROPLL_SSC_EN,
+				   FIELD_PREP(OVRD_ROPLL_SSC_EN, 0x1) |
+				   FIELD_PREP(ROPLL_SSC_EN, 0x0));
+		regmap_update_bits(hdptx->regmap, 0x01d4,
+				   ANA_ROPLL_SSC_FM_DEVIATION,
+				   FIELD_PREP(ANA_ROPLL_SSC_FM_DEVIATION, 0x20));
+		regmap_update_bits(hdptx->regmap, 0x01d8,
+				   ANA_ROPLL_SSC_FM_FREQ,
+				   FIELD_PREP(ANA_ROPLL_SSC_FM_FREQ, 0xc));
+		regmap_update_bits(hdptx->regmap, 0x0264, SSC_EN,
+				   FIELD_PREP(SSC_EN, 0x0));
 	}
 
-	grf_write(hdptx, HDPTXPHY_GRF_CON0, PLL_EN, FIELD_PREP(PLL_EN, 0x1));
+	rockchip_grf_write(hdptx->grf, HDPTXPHY_GRF_CON0, PLL_EN,
+			   FIELD_PREP(PLL_EN, 0x1));
 	udelay(10);
 	reset_deassert(&hdptx->cmn_reset);
 	udelay(10);
@@ -683,8 +674,8 @@ static int rockchip_hdptx_phy_set_rate(struct rockchip_hdptx_phy *hdptx,
 		return ret;
 	}
 
-	phy_update_bits(hdptx, 0x081c, LANE_EN,
-			FIELD_PREP(LANE_EN, GENMASK(dp->lanes - 1, 0)));
+	regmap_update_bits(hdptx->regmap, 0x081c, LANE_EN,
+			   FIELD_PREP(LANE_EN, GENMASK(dp->lanes - 1, 0)));
 
 	reset_deassert(&hdptx->lane_reset);
 	udelay(10);
@@ -738,118 +729,125 @@ static int rockchip_hdptx_phy_configure(struct phy *phy,
 
 static void rockchip_hdptx_phy_dp_pll_init(struct rockchip_hdptx_phy *hdptx)
 {
-	phy_update_bits(hdptx, 0x0020, OVRD_LCPLL_EN | LCPLL_EN,
-			FIELD_PREP(OVRD_LCPLL_EN, 0x1) |
-			FIELD_PREP(LCPLL_EN, 0x0));
-	phy_update_bits(hdptx, 0x00f4, OVRD_ROPLL_EN | ROPLL_EN,
-			FIELD_PREP(OVRD_ROPLL_EN, 0x1) |
-			FIELD_PREP(ROPLL_EN, 0x1));
-	phy_update_bits(hdptx, 0x0138, ANA_ROPLL_PI_EN,
-			FIELD_PREP(ANA_ROPLL_PI_EN, 0x1));
-
-	phy_write(hdptx, 0x0144, FIELD_PREP(ROPLL_PMS_MDIV, 0x87));
-	phy_write(hdptx, 0x0148, FIELD_PREP(ROPLL_PMS_MDIV, 0x71));
-	phy_write(hdptx, 0x014c, FIELD_PREP(ROPLL_PMS_MDIV, 0x71));
-
-	phy_write(hdptx, 0x0154, FIELD_PREP(ROPLL_PMS_MDIV_AFC, 0x87));
-	phy_write(hdptx, 0x0158, FIELD_PREP(ROPLL_PMS_MDIV_AFC, 0x71));
-	phy_write(hdptx, 0x015c, FIELD_PREP(ROPLL_PMS_MDIV_AFC, 0x71));
-
-	phy_write(hdptx, 0x0164, FIELD_PREP(ANA_ROPLL_PMS_PDIV, 0x1) |
-		  FIELD_PREP(ANA_ROPLL_PMS_REFDIV, 0x1));
-
-	phy_write(hdptx, 0x0168, FIELD_PREP(ROPLL_PMS_SDIV_RBR, 0x3) |
-		  FIELD_PREP(ROPLL_PMS_SDIV_HBR, 0x1));
-	phy_update_bits(hdptx, 0x016c, ROPLL_PMS_SDIV_HBR2,
-			FIELD_PREP(ROPLL_PMS_SDIV_HBR2, 0x0));
-
-	phy_update_bits(hdptx, 0x0178, ANA_ROPLL_SDM_EN,
-			FIELD_PREP(ANA_ROPLL_SDM_EN, 0x1));
-	phy_update_bits(hdptx, 0x0178, OVRD_ROPLL_SDM_RSTN | ROPLL_SDM_RSTN,
-			FIELD_PREP(OVRD_ROPLL_SDM_RSTN, 0x1) |
-			FIELD_PREP(ROPLL_SDM_RSTN, 0x1));
-	phy_update_bits(hdptx, 0x0178, ROPLL_SDC_FRACTIONAL_EN_RBR,
-			FIELD_PREP(ROPLL_SDC_FRACTIONAL_EN_RBR, 0x1));
-	phy_update_bits(hdptx, 0x0178, ROPLL_SDC_FRACTIONAL_EN_HBR,
-			FIELD_PREP(ROPLL_SDC_FRACTIONAL_EN_HBR, 0x1));
-	phy_update_bits(hdptx, 0x0178, ROPLL_SDC_FRACTIONAL_EN_HBR2,
-			FIELD_PREP(ROPLL_SDC_FRACTIONAL_EN_HBR2, 0x1));
-	phy_update_bits(hdptx, 0x017c, OVRD_ROPLL_SDC_RSTN | ROPLL_SDC_RSTN,
-			FIELD_PREP(OVRD_ROPLL_SDC_RSTN, 0x1) |
-			FIELD_PREP(ROPLL_SDC_RSTN, 0x1));
-
-	phy_write(hdptx, 0x0180, FIELD_PREP(ROPLL_SDM_DENOMINATOR, 0x21));
-	phy_write(hdptx, 0x0184, FIELD_PREP(ROPLL_SDM_DENOMINATOR, 0x27));
-	phy_write(hdptx, 0x0188, FIELD_PREP(ROPLL_SDM_DENOMINATOR, 0x27));
-
-	phy_update_bits(hdptx, 0x0190, ROPLL_SDM_NUMERATOR_SIGN_RBR |
-			ROPLL_SDM_NUMERATOR_SIGN_HBR |
-			ROPLL_SDM_NUMERATOR_SIGN_HBR2,
-			FIELD_PREP(ROPLL_SDM_NUMERATOR_SIGN_RBR, 0x0) |
-			FIELD_PREP(ROPLL_SDM_NUMERATOR_SIGN_HBR, 0x1) |
-			FIELD_PREP(ROPLL_SDM_NUMERATOR_SIGN_HBR2, 0x1));
-
-	phy_write(hdptx, 0x0194, FIELD_PREP(ROPLL_SDM_NUMERATOR, 0x0));
-	phy_write(hdptx, 0x0198, FIELD_PREP(ROPLL_SDM_NUMERATOR, 0xd));
-	phy_write(hdptx, 0x019c, FIELD_PREP(ROPLL_SDM_NUMERATOR, 0xd));
-
-	phy_update_bits(hdptx, 0x01a4, ROPLL_SDC_N_RBR,
-			FIELD_PREP(ROPLL_SDC_N_RBR, 0x2));
-	phy_update_bits(hdptx, 0x01a8, ROPLL_SDC_N_HBR | ROPLL_SDC_N_HBR2,
-			FIELD_PREP(ROPLL_SDC_N_HBR, 0x1) |
-			FIELD_PREP(ROPLL_SDC_N_HBR2, 0x1));
-
-	phy_write(hdptx, 0x01b0, FIELD_PREP(ROPLL_SDC_NUMERATOR, 0x3));
-	phy_write(hdptx, 0x01b4, FIELD_PREP(ROPLL_SDC_NUMERATOR, 0x7));
-	phy_write(hdptx, 0x01b8, FIELD_PREP(ROPLL_SDC_NUMERATOR, 0x7));
-
-	phy_write(hdptx, 0x01c0, FIELD_PREP(ROPLL_SDC_DENOMINATOR, 0x8));
-	phy_write(hdptx, 0x01c4, FIELD_PREP(ROPLL_SDC_DENOMINATOR, 0x18));
-	phy_write(hdptx, 0x01c8, FIELD_PREP(ROPLL_SDC_DENOMINATOR, 0x18));
-
-	phy_update_bits(hdptx, 0x01d0, OVRD_ROPLL_SDC_NDIV_RSTN |
-			ROPLL_SDC_NDIV_RSTN,
-			FIELD_PREP(OVRD_ROPLL_SDC_NDIV_RSTN, 0x1) |
-			FIELD_PREP(ROPLL_SDC_NDIV_RSTN, 0x1));
-	phy_update_bits(hdptx, 0x01dc, ANA_ROPLL_SSC_CLK_DIV_SEL,
-			FIELD_PREP(ANA_ROPLL_SSC_CLK_DIV_SEL, 0x1));
-
-	phy_update_bits(hdptx, 0x0118, ROPLL_ANA_CPP_CTRL_COARSE |
-			ROPLL_ANA_CPP_CTRL_FINE,
-			FIELD_PREP(ROPLL_ANA_CPP_CTRL_COARSE, 0xe) |
-			FIELD_PREP(ROPLL_ANA_CPP_CTRL_FINE, 0xe));
-	phy_update_bits(hdptx, 0x011c, ROPLL_ANA_LPF_C_SEL_COARSE |
-			ROPLL_ANA_LPF_C_SEL_FINE,
-			FIELD_PREP(ROPLL_ANA_LPF_C_SEL_COARSE, 0x4) |
-			FIELD_PREP(ROPLL_ANA_LPF_C_SEL_FINE, 0x4));
-
-	phy_update_bits(hdptx, 0x0204, ANA_PLL_CD_TX_SER_RATE_SEL,
-			FIELD_PREP(ANA_PLL_CD_TX_SER_RATE_SEL, 0x0));
-
-	phy_update_bits(hdptx, 0x025c, DIG_CLK_SEL,
-			FIELD_PREP(DIG_CLK_SEL, 0x1));
-	phy_update_bits(hdptx, 0x021c, ANA_PLL_TX_HS_CLK_EN,
-			FIELD_PREP(ANA_PLL_TX_HS_CLK_EN, 0x1));
-	phy_update_bits(hdptx, 0x0204, ANA_PLL_CD_HSCLK_EAST_EN |
-			ANA_PLL_CD_HSCLK_WEST_EN,
-			FIELD_PREP(ANA_PLL_CD_HSCLK_EAST_EN, 0x1) |
-			FIELD_PREP(ANA_PLL_CD_HSCLK_WEST_EN, 0x0));
-	phy_update_bits(hdptx, 0x0264, CMN_ROPLL_ALONE_MODE,
-			FIELD_PREP(CMN_ROPLL_ALONE_MODE, 0x1));
-	phy_update_bits(hdptx, 0x0208, ANA_PLL_CD_VREG_GAIN_CTRL,
-			FIELD_PREP(ANA_PLL_CD_VREG_GAIN_CTRL, 0x4));
-	phy_update_bits(hdptx, 0x00f0, ANA_LCPLL_RESERVED7,
-			FIELD_PREP(ANA_LCPLL_RESERVED7, 0x1));
-	phy_update_bits(hdptx, 0x020c, ANA_PLL_CD_VREG_ICTRL,
-			FIELD_PREP(ANA_PLL_CD_VREG_ICTRL, 0x1));
-	phy_update_bits(hdptx, 0x0214, ANA_PLL_SYNC_LOSS_DET_MODE,
-			FIELD_PREP(ANA_PLL_SYNC_LOSS_DET_MODE, 0x3));
-	phy_update_bits(hdptx, 0x0210, PLL_LCRO_CLK_SEL,
-			FIELD_PREP(PLL_LCRO_CLK_SEL, 0x1));
-	phy_update_bits(hdptx, 0x0268, HS_SPEED_SEL,
-			FIELD_PREP(HS_SPEED_SEL, 0x1));
-	phy_update_bits(hdptx, 0x026c, LS_SPEED_SEL,
-			FIELD_PREP(LS_SPEED_SEL, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0020, OVRD_LCPLL_EN | LCPLL_EN,
+			   FIELD_PREP(OVRD_LCPLL_EN, 0x1) |
+			   FIELD_PREP(LCPLL_EN, 0x0));
+	regmap_update_bits(hdptx->regmap, 0x00f4, OVRD_ROPLL_EN | ROPLL_EN,
+			   FIELD_PREP(OVRD_ROPLL_EN, 0x1) |
+			   FIELD_PREP(ROPLL_EN, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0138, ANA_ROPLL_PI_EN,
+			   FIELD_PREP(ANA_ROPLL_PI_EN, 0x1));
+	regmap_write(hdptx->regmap, 0x0144, FIELD_PREP(ROPLL_PMS_MDIV, 0x87));
+	regmap_write(hdptx->regmap, 0x0148, FIELD_PREP(ROPLL_PMS_MDIV, 0x71));
+	regmap_write(hdptx->regmap, 0x014c, FIELD_PREP(ROPLL_PMS_MDIV, 0x71));
+	regmap_write(hdptx->regmap, 0x0154,
+		     FIELD_PREP(ROPLL_PMS_MDIV_AFC, 0x87));
+	regmap_write(hdptx->regmap, 0x0158,
+		     FIELD_PREP(ROPLL_PMS_MDIV_AFC, 0x71));
+	regmap_write(hdptx->regmap, 0x015c,
+		     FIELD_PREP(ROPLL_PMS_MDIV_AFC, 0x71));
+	regmap_write(hdptx->regmap, 0x0164,
+		     FIELD_PREP(ANA_ROPLL_PMS_PDIV, 0x1) |
+		     FIELD_PREP(ANA_ROPLL_PMS_REFDIV, 0x1));
+	regmap_write(hdptx->regmap, 0x0168,
+		     FIELD_PREP(ROPLL_PMS_SDIV_RBR, 0x3) |
+		     FIELD_PREP(ROPLL_PMS_SDIV_HBR, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x016c, ROPLL_PMS_SDIV_HBR2,
+			   FIELD_PREP(ROPLL_PMS_SDIV_HBR2, 0x0));
+	regmap_update_bits(hdptx->regmap, 0x0178, ANA_ROPLL_SDM_EN,
+			   FIELD_PREP(ANA_ROPLL_SDM_EN, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0178,
+			   OVRD_ROPLL_SDM_RSTN | ROPLL_SDM_RSTN,
+			   FIELD_PREP(OVRD_ROPLL_SDM_RSTN, 0x1) |
+			   FIELD_PREP(ROPLL_SDM_RSTN, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0178, ROPLL_SDC_FRACTIONAL_EN_RBR,
+			   FIELD_PREP(ROPLL_SDC_FRACTIONAL_EN_RBR, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0178, ROPLL_SDC_FRACTIONAL_EN_HBR,
+			   FIELD_PREP(ROPLL_SDC_FRACTIONAL_EN_HBR, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0178, ROPLL_SDC_FRACTIONAL_EN_HBR2,
+			   FIELD_PREP(ROPLL_SDC_FRACTIONAL_EN_HBR2, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x017c,
+			   OVRD_ROPLL_SDC_RSTN | ROPLL_SDC_RSTN,
+			   FIELD_PREP(OVRD_ROPLL_SDC_RSTN, 0x1) |
+			   FIELD_PREP(ROPLL_SDC_RSTN, 0x1));
+	regmap_write(hdptx->regmap, 0x0180,
+		     FIELD_PREP(ROPLL_SDM_DENOMINATOR, 0x21));
+	regmap_write(hdptx->regmap, 0x0184,
+		     FIELD_PREP(ROPLL_SDM_DENOMINATOR, 0x27));
+	regmap_write(hdptx->regmap, 0x0188,
+		     FIELD_PREP(ROPLL_SDM_DENOMINATOR, 0x27));
+	regmap_update_bits(hdptx->regmap, 0x0190,
+			   ROPLL_SDM_NUMERATOR_SIGN_RBR |
+			   ROPLL_SDM_NUMERATOR_SIGN_HBR |
+			   ROPLL_SDM_NUMERATOR_SIGN_HBR2,
+			   FIELD_PREP(ROPLL_SDM_NUMERATOR_SIGN_RBR, 0x0) |
+			   FIELD_PREP(ROPLL_SDM_NUMERATOR_SIGN_HBR, 0x1) |
+			   FIELD_PREP(ROPLL_SDM_NUMERATOR_SIGN_HBR2, 0x1));
+	regmap_write(hdptx->regmap, 0x0194,
+		     FIELD_PREP(ROPLL_SDM_NUMERATOR, 0x0));
+	regmap_write(hdptx->regmap, 0x0198,
+		     FIELD_PREP(ROPLL_SDM_NUMERATOR, 0xd));
+	regmap_write(hdptx->regmap, 0x019c,
+		     FIELD_PREP(ROPLL_SDM_NUMERATOR, 0xd));
+	regmap_update_bits(hdptx->regmap, 0x01a4, ROPLL_SDC_N_RBR,
+			   FIELD_PREP(ROPLL_SDC_N_RBR, 0x2));
+	regmap_update_bits(hdptx->regmap, 0x01a8,
+			   ROPLL_SDC_N_HBR | ROPLL_SDC_N_HBR2,
+			   FIELD_PREP(ROPLL_SDC_N_HBR, 0x2) |
+			   FIELD_PREP(ROPLL_SDC_N_HBR2, 0x2));
+	regmap_write(hdptx->regmap, 0x01b0,
+		     FIELD_PREP(ROPLL_SDC_NUMERATOR, 0x3));
+	regmap_write(hdptx->regmap, 0x01b4,
+		     FIELD_PREP(ROPLL_SDC_NUMERATOR, 0x7));
+	regmap_write(hdptx->regmap, 0x01b8,
+		     FIELD_PREP(ROPLL_SDC_NUMERATOR, 0x7));
+	regmap_write(hdptx->regmap, 0x01c0,
+		     FIELD_PREP(ROPLL_SDC_DENOMINATOR, 0x8));
+	regmap_write(hdptx->regmap, 0x01c4,
+		     FIELD_PREP(ROPLL_SDC_DENOMINATOR, 0x18));
+	regmap_write(hdptx->regmap, 0x01c8,
+		     FIELD_PREP(ROPLL_SDC_DENOMINATOR, 0x18));
+	regmap_update_bits(hdptx->regmap, 0x01d0,
+			   OVRD_ROPLL_SDC_NDIV_RSTN | ROPLL_SDC_NDIV_RSTN,
+			   FIELD_PREP(OVRD_ROPLL_SDC_NDIV_RSTN, 0x1) |
+			   FIELD_PREP(ROPLL_SDC_NDIV_RSTN, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x01dc, ANA_ROPLL_SSC_CLK_DIV_SEL,
+			   FIELD_PREP(ANA_ROPLL_SSC_CLK_DIV_SEL, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0118,
+			   ROPLL_ANA_CPP_CTRL_COARSE | ROPLL_ANA_CPP_CTRL_FINE,
+			   FIELD_PREP(ROPLL_ANA_CPP_CTRL_COARSE, 0xe) |
+			   FIELD_PREP(ROPLL_ANA_CPP_CTRL_FINE, 0xe));
+	regmap_update_bits(hdptx->regmap, 0x011c,
+			   ROPLL_ANA_LPF_C_SEL_COARSE |
+			   ROPLL_ANA_LPF_C_SEL_FINE,
+			   FIELD_PREP(ROPLL_ANA_LPF_C_SEL_COARSE, 0x4) |
+			   FIELD_PREP(ROPLL_ANA_LPF_C_SEL_FINE, 0x4));
+	regmap_update_bits(hdptx->regmap, 0x0204, ANA_PLL_CD_TX_SER_RATE_SEL,
+			   FIELD_PREP(ANA_PLL_CD_TX_SER_RATE_SEL, 0x0));
+	regmap_update_bits(hdptx->regmap, 0x025c, DIG_CLK_SEL,
+			   FIELD_PREP(DIG_CLK_SEL, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x021c, ANA_PLL_TX_HS_CLK_EN,
+			   FIELD_PREP(ANA_PLL_TX_HS_CLK_EN, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0204,
+			   ANA_PLL_CD_HSCLK_EAST_EN | ANA_PLL_CD_HSCLK_WEST_EN,
+			   FIELD_PREP(ANA_PLL_CD_HSCLK_EAST_EN, 0x1) |
+			   FIELD_PREP(ANA_PLL_CD_HSCLK_WEST_EN, 0x0));
+	regmap_update_bits(hdptx->regmap, 0x0264, CMN_ROPLL_ALONE_MODE,
+			   FIELD_PREP(CMN_ROPLL_ALONE_MODE, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0208, ANA_PLL_CD_VREG_GAIN_CTRL,
+			   FIELD_PREP(ANA_PLL_CD_VREG_GAIN_CTRL, 0x4));
+	regmap_update_bits(hdptx->regmap, 0x00f0, ANA_LCPLL_RESERVED7,
+			   FIELD_PREP(ANA_LCPLL_RESERVED7, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x020c, ANA_PLL_CD_VREG_ICTRL,
+			   FIELD_PREP(ANA_PLL_CD_VREG_ICTRL, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0214, ANA_PLL_SYNC_LOSS_DET_MODE,
+			   FIELD_PREP(ANA_PLL_SYNC_LOSS_DET_MODE, 0x3));
+	regmap_update_bits(hdptx->regmap, 0x0210, PLL_LCRO_CLK_SEL,
+			   FIELD_PREP(PLL_LCRO_CLK_SEL, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0268, HS_SPEED_SEL,
+			   FIELD_PREP(HS_SPEED_SEL, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x026c, LS_SPEED_SEL,
+			   FIELD_PREP(LS_SPEED_SEL, 0x1));
 }
 
 static int rockchip_hdptx_phy_dp_aux_init(struct rockchip_hdptx_phy *hdptx)
@@ -857,89 +855,98 @@ static int rockchip_hdptx_phy_dp_aux_init(struct rockchip_hdptx_phy *hdptx)
 	u32 status;
 	int ret;
 
-	phy_update_bits(hdptx, 0x0414, ANA_SB_TX_HLVL_PROG,
-			FIELD_PREP(ANA_SB_TX_HLVL_PROG, 0x7));
-	phy_update_bits(hdptx, 0x0418, ANA_SB_TX_LLVL_PROG,
-			FIELD_PREP(ANA_SB_TX_LLVL_PROG, 0x7));
-
-	phy_update_bits(hdptx, 0x044c, SB_RX_RCAL_OPT_CODE | SB_RX_RTERM_CTRL,
-			FIELD_PREP(SB_RX_RCAL_OPT_CODE, 0x1) |
-			FIELD_PREP(SB_RX_RTERM_CTRL, 0x3));
-	phy_update_bits(hdptx, 0x0450, SB_TG_SB_EN_DELAY_TIME |
-			SB_TG_RXTERN_EN_DELAY_TIME,
-			FIELD_PREP(SB_TG_SB_EN_DELAY_TIME, 0x2) |
-			FIELD_PREP(SB_TG_RXTERN_EN_DELAY_TIME, 0x2));
-	phy_update_bits(hdptx, 0x0454, SB_READY_DELAY_TIME |
-			SB_TG_OSC_EN_DELAY_TIME,
-			FIELD_PREP(SB_READY_DELAY_TIME, 0x2) |
-			FIELD_PREP(SB_TG_OSC_EN_DELAY_TIME, 0x2));
-	phy_update_bits(hdptx, 0x0458, SB_TG_OSC_EN_TO_AFC_RSTN_DELAT_TIME,
-			FIELD_PREP(SB_TG_OSC_EN_TO_AFC_RSTN_DELAT_TIME, 0x2));
-	phy_update_bits(hdptx, 0x045c, SB_TG_PLL_CD_VREG_FAST_PULSE_TIME,
-			FIELD_PREP(SB_TG_PLL_CD_VREG_FAST_PULSE_TIME, 0x4));
-	phy_update_bits(hdptx, 0x0460, SB_TG_EARC_DMRX_RECVRD_CLK_CNT,
-			FIELD_PREP(SB_TG_EARC_DMRX_RECVRD_CLK_CNT, 0xa));
-	phy_update_bits(hdptx, 0x0468, SB_TG_CNT_RUN_NO_7_0,
-			FIELD_PREP(SB_TG_CNT_RUN_NO_7_0, 0x3));
-	phy_update_bits(hdptx, 0x046c, SB_EARC_SIG_DET_BYPASS | SB_AFC_TOL,
-			FIELD_PREP(SB_EARC_SIG_DET_BYPASS, 0x1) |
-			FIELD_PREP(SB_AFC_TOL, 0x3));
-	phy_update_bits(hdptx, 0x0470, SB_AFC_STB_NUM,
-			FIELD_PREP(SB_AFC_STB_NUM, 0x4));
-	phy_update_bits(hdptx, 0x0474, SB_TG_OSC_CNT_MIN,
-			FIELD_PREP(SB_TG_OSC_CNT_MIN, 0x67));
-	phy_update_bits(hdptx, 0x0478, SB_TG_OSC_CNT_MAX,
-			FIELD_PREP(SB_TG_OSC_CNT_MAX, 0x6a));
-	phy_update_bits(hdptx, 0x047c, SB_PWM_AFC_CTRL,
-			FIELD_PREP(SB_PWM_AFC_CTRL, 0x5));
-	phy_update_bits(hdptx, 0x0434, ANA_SB_DMRX_LPBK_DATA,
-			FIELD_PREP(ANA_SB_DMRX_LPBK_DATA, 0x1));
-	phy_update_bits(hdptx, 0x0440, ANA_SB_VREG_OUT_SEL |
-			ANA_SB_VREG_REF_SEL,
-			FIELD_PREP(ANA_SB_VREG_OUT_SEL, 0x1) |
-			FIELD_PREP(ANA_SB_VREG_REF_SEL, 0x1));
-	phy_update_bits(hdptx, 0x043c, ANA_SB_VREG_GAIN_CTRL,
-			FIELD_PREP(ANA_SB_VREG_GAIN_CTRL, 0x0));
-	phy_update_bits(hdptx, 0x0408, ANA_SB_RXTERM_OFFSP,
-			FIELD_PREP(ANA_SB_RXTERM_OFFSP, 0x3));
-	phy_update_bits(hdptx, 0x040c, ANA_SB_RXTERM_OFFSN,
-			FIELD_PREP(ANA_SB_RXTERM_OFFSN, 0x3));
-	phy_update_bits(hdptx, 0x047c, SB_RCAL_RSTN,
-			FIELD_PREP(SB_RCAL_RSTN, 0x1));
-	phy_update_bits(hdptx, 0x0410, SB_AUX_EN,
-			FIELD_PREP(SB_AUX_EN, 0x1));
-	phy_update_bits(hdptx, 0x0480, SB_AUX_EN_IN,
-			FIELD_PREP(SB_AUX_EN_IN, 0x1));
-	phy_update_bits(hdptx, 0x040c, OVRD_SB_RX_RESCAL_DONE,
-			FIELD_PREP(OVRD_SB_RX_RESCAL_DONE, 0x1));
-	phy_update_bits(hdptx, 0x0410, OVRD_SB_EN,
-			FIELD_PREP(OVRD_SB_EN, 0x1));
-	phy_update_bits(hdptx, 0x0408, OVRD_SB_RXTERM_EN,
-			FIELD_PREP(OVRD_SB_RXTERM_EN, 0x1));
-	phy_update_bits(hdptx, 0x043c, OVRD_SB_VREG_EN,
-			FIELD_PREP(OVRD_SB_VREG_EN, 0x1));
-	phy_update_bits(hdptx, 0x0410, OVRD_SB_AUX_EN,
-			FIELD_PREP(OVRD_SB_AUX_EN, 0x1));
-
-	grf_write(hdptx, HDPTXPHY_GRF_CON0, BGR_EN, FIELD_PREP(BGR_EN, 0x1));
-	grf_write(hdptx, HDPTXPHY_GRF_CON0, BIAS_EN, FIELD_PREP(BIAS_EN, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0414, ANA_SB_TX_HLVL_PROG,
+			   FIELD_PREP(ANA_SB_TX_HLVL_PROG, 0x7));
+	regmap_update_bits(hdptx->regmap, 0x0418, ANA_SB_TX_LLVL_PROG,
+			   FIELD_PREP(ANA_SB_TX_LLVL_PROG, 0x7));
+	regmap_update_bits(hdptx->regmap, 0x044c,
+			   SB_RX_RCAL_OPT_CODE | SB_RX_RTERM_CTRL,
+			   FIELD_PREP(SB_RX_RCAL_OPT_CODE, 0x1) |
+			   FIELD_PREP(SB_RX_RTERM_CTRL, 0x3));
+	regmap_update_bits(hdptx->regmap, 0x0450,
+			   SB_TG_SB_EN_DELAY_TIME | SB_TG_RXTERN_EN_DELAY_TIME,
+			   FIELD_PREP(SB_TG_SB_EN_DELAY_TIME, 0x2) |
+			   FIELD_PREP(SB_TG_RXTERN_EN_DELAY_TIME, 0x2));
+	regmap_update_bits(hdptx->regmap, 0x0454,
+			   SB_READY_DELAY_TIME | SB_TG_OSC_EN_DELAY_TIME,
+			   FIELD_PREP(SB_READY_DELAY_TIME, 0x2) |
+			   FIELD_PREP(SB_TG_OSC_EN_DELAY_TIME, 0x2));
+	regmap_update_bits(hdptx->regmap, 0x0458,
+			   SB_TG_OSC_EN_TO_AFC_RSTN_DELAT_TIME,
+			   FIELD_PREP(SB_TG_OSC_EN_TO_AFC_RSTN_DELAT_TIME, 0x2));
+	regmap_update_bits(hdptx->regmap, 0x045c,
+			   SB_TG_PLL_CD_VREG_FAST_PULSE_TIME,
+			   FIELD_PREP(SB_TG_PLL_CD_VREG_FAST_PULSE_TIME, 0x4));
+	regmap_update_bits(hdptx->regmap, 0x0460,
+			   SB_TG_EARC_DMRX_RECVRD_CLK_CNT,
+			   FIELD_PREP(SB_TG_EARC_DMRX_RECVRD_CLK_CNT, 0xa));
+	regmap_update_bits(hdptx->regmap, 0x0468, SB_TG_CNT_RUN_NO_7_0,
+			   FIELD_PREP(SB_TG_CNT_RUN_NO_7_0, 0x3));
+	regmap_update_bits(hdptx->regmap, 0x046c,
+			   SB_EARC_SIG_DET_BYPASS | SB_AFC_TOL,
+			   FIELD_PREP(SB_EARC_SIG_DET_BYPASS, 0x1) |
+			   FIELD_PREP(SB_AFC_TOL, 0x3));
+	regmap_update_bits(hdptx->regmap, 0x0470, SB_AFC_STB_NUM,
+			   FIELD_PREP(SB_AFC_STB_NUM, 0x4));
+	regmap_update_bits(hdptx->regmap, 0x0474, SB_TG_OSC_CNT_MIN,
+			   FIELD_PREP(SB_TG_OSC_CNT_MIN, 0x67));
+	regmap_update_bits(hdptx->regmap, 0x0478, SB_TG_OSC_CNT_MAX,
+			   FIELD_PREP(SB_TG_OSC_CNT_MAX, 0x6a));
+	regmap_update_bits(hdptx->regmap, 0x047c, SB_PWM_AFC_CTRL,
+			   FIELD_PREP(SB_PWM_AFC_CTRL, 0x5));
+	regmap_update_bits(hdptx->regmap, 0x0434, ANA_SB_DMRX_LPBK_DATA,
+			   FIELD_PREP(ANA_SB_DMRX_LPBK_DATA, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0440,
+			   ANA_SB_VREG_OUT_SEL | ANA_SB_VREG_REF_SEL,
+			   FIELD_PREP(ANA_SB_VREG_OUT_SEL, 0x1) |
+			   FIELD_PREP(ANA_SB_VREG_REF_SEL, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x043c, ANA_SB_VREG_GAIN_CTRL,
+			   FIELD_PREP(ANA_SB_VREG_GAIN_CTRL, 0x0));
+	regmap_update_bits(hdptx->regmap, 0x0408, ANA_SB_RXTERM_OFFSP,
+			   FIELD_PREP(ANA_SB_RXTERM_OFFSP, 0x3));
+	regmap_update_bits(hdptx->regmap, 0x040c, ANA_SB_RXTERM_OFFSN,
+			   FIELD_PREP(ANA_SB_RXTERM_OFFSN, 0x3));
+	regmap_update_bits(hdptx->regmap, 0x047c, SB_RCAL_RSTN,
+			   FIELD_PREP(SB_RCAL_RSTN, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0410, SB_AUX_EN,
+			   FIELD_PREP(SB_AUX_EN, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0480, SB_AUX_EN_IN,
+			   FIELD_PREP(SB_AUX_EN_IN, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x040c, OVRD_SB_RX_RESCAL_DONE,
+			   FIELD_PREP(OVRD_SB_RX_RESCAL_DONE, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0410, OVRD_SB_EN,
+			   FIELD_PREP(OVRD_SB_EN, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0408, OVRD_SB_RXTERM_EN,
+			   FIELD_PREP(OVRD_SB_RXTERM_EN, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x043c, OVRD_SB_VREG_EN,
+			   FIELD_PREP(OVRD_SB_VREG_EN, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0410, OVRD_SB_AUX_EN,
+			   FIELD_PREP(OVRD_SB_AUX_EN, 0x1));
+
+	rockchip_grf_write(hdptx->grf, HDPTXPHY_GRF_CON0, BGR_EN,
+			   FIELD_PREP(BGR_EN, 0x1));
+	rockchip_grf_write(hdptx->grf, HDPTXPHY_GRF_CON0, BIAS_EN,
+			   FIELD_PREP(BIAS_EN, 0x1));
 	udelay(10);
 	reset_deassert(&hdptx->init_reset);
 	udelay(1000);
 	reset_deassert(&hdptx->cmn_reset);
 	udelay(20);
 
-	phy_update_bits(hdptx, 0x040c, SB_RX_RESCAL_DONE,
-			FIELD_PREP(SB_RX_RESCAL_DONE, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x040c, SB_RX_RESCAL_DONE,
+			   FIELD_PREP(SB_RX_RESCAL_DONE, 0x1));
 	udelay(100);
-	phy_update_bits(hdptx, 0x0410, SB_EN, FIELD_PREP(SB_EN, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0410, SB_EN,
+			   FIELD_PREP(SB_EN, 0x1));
 	udelay(100);
-	phy_update_bits(hdptx, 0x0408, SB_RXRERM_EN,
-			FIELD_PREP(SB_RXRERM_EN, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0408, SB_RXRERM_EN,
+			   FIELD_PREP(SB_RXRERM_EN, 0x1));
 	udelay(10);
-	phy_update_bits(hdptx, 0x043c, SB_VREG_EN, FIELD_PREP(SB_VREG_EN, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x043c, SB_VREG_EN,
+			   FIELD_PREP(SB_VREG_EN, 0x1));
 	udelay(10);
-	phy_update_bits(hdptx, 0x0410, SB_AUX_EN, FIELD_PREP(SB_AUX_EN, 0x1));
+	regmap_update_bits(hdptx->regmap, 0x0410, SB_AUX_EN,
+			   FIELD_PREP(SB_AUX_EN, 0x1));
 	udelay(100);
 
 	ret = regmap_read_poll_timeout(hdptx->grf, HDPTXPHY_GRF_STATUS0,
@@ -966,14 +973,17 @@ static void rockchip_hdptx_phy_reset(struct rockchip_hdptx_phy *hdptx)
 	reset_deassert(&hdptx->apb_reset);
 
 	for (lane = 0; lane < 4; lane++)
-		phy_update_bits(hdptx, LANE_REG(lane, 0x0c04),
-				OVRD_LN_TX_DRV_EI_EN | LN_TX_DRV_EI_EN,
-				FIELD_PREP(OVRD_LN_TX_DRV_EI_EN, 1) |
-				FIELD_PREP(LN_TX_DRV_EI_EN, 0));
-
-	grf_write(hdptx, HDPTXPHY_GRF_CON0, PLL_EN, FIELD_PREP(PLL_EN, 0));
-	grf_write(hdptx, HDPTXPHY_GRF_CON0, BIAS_EN, FIELD_PREP(BIAS_EN, 0));
-	grf_write(hdptx, HDPTXPHY_GRF_CON0, BGR_EN, FIELD_PREP(BGR_EN, 0));
+		regmap_update_bits(hdptx->regmap, LANE_REG(lane, 0x0c04),
+				   OVRD_LN_TX_DRV_EI_EN | LN_TX_DRV_EI_EN,
+				   FIELD_PREP(OVRD_LN_TX_DRV_EI_EN, 1) |
+				   FIELD_PREP(LN_TX_DRV_EI_EN, 0));
+
+	rockchip_grf_write(hdptx->grf, HDPTXPHY_GRF_CON0, PLL_EN,
+			   FIELD_PREP(PLL_EN, 0));
+	rockchip_grf_write(hdptx->grf, HDPTXPHY_GRF_CON0, BIAS_EN,
+			   FIELD_PREP(BIAS_EN, 0));
+	rockchip_grf_write(hdptx->grf, HDPTXPHY_GRF_CON0, BGR_EN,
+			   FIELD_PREP(BGR_EN, 0));
 }
 
 static int rockchip_hdptx_phy_power_on(struct phy *phy)
@@ -987,29 +997,32 @@ static int rockchip_hdptx_phy_power_on(struct phy *phy)
 	for (lane = 0; lane < 4; lane++) {
 		u32 invert = hdptx->lane_polarity_invert[lane];
 
-		phy_update_bits(hdptx, LANE_REG(lane, 0x0c78), LN_POLARITY_INV,
-				FIELD_PREP(LN_POLARITY_INV, invert));
+		regmap_update_bits(hdptx->regmap, LANE_REG(lane, 0x0c78),
+				   LN_POLARITY_INV,
+				   FIELD_PREP(LN_POLARITY_INV, invert));
 	}
 
 	if (mode == PHY_MODE_DP) {
-		grf_write(hdptx, HDPTXPHY_GRF_CON0, HDPTX_MODE_SEL,
-			  FIELD_PREP(HDPTX_MODE_SEL, 0x1));
+		rockchip_grf_write(hdptx->grf, HDPTXPHY_GRF_CON0,
+				   HDPTX_MODE_SEL,
+				   FIELD_PREP(HDPTX_MODE_SEL, 0x1));
 
-		phy_update_bits(hdptx, 0x0800, PROTOCOL_SEL,
-				FIELD_PREP(PROTOCOL_SEL, 0x0));
-		phy_update_bits(hdptx, 0x0818, DATA_BUS_WIDTH,
-				FIELD_PREP(DATA_BUS_WIDTH, 0x1));
-		phy_update_bits(hdptx, 0x0818, BUS_WIDTH_SEL,
-				FIELD_PREP(BUS_WIDTH_SEL, 0x0));
+		regmap_update_bits(hdptx->regmap, 0x0800, PROTOCOL_SEL,
+				   FIELD_PREP(PROTOCOL_SEL, 0x0));
+		regmap_update_bits(hdptx->regmap, 0x0818, DATA_BUS_WIDTH,
+				   FIELD_PREP(DATA_BUS_WIDTH, 0x1));
+		regmap_update_bits(hdptx->regmap, 0x0818, BUS_WIDTH_SEL,
+				   FIELD_PREP(BUS_WIDTH_SEL, 0x0));
 
 		rockchip_hdptx_phy_dp_pll_init(hdptx);
 		rockchip_hdptx_phy_dp_aux_init(hdptx);
 	} else {
-		grf_write(hdptx, HDPTXPHY_GRF_CON0, HDPTX_MODE_SEL,
-			  FIELD_PREP(HDPTX_MODE_SEL, 0x0));
+		rockchip_grf_write(hdptx->grf, HDPTXPHY_GRF_CON0,
+				   HDPTX_MODE_SEL,
+				   FIELD_PREP(HDPTX_MODE_SEL, 0x0));
 
-		phy_update_bits(hdptx, 0x0800, PROTOCOL_SEL,
-				FIELD_PREP(PROTOCOL_SEL, 0x1));
+		regmap_update_bits(hdptx->regmap, 0x0800, PROTOCOL_SEL,
+				   FIELD_PREP(PROTOCOL_SEL, 0x1));
 	}
 
 	return 0;
@@ -1038,9 +1051,9 @@ static int rockchip_hdptx_phy_probe(struct udevice *dev)
 	u32 prop[4];
 	int ret;
 
-	hdptx->base = dev_read_addr_ptr(dev);
-	if (!hdptx->base)
-		return -ENOENT;
+	ret = regmap_init_mem(dev, &hdptx->regmap);
+	if (ret)
+		return ret;
 
 	ret = uclass_get_device_by_phandle(UCLASS_SYSCON, dev, "rockchip,grf",
 					   &syscon);
diff --git a/drivers/phy/phy-rockchip-snps-pcie3.c b/drivers/phy/phy-rockchip-snps-pcie3.c
index b2a96b2..af6ae51 100644
--- a/drivers/phy/phy-rockchip-snps-pcie3.c
+++ b/drivers/phy/phy-rockchip-snps-pcie3.c
@@ -18,8 +18,11 @@
 
 /* Register for RK3568 */
 #define GRF_PCIE30PHY_RK3568_CON1 0x4
+#define GRF_PCIE30PHY_RK3568_CON4 0x10
 #define GRF_PCIE30PHY_RK3568_CON6 0x18
 #define GRF_PCIE30PHY_RK3568_CON9 0x24
+#define GRF_PCIE30PHY_RK3568_STATUS0 0x80
+#define RK3568_SRAM_INIT_DONE(reg) (reg & BIT(14))
 
 /* Register for RK3588 */
 #define PHP_GRF_PCIESEL_CON 0x100
@@ -58,8 +61,15 @@ struct rockchip_p3phy_ops {
 	int (*phy_init)(struct rockchip_p3phy_priv *priv);
 };
 
+static const u16 phy_fw[] = {
+	#include "phy-rockchip-snps-pcie3.fw"
+};
+
 static int rockchip_p3phy_rk3568_init(struct rockchip_p3phy_priv *priv)
 {
+	int i, ret = 0;
+	u32 reg;
+
 	/* Deassert PCIe PMA output clamp mode */
 	regmap_write(priv->phy_grf, GRF_PCIE30PHY_RK3568_CON9,
 		     (0x1 << 15) | (0x1 << 31));
@@ -72,12 +82,32 @@ static int rockchip_p3phy_rk3568_init(struct rockchip_p3phy_priv *priv)
 			     (0x1 << 15) | (0x1 << 31));
 	}
 
+	regmap_write(priv->phy_grf, GRF_PCIE30PHY_RK3568_CON4,
+		     (0x0 << 14) | (0x1 << (14 + 16))); //sdram_ld_done
+	regmap_write(priv->phy_grf, GRF_PCIE30PHY_RK3568_CON4,
+		     (0x0 << 13) | (0x1 << (13 + 16))); //sdram_bypass
 	reset_deassert(&priv->p30phy);
 	udelay(5);
+	ret = regmap_read_poll_timeout(priv->phy_grf,
+				 GRF_PCIE30PHY_RK3568_STATUS0,
+				 reg, RK3568_SRAM_INIT_DONE(reg),
+				 0, 500);
+	if (ret) {
+		pr_err("%s: lock failed 0x%x, check refclk and power\n",
+		       __func__, reg);
+		return -ETIMEDOUT;
+	}
+
+	regmap_write(priv->phy_grf, GRF_PCIE30PHY_RK3568_CON9,
+		     (0x3 << 8) | (0x3 << (8 + 16))); //map to access sram
+	for (i = 0; i < ARRAY_SIZE(phy_fw); i++)
+		writel(phy_fw[i], priv->mmio + (i<<2));
+	printf("snps pcie3phy FW update! size %ld\n", ARRAY_SIZE(phy_fw));
+	regmap_write(priv->phy_grf, GRF_PCIE30PHY_RK3568_CON9,
+		     (0x0 << 8) | (0x3 << (8 + 16)));
+	regmap_write(priv->phy_grf, GRF_PCIE30PHY_RK3568_CON4,
+		     (0x1 << 14) | (0x1 << (14 + 16))); //sdram_ld_done
 
-	/* Updata RX VCO calibration controls */
-	writel(0x2800, priv->mmio + (0x104a << 2));
-	writel(0x2800, priv->mmio + (0x114a << 2));
 	udelay(10);
 
 	return 0;
diff --git a/drivers/phy/phy-rockchip-snps-pcie3.fw b/drivers/phy/phy-rockchip-snps-pcie3.fw
new file mode 100644
index 0000000..301c428
--- /dev/null
+++ b/drivers/phy/phy-rockchip-snps-pcie3.fw
@@ -0,0 +1,8192 @@
+0x081D,
+0xFFFF,
+0x33AF,
+0x33AE,
+0x0C4F,
+0xD10D,
+0x0D0F,
+0xD306,
+0x0C8F,
+0xDB06,
+0x33AF,
+0xD38D,
+0x01AC,
+0x2000,
+0x0C1E,
+0x014A,
+0x2800,
+0x1B80,
+0xA0B2,
+0x0806,
+0x0016,
+0x8CC7,
+0xD1AE,
+0x0C2E,
+0x1B75,
+0x33AE,
+0xA01C,
+0x8026,
+0x0C2F,
+0xD375,
+0x33AF,
+0x1B81,
+0xA022,
+0x8026,
+0x0D8F,
+0x03A6,
+0x0003,
+0x33AF,
+0x0C6F,
+0xDBA6,
+0x33AF,
+0x0C4F,
+0xD10D,
+0x33AF,
+0x0D8F,
+0xDBA6,
+0x33AF,
+0x1B81,
+0xA032,
+0x8048,
+0xDB87,
+0x038D,
+0x0020,
+0xD310,
+0x080F,
+0x0020,
+0xD106,
+0x33AF,
+0xDB8B,
+0xDB8C,
+0x1B0F,
+0xA03A,
+0x0807,
+0x0044,
+0x33FE,
+0x0C01,
+0x0C3F,
+0x80BA,
+0x0C4F,
+0xD30E,
+0x33AF,
+0xD38D,
+0x1B82,
+0xA04B,
+0x8061,
+0xDB88,
+0x080F,
+0x0020,
+0xD106,
+0x33AF,
+0x1B8E,
+0xA053,
+0x8061,
+0x1BA7,
+0xA056,
+0x8053,
+0x0807,
+0x005C,
+0x33FE,
+0x0C01,
+0x0C3F,
+0x80BA,
+0xDB8F,
+0x0C2E,
+0x1B09,
+0xA05D,
+0x33AE,
+0x1B86,
+0xA07B,
+0x1B85,
+0xA0A7,
+0x080E,
+0x0200,
+0x1BF6,
+0x33AE,
+0xA074,
+0x1B5E,
+0xA06D,
+0x8077,
+0x0C4E,
+0x1BF6,
+0x33AE,
+0xA077,
+0x0806,
+0x0000,
+0x89A4,
+0x0C4F,
+0xDBF6,
+0x33AF,
+0x1B2F,
+0xA07A,
+0x89DF,
+0x8000,
+0x080F,
+0x0020,
+0xD106,
+0x33AF,
+0x0807,
+0x0085,
+0x33FE,
+0x0C01,
+0x0C3F,
+0x80BA,
+0xD35E,
+0x038D,
+0x0020,
+0xD10D,
+0x010D,
+0x0002,
+0x0C8F,
+0xDB06,
+0x33AF,
+0x0D0F,
+0xDB06,
+0x33AF,
+0x0C2E,
+0x1919,
+0xA095,
+0x8092,
+0x33AE,
+0x0C8F,
+0xD306,
+0x33AF,
+0x0C2E,
+0x1919,
+0xA09D,
+0x33AE,
+0x0D0F,
+0xD306,
+0x33AF,
+0xD10D,
+0xD38D,
+0xDB10,
+0xDB8C,
+0xDB8B,
+0xD310,
+0x8000,
+0xDB8B,
+0xD35E,
+0x0806,
+0x0000,
+0x1B28,
+0xA995,
+0x0806,
+0x0000,
+0x038D,
+0x0020,
+0x86F1,
+0xD380,
+0x1B59,
+0xA19E,
+0x80C8,
+0x0C4F,
+0xD3F6,
+0x33AF,
+0x080E,
+0x01FC,
+0x1BF6,
+0x33AE,
+0xA0C3,
+0x080F,
+0x01FC,
+0x03F6,
+0x0032,
+0x33AF,
+0x0806,
+0x0157,
+0x1B27,
+0xA641,
+0x822B,
+0x0367,
+0x003F,
+0x0368,
+0x0C09,
+0x0369,
+0x7928,
+0xD36A,
+0x036B,
+0x007F,
+0x036C,
+0x0C13,
+0x036D,
+0x7803,
+0xD36E,
+0x037C,
+0x003F,
+0x037D,
+0x0C01,
+0x037E,
+0x7818,
+0xD37F,
+0x03E0,
+0x007F,
+0x03E1,
+0x0C2F,
+0x03E2,
+0x7828,
+0x03E3,
+0x36DC,
+0x03E4,
+0x007F,
+0x03E5,
+0x0C09,
+0x03E6,
+0x7818,
+0x03E7,
+0x124A,
+0x080E,
+0xFF00,
+0x191E,
+0x33AE,
+0x080F,
+0x00FF,
+0x291D,
+0x0CCF,
+0xD11D,
+0x080F,
+0x0100,
+0xD91D,
+0x33AF,
+0x0C2F,
+0xD375,
+0x33AF,
+0x0349,
+0x0017,
+0x0353,
+0x0017,
+0x1B4A,
+0x29B4,
+0xD9B8,
+0x0229,
+0x1060,
+0x022A,
+0x0E24,
+0x080E,
+0x4000,
+0x1B09,
+0xA108,
+0x0C2E,
+0x1B02,
+0xA10C,
+0x33AE,
+0xD317,
+0x1B29,
+0xA115,
+0x705E,
+0x8115,
+0x1B2D,
+0xA118,
+0x811A,
+0x014B,
+0x2DAB,
+0x1B2E,
+0xA11D,
+0x811F,
+0x014C,
+0x004B,
+0x1B2A,
+0xA123,
+0x0125,
+0x065A,
+0x1B2B,
+0xA126,
+0x8128,
+0x0127,
+0x0D07,
+0x0063,
+0x7F00,
+0x0073,
+0x7F00,
+0x1A28,
+0xA145,
+0xDA28,
+0x1B29,
+0xA137,
+0x0060,
+0x0008,
+0x0070,
+0x0008,
+0xDBA8,
+0x8140,
+0x0C2F,
+0xD881,
+0x080F,
+0xFFFF,
+0xDBA8,
+0x0061,
+0x0018,
+0x0071,
+0x0018,
+0x0301,
+0x0F05,
+0x03A0,
+0x0007,
+0x8147,
+0x0301,
+0x0F05,
+0x1B2C,
+0xA14C,
+0x0144,
+0x0100,
+0x8152,
+0x080F,
+0x0200,
+0xD944,
+0x33AF,
+0x0145,
+0x6DB4,
+0x0306,
+0x0006,
+0x1B0F,
+0xA154,
+0x80B6,
+0x0305,
+0x000C,
+0x0306,
+0x0007,
+0x0317,
+0x0003,
+0x0306,
+0x0006,
+0x1B0F,
+0xA15F,
+0x0306,
+0x0004,
+0xDB87,
+0x1A28,
+0x5C6D,
+0xA168,
+0x816E,
+0x13A3,
+0x5CEC,
+0xA168,
+0x0228,
+0x0003,
+0x816E,
+0x0C2E,
+0x1A11,
+0x33AE,
+0xA177,
+0x1867,
+0x080C,
+0x0100,
+0x518D,
+0x2B54,
+0x0C4E,
+0x1A11,
+0x33AE,
+0xA180,
+0x1877,
+0x080C,
+0x0100,
+0x518D,
+0x2B55,
+0x1867,
+0x2868,
+0x1877,
+0x2878,
+0x1886,
+0x2B56,
+0x1888,
+0x2B58,
+0x1887,
+0x2B57,
+0x0060,
+0x0018,
+0x0070,
+0x0018,
+0xDA12,
+0xD3A0,
+0xD3A8,
+0xDB59,
+0x7005,
+0x0C4F,
+0xD081,
+0x080F,
+0xFFFF,
+0x0C8F,
+0xD303,
+0x33AF,
+0x0C4F,
+0xD30E,
+0x33AF,
+0x8000,
+0x1B54,
+0x2868,
+0x1B55,
+0x2878,
+0x705E,
+0x1B2D,
+0xA1A6,
+0x81A8,
+0x014B,
+0x2DAB,
+0x1B2E,
+0xA1AB,
+0x81AD,
+0x014C,
+0x004B,
+0x1B29,
+0xA1B0,
+0x81B8,
+0x0C2F,
+0xD881,
+0x080F,
+0xFFFF,
+0x0061,
+0x0018,
+0x0071,
+0x0018,
+0x1B56,
+0x2883,
+0x1B58,
+0x2885,
+0x1B57,
+0x2884,
+0x0301,
+0x0F05,
+0xD9AE,
+0x01AD,
+0x0080,
+0xD1AF,
+0xD9B6,
+0x1B40,
+0x29AD,
+0xD9AF,
+0xD9B6,
+0x1B41,
+0x29AD,
+0x01AF,
+0x0002,
+0xD9B6,
+0x1B42,
+0x29AD,
+0x01AF,
+0x0003,
+0xD9B6,
+0x1B45,
+0x29AD,
+0x01AF,
+0x0014,
+0xD9B6,
+0x1B46,
+0x29AD,
+0x01AF,
+0x0015,
+0xD9B6,
+0x01A8,
+0x0140,
+0x1B4B,
+0x2973,
+0x1B4C,
+0x2974,
+0x1B51,
+0x2979,
+0x1B4D,
+0x2975,
+0x1B4E,
+0x2976,
+0x1B52,
+0x297A,
+0x1BF2,
+0x5C6D,
+0xA1F1,
+0x0C4F,
+0xD9BA,
+0x33AF,
+0x0C8E,
+0x1B24,
+0x33AE,
+0xA1F6,
+0x81F9,
+0x0C2F,
+0xD9BA,
+0x33AF,
+0x1B4F,
+0x080F,
+0xFF00,
+0x297F,
+0x080F,
+0xFFFF,
+0x1B50,
+0x080F,
+0x00FF,
+0x297F,
+0x080F,
+0xFFFF,
+0x1B4A,
+0x29B4,
+0xD9B8,
+0xD1AE,
+0xD1A8,
+0x018E,
+0x0019,
+0x0305,
+0x000C,
+0xD306,
+0x1B0F,
+0xA20F,
+0x1B2C,
+0xA214,
+0x821A,
+0x080F,
+0x0200,
+0xD944,
+0x33AF,
+0x0145,
+0x6DB4,
+0x1B04,
+0xA21A,
+0x1B2A,
+0xA220,
+0x0125,
+0x065A,
+0x1B2B,
+0xA223,
+0x8225,
+0x0127,
+0x0D07,
+0xDA12,
+0x0229,
+0x1060,
+0x022A,
+0xE24 ,
+0x8193,
+0x01A8,
+0x0140,
+0x0100,
+0x0004,
+0x018E,
+0x0019,
+0xD9AE,
+0xD9B6,
+0x01B0,
+0x0B37,
+0x01B1,
+0x00FA,
+0xD9B7,
+0x0180,
+0x03FF,
+0xD981,
+0xD182,
+0xD183,
+0x0184,
+0x4000,
+0x0185,
+0x2408,
+0x1B31,
+0xA254,
+0x01A8,
+0x0140,
+0xD1B5,
+0x01AC,
+0xA060,
+0xD9AF,
+0x0340,
+0x0080,
+0x0800,
+0x0340,
+0x01AD,
+0x0080,
+0xD9B6,
+0x0807,
+0x0254,
+0x0C03,
+0x864B,
+0x1B31,
+0xA268,
+0x01A8,
+0x0140,
+0xD1B5,
+0x01AC,
+0xA080,
+0x01AF,
+0x0002,
+0x0341,
+0x0080,
+0x0800,
+0x0341,
+0x01AD,
+0x0080,
+0xD9B6,
+0x0807,
+0x0268,
+0x0C03,
+0x864B,
+0x01B1,
+0x0062,
+0xD9B7,
+0x1B31,
+0xA27E,
+0x01A8,
+0x0140,
+0xD1B5,
+0x01AC,
+0xA080,
+0xD9AF,
+0x0340,
+0x0080,
+0x0800,
+0x0340,
+0x01AD,
+0x0080,
+0xD9B6,
+0x0807,
+0x027E,
+0x0C03,
+0x864B,
+0x1B31,
+0xA292,
+0x01A8,
+0x0140,
+0xD1B5,
+0x01AC,
+0xA0C0,
+0x01AF,
+0x0003,
+0x0342,
+0x0080,
+0x0800,
+0x0342,
+0x01AD,
+0x0080,
+0xD9B6,
+0x0807,
+0x0292,
+0x0C03,
+0x864B,
+0x080E,
+0xF800,
+0x1B0C,
+0x31A1,
+0x080E,
+0x07FF,
+0x1B0C,
+0x31A2,
+0xD11D,
+0x0CEE,
+0x1B0D,
+0x31A3,
+0x33AE,
+0x304D,
+0x080F,
+0x07FF,
+0x29B0,
+0x33AF,
+0x302D,
+0x080F,
+0x00F8,
+0x29B1,
+0x33AF,
+0x306D,
+0x0CEF,
+0x29B1,
+0x33AF,
+0xD9B7,
+0x0C2E,
+0x1BF6,
+0x33AE,
+0xA2CD,
+0x0180,
+0x03FF,
+0xD981,
+0xD182,
+0xD183,
+0x0184,
+0x4000,
+0x0185,
+0x2408,
+0x01A8,
+0x0140,
+0xD1B5,
+0x01AC,
+0xB080,
+0x01AF,
+0x0002,
+0x03F7,
+0x0080,
+0x0800,
+0x03F7,
+0x01AD,
+0x0080,
+0xD9B6,
+0x0807,
+0x02CD,
+0x0C03,
+0x864B,
+0x0C8E,
+0x1BF4,
+0x33AE,
+0xA2EC,
+0x0180,
+0x03FF,
+0xD981,
+0xD182,
+0xD183,
+0x0184,
+0x4000,
+0x0185,
+0x2408,
+0x01A8,
+0x0140,
+0xD1B5,
+0x01AC,
+0xB0C0,
+0x01AF,
+0x0003,
+0x03EC,
+0x0080,
+0x0800,
+0x03EC,
+0x01AD,
+0x0080,
+0xD9B6,
+0x0807,
+0x02EC,
+0x0C03,
+0x864B,
+0x01B3,
+0x0177,
+0xD3F2,
+0x0C2E,
+0x1BF4,
+0x33AE,
+0xA313,
+0x0180,
+0x01FF,
+0x0181,
+0xAAAA,
+0x0182,
+0x2800,
+0xD183,
+0x0184,
+0x6C00,
+0x0185,
+0x2408,
+0x0807,
+0x0301,
+0x8DC7,
+0x01A8,
+0x0140,
+0xD1B5,
+0x01AC,
+0x3000,
+0x01AF,
+0x0016,
+0x0179,
+0x0080,
+0x0800,
+0x0179,
+0x01AD,
+0x0080,
+0xD9B6,
+0x0807,
+0x0313,
+0x0C23,
+0x864B,
+0x0800,
+0x0179,
+0x3801,
+0x0802,
+0x003F,
+0x0803,
+0x00C0,
+0x5461,
+0xB31F,
+0x5422,
+0xB31F,
+0x8329,
+0x0C4E,
+0x19BA,
+0x33AE,
+0xA329,
+0x1B33,
+0xA329,
+0x0C4F,
+0xD9BA,
+0x33AF,
+0x82EF,
+0x0C2E,
+0x1BF4,
+0x33AE,
+0xA34D,
+0x0180,
+0x01FF,
+0x0181,
+0x5555,
+0x0182,
+0x1400,
+0xD183,
+0x0184,
+0x6C00,
+0x0185,
+0x2408,
+0x0807,
+0x033B,
+0x8E5B,
+0x01A8,
+0x0140,
+0xD1B5,
+0x01AC,
+0x3000,
+0x01AF,
+0x0018,
+0x017A,
+0x0080,
+0x0800,
+0x017A,
+0x01AD,
+0x0080,
+0xD9B6,
+0x0807,
+0x034D,
+0x0C23,
+0x864B,
+0x0800,
+0x017A,
+0x3801,
+0x0802,
+0x003F,
+0x0803,
+0x00C0,
+0x5461,
+0xB359,
+0x5422,
+0xB359,
+0x8363,
+0x0C4E,
+0x19BA,
+0x33AE,
+0xA363,
+0x1B33,
+0xA363,
+0x0C4F,
+0xD9BA,
+0x33AF,
+0x82EF,
+0x080E,
+0x0400,
+0x1B6F,
+0x33AE,
+0xA38D,
+0x0C4E,
+0x19BA,
+0x33AE,
+0xA38B,
+0x0800,
+0x009B,
+0x1979,
+0x31A1,
+0x197A,
+0x31A2,
+0x5420,
+0xB375,
+0x8379,
+0x5440,
+0xB379,
+0xDBF2,
+0x838D,
+0x5420,
+0xB381,
+0x5440,
+0xB37E,
+0x8381,
+0x03F2,
+0x0002,
+0x838D,
+0x5420,
+0xB38D,
+0x5440,
+0xB38D,
+0x03F2,
+0x0003,
+0x0C4F,
+0xD9BA,
+0x33AF,
+0x82EF,
+0x03F2,
+0x0003,
+0x1BF2,
+0x5C6D,
+0xA395,
+0x03ED,
+0x0025,
+0x03EE,
+0x0025,
+0x8399,
+0x03ED,
+0x0037,
+0x03EE,
+0x0037,
+0x1B32,
+0xA3BB,
+0x0180,
+0x01FF,
+0x0181,
+0xAAAA,
+0x0182,
+0x2800,
+0xD183,
+0x0184,
+0x7000,
+0x0185,
+0x2408,
+0x0807,
+0x03A9,
+0x8D7D,
+0x01A8,
+0x0140,
+0xD1B5,
+0x01AC,
+0x3000,
+0x01AF,
+0x0010,
+0x0173,
+0x0080,
+0x0800,
+0x0173,
+0x01AD,
+0x0080,
+0xD9B6,
+0x0807,
+0x03BB,
+0x0C23,
+0x864B,
+0x0800,
+0x0173,
+0x3801,
+0x0802,
+0x003F,
+0x0803,
+0x00C0,
+0x5423,
+0xB3C5,
+0x83C7,
+0x5441,
+0xB3D1,
+0x0C4E,
+0x19BA,
+0x33AE,
+0xA3D1,
+0x1B33,
+0xA3D1,
+0x0C4F,
+0xD9BA,
+0x33AF,
+0x82EF,
+0x1B32,
+0xA3F3,
+0x0180,
+0x01FF,
+0x0181,
+0xAAAA,
+0x0182,
+0x2800,
+0xD183,
+0x0184,
+0x7000,
+0x0185,
+0x2408,
+0x0807,
+0x03E1,
+0x8DA1,
+0x01A8,
+0x0140,
+0xD1B5,
+0x01AC,
+0x3000,
+0x01AF,
+0x0011,
+0x0174,
+0x0080,
+0x0800,
+0x0174,
+0x01AD,
+0x0080,
+0xD9B6,
+0x0807,
+0x03F3,
+0x0C23,
+0x864B,
+0x0800,
+0x0174,
+0x3801,
+0x0802,
+0x003F,
+0x0803,
+0x00C0,
+0x5423,
+0xB3FD,
+0x83FF,
+0x5441,
+0xB409,
+0x0C4E,
+0x19BA,
+0x33AE,
+0xA409,
+0x1B33,
+0xA409,
+0x0C4F,
+0xD9BA,
+0x33AF,
+0x82EF,
+0x1B32,
+0xA42B,
+0x0180,
+0x01FF,
+0x0181,
+0x5555,
+0x0182,
+0x1400,
+0xD183,
+0x0184,
+0x7000,
+0x0185,
+0x2408,
+0x0807,
+0x0419,
+0x8E11,
+0x01A8,
+0x0140,
+0xD1B5,
+0x01AC,
+0x3000,
+0x01AF,
+0x0012,
+0x0175,
+0x0080,
+0x0800,
+0x0175,
+0x01AD,
+0x0080,
+0xD9B6,
+0x0807,
+0x042B,
+0x0C23,
+0x864B,
+0x0800,
+0x0175,
+0x3801,
+0x0802,
+0x003F,
+0x0803,
+0x00C0,
+0x5423,
+0xB435,
+0x8437,
+0x5441,
+0xB441,
+0x0C4E,
+0x19BA,
+0x33AE,
+0xA441,
+0x1B33,
+0xA441,
+0x0C4F,
+0xD9BA,
+0x33AF,
+0x82EF,
+0x1B32,
+0xA463,
+0x0180,
+0x01FF,
+0x0181,
+0x5555,
+0x0182,
+0x1400,
+0xD183,
+0x0184,
+0x7000,
+0x0185,
+0x2408,
+0x0807,
+0x0451,
+0x8E35,
+0x01A8,
+0x0140,
+0xD1B5,
+0x01AC,
+0x3000,
+0x01AF,
+0x0013,
+0x0176,
+0x0080,
+0x0800,
+0x0176,
+0x01AD,
+0x0080,
+0xD9B6,
+0x0807,
+0x0463,
+0x0C23,
+0x864B,
+0x0800,
+0x0176,
+0x3801,
+0x0802,
+0x003F,
+0x0803,
+0x00C0,
+0x5423,
+0xB46D,
+0x846F,
+0x5441,
+0xB479,
+0x0C4E,
+0x19BA,
+0x33AE,
+0xA479,
+0x1B33,
+0xA479,
+0x0C4F,
+0xD9BA,
+0x33AF,
+0x82EF,
+0x0C8F,
+0xD324,
+0x33AF,
+0x1B3D,
+0xA49E,
+0x0180,
+0x01FF,
+0x0181,
+0xAAAA,
+0x0182,
+0x2800,
+0xD183,
+0x0184,
+0x6800,
+0x0185,
+0x2408,
+0x0807,
+0x048C,
+0x8DEC,
+0x01A8,
+0x0140,
+0xD1B5,
+0x01AC,
+0x3000,
+0x01AF,
+0x0014,
+0x0345,
+0x0080,
+0x0800,
+0x0345,
+0x01AD,
+0x0080,
+0xD9B6,
+0x0807,
+0x049E,
+0x0C23,
+0x864B,
+0x1B3D,
+0xA4C0,
+0x0180,
+0x01FF,
+0x0181,
+0x5555,
+0x0182,
+0x1400,
+0xD183,
+0x0184,
+0x6800,
+0x0185,
+0x2408,
+0x0807,
+0x04AE,
+0x8E80,
+0x01A8,
+0x0140,
+0xD1B5,
+0x01AC,
+0x3000,
+0x01AF,
+0x0015,
+0x0346,
+0x0080,
+0x0800,
+0x0346,
+0x01AD,
+0x0080,
+0xD9B6,
+0x0807,
+0x04C0,
+0x0C23,
+0x864B,
+0x1B3E,
+0xA4DD,
+0x0800,
+0x00FB,
+0x1B45,
+0x31A1,
+0x1B46,
+0x31A2,
+0x5401,
+0xB4D2,
+0x5402,
+0xB4D2,
+0x0C80,
+0x5420,
+0xB4D2,
+0x5440,
+0xB4D2,
+0x84DD,
+0x0C2E,
+0x19BA,
+0x33AE,
+0xA4DD,
+0x0C8F,
+0xDB24,
+0x33AF,
+0x0C2F,
+0xD9BA,
+0x33AF,
+0x847C,
+0x0C4E,
+0x1BF4,
+0x33AE,
+0xA508,
+0x0180,
+0x01FF,
+0x0181,
+0xAAAA,
+0x0182,
+0x2800,
+0xD183,
+0x0184,
+0x7000,
+0x0185,
+0x2408,
+0x01A8,
+0x0140,
+0xD1B5,
+0x01AC,
+0x3000,
+0x01AF,
+0x0010,
+0x0807,
+0x04F6,
+0x8EA5,
+0x01A8,
+0x0100,
+0xD1B5,
+0x01AC,
+0x3000,
+0x01AF,
+0x0010,
+0x034F,
+0x0080,
+0x0800,
+0x034F,
+0x01AD,
+0x0080,
+0xD9B6,
+0x0807,
+0x0508,
+0x0C23,
+0x864B,
+0x1B4F,
+0x080F,
+0xFF00,
+0x297F,
+0x080F,
+0xFFFF,
+0x0C4E,
+0x1BF4,
+0x33AE,
+0xA539,
+0x0180,
+0x01FF,
+0x0181,
+0x5555,
+0x0182,
+0x1400,
+0xD183,
+0x0184,
+0x7000,
+0x0185,
+0x2408,
+0x01A8,
+0x0140,
+0xD1B5,
+0x01AC,
+0x3000,
+0x01AF,
+0x0012,
+0x0807,
+0x0527,
+0x8EC9,
+0x01A8,
+0x0100,
+0xD1B5,
+0x01AC,
+0x3000,
+0x01AF,
+0x0012,
+0x0350,
+0x0080,
+0x0800,
+0x0350,
+0x01AD,
+0x0080,
+0xD9B6,
+0x0807,
+0x0539,
+0x0C23,
+0x864B,
+0x1B50,
+0x080F,
+0x00FF,
+0x297F,
+0x080F,
+0xFFFF,
+0x0C2E,
+0x1B6F,
+0x33AE,
+0xA5CF,
+0x0CEE,
+0x1B0C,
+0x33AE,
+0x0800,
+0x0080,
+0x51A0,
+0x080F,
+0x07FF,
+0x29B0,
+0x33AF,
+0xD9B7,
+0x0800,
+0x0080,
+0x1BED,
+0x51A0,
+0x2969,
+0x31A0,
+0x01AF,
+0x0016,
+0x21AD,
+0xD9B6,
+0x0180,
+0x03FF,
+0xD981,
+0xD182,
+0xD183,
+0x0184,
+0x4000,
+0x0185,
+0x2408,
+0x01A8,
+0x0100,
+0xD1B5,
+0x01AC,
+0x9346,
+0x01AF,
+0x001B,
+0x03FC,
+0x0080,
+0x0800,
+0x03FC,
+0x01AD,
+0x0080,
+0xD9B6,
+0x0807,
+0x0573,
+0x0C23,
+0x864B,
+0x01A8,
+0x0100,
+0xD1B5,
+0x01AC,
+0x90DA,
+0x01AF,
+0x0003,
+0x03FD,
+0x0080,
+0x0800,
+0x03FD,
+0x01AD,
+0x0080,
+0xD9B6,
+0x0807,
+0x0585,
+0x0C03,
+0x864B,
+0x0180,
+0x01FF,
+0x0181,
+0xAAAA,
+0x0182,
+0x2800,
+0xD183,
+0x0184,
+0x6C00,
+0x0185,
+0x2408,
+0x0807,
+0x0593,
+0x8DC7,
+0x01A8,
+0x0140,
+0xD1B5,
+0x01AC,
+0x3000,
+0x01AF,
+0x0016,
+0x03ED,
+0x0080,
+0x0800,
+0x03ED,
+0x01AD,
+0x0080,
+0xD9B6,
+0x0807,
+0x05A5,
+0x0C23,
+0x864B,
+0x0180,
+0x01FF,
+0x0181,
+0x5555,
+0x0182,
+0x1400,
+0xD183,
+0x0184,
+0x6C00,
+0x0185,
+0x2408,
+0x0807,
+0x05B3,
+0x8E5B,
+0x01A8,
+0x0140,
+0xD1B5,
+0x01AC,
+0x3000,
+0x01AF,
+0x0018,
+0x03EE,
+0x0080,
+0x0800,
+0x03EE,
+0x01AD,
+0x0080,
+0xD9B6,
+0x0807,
+0x05C5,
+0x0C23,
+0x864B,
+0x1BEE,
+0x31A0,
+0x1BED,
+0x31A1,
+0x197A,
+0x55A0,
+0x2BEE,
+0x1979,
+0x55A1,
+0x2BED,
+0x080E,
+0x07F8,
+0x1B0C,
+0x33AE,
+0x080F,
+0x07F8,
+0x29B0,
+0x33AF,
+0xD9B7,
+0x080F,
+0x0800,
+0xD1B0,
+0x33AF,
+0xD9B7,
+0x01A8,
+0x0140,
+0x1973,
+0x29AD,
+0x01AF,
+0x0010,
+0xD9B6,
+0x1974,
+0x29AD,
+0x01AF,
+0x0011,
+0xD9B6,
+0x1979,
+0x29AD,
+0x01AF,
+0x0016,
+0xD9B6,
+0x1B45,
+0x29AD,
+0x01AF,
+0x0014,
+0xD9B6,
+0x1975,
+0x29AD,
+0x01AF,
+0x0012,
+0xD9B6,
+0x1976,
+0x29AD,
+0x01AF,
+0x0013,
+0xD9B6,
+0x197A,
+0x29AD,
+0x01AF,
+0x0018,
+0xD9B6,
+0x1B46,
+0x29AD,
+0x01AF,
+0x0015,
+0xD9B6,
+0x1973,
+0x2B4B,
+0x1974,
+0x2B4C,
+0x1979,
+0x2B51,
+0x080F,
+0xFF00,
+0x2BEF,
+0x080F,
+0x00FF,
+0x2BEF,
+0x33AF,
+0x1975,
+0x2B4D,
+0x1976,
+0x2B4E,
+0x197A,
+0x2B52,
+0x080F,
+0xFF00,
+0x2BF0,
+0x080F,
+0x00FF,
+0x2BF0,
+0x33AF,
+0x01A8,
+0x0100,
+0x1B4F,
+0x29AD,
+0x01AF,
+0x0010,
+0xD9B6,
+0x1B50,
+0x29AD,
+0x01AF,
+0x0012,
+0xD9B6,
+0x1B41,
+0x29AD,
+0x01AF,
+0x0002,
+0xD9B6,
+0x1B42,
+0x29AD,
+0x01AF,
+0x0003,
+0xD9B6,
+0x33FE,
+0x0C3F,
+0x804B,
+0xD1AC,
+0x01B3,
+0x0077,
+0xD100,
+0xD1A8,
+0xD1AE,
+0x8646,
+0x33FE,
+0x0C3F,
+0x804D,
+0xD1A8,
+0xD9B6,
+0x080F,
+0x0400,
+0xD185,
+0x33AF,
+0x9006,
+0x0804,
+0x0040,
+0x5C03,
+0xA650,
+0x8653,
+0x0CE1,
+0x7080,
+0x8655,
+0x0CC1,
+0x7080,
+0x6660,
+0x0C42,
+0x5443,
+0xB65B,
+0x6260,
+0x8678,
+0xA669,
+0x080E,
+0x7FFF,
+0x198A,
+0x33AE,
+0x31A2,
+0x4022,
+0x080E,
+0x7FFF,
+0x1986,
+0x33AE,
+0x426D,
+0x55A2,
+0x8678,
+0x080E,
+0x7FFF,
+0x1986,
+0x33AE,
+0x31A2,
+0x4022,
+0x426D,
+0x55A2,
+0x31A2,
+0x080E,
+0x7FFF,
+0x198A,
+0x33AE,
+0x402D,
+0x544D,
+0xB680,
+0x0C02,
+0x55A2,
+0x31A5,
+0x380D,
+0x3802,
+0x548D,
+0x8686,
+0x31A5,
+0x3802,
+0xA684,
+0x8691,
+0x380D,
+0x508D,
+0x35A0,
+0x29AD,
+0xD9B6,
+0x5C03,
+0xA68E,
+0x0C37,
+0x700F,
+0x8693,
+0x0C17,
+0x700F,
+0x8693,
+0x31A5,
+0x3802,
+0x4224,
+0x5C21,
+0xA655,
+0x0C81,
+0x6660,
+0x0C44,
+0x5483,
+0xB69D,
+0x6260,
+0x86BA,
+0xA6AB,
+0x080E,
+0x7FFF,
+0x198A,
+0x33AE,
+0x31A4,
+0x4024,
+0x080E,
+0x7FFF,
+0x1986,
+0x33AE,
+0x426D,
+0x55A4,
+0x86BA,
+0x080E,
+0x7FFF,
+0x1986,
+0x33AE,
+0x31A4,
+0x4024,
+0x426D,
+0x55A4,
+0x31A4,
+0x080E,
+0x7FFF,
+0x198A,
+0x33AE,
+0x402D,
+0x548D,
+0x31A4,
+0xB6CD,
+0x0C04,
+0x55A4,
+0x31A4,
+0x54A4,
+0xB6C3,
+0x3085,
+0x3802,
+0x32ED,
+0xA6C8,
+0x380D,
+0x5C2D,
+0x86CA,
+0x380D,
+0x5C4D,
+0x31A4,
+0xB6DB,
+0x86EF,
+0x54A4,
+0xB6D1,
+0x3085,
+0x3802,
+0x32ED,
+0xA6D6,
+0x380D,
+0x582D,
+0x86D8,
+0x380D,
+0x584D,
+0x31A4,
+0x430D,
+0xA6EF,
+0x5C21,
+0xA6E4,
+0x3804,
+0x5482,
+0xA6E1,
+0x86EF,
+0x3440,
+0x304D,
+0x86E6,
+0x3480,
+0x308D,
+0x29AD,
+0xD9B6,
+0x5C03,
+0xA6EC,
+0x700F,
+0x86ED,
+0x700F,
+0x5C01,
+0xA697,
+0x33DF,
+0x9007,
+0x1B36,
+0xA709,
+0xD35E,
+0x038D,
+0x0030,
+0xD10D,
+0x010D,
+0x0002,
+0x0306,
+0x000C,
+0x0C2E,
+0x1919,
+0x33AE,
+0xA700,
+0x86FB,
+0x0306,
+0x0008,
+0x0C2E,
+0x1919,
+0x33AE,
+0xA702,
+0x0305,
+0x000C,
+0xD10D,
+0x038D,
+0x0030,
+0x1B38,
+0xA711,
+0x080F,
+0x0080,
+0xD37B,
+0x33AF,
+0xD38D,
+0x1B38,
+0xA716,
+0x0C6C,
+0x871E,
+0x1B34,
+0xA71D,
+0x080E,
+0x01E0,
+0x131C,
+0x33AE,
+0x871E,
+0x0C0C,
+0x33FE,
+0x0C3F,
+0x8946,
+0x1B49,
+0x2B47,
+0x038D,
+0x0030,
+0xD1A8,
+0xD161,
+0x0162,
+0x0042,
+0x0163,
+0x0060,
+0xD164,
+0xD165,
+0x0167,
+0x21A2,
+0x1BEE,
+0x2BCD,
+0x1BED,
+0x2BCC,
+0x13CD,
+0x1B52,
+0x518D,
+0x31AC,
+0x430D,
+0xA73B,
+0x318D,
+0x873D,
+0x080D,
+0x00FF,
+0x31A1,
+0x080F,
+0xFF00,
+0x2969,
+0x33AF,
+0x13CC,
+0x1B51,
+0x518D,
+0x31AC,
+0x430D,
+0xA74A,
+0x318D,
+0x874C,
+0x080D,
+0x00FF,
+0x31A1,
+0x080F,
+0x00FF,
+0x2969,
+0x33AF,
+0x0181,
+0xFFFF,
+0x0182,
+0x3C02,
+0x0183,
+0x0800,
+0x0184,
+0x7060,
+0x0185,
+0x2402,
+0x1B67,
+0x2980,
+0x1B68,
+0x2960,
+0x1B69,
+0x2966,
+0x1B6A,
+0x2968,
+0x1B36,
+0xA76B,
+0x0807,
+0x076A,
+0x33FE,
+0x0C1F,
+0x89C5,
+0x6C00,
+0xD162,
+0x0163,
+0x001F,
+0x0182,
+0x3C23,
+0x0183,
+0x0087,
+0x0184,
+0x7068,
+0x0185,
+0x247C,
+0x1B6B,
+0x2980,
+0x1B6C,
+0x2960,
+0x1B6D,
+0x2966,
+0x1B6E,
+0x2968,
+0x1B36,
+0xA781,
+0x6C00,
+0x0182,
+0x3C02,
+0x0183,
+0x0800,
+0x0184,
+0x7060,
+0x0185,
+0x2402,
+0x0162,
+0x0042,
+0x0163,
+0x0060,
+0x0167,
+0x39C0,
+0x1B7C,
+0x2980,
+0x1B7D,
+0x2960,
+0x1B7E,
+0x2966,
+0x1B7F,
+0x2968,
+0x1B36,
+0xA7E0,
+0x0807,
+0x079E,
+0x33FE,
+0x0C1F,
+0x89C5,
+0x6C00,
+0x080E,
+0x4000,
+0x1B6F,
+0x33AE,
+0xA7E0,
+0x080E,
+0x03C0,
+0x196C,
+0x33AE,
+0x5CED,
+0xB7E0,
+0x0180,
+0x01FF,
+0x080F,
+0x03E0,
+0x0182,
+0x0002,
+0x33AF,
+0x6620,
+0xB7B4,
+0x87E0,
+0xA7B6,
+0x87E0,
+0x080F,
+0x3FFF,
+0xD160,
+0x33AF,
+0x080F,
+0x0038,
+0x0166,
+0x0005,
+0x33AF,
+0x080E,
+0x03C0,
+0x196C,
+0x33AE,
+0x402D,
+0x31A0,
+0x080E,
+0x003F,
+0x196C,
+0x33AE,
+0xA7CC,
+0x5820,
+0x87CD,
+0x5840,
+0x31A0,
+0x080F,
+0x7C00,
+0x2167,
+0x080F,
+0x03E0,
+0x2167,
+0x33AF,
+0x1169,
+0x3181,
+0x080F,
+0x1000,
+0xD166,
+0x33AF,
+0x0169,
+0xFFFF,
+0x6C00,
+0x302D,
+0x2969,
+0x1969,
+0x2BF7,
+0x080E,
+0x0020,
+0x1B6F,
+0x33AE,
+0xA7EA,
+0x33FE,
+0x0C3F,
+0x8BA3,
+0x080F,
+0x7C00,
+0xD3F6,
+0x33AF,
+0xD3F8,
+0xD3F9,
+0xD3FA,
+0x080E,
+0x8000,
+0x1BF6,
+0x33AE,
+0xA891,
+0x0CC0,
+0x0D61,
+0x0C22,
+0x0C23,
+0x0804,
+0x00F5,
+0x0807,
+0x0801,
+0x33FE,
+0x0C3F,
+0x89E6,
+0x31B8,
+0x080F,
+0xFF00,
+0x2BF8,
+0x33AF,
+0x0CC0,
+0x0D61,
+0x0C22,
+0x0C23,
+0x0804,
+0x00F5,
+0x0807,
+0x0811,
+0x33FE,
+0x0C3F,
+0x8A57,
+0x31B9,
+0x080F,
+0x00FF,
+0x2BF8,
+0x33AF,
+0x0C40,
+0x0D61,
+0x0C22,
+0x0C23,
+0x0804,
+0x00F5,
+0x0807,
+0x0821,
+0x33FE,
+0x0C3F,
+0x89E6,
+0x31BA,
+0x080F,
+0xFF00,
+0x2BF9,
+0x33AF,
+0x0C40,
+0x0D61,
+0x0C22,
+0x0C23,
+0x0804,
+0x00F5,
+0x0807,
+0x0831,
+0x33FE,
+0x0C3F,
+0x8A57,
+0x31BB,
+0x080F,
+0x00FF,
+0x2BF9,
+0x33AF,
+0x0807,
+0x083B,
+0x33FE,
+0x0C3F,
+0x8AC8,
+0x080E,
+0x0400,
+0x1BF6,
+0x33AE,
+0xA841,
+0x8891,
+0x080E,
+0x6000,
+0x1BF6,
+0x33AE,
+0x5C2D,
+0xA848,
+0x8868,
+0x0CC0,
+0x0C61,
+0x0D02,
+0x0C03,
+0x0804,
+0x00FF,
+0x0807,
+0x0853,
+0x33FE,
+0x0C3F,
+0x89E6,
+0x31B8,
+0x080F,
+0xFF00,
+0x2BFA,
+0x33AF,
+0x0C80,
+0x0D61,
+0x0D02,
+0x0C03,
+0x0C04,
+0x0807,
+0x0862,
+0x33FE,
+0x0C3F,
+0x89E6,
+0x31BA,
+0x080F,
+0x00FF,
+0x2BFA,
+0x33AF,
+0x8887,
+0x0CC0,
+0x0C61,
+0x0D02,
+0x0C03,
+0x0804,
+0x00FF,
+0x0807,
+0x0873,
+0x33FE,
+0x0C3F,
+0x8A57,
+0x31B9,
+0x080F,
+0xFF00,
+0x2BFA,
+0x33AF,
+0x0C80,
+0x0D61,
+0x0D02,
+0x0C03,
+0x0C04,
+0x0807,
+0x0882,
+0x33FE,
+0x0C3F,
+0x8A57,
+0x31BB,
+0x080F,
+0x00FF,
+0x2BFA,
+0x33AF,
+0x0807,
+0x088C,
+0x33FE,
+0x0C3F,
+0x8B11,
+0x0807,
+0x0891,
+0x33FE,
+0x0C3F,
+0x8B34,
+0x080E,
+0x0400,
+0x1BF6,
+0x33AE,
+0xA8E9,
+0x0181,
+0xFFFF,
+0x0182,
+0x3C06,
+0x0183,
+0x0800,
+0x0184,
+0x7060,
+0x0185,
+0x247E,
+0x0161,
+0x0009,
+0x0162,
+0x00C2,
+0x0163,
+0x7F80,
+0xD164,
+0xD165,
+0x0167,
+0x21A2,
+0x1BF7,
+0x2969,
+0x1BE0,
+0x2980,
+0x1BE1,
+0x2960,
+0x1BE2,
+0x2966,
+0x1BE3,
+0x2968,
+0x1B37,
+0xA8E9,
+0x0807,
+0x08BB,
+0x33FE,
+0x0C1F,
+0x89C5,
+0x6C00,
+0x080E,
+0xFF00,
+0x197B,
+0x33AE,
+0x31A1,
+0x080E,
+0x4000,
+0x1963,
+0x33AE,
+0xA8C7,
+0x88D0,
+0x0807,
+0x08CA,
+0x8D52,
+0x31A2,
+0xA8CE,
+0x5461,
+0x88CF,
+0x5061,
+0x31A1,
+0x1351,
+0x302D,
+0x558D,
+0x2BCC,
+0x080E,
+0x00FF,
+0x197B,
+0x33AE,
+0x31A1,
+0x080E,
+0x4000,
+0x1963,
+0x33AE,
+0xA8DF,
+0x88E5,
+0x304D,
+0xA8E3,
+0x5461,
+0x88E4,
+0x5061,
+0x31A1,
+0x1352,
+0x302D,
+0x558D,
+0x2BCD,
+0x33FE,
+0x0C3F,
+0x86CB,
+0x0182,
+0x3C06,
+0x0183,
+0x0800,
+0x0185,
+0x247E,
+0x0163,
+0x7F80,
+0x1BE4,
+0x2980,
+0x1BE5,
+0x2960,
+0x1BE6,
+0x2966,
+0x1BE7,
+0x2968,
+0x080E,
+0x0400,
+0x1BF6,
+0x33AE,
+0xA902,
+0x891D,
+0x080F,
+0x0F80,
+0x0163,
+0x001E,
+0x33AF,
+0x080E,
+0x0800,
+0x1BF6,
+0x33AE,
+0xA912,
+0x080E,
+0x1000,
+0x1BF6,
+0x33AE,
+0xA918,
+0x891D,
+0x080F,
+0x03E0,
+0x0182,
+0x0002,
+0x33AF,
+0x891D,
+0x080F,
+0x03E0,
+0x0182,
+0x0006,
+0x33AF,
+0x1B37,
+0xA962,
+0x13CD,
+0x410C,
+0x1BCC,
+0x518D,
+0x31A1,
+0x1352,
+0x410C,
+0x502C,
+0x31A2,
+0x1352,
+0x410C,
+0x502C,
+0x31A2,
+0x1351,
+0x504C,
+0x2969,
+0x0807,
+0x0934,
+0x33FE,
+0x0C1F,
+0x89C5,
+0x6C00,
+0x080E,
+0xFF00,
+0x197B,
+0x33AE,
+0x31A1,
+0x080E,
+0x4000,
+0x1963,
+0x33AE,
+0xA940,
+0x8949,
+0x0807,
+0x0943,
+0x8D52,
+0x31A2,
+0xA947,
+0x5461,
+0x8948,
+0x5061,
+0x31A1,
+0x1351,
+0x302D,
+0x558D,
+0x2BCC,
+0x080E,
+0x00FF,
+0x197B,
+0x33AE,
+0x31A1,
+0x080E,
+0x4000,
+0x1963,
+0x33AE,
+0xA958,
+0x895E,
+0x304D,
+0xA95C,
+0x5461,
+0x895D,
+0x5061,
+0x31A1,
+0x1352,
+0x302D,
+0x558D,
+0x2BCD,
+0x080E,
+0x0020,
+0x1B6F,
+0x33AE,
+0xA96A,
+0x33FE,
+0x0C3F,
+0x8C25,
+0x080E,
+0x0020,
+0x1B6F,
+0x33AE,
+0xA976,
+0x33FE,
+0x0C3F,
+0x8D47,
+0x2BCB,
+0x13CB,
+0x3180,
+0x2311,
+0x33FE,
+0x0C3F,
+0x80F0,
+0x038D,
+0x0030,
+0xDB5E,
+0x1B38,
+0xA982,
+0x080F,
+0x0080,
+0xDB7B,
+0x33AF,
+0xD10D,
+0x010D,
+0x0002,
+0x0306,
+0x000C,
+0x0C2E,
+0x1919,
+0x33AE,
+0xA98C,
+0x8987,
+0xD306,
+0x0C2E,
+0x1919,
+0x33AE,
+0xA98D,
+0x0305,
+0x000C,
+0xD10D,
+0x8998,
+0x038D,
+0x0030,
+0xDB5E,
+0xD38D,
+0xDB10,
+0x1B86,
+0xA99D,
+0x899A,
+0xD310,
+0xDB8C,
+0x080F,
+0x0400,
+0xD185,
+0x33AF,
+0x9006,
+0x038D,
+0x0029,
+0x1BC5,
+0xA9A9,
+0x89BE,
+0x1B5E,
+0xA9AC,
+0x89BE,
+0x0D0E,
+0x1913,
+0x33AE,
+0xA9AC,
+0x080E,
+0x01FC,
+0x1BF6,
+0x33AE,
+0x31B7,
+0xAA12,
+0x89BB,
+0x0C2D,
+0x55B7,
+0x31B7,
+0xAA1C,
+0x0C4F,
+0xDBF6,
+0x33AF,
+0x080F,
+0x0400,
+0xD185,
+0x33AF,
+0x8A77,
+0x0167,
+0x21A2,
+0x1B33,
+0xA9DD,
+0x0C21,
+0x0C42,
+0x13F2,
+0x542C,
+0xA9D4,
+0x0181,
+0xAAAA,
+0x080F,
+0x3C00,
+0x0182,
+0x000A,
+0x33AF,
+0x89DD,
+0x544C,
+0xA9DD,
+0x0181,
+0x5555,
+0x080F,
+0x3C00,
+0x0182,
+0x0005,
+0x33AF,
+0x33DF,
+0x9007,
+0x038D,
+0x0029,
+0x1BC5,
+0xA9E6,
+0x1BC6,
+0xA9E6,
+0x8A09,
+0x7FFF,
+0x0D0E,
+0x1913,
+0x33AE,
+0xA9E7,
+0x1BC5,
+0xA9EE,
+0x89F1,
+0x0806,
+0x09F1,
+0x8A0F,
+0x1BC6,
+0xA9F4,
+0x8A09,
+0x1BF1,
+0x31BC,
+0x2BCC,
+0x430D,
+0x2BCD,
+0x0806,
+0x0A03,
+0x080E,
+0x0020,
+0x1BF3,
+0x33AE,
+0xAA03,
+0x33FE,
+0x0C3F,
+0x82BD,
+0x0806,
+0x0A08,
+0x1B30,
+0xAA08,
+0x8AB4,
+0x8EED,
+0xD38D,
+0x080F,
+0x0400,
+0xD185,
+0x33AF,
+0x807A,
+0x1B59,
+0xAA12,
+0x8A09,
+0x0C2F,
+0xDB75,
+0x33AF,
+0x0C6F,
+0x010D,
+0x0002,
+0x33AF,
+0xD3A6,
+0x03A6,
+0x000A,
+0x0180,
+0x7D00,
+0xD981,
+0xD182,
+0xD183,
+0xD184,
+0x0185,
+0x2408,
+0x01AC,
+0xA080,
+0x01AF,
+0x0002,
+0x0800,
+0x0341,
+0x0C01,
+0x0C62,
+0xD9AE,
+0x0807,
+0x0A32,
+0x1B3A,
+0xAA32,
+0x8A82,
+0x01AC,
+0xA0C0,
+0x01AF,
+0x0003,
+0x0800,
+0x0342,
+0x0C01,
+0x0C62,
+0x0807,
+0x0A3F,
+0x1B3A,
+0xAA3F,
+0x8A82,
+0x0C4E,
+0x1BF6,
+0x33AE,
+0xAA45,
+0x1B5E,
+0xA9B7,
+0x01AC,
+0x2000,
+0x0180,
+0x7D00,
+0x0181,
+0x5555,
+0x0182,
+0x1446,
+0x0183,
+0x010D,
+0x0184,
+0x2800,
+0x0185,
+0x6410,
+0xD1AC,
+0x01AF,
+0x0014,
+0x0800,
+0x0345,
+0x0C21,
+0x0C62,
+0x0807,
+0x0A5F,
+0x1B39,
+0xAA5F,
+0x8A82,
+0x0180,
+0x7D00,
+0x0181,
+0xAAAA,
+0x0182,
+0x2846,
+0x0183,
+0x010D,
+0x0184,
+0x2800,
+0x0185,
+0x6410,
+0xD1AC,
+0x01AF,
+0x0015,
+0x0800,
+0x0346,
+0x0C21,
+0x0C62,
+0x0807,
+0x0A77,
+0x1B39,
+0xAA77,
+0x8A82,
+0xD1AE,
+0xD1AC,
+0xD3A6,
+0x7000,
+0x0C6F,
+0xD10D,
+0x33AF,
+0x0C2F,
+0xD375,
+0x33AF,
+0x9006,
+0x380D,
+0x29AD,
+0xD9B6,
+0x7080,
+0x667C,
+0x302D,
+0xAA8F,
+0x080E,
+0x7FFF,
+0x198A,
+0x1186,
+0x33AE,
+0x8A94,
+0x080E,
+0x7FFF,
+0x198B,
+0x1186,
+0x33AE,
+0x402D,
+0x31A3,
+0x3184,
+0x3185,
+0x304D,
+0xAA9B,
+0x8A9E,
+0x4225,
+0x5C22,
+0x8A98,
+0x5085,
+0x546D,
+0xBAA2,
+0x8AAB,
+0x54A4,
+0x55A3,
+0xBAA6,
+0x8AA7,
+0x9007,
+0x5E20,
+0xBAB0,
+0x3580,
+0x9007,
+0x5A20,
+0x31A2,
+0x430D,
+0xAAA9,
+0x304D,
+0x29AD,
+0xD9B6,
+0x700F,
+0x9007,
+0x1B5E,
+0xAAB7,
+0x8A09,
+0x080E,
+0x8000,
+0x1BEB,
+0x33AE,
+0xAB44,
+0x0180,
+0x7D00,
+0x0181,
+0xFFFF,
+0x0182,
+0x3C23,
+0x0183,
+0x0087,
+0x0184,
+0x3068,
+0x0185,
+0x647C,
+0xD160,
+0xD161,
+0xD162,
+0x0163,
+0x001F,
+0x0164,
+0x000A,
+0xD165,
+0x0166,
+0x7800,
+0x0167,
+0x21A2,
+0xD168,
+0x0169,
+0xB7B7,
+0x0D0C,
+0x080E,
+0x03E0,
+0x196D,
+0x33AE,
+0x55AC,
+0xAB42,
+0x0180,
+0x1964,
+0x6620,
+0x0C00,
+0x0C01,
+0x080E,
+0x7FFF,
+0x1186,
+0x33AE,
+0x080D,
+0x0100,
+0x518D,
+0x31AC,
+0x0C2E,
+0x1963,
+0x33AE,
+0xAAF0,
+0x8AF8,
+0x080E,
+0x7FFF,
+0x1989,
+0x33AE,
+0x500D,
+0x31A0,
+0x5181,
+0x31A1,
+0x0C4E,
+0x1963,
+0x33AE,
+0xAAFD,
+0x8B05,
+0x080E,
+0x7FFF,
+0x198A,
+0x33AE,
+0x500D,
+0x31A0,
+0x5181,
+0x31A1,
+0x0C8E,
+0x1963,
+0x33AE,
+0xAB0A,
+0x8B12,
+0x080E,
+0x7FFF,
+0x198B,
+0x33AE,
+0x500D,
+0x31A0,
+0x5181,
+0x31A1,
+0x0D0E,
+0x1963,
+0x33AE,
+0xAB17,
+0x8B1F,
+0x080E,
+0x7FFF,
+0x198C,
+0x33AE,
+0x500D,
+0x31A0,
+0x5181,
+0x31A1,
+0x0E0E,
+0x1963,
+0x33AE,
+0xAB24,
+0x8B2C,
+0x080E,
+0x7FFF,
+0x198D,
+0x33AE,
+0x500D,
+0x31A0,
+0x5181,
+0x31A1,
+0x422D,
+0x540D,
+0xBB44,
+0x080F,
+0x03FF,
+0x0182,
+0x0084,
+0x33AF,
+0x0C2F,
+0xD183,
+0x33AF,
+0x080F,
+0x0020,
+0xD184,
+0x33AF,
+0x0FEF,
+0xD963,
+0x33AF,
+0x0180,
+0x7D00,
+0x6C00,
+0x8B44,
+0xBB44,
+0x6C00,
+0x13EE,
+0x319A,
+0x410C,
+0x1BED,
+0x31BB,
+0x518D,
+0x31BC,
+0x1B3C,
+0xAC2C,
+0x0180,
+0x07FF,
+0x0181,
+0xFFFF,
+0x0182,
+0x3C06,
+0x0183,
+0x0800,
+0x0184,
+0x3060,
+0x0185,
+0x6402,
+0x0160,
+0x0C07,
+0xD161,
+0x0162,
+0x0042,
+0x0163,
+0x3000,
+0xD164,
+0xD165,
+0x0166,
+0x7828,
+0x0167,
+0x21A2,
+0xD168,
+0x0807,
+0x0B6C,
+0x33FE,
+0x0C1F,
+0x89C5,
+0x0FEF,
+0x0182,
+0x0002,
+0x33AF,
+0x1352,
+0x1BEE,
+0x518D,
+0x31AC,
+0x430D,
+0xAB78,
+0x318D,
+0x8B7A,
+0x080D,
+0x00FF,
+0x31A1,
+0x080F,
+0xFF00,
+0x2969,
+0x33AF,
+0x1351,
+0x1BED,
+0x518D,
+0x31AC,
+0x430D,
+0xAB87,
+0x318D,
+0x8B89,
+0x080D,
+0x00FF,
+0x31A1,
+0x080F,
+0x00FF,
+0x2969,
+0x33AF,
+0x6C00,
+0x1351,
+0x080E,
+0xFF00,
+0x197B,
+0x33AE,
+0x558D,
+0xBB98,
+0x0C1B,
+0x8B99,
+0x31BB,
+0x1352,
+0x080E,
+0x00FF,
+0x197B,
+0x33AE,
+0x558D,
+0xBBA2,
+0x0C1A,
+0x8BA3,
+0x31BA,
+0x0180,
+0x7D00,
+0x0181,
+0xFFFF,
+0x0182,
+0x3C02,
+0x0183,
+0x0800,
+0x0184,
+0x3060,
+0x0185,
+0x6402,
+0xD160,
+0xD161,
+0x0162,
+0x0042,
+0x0163,
+0x0060,
+0x0164,
+0x00D0,
+0xD165,
+0x0166,
+0x7800,
+0x0167,
+0x21A2,
+0xD168,
+0x13CD,
+0x1B52,
+0x518D,
+0x31AC,
+0x430D,
+0xABC5,
+0x318D,
+0x8BC7,
+0x080D,
+0x00FF,
+0x31A1,
+0x080F,
+0xFF00,
+0x2969,
+0x33AF,
+0x13CC,
+0x1B51,
+0x518D,
+0x31AC,
+0x430D,
+0xABD4,
+0x318D,
+0x8BD6,
+0x080D,
+0x00FF,
+0x31A1,
+0x080F,
+0x00FF,
+0x2969,
+0x33AF,
+0x0807,
+0x0BE0,
+0x33FE,
+0x0C1F,
+0x89C5,
+0xD160,
+0x080F,
+0x0038,
+0x0166,
+0x0005,
+0x080F,
+0x1000,
+0xD166,
+0x080F,
+0x0E00,
+0x0166,
+0x0004,
+0x33AF,
+0x1BED,
+0x31A2,
+0x545B,
+0xBC0E,
+0x080E,
+0x03C0,
+0x196C,
+0x33AE,
+0x402D,
+0x31A0,
+0x080E,
+0x003F,
+0x196C,
+0x33AE,
+0xABFE,
+0x5820,
+0x8BFF,
+0x5840,
+0x31A0,
+0x0DC4,
+0x5404,
+0xBC04,
+0x0DC0,
+0x080F,
+0x7C00,
+0x2167,
+0x080F,
+0x03E0,
+0x2167,
+0x33AF,
+0x0169,
+0xFFFF,
+0x8C2B,
+0x1BED,
+0x590D,
+0x576D,
+0xBC2C,
+0x080E,
+0x03C0,
+0x196C,
+0x33AE,
+0x402D,
+0x31A0,
+0x080E,
+0x003F,
+0x196C,
+0x33AE,
+0xAC21,
+0x5C20,
+0xBC20,
+0x0C0D,
+0x31A0,
+0x080F,
+0x7C00,
+0x2167,
+0x080F,
+0x03E0,
+0x2167,
+0x0FEF,
+0x2167,
+0x33AF,
+0xD169,
+0x6C00,
+0x1B3B,
+0xAC7E,
+0x0180,
+0x07FF,
+0x0181,
+0xFFFF,
+0x0182,
+0x3C06,
+0x0183,
+0x0800,
+0x0184,
+0x3060,
+0x0185,
+0x6402,
+0x0160,
+0x0C07,
+0xD161,
+0x0162,
+0x0042,
+0x0163,
+0x3000,
+0xD164,
+0xD165,
+0x0166,
+0x7828,
+0x0167,
+0x21A2,
+0xD168,
+0x1352,
+0x519A,
+0x31AC,
+0x430D,
+0xAC4F,
+0x318D,
+0x8C51,
+0x080D,
+0x00FF,
+0x31A1,
+0x080F,
+0xFF00,
+0x2969,
+0x33AF,
+0x1351,
+0x519B,
+0x31AC,
+0x430D,
+0xAC5D,
+0x318D,
+0x8C5F,
+0x080D,
+0x00FF,
+0x31A1,
+0x080F,
+0x00FF,
+0x2969,
+0x33AF,
+0x0807,
+0x0C69,
+0x33FE,
+0x0C1F,
+0x89C5,
+0x6C00,
+0x1351,
+0x080E,
+0xFF00,
+0x197B,
+0x33AE,
+0x558D,
+0xBC73,
+0x0C1B,
+0x8C74,
+0x31BB,
+0x1352,
+0x080E,
+0x00FF,
+0x197B,
+0x33AE,
+0x558D,
+0xBC7D,
+0x0C1A,
+0x8C7E,
+0x31BA,
+0x080E,
+0x0040,
+0x1BF3,
+0x33AE,
+0xACB2,
+0x0180,
+0x7D00,
+0x0181,
+0xFFFF,
+0x0182,
+0x3C06,
+0x0183,
+0x0800,
+0x0184,
+0x3060,
+0x0185,
+0x647C,
+0xD160,
+0x0161,
+0x0009,
+0x0162,
+0x0042,
+0x0163,
+0x0F00,
+0x0164,
+0xA000,
+0x0165,
+0x0999,
+0x0166,
+0x7800,
+0x0167,
+0x21A2,
+0xD168,
+0x334C,
+0x410C,
+0x336D,
+0x518D,
+0x31BC,
+0x1352,
+0x410C,
+0x3381,
+0x502C,
+0x31A2,
+0x1351,
+0x504C,
+0x2969,
+0x0807,
+0x0CB1,
+0x33FE,
+0x0C1F,
+0x89C5,
+0x6C00,
+0x196B,
+0x2B5A,
+0x196D,
+0x2B5C,
+0x196C,
+0x2B5B,
+0x196E,
+0x2B5D,
+0x196F,
+0x2B60,
+0x1970,
+0x2B61,
+0x1971,
+0x2B62,
+0x1972,
+0x2B63,
+0x8CC3,
+0x33FE,
+0x0C3F,
+0x8000,
+0x9006,
+0x080E,
+0x3000,
+0x1913,
+0x080E,
+0xFFFF,
+0xACCE,
+0x9006,
+0x19B3,
+0x0800,
+0x0077,
+0x540D,
+0xACD4,
+0x8D51,
+0xD9AE,
+0x01AF,
+0x0010,
+0x0800,
+0x0348,
+0x0801,
+0x0347,
+0x0802,
+0x034B,
+0x3C40,
+0x0807,
+0x0CE1,
+0x8D52,
+0x0807,
+0x0CE5,
+0x0C04,
+0x8D64,
+0x01AF,
+0x0012,
+0x0800,
+0x0348,
+0x0801,
+0x0348,
+0x0802,
+0x034D,
+0x3C40,
+0x0807,
+0x0CF1,
+0x8D52,
+0x0807,
+0x0CF5,
+0x0C04,
+0x8D64,
+0x01AF,
+0x0011,
+0x0800,
+0x0348,
+0x0801,
+0x0347,
+0x0802,
+0x034C,
+0x3C40,
+0x0807,
+0x0D01,
+0x8D52,
+0x0807,
+0x0D05,
+0x0C24,
+0x8D64,
+0x01AF,
+0x0013,
+0x0800,
+0x0348,
+0x0801,
+0x0348,
+0x0802,
+0x034E,
+0x3C40,
+0x0807,
+0x0D11,
+0x8D52,
+0x0807,
+0x0D15,
+0x0C24,
+0x8D64,
+0x19B3,
+0x31A4,
+0x0805,
+0x01EE,
+0x54A4,
+0xAD1C,
+0x8D3F,
+0x0805,
+0x01CC,
+0x54A4,
+0xAD21,
+0x8D41,
+0x0805,
+0x0144,
+0x54A4,
+0xAD26,
+0x8D43,
+0x0805,
+0x0188,
+0x54A4,
+0xAD2B,
+0x8D46,
+0x0805,
+0x0100,
+0x54A4,
+0xAD30,
+0x8D48,
+0x0805,
+0x0111,
+0x54A4,
+0xAD35,
+0x8D4A,
+0x0805,
+0x0155,
+0x54A4,
+0xAD3A,
+0x8D4C,
+0x0805,
+0x0177,
+0x54A4,
+0xAD4E,
+0x8D4E,
+0x01B3,
+0x01CC,
+0x01B3,
+0x0144,
+0x01B3,
+0x0155,
+0x8D4C,
+0x01B3,
+0x0100,
+0x01B3,
+0x0111,
+0x01B3,
+0x0155,
+0x01B3,
+0x0177,
+0x01B3,
+0x0077,
+0xD1AE,
+0x9006,
+0x080E,
+0x1FE0,
+0x196E,
+0x33AE,
+0x31A3,
+0x080E,
+0x1000,
+0x196E,
+0x33AE,
+0x31A4,
+0xAD5E,
+0x8D62,
+0x080D,
+0x0100,
+0x546D,
+0x31A3,
+0x308D,
+0x9007,
+0xAD68,
+0x308D,
+0xAD72,
+0x8D6B,
+0x308D,
+0xAD6B,
+0x8D72,
+0x3805,
+0x5065,
+0x31A4,
+0x430D,
+0xAD79,
+0x308D,
+0x8D76,
+0x3805,
+0x5465,
+0xBD76,
+0x8D79,
+0x3C02,
+0x35A1,
+0x8D7A,
+0x384D,
+0x29AD,
+0xD9B6,
+0x9007,
+0x01AF,
+0x0010,
+0x01AD,
+0x0080,
+0xD9B6,
+0x01AF,
+0x0011,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0016,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0014,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0012,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0013,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0018,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0015,
+0xD1AD,
+0xD9B6,
+0x9007,
+0x01AF,
+0x0010,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0011,
+0x01AD,
+0x0080,
+0xD9B6,
+0x01AF,
+0x0016,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0014,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0012,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0013,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0018,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0015,
+0xD1AD,
+0xD9B6,
+0x9007,
+0x01AF,
+0x0010,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0011,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0016,
+0x01AD,
+0x0080,
+0xD9B6,
+0x01AF,
+0x0014,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0012,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0013,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0018,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0015,
+0xD1AD,
+0xD9B6,
+0x9007,
+0x01AF,
+0x0010,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0011,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0016,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0014,
+0x01AD,
+0x0080,
+0xD9B6,
+0x01AF,
+0x0012,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0013,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0018,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0015,
+0xD1AD,
+0xD9B6,
+0x9007,
+0x01AF,
+0x0010,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0011,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0016,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0014,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0012,
+0x01AD,
+0x0080,
+0xD9B6,
+0x01AF,
+0x0013,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0018,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0015,
+0xD1AD,
+0xD9B6,
+0x9007,
+0x01AF,
+0x0010,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0011,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0016,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0014,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0012,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0013,
+0x01AD,
+0x0080,
+0xD9B6,
+0x01AF,
+0x0018,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0015,
+0xD1AD,
+0xD9B6,
+0x9007,
+0x01AF,
+0x0010,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0011,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0016,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0014,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0012,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0013,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0018,
+0x01AD,
+0x0080,
+0xD9B6,
+0x01AF,
+0x0015,
+0xD1AD,
+0xD9B6,
+0x9007,
+0x01AF,
+0x0010,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0011,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0016,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0014,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0012,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0013,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0018,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0015,
+0x01AD,
+0x0080,
+0xD9B6,
+0x9007,
+0x01AF,
+0x0010,
+0x01AD,
+0x0080,
+0xD9B6,
+0x01AF,
+0x0011,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0016,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0014,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0012,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0013,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0018,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0015,
+0xD1AD,
+0xD9B6,
+0x9007,
+0x01AF,
+0x0010,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0011,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0016,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0014,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0012,
+0x01AD,
+0x0080,
+0xD9B6,
+0x01AF,
+0x0013,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0018,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0015,
+0xD1AD,
+0xD9B6,
+0x9007,
+0x0C4E,
+0x1B24,
+0x33AE,
+0xAEF2,
+0x8F27,
+0x038D,
+0x0029,
+0x0C2F,
+0xDB75,
+0x33AF,
+0x0C6F,
+0x010D,
+0x0002,
+0x33AF,
+0xD3A6,
+0x03A6,
+0x000A,
+0x0C2E,
+0x1B24,
+0x33AE,
+0xAF10,
+0xD9AE,
+0x01AF,
+0x0016,
+0xD1AD,
+0xD9B6,
+0x01AF,
+0x0018,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x0C2F,
+0xDB24,
+0x33AF,
+0x8F1D,
+0xD9AE,
+0x01AF,
+0x0016,
+0x01AD,
+0x00FF,
+0xD9B6,
+0x01AF,
+0x0018,
+0xD1AD,
+0xD9B6,
+0x0C2F,
+0xD324,
+0x33AF,
+0xD1AE,
+0xD3A6,
+0x7000,
+0x0C6F,
+0xD10D,
+0x33AF,
+0x0C2F,
+0xD375,
+0x33AF,
+0xD38D,
+0x8A09,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0180,
+0x7D00,
+0x0181,
+0xAAAA,
+0x0182,
+0x2802,
+0x0183,
+0x0800,
+0x0184,
+0x3060,
+0x0185,
+0x6402,
+0x0160,
+0x0C1F,
+0xD161,
+0x0162,
+0x0042,
+0x0163,
+0x3000,
+0xD164,
+0x0165,
+0x3000,
+0x0166,
+0x7828,
+0x0167,
+0x21A2,
+0xD168,
+0x0169,
+0xB7B7,
+0x6E00,
+0x197B,
+0x430D,
+0x31BA,
+0x0180,
+0x7D00,
+0x0181,
+0xAAAA,
+0x0182,
+0x2802,
+0x0183,
+0x0800,
+0x0184,
+0x3060,
+0x0185,
+0x6402,
+0x0160,
+0x0C1F,
+0xD161,
+0xD162,
+0x0163,
+0x3000,
+0xD164,
+0x0165,
+0xB000,
+0x0166,
+0x7828,
+0x0167,
+0x21A2,
+0xD168,
+0x0169,
+0x4949,
+0x6E00,
+0x197B,
+0x430D,
+0x55BA,
+0xB043,
+0x0C0D,
+0x080F,
+0x00FF,
+0x2BE9,
+0x33AE,
+0x8D47,
+0x2BCA,
+0x33DF,
+0x8CC6,
+0x01A8,
+0x0140,
+0xD9B5,
+0x01AC,
+0xA200,
+0x0180,
+0x03FF,
+0xD981,
+0xD182,
+0xD183,
+0x0184,
+0x4000,
+0x0185,
+0x2408,
+0x0800,
+0x0349,
+0x0802,
+0x034A,
+0x0803,
+0x01B4,
+0x080E,
+0x01E0,
+0x1B1C,
+0x33AE,
+0x31A4,
+0x0EED,
+0x35A0,
+0x3C43,
+0xD9B8,
+0x0816,
+0x006B,
+0x8071,
+0xD1B5,
+0x33DF,
+0x1B27,
+0xA070,
+0x863A,
+0x8644,
+0x7080,
+0x1B27,
+0xA084,
+0x1B35,
+0xA084,
+0x0801,
+0x0022,
+0x3805,
+0x0DCD,
+0x54AD,
+0xA07D,
+0x8081,
+0x5E20,
+0x3C43,
+0xD9B8,
+0x8078,
+0x6670,
+0xB084,
+0x80AF,
+0x380D,
+0x2B53,
+0x1B34,
+0xA0AE,
+0x308D,
+0xA08B,
+0x80AE,
+0x3805,
+0x0CED,
+0x54AD,
+0xA090,
+0x80A3,
+0x0DED,
+0x54AD,
+0xA094,
+0x80A3,
+0x0EED,
+0x54AD,
+0xA098,
+0x80A3,
+0x0FED,
+0x54AD,
+0xA09C,
+0x80A3,
+0x080D,
+0x0027,
+0x54AD,
+0xA0A1,
+0x80A3,
+0x5C24,
+0x31A4,
+0x5A20,
+0x3805,
+0x0818,
+0x002F,
+0x54B8,
+0xB0AB,
+0x5E20,
+0x80AE,
+0x3C43,
+0xD9B8,
+0x8088,
+0x9016,
+0x5A20,
+0x55A1,
+0xB0B6,
+0x3580,
+0x318D,
+0x2B53,
+0x8084,
+0x3C43,
+0xD9B8,
+0x700F,
+0x8081,
+0x0800,
+0x0349,
+0x0802,
+0x034A,
+0x0803,
+0x01B4,
+0x302D,
+0xA0C4,
+0x13C9,
+0x80C5,
+0x308C,
+0x80CB,
+0x3C43,
+0xD9B8,
+0xD1B5,
+0x33DF,
+0x9007,
+0x3804,
+0x5584,
+0xB0E0,
+0x548C,
+0x31A4,
+0x0801,
+0x002F,
+0x308D,
+0xA0D5,
+0x80DF,
+0x5C24,
+0x31A4,
+0x5A20,
+0x3805,
+0x54A1,
+0xB0DC,
+0x80DF,
+0x3C43,
+0xD9B8,
+0x80D2,
+0x80C6,
+0x31A4,
+0x0C01,
+0x308D,
+0xA0E5,
+0x80EF,
+0x5C24,
+0x31A4,
+0x5E20,
+0x3805,
+0x5425,
+0xB0EC,
+0x80EF,
+0x3C43,
+0xD9B8,
+0x80E2,
+0x80C6,
+0x0E0E,
+0x1B6F,
+0x33AE,
+0xA275,
+0x0180,
+0x03FF,
+0x0181,
+0xFFFF,
+0x0182,
+0x3C46,
+0xD183,
+0x0184,
+0x7020,
+0x0185,
+0x2404,
+0x0160,
+0x0C10,
+0x0161,
+0x0009,
+0x0162,
+0x00C2,
+0xD163,
+0xD164,
+0xD165,
+0x0166,
+0x792B,
+0x0167,
+0x21A2,
+0x0168,
+0x4925,
+0xD169,
+0x1B33,
+0xA127,
+0x0C21,
+0x0C42,
+0x13F2,
+0x542C,
+0xA11E,
+0x0181,
+0xAAAA,
+0x080F,
+0x3C00,
+0x0182,
+0x000A,
+0x33AF,
+0x8127,
+0x544C,
+0xA127,
+0x0181,
+0x5555,
+0x080F,
+0x3C00,
+0x0182,
+0x0005,
+0x33AF,
+0x080E,
+0x8000,
+0x1963,
+0x33AE,
+0xA131,
+0x080E,
+0x0FE0,
+0x116E,
+0x33AE,
+0x8135,
+0x080E,
+0x0FC0,
+0x116E,
+0x33AE,
+0x3184,
+0x080E,
+0x1000,
+0x116E,
+0x33AE,
+0x3185,
+0x13CC,
+0x3181,
+0x1351,
+0x502C,
+0x31AC,
+0x0C23,
+0x5465,
+0xB148,
+0x548C,
+0x31A2,
+0xB15C,
+0x0C02,
+0x815C,
+0x080E,
+0x8000,
+0x1963,
+0x33AE,
+0xA150,
+0x0803,
+0x0080,
+0x8152,
+0x0803,
+0x0040,
+0x548C,
+0x506D,
+0x31A2,
+0x0803,
+0x0100,
+0x546D,
+0xB15A,
+0x815C,
+0x0802,
+0x00FF,
+0x0C2F,
+0xDB75,
+0x33AF,
+0x0C6F,
+0x010D,
+0x0002,
+0x33AF,
+0xD3A6,
+0x03A6,
+0x000A,
+0x4102,
+0x4302,
+0x304D,
+0xD9AE,
+0x29AD,
+0x01AF,
+0x0016,
+0xD9B6,
+0x13CD,
+0x3181,
+0x1352,
+0x502C,
+0x31AC,
+0x0C23,
+0x5465,
+0xB17B,
+0x548C,
+0x31A2,
+0xB18F,
+0x0C02,
+0x818F,
+0x080E,
+0x8000,
+0x1963,
+0x33AE,
+0xA183,
+0x0803,
+0x0080,
+0x8185,
+0x0803,
+0x0040,
+0x548C,
+0x506D,
+0x31A2,
+0x0803,
+0x0100,
+0x546D,
+0xB18D,
+0x818F,
+0x0802,
+0x00FF,
+0x4102,
+0x4302,
+0x304D,
+0x29AD,
+0x01AF,
+0x0018,
+0xD9B6,
+0xD1AE,
+0xD3A6,
+0x7000,
+0x0C6F,
+0xD10D,
+0x33AF,
+0x0C2F,
+0xD375,
+0x33AF,
+0x6647,
+0x080E,
+0x7FFF,
+0x1989,
+0x33AE,
+0x402D,
+0x31A3,
+0x080E,
+0x7FFF,
+0x1986,
+0x31A2,
+0x31A4,
+0x31AC,
+0x080E,
+0x01E0,
+0x1B76,
+0x33AE,
+0xA1B2,
+0x81B5,
+0x422C,
+0x5C2D,
+0x81B0,
+0x3181,
+0x4282,
+0x0C05,
+0x0DEE,
+0x1B76,
+0x33AE,
+0x31B7,
+0xA1BE,
+0x81C3,
+0x5045,
+0x31A5,
+0x5C37,
+0x31B7,
+0x81BC,
+0x0E0E,
+0x1B76,
+0x33AE,
+0xA1CA,
+0x50A4,
+0x31A2,
+0x81CC,
+0x54A4,
+0x31A2,
+0x5022,
+0x546D,
+0xB1D0,
+0x81D6,
+0x5422,
+0xB1D3,
+0x81DB,
+0x55A3,
+0xB1DB,
+0x81D8,
+0xDB12,
+0x81DC,
+0x0312,
+0x0002,
+0x81DC,
+0xD312,
+0x080E,
+0x0038,
+0x1B77,
+0x33AE,
+0x31AC,
+0x0CEE,
+0x1B77,
+0x33AE,
+0x31A0,
+0x080E,
+0x00F0,
+0x1B78,
+0x33AE,
+0x31A1,
+0x0DEE,
+0x1B78,
+0x33AE,
+0x31A2,
+0x080E,
+0x00E0,
+0x196B,
+0x33AE,
+0x31A3,
+0x080E,
+0x03C0,
+0x196C,
+0x33AE,
+0x31A4,
+0x4024,
+0x080E,
+0x003F,
+0x196C,
+0x33AE,
+0xA1FF,
+0x8201,
+0x5824,
+0x31A4,
+0x546C,
+0xB206,
+0x5444,
+0xB206,
+0x820B,
+0x5403,
+0xB210,
+0x5481,
+0xB210,
+0x820E,
+0x0313,
+0x0002,
+0x8211,
+0xDB13,
+0x8211,
+0xD313,
+0x080E,
+0x03E0,
+0x1379,
+0x33AE,
+0x3180,
+0x0FEE,
+0x1379,
+0x33AE,
+0x3181,
+0x080E,
+0x7F00,
+0x137A,
+0x33AE,
+0x3184,
+0x080E,
+0x8000,
+0x137A,
+0x33AE,
+0x3197,
+0x080E,
+0x007F,
+0x137A,
+0x33AE,
+0x3185,
+0x080E,
+0x0080,
+0x137A,
+0x33AE,
+0x3198,
+0x080E,
+0x03E0,
+0x116D,
+0x33AE,
+0x3182,
+0x0807,
+0x0236,
+0x82AB,
+0x5440,
+0xB239,
+0x8272,
+0x332D,
+0xA241,
+0x32ED,
+0xA240,
+0x5464,
+0xB247,
+0x8272,
+0x8272,
+0x32ED,
+0xA244,
+0x8247,
+0x5483,
+0xB247,
+0x8272,
+0x5422,
+0xB24A,
+0x826F,
+0x332D,
+0xA251,
+0x330D,
+0xA257,
+0x54A3,
+0xB257,
+0x826F,
+0x330D,
+0xA254,
+0x826F,
+0x5465,
+0xB257,
+0x826F,
+0x080E,
+0x03C0,
+0x196C,
+0x33AE,
+0x5CED,
+0xA274,
+0x1BED,
+0x5C8D,
+0x31AC,
+0x1BCC,
+0x55AC,
+0xA264,
+0x8266,
+0xB26F,
+0x8266,
+0x1BEE,
+0x5C8D,
+0x31AC,
+0x1BCD,
+0x55AC,
+0xA26D,
+0x8274,
+0xB26F,
+0x8274,
+0x0314,
+0x0002,
+0x8275,
+0xDB14,
+0x8275,
+0xD314,
+0x0C2F,
+0xDB75,
+0x33AF,
+0x0C6F,
+0x010D,
+0x0002,
+0x33AF,
+0xD3A6,
+0x03A6,
+0x000A,
+0x1B51,
+0x1352,
+0x3180,
+0xD9AE,
+0x29AD,
+0x01AF,
+0x0016,
+0xD9B6,
+0x21AD,
+0x01AF,
+0x0018,
+0xD9B6,
+0xD1AE,
+0xD3A6,
+0x7000,
+0x0C6F,
+0xD10D,
+0x33AF,
+0x0C2F,
+0xD375,
+0x33AF,
+0x196B,
+0x2B5A,
+0x196D,
+0x2B5C,
+0x196C,
+0x2B5B,
+0x196E,
+0x2B5D,
+0x196F,
+0x2B60,
+0x1970,
+0x2B61,
+0x1971,
+0x2B62,
+0x1972,
+0x2B63,
+0x13CD,
+0x410C,
+0x1BCC,
+0x518D,
+0x2BF1,
+0x33DF,
+0x8979,
+0x080E,
+0x1FE0,
+0x196E,
+0x33AE,
+0x31A3,
+0x080E,
+0x1000,
+0x196E,
+0x33AE,
+0x31B9,
+0xA2B7,
+0x82BB,
+0x080D,
+0x0100,
+0x546D,
+0x31A3,
+0x332D,
+0x9007,
+0x0C2F,
+0xDB75,
+0x33AF,
+0x0C6F,
+0x010D,
+0x0002,
+0x33AF,
+0xD3A6,
+0x03A6,
+0x000A,
+0x01B3,
+0x0177,
+0xD9AE,
+0x82FB,
+0x01B3,
+0x0155,
+0x01B3,
+0x0144,
+0x01B3,
+0x01CC,
+0x01B3,
+0x01EE,
+0x83DA,
+0x01B3,
+0x01CC,
+0x01B3,
+0x0144,
+0x01B3,
+0x0155,
+0x01B3,
+0x0177,
+0x84AB,
+0x01B3,
+0x0155,
+0x01B3,
+0x0111,
+0x01B3,
+0x0100,
+0x01B3,
+0x0188,
+0x859D,
+0x01B3,
+0x0100,
+0x01B3,
+0x0111,
+0x01B3,
+0x0155,
+0x01B3,
+0x0177,
+0x01B3,
+0x0077,
+0xD1AE,
+0xD3A6,
+0x7000,
+0x0C6F,
+0xD10D,
+0x33AF,
+0x0C2F,
+0xD375,
+0x33AF,
+0x0C1F,
+0x9006,
+0x0180,
+0x7D00,
+0x0181,
+0xAAAA,
+0x0182,
+0x28C6,
+0xD183,
+0x0184,
+0x2C00,
+0x0185,
+0x6408,
+0x0800,
+0x01AD,
+0x01AD,
+0x0080,
+0x01AF,
+0x0016,
+0xD9B6,
+0x0807,
+0x0313,
+0x33FE,
+0x0C1F,
+0x0C63,
+0x864B,
+0x19AD,
+0x2B47,
+0x0180,
+0x7D00,
+0x0181,
+0xAAAA,
+0x0182,
+0x2886,
+0xD183,
+0x0184,
+0x2C00,
+0x0185,
+0x6408,
+0x0800,
+0x01AD,
+0x01AD,
+0x0080,
+0x01AF,
+0x0016,
+0xD9B6,
+0x0807,
+0x032D,
+0x33FE,
+0x0C1F,
+0x0C43,
+0x864B,
+0x0807,
+0x0330,
+0x868A,
+0x31A5,
+0x0801,
+0x0020,
+0x5023,
+0x31A1,
+0x080E,
+0x00FF,
+0x13EF,
+0x33AE,
+0x3180,
+0x2179,
+0x2348,
+0x5581,
+0x43ED,
+0x31B8,
+0x080D,
+0x00FF,
+0x542D,
+0x55AC,
+0x43ED,
+0x31B9,
+0x0800,
+0x0179,
+0x30AD,
+0x0807,
+0x034C,
+0x0C04,
+0x86B5,
+0x080E,
+0x00FF,
+0x1BEF,
+0x33AE,
+0x2B48,
+0x0800,
+0x0348,
+0x0801,
+0x0347,
+0x0807,
+0x0358,
+0x866E,
+0x1B48,
+0x080F,
+0x00FF,
+0x2BEF,
+0x33AF,
+0x0800,
+0x0348,
+0x0801,
+0x0347,
+0x0802,
+0x0179,
+0x0807,
+0x0366,
+0x868A,
+0x0807,
+0x036A,
+0x0C04,
+0x869C,
+0x0180,
+0x7D00,
+0x0181,
+0x5555,
+0x0182,
+0x14C6,
+0xD183,
+0x0184,
+0x2C00,
+0x0185,
+0x6408,
+0x0800,
+0x01AD,
+0x01AD,
+0x0080,
+0x01AF,
+0x0018,
+0xD9B6,
+0x0807,
+0x0382,
+0x33FE,
+0x0C1F,
+0x0C63,
+0x864B,
+0x19AD,
+0x2B47,
+0x0180,
+0x7D00,
+0x0181,
+0x5555,
+0x0182,
+0x1486,
+0xD183,
+0x0184,
+0x2C00,
+0x0185,
+0x6408,
+0x0800,
+0x01AD,
+0x01AD,
+0x0080,
+0x01AF,
+0x0018,
+0xD9B6,
+0x0807,
+0x039C,
+0x33FE,
+0x0C1F,
+0x0C43,
+0x864B,
+0x0807,
+0x039F,
+0x868A,
+0x31A5,
+0x0801,
+0x0020,
+0x5023,
+0x31A1,
+0x080E,
+0x00FF,
+0x13F0,
+0x33AE,
+0x3180,
+0x217A,
+0x2348,
+0x5581,
+0x43ED,
+0x31B8,
+0x080D,
+0x00FF,
+0x542D,
+0x55AC,
+0x43ED,
+0x31B9,
+0x0800,
+0x017A,
+0x30AD,
+0x0807,
+0x03BB,
+0x0C04,
+0x86B5,
+0x080E,
+0x00FF,
+0x1BF0,
+0x33AE,
+0x2B48,
+0x0800,
+0x0348,
+0x0801,
+0x0347,
+0x0807,
+0x03C7,
+0x866E,
+0x1B48,
+0x080F,
+0x00FF,
+0x2BF0,
+0x33AF,
+0x0800,
+0x0348,
+0x0801,
+0x0347,
+0x0802,
+0x017A,
+0x0807,
+0x03D5,
+0x868A,
+0x0807,
+0x03D9,
+0x0C04,
+0x869C,
+0x82CB,
+0x0180,
+0x7D00,
+0x0181,
+0xAAAA,
+0x0182,
+0x28C6,
+0xD183,
+0x0184,
+0x2C00,
+0x0185,
+0x6408,
+0x0800,
+0x01AD,
+0x01AD,
+0x0080,
+0x01AF,
+0x0010,
+0xD9B6,
+0x0807,
+0x03F2,
+0x33FE,
+0x0C1F,
+0x0C63,
+0x864B,
+0x19AD,
+0x2B47,
+0x0180,
+0x7D00,
+0x0181,
+0xAAAA,
+0x0182,
+0x2886,
+0xD183,
+0x0184,
+0x2C00,
+0x0185,
+0x6408,
+0x0800,
+0x01AD,
+0x01AD,
+0x0080,
+0x01AF,
+0x0010,
+0xD9B6,
+0x0807,
+0x040C,
+0x33FE,
+0x0C1F,
+0x0C43,
+0x864B,
+0x0807,
+0x040F,
+0x868A,
+0x31A5,
+0x0801,
+0x0020,
+0x5023,
+0x134B,
+0x3180,
+0x2173,
+0x2348,
+0x558D,
+0x43ED,
+0x31B8,
+0x0801,
+0x0020,
+0x5061,
+0x0801,
+0x00FF,
+0x55A1,
+0x55AC,
+0x43ED,
+0x31B9,
+0x0800,
+0x0173,
+0x30AD,
+0x0807,
+0x042A,
+0x0C04,
+0x86B5,
+0x1B4B,
+0x2B48,
+0x0800,
+0x0348,
+0x0801,
+0x0347,
+0x0807,
+0x0433,
+0x866E,
+0x1B48,
+0x2B4B,
+0x0800,
+0x0348,
+0x0801,
+0x0347,
+0x0802,
+0x0173,
+0x0807,
+0x043E,
+0x868A,
+0x0807,
+0x0442,
+0x0C04,
+0x869C,
+0x0180,
+0x7D00,
+0x0181,
+0x5555,
+0x0182,
+0x14C6,
+0xD183,
+0x0184,
+0x2C00,
+0x0185,
+0x6408,
+0x0800,
+0x01AD,
+0x01AD,
+0x0080,
+0x01AF,
+0x0012,
+0xD9B6,
+0x0807,
+0x045A,
+0x33FE,
+0x0C1F,
+0x0C63,
+0x864B,
+0x19AD,
+0x2B47,
+0x0180,
+0x7D00,
+0x0181,
+0x5555,
+0x0182,
+0x1486,
+0xD183,
+0x0184,
+0x2C00,
+0x0185,
+0x6408,
+0x0800,
+0x01AD,
+0x01AD,
+0x0080,
+0x01AF,
+0x0012,
+0xD9B6,
+0x0807,
+0x0474,
+0x33FE,
+0x0C1F,
+0x0C43,
+0x864B,
+0x0807,
+0x0477,
+0x868A,
+0x31A5,
+0x0801,
+0x0020,
+0x5023,
+0x134D,
+0x3180,
+0x2175,
+0x2348,
+0x558D,
+0x43ED,
+0x31B8,
+0x0801,
+0x0020,
+0x5061,
+0x0801,
+0x00FF,
+0x55A1,
+0x55AC,
+0x43ED,
+0x31B9,
+0x0800,
+0x0175,
+0x30AD,
+0x0807,
+0x0492,
+0x0C04,
+0x86B5,
+0x1B4D,
+0x2B48,
+0x0800,
+0x0348,
+0x0801,
+0x0347,
+0x0807,
+0x049B,
+0x866E,
+0x1B48,
+0x2B4D,
+0x0800,
+0x0348,
+0x0801,
+0x0347,
+0x0802,
+0x0175,
+0x0807,
+0x04A6,
+0x868A,
+0x0807,
+0x04AA,
+0x0C04,
+0x869C,
+0x82D4,
+0x0180,
+0x7D00,
+0x0181,
+0xAAAA,
+0x0182,
+0x2846,
+0xD183,
+0x0184,
+0x2C00,
+0x0185,
+0x6408,
+0x0800,
+0x01AD,
+0x01AD,
+0x0080,
+0x01AF,
+0x0016,
+0xD9B6,
+0x0807,
+0x04C3,
+0x33FE,
+0x0C1F,
+0x0C63,
+0x864B,
+0x19AD,
+0x2B47,
+0x0180,
+0x7D00,
+0x0181,
+0xAAAA,
+0x0182,
+0x2806,
+0xD183,
+0x0184,
+0x2C00,
+0x0185,
+0x6408,
+0x0800,
+0x01AD,
+0x01AD,
+0x0080,
+0x01AF,
+0x0016,
+0xD9B6,
+0x0807,
+0x04DD,
+0x33FE,
+0x0C1F,
+0x0C43,
+0x864B,
+0x0807,
+0x04E0,
+0x868A,
+0x31A5,
+0x0801,
+0x0020,
+0x5023,
+0x080E,
+0xFF00,
+0x13EF,
+0x33AE,
+0x3180,
+0x2179,
+0x2348,
+0x558D,
+0x43ED,
+0x31B8,
+0x080D,
+0x00FF,
+0x542D,
+0x55AC,
+0x43ED,
+0x31B9,
+0x0800,
+0x0179,
+0x30AD,
+0x0807,
+0x04FB,
+0x0C24,
+0x86B5,
+0x080E,
+0xFF00,
+0x1BEF,
+0x33AE,
+0x2B48,
+0x0800,
+0x0348,
+0x0801,
+0x0347,
+0x0807,
+0x0507,
+0x866E,
+0x1B48,
+0x080F,
+0xFF00,
+0x2BEF,
+0x33AF,
+0x0800,
+0x0348,
+0x0801,
+0x0347,
+0x0802,
+0x0179,
+0x0807,
+0x0515,
+0x868A,
+0x0807,
+0x0519,
+0x0C24,
+0x869C,
+0x0180,
+0x7D00,
+0x0181,
+0x5555,
+0x0182,
+0x1446,
+0xD183,
+0x0184,
+0x2C00,
+0x0185,
+0x6408,
+0x0800,
+0x01AD,
+0x01AD,
+0x0080,
+0x01AF,
+0x0018,
+0xD9B6,
+0x0807,
+0x0531,
+0x33FE,
+0x0C1F,
+0x0C63,
+0x864B,
+0x19AD,
+0x2B47,
+0x0180,
+0x7D00,
+0x0181,
+0x5555,
+0x0182,
+0x1406,
+0xD183,
+0x0184,
+0x2C00,
+0x0185,
+0x6408,
+0x0800,
+0x01AD,
+0x01AD,
+0x0080,
+0x01AF,
+0x0018,
+0xD9B6,
+0x0807,
+0x054B,
+0x33FE,
+0x0C1F,
+0x0C43,
+0x864B,
+0x0807,
+0x054E,
+0x868A,
+0x31A5,
+0x0801,
+0x0020,
+0x5023,
+0x31A1,
+0x080E,
+0xFF00,
+0x13F0,
+0x33AE,
+0x3180,
+0x217A,
+0x2348,
+0x5581,
+0x43ED,
+0x31B8,
+0x080D,
+0x00FF,
+0x542D,
+0x55AC,
+0x43ED,
+0x31B9,
+0x0800,
+0x017A,
+0x30AD,
+0x0807,
+0x056A,
+0x0C24,
+0x86B5,
+0x080E,
+0xFF00,
+0x1BF0,
+0x33AE,
+0x2B48,
+0x0800,
+0x0348,
+0x0801,
+0x0347,
+0x0807,
+0x0576,
+0x866E,
+0x1B48,
+0x080F,
+0xFF00,
+0x2BF0,
+0x33AF,
+0x0800,
+0x0348,
+0x0801,
+0x0347,
+0x0802,
+0x017A,
+0x0807,
+0x0584,
+0x868A,
+0x0807,
+0x0588,
+0x0C24,
+0x869C,
+0x080E,
+0xFF00,
+0x1BEF,
+0x080E,
+0x00FF,
+0x13EF,
+0x33AE,
+0x518D,
+0x422D,
+0x2B51,
+0x080E,
+0xFF00,
+0x1BF0,
+0x080E,
+0x00FF,
+0x13F0,
+0x33AE,
+0x518D,
+0x422D,
+0x2B52,
+0x82DD,
+0x0180,
+0x7D00,
+0x0181,
+0xAAAA,
+0x0182,
+0x2846,
+0xD183,
+0x0184,
+0x2C00,
+0x0185,
+0x6408,
+0x0800,
+0x01AD,
+0x01AD,
+0x0080,
+0x01AF,
+0x0011,
+0xD9B6,
+0x0807,
+0x05B5,
+0x33FE,
+0x0C1F,
+0x0C63,
+0x864B,
+0x19AD,
+0x2B47,
+0x0180,
+0x7D00,
+0x0181,
+0xAAAA,
+0x0182,
+0x2806,
+0xD183,
+0x0184,
+0x2C00,
+0x0185,
+0x6408,
+0x0800,
+0x01AD,
+0x01AD,
+0x0080,
+0x01AF,
+0x0011,
+0xD9B6,
+0x0807,
+0x05CF,
+0x33FE,
+0x0C1F,
+0x0C43,
+0x864B,
+0x0807,
+0x05D2,
+0x868A,
+0x31A5,
+0x0801,
+0x0020,
+0x5023,
+0x134C,
+0x3180,
+0x2174,
+0x2348,
+0x558D,
+0x43ED,
+0x31B8,
+0x0801,
+0x0020,
+0x5061,
+0x0801,
+0x00FF,
+0x55A1,
+0x55AC,
+0x43ED,
+0x31B9,
+0x0800,
+0x0174,
+0x30AD,
+0x0807,
+0x05ED,
+0x0C24,
+0x86B5,
+0x1B4C,
+0x2B48,
+0x0800,
+0x0348,
+0x0801,
+0x0347,
+0x0807,
+0x05F6,
+0x866E,
+0x1B48,
+0x2B4C,
+0x0800,
+0x0348,
+0x0801,
+0x0347,
+0x0802,
+0x0174,
+0x0807,
+0x0601,
+0x868A,
+0x0807,
+0x0605,
+0x0C24,
+0x869C,
+0x0180,
+0x7D00,
+0x0181,
+0x5555,
+0x0182,
+0x1446,
+0xD183,
+0x0184,
+0x2C00,
+0x0185,
+0x6408,
+0x0800,
+0x01AD,
+0x01AD,
+0x0080,
+0x01AF,
+0x0013,
+0xD9B6,
+0x0807,
+0x061D,
+0x33FE,
+0x0C1F,
+0x0C63,
+0x864B,
+0x19AD,
+0x2B47,
+0x0180,
+0x7D00,
+0x0181,
+0x5555,
+0x0182,
+0x1406,
+0xD183,
+0x0184,
+0x2C00,
+0x0185,
+0x6408,
+0x0800,
+0x01AD,
+0x01AD,
+0x0080,
+0x01AF,
+0x0013,
+0xD9B6,
+0x0807,
+0x0637,
+0x33FE,
+0x0C1F,
+0x0C43,
+0x864B,
+0x0807,
+0x063A,
+0x868A,
+0x31A5,
+0x0801,
+0x0020,
+0x5023,
+0x134E,
+0x3180,
+0x2176,
+0x2348,
+0x558D,
+0x43ED,
+0x31B8,
+0x0801,
+0x0020,
+0x5061,
+0x0801,
+0x00FF,
+0x55A1,
+0x55AC,
+0x43ED,
+0x31B9,
+0x0800,
+0x0176,
+0x30AD,
+0x0807,
+0x0655,
+0x0C24,
+0x86B5,
+0x1B4E,
+0x2B48,
+0x0800,
+0x0348,
+0x0801,
+0x0347,
+0x0807,
+0x065E,
+0x866E,
+0x1B48,
+0x2B4E,
+0x0800,
+0x0348,
+0x0801,
+0x0347,
+0x0802,
+0x0176,
+0x0807,
+0x0669,
+0x868A,
+0x0807,
+0x066D,
+0x0C24,
+0x869C,
+0x82E6,
+0x19AD,
+0x31A4,
+0x3825,
+0x5085,
+0x31A5,
+0x4225,
+0x3C01,
+0x338D,
+0x55A5,
+0xB67B,
+0x330D,
+0xA67E,
+0x8689,
+0xA682,
+0x380D,
+0x8689,
+0x5E20,
+0xB689,
+0x3580,
+0x8689,
+0x332D,
+0xA685,
+0x8689,
+0x5A20,
+0x31A2,
+0x430D,
+0xA680,
+0x9007,
+0x080E,
+0x1FE0,
+0x196E,
+0x33AE,
+0x31A3,
+0x080E,
+0x1000,
+0x196E,
+0x33AE,
+0x31A4,
+0xA696,
+0x869A,
+0x080D,
+0x0100,
+0x546D,
+0x31A3,
+0x308D,
+0x9007,
+0xA6A0,
+0x308D,
+0xA6AA,
+0x86A3,
+0x308D,
+0xA6A3,
+0x86AA,
+0x3805,
+0x5065,
+0x31A4,
+0x430D,
+0xA6B1,
+0x308D,
+0x86AE,
+0x3805,
+0x5465,
+0xB6AE,
+0x86B1,
+0x3C02,
+0x35A1,
+0x86B2,
+0x384D,
+0x29AD,
+0xD9B6,
+0x9007,
+0xA6B9,
+0x308D,
+0xA6C3,
+0x86BC,
+0x308D,
+0xA6BC,
+0x86C3,
+0x3805,
+0x5065,
+0x31A4,
+0x430D,
+0xA6C9,
+0x308D,
+0x86C7,
+0x3805,
+0x5465,
+0xB6C7,
+0x86C9,
+0x31BC,
+0x86CA,
+0x30BC,
+0x9007,
+0x0180,
+0x00FF,
+0x0181,
+0xAAAA,
+0x0182,
+0x2806,
+0x0183,
+0x0800,
+0x0184,
+0x7060,
+0x0185,
+0x2402,
+0x0160,
+0x0C07,
+0xD161,
+0x0162,
+0x00C6,
+0x0163,
+0x1000,
+0xD164,
+0x0165,
+0x3000,
+0x0166,
+0x7828,
+0x0167,
+0x21A2,
+0xD168,
+0x1B38,
+0xA712,
+0x1BCC,
+0x31A1,
+0x1B51,
+0x502D,
+0x31A1,
+0x0807,
+0x06F0,
+0x8DF4,
+0xA6F3,
+0x5061,
+0x86F4,
+0x5461,
+0xB6F6,
+0x86FE,
+0x31A1,
+0x430D,
+0xA6FB,
+0x302D,
+0x86FF,
+0x080D,
+0x00FF,
+0x86FF,
+0x0C0D,
+0x080F,
+0x00FF,
+0x2969,
+0x33AF,
+0x1BCD,
+0x31A1,
+0x1B52,
+0x502D,
+0x31A1,
+0x080F,
+0xFF00,
+0x2969,
+0x33AF,
+0x6C00,
+0x080E,
+0xFF00,
+0x197B,
+0x33AE,
+0x31B8,
+0x0180,
+0x00FF,
+0x0162,
+0x0084,
+0x0165,
+0xB000,
+0x1B38,
+0xA73B,
+0x1B51,
+0x31A1,
+0x13CC,
+0x0807,
+0x0720,
+0x8DF4,
+0xA724,
+0x5061,
+0x558D,
+0x8726,
+0x506C,
+0x55A1,
+0x31A1,
+0xB729,
+0x8730,
+0x430D,
+0xA72D,
+0x302D,
+0x8731,
+0x080D,
+0x00FF,
+0x8731,
+0x0C0D,
+0x080F,
+0x00FF,
+0x2969,
+0x33AF,
+0x6C00,
+0x080E,
+0xFF00,
+0x197B,
+0x33AE,
+0x31B9,
+0x0180,
+0x00FF,
+0x0181,
+0x5555,
+0x0182,
+0x1406,
+0x0162,
+0x00C6,
+0x0163,
+0x2000,
+0x0165,
+0x3000,
+0x080F,
+0x03FF,
+0xD960,
+0x33AF,
+0x1B38,
+0xA759,
+0x1352,
+0x1B51,
+0x55B8,
+0x518D,
+0x410D,
+0x2969,
+0x6C00,
+0x080E,
+0x00FF,
+0x197B,
+0x33AE,
+0x31BA,
+0x0180,
+0x00FF,
+0x0162,
+0x0084,
+0x0165,
+0xB000,
+0x080F,
+0x03FF,
+0xD960,
+0x33AF,
+0x1B38,
+0xA793,
+0x1352,
+0x1B51,
+0x55B9,
+0x51AC,
+0x410D,
+0x2969,
+0x6C00,
+0x080E,
+0x00FF,
+0x197B,
+0x33AE,
+0x31BB,
+0x0C2F,
+0xDB75,
+0x33AF,
+0x0C6F,
+0x010D,
+0x0002,
+0x33AF,
+0xD3A6,
+0x03A6,
+0x000A,
+0x5738,
+0x424D,
+0x532D,
+0xD9AE,
+0x29AD,
+0x01AF,
+0x0016,
+0xD9B6,
+0x577A,
+0x424D,
+0x536D,
+0x29AD,
+0x01AF,
+0x0018,
+0xD9B6,
+0xD1AE,
+0xD3A6,
+0x7000,
+0x0C6F,
+0xD10D,
+0x33AF,
+0x0C2F,
+0xD375,
+0x33AF,
+0x0180,
+0x01FF,
+0x0181,
+0xFFFF,
+0x0182,
+0x3C86,
+0xD183,
+0x0160,
+0x0C10,
+0x0161,
+0x0009,
+0x0162,
+0x00C2,
+0xD163,
+0xD165,
+0x0166,
+0x792B,
+0x0168,
+0x4925,
+0x1B38,
+0xA82D,
+0x0807,
+0x07AD,
+0x33FE,
+0x0C1F,
+0x89C5,
+0x1959,
+0x1959,
+0x31B6,
+0x0807,
+0x07B3,
+0x8931,
+0x081C,
+0x0349,
+0x0EA1,
+0x0C17,
+0x3B85,
+0x080D,
+0x002F,
+0x5C2D,
+0x54AD,
+0xB7BE,
+0x87F9,
+0x302D,
+0xA7C1,
+0x87F9,
+0x3B85,
+0x0CED,
+0x54AD,
+0xA7C6,
+0x87DB,
+0x0DED,
+0x54AD,
+0xA7CA,
+0x87DB,
+0x0EED,
+0x54AD,
+0xA7CE,
+0x87DB,
+0x0FED,
+0x54AD,
+0xA7D2,
+0x87DB,
+0x080D,
+0x0027,
+0x54AD,
+0xA7D7,
+0x87DB,
+0x5C21,
+0x31A1,
+0x5837,
+0x31B7,
+0x5A3C,
+0x1B4A,
+0x29B4,
+0xD9B8,
+0x1959,
+0x1959,
+0x31A2,
+0x5444,
+0xB7E5,
+0x87F9,
+0x5462,
+0xB7E8,
+0x87F9,
+0x6620,
+0x080E,
+0x7FFF,
+0x1988,
+0x33AE,
+0x31A2,
+0x4022,
+0x080E,
+0x7FFF,
+0x1986,
+0x33AE,
+0x31A5,
+0x4025,
+0x426D,
+0x55A5,
+0x55A2,
+0xB7B7,
+0x32E0,
+0x3B81,
+0x1B47,
+0x55A1,
+0xA7FF,
+0x8807,
+0xB802,
+0x5A3C,
+0x8803,
+0x5E3C,
+0x1B4A,
+0x29B4,
+0xD9B8,
+0x87FA,
+0x0C17,
+0x1959,
+0x1959,
+0x31A2,
+0x5444,
+0xB80E,
+0x8810,
+0x5462,
+0xB813,
+0x0807,
+0x0813,
+0x8917,
+0x1959,
+0x1959,
+0x31A2,
+0x5444,
+0xB81F,
+0x5E3C,
+0x1B4A,
+0x29B4,
+0xD9B8,
+0x5E3C,
+0x5857,
+0x8827,
+0x5462,
+0xB82D,
+0x5A3C,
+0x1B4A,
+0x29B4,
+0xD9B8,
+0x5A3C,
+0x5840,
+0x1B4A,
+0x29B4,
+0xD9B8,
+0x0807,
+0x082D,
+0x8917,
+0x0180,
+0x01FF,
+0x0182,
+0x3CC6,
+0x1B38,
+0xA8BF,
+0x0807,
+0x0838,
+0x33FE,
+0x0C1F,
+0x89C5,
+0x0C2F,
+0xDB75,
+0x33AF,
+0x0C6F,
+0x010D,
+0x0002,
+0x33AF,
+0xD3A6,
+0x03A6,
+0x000A,
+0x5738,
+0x424D,
+0x55B8,
+0xD9AE,
+0x29AD,
+0x01AF,
+0x0016,
+0xD9B6,
+0x577A,
+0x424D,
+0x55BA,
+0x29AD,
+0x01AF,
+0x0018,
+0xD9B6,
+0xD1AE,
+0xD3A6,
+0x7000,
+0x0C6F,
+0xD10D,
+0x33AF,
+0x0C2F,
+0xD375,
+0x33AF,
+0x081C,
+0x0349,
+0x0EA1,
+0x3B85,
+0x0C0D,
+0x582D,
+0x55A5,
+0xB863,
+0x889C,
+0x302D,
+0xA866,
+0x889C,
+0x3B85,
+0x0D0D,
+0x54AD,
+0xA86B,
+0x8881,
+0x0E0D,
+0x54AD,
+0xA86F,
+0x8881,
+0x0F0D,
+0x54AD,
+0xA873,
+0x8881,
+0x080D,
+0x0020,
+0x54AD,
+0xA878,
+0x8881,
+0x080D,
+0x0028,
+0x54AD,
+0xA87D,
+0x8881,
+0x5C21,
+0x31A1,
+0x5837,
+0x31B7,
+0x5E3C,
+0x1B4A,
+0x29B4,
+0xD9B8,
+0x1959,
+0x1959,
+0x31A2,
+0x5444,
+0xB88B,
+0x889C,
+0x5462,
+0xB88E,
+0x889C,
+0x6620,
+0x080E,
+0x7FFF,
+0x1988,
+0x33AE,
+0x31A2,
+0x4022,
+0x080E,
+0x7FFF,
+0x1986,
+0x33AE,
+0x426D,
+0x544D,
+0xB85D,
+0x32ED,
+0x300D,
+0x080F,
+0xFF00,
+0x2BEA,
+0x33AF,
+0x32ED,
+0x080F,
+0x00FF,
+0x2BEA,
+0x33AF,
+0x56E0,
+0xB8B5,
+0x5417,
+0x5C2D,
+0x422D,
+0x31A0,
+0x5C6D,
+0xB8B3,
+0x0C6C,
+0x540C,
+0x31AC,
+0x88B9,
+0x0C0C,
+0x88BE,
+0x582D,
+0x422D,
+0x586D,
+0x31AC,
+0x5D2D,
+0xB8BC,
+0x88BE,
+0x0D2C,
+0x88BE,
+0x8998,
+0x1B38,
+0xA8D3,
+0x3B8D,
+0x331C,
+0x31B8,
+0x2B7B,
+0x0807,
+0x08C9,
+0x32CD,
+0x8931,
+0x1959,
+0x1959,
+0x31A2,
+0x5482,
+0xB8D0,
+0x5462,
+0xB8D3,
+0x0807,
+0x08D3,
+0x8917,
+0x0807,
+0x08D6,
+0x8DF4,
+0x31A2,
+0xA8E0,
+0x573C,
+0xB8DC,
+0x462D,
+0x88DD,
+0x422D,
+0x532D,
+0x546D,
+0x88E7,
+0x573C,
+0xB8E4,
+0x462D,
+0x88E5,
+0x422D,
+0x532D,
+0x506D,
+0x31A1,
+0xB8EB,
+0x0C0D,
+0x88F1,
+0x430D,
+0xA8EF,
+0x302D,
+0x88F1,
+0x080D,
+0x00FF,
+0x080F,
+0x00FF,
+0x2BE8,
+0x33AF,
+0x304D,
+0xA8FF,
+0x577A,
+0xB8FB,
+0x462D,
+0x88FC,
+0x422D,
+0x536D,
+0x546D,
+0x8906,
+0x577A,
+0xB903,
+0x462D,
+0x8904,
+0x422D,
+0x536D,
+0x506D,
+0x31A1,
+0xB90A,
+0x0C0D,
+0x8910,
+0x430D,
+0xA90E,
+0x302D,
+0x8910,
+0x080D,
+0x00FF,
+0x080F,
+0xFF00,
+0x2BE8,
+0x33AF,
+0x0C1F,
+0x33FE,
+0x88EC,
+0x32CD,
+0x2959,
+0x080F,
+0x0020,
+0xD906,
+0x33AF,
+0x0E0F,
+0xD106,
+0x33AF,
+0x0C8E,
+0x1919,
+0x33AE,
+0xA920,
+0x0E0F,
+0xD906,
+0x33AF,
+0x0C8E,
+0x1919,
+0x33AE,
+0xA92C,
+0x8927,
+0x080F,
+0x0020,
+0xD106,
+0x33AF,
+0x9007,
+0x31A0,
+0x0803,
+0x1000,
+0x546D,
+0xB938,
+0x0C03,
+0x8939,
+0x31A3,
+0x0804,
+0x1000,
+0x5080,
+0x31A0,
+0x0804,
+0x4000,
+0x55A4,
+0xB944,
+0x0804,
+0x4000,
+0x8945,
+0x3004,
+0x9007,
+0x1B53,
+0x31A5,
+0x3181,
+0x302D,
+0xA94C,
+0x8965,
+0x0CED,
+0x54AD,
+0xA950,
+0x8963,
+0x0DED,
+0x54AD,
+0xA954,
+0x8963,
+0x0EED,
+0x54AD,
+0xA958,
+0x8963,
+0x0FED,
+0x54AD,
+0xA95C,
+0x8963,
+0x080D,
+0x0027,
+0x54AD,
+0xA961,
+0x8963,
+0x5C21,
+0x31A1,
+0x5825,
+0x8949,
+0x1B49,
+0x31A0,
+0x54AD,
+0xB981,
+0x5405,
+0x31A1,
+0x081C,
+0x0349,
+0x3B85,
+0x080D,
+0x002F,
+0x5C2D,
+0x54AD,
+0xB974,
+0x897E,
+0x302D,
+0xA977,
+0x897E,
+0x5C21,
+0x31A1,
+0x5A3C,
+0x1B4A,
+0x29B4,
+0xD9B8,
+0x896D,
+0x0C1F,
+0x33FE,
+0x8721,
+0x54A0,
+0x31A1,
+0x081C,
+0x0349,
+0x3B85,
+0x0C0D,
+0x582D,
+0x55A5,
+0xB98B,
+0x8995,
+0x302D,
+0xA98E,
+0x8995,
+0x5C21,
+0x31A1,
+0x5E3C,
+0x1B4A,
+0x29B4,
+0xD9B8,
+0x8985,
+0x0C1F,
+0x33FE,
+0x8721,
+0x1B53,
+0x31A5,
+0x3181,
+0x302D,
+0xA99E,
+0x89B7,
+0x0CED,
+0x54AD,
+0xA9A2,
+0x89B5,
+0x0DED,
+0x54AD,
+0xA9A6,
+0x89B5,
+0x0EED,
+0x54AD,
+0xA9AA,
+0x89B5,
+0x0FED,
+0x54AD,
+0xA9AE,
+0x89B5,
+0x080D,
+0x0027,
+0x54AD,
+0xA9B3,
+0x89B5,
+0x5C21,
+0x31A1,
+0x5825,
+0x899B,
+0x1B49,
+0x31A0,
+0x54AD,
+0xB9D1,
+0x5405,
+0x31A1,
+0x081C,
+0x0349,
+0x3B85,
+0x080D,
+0x002F,
+0x5C2D,
+0x54AD,
+0xB9C6,
+0x89D0,
+0x302D,
+0xA9C9,
+0x89D0,
+0x5C21,
+0x31A1,
+0x5A3C,
+0x1B4A,
+0x29B4,
+0xD9B8,
+0x89BF,
+0x88BF,
+0x54A0,
+0x31A1,
+0x081C,
+0x0349,
+0x3B85,
+0x0C0D,
+0x582D,
+0x55A5,
+0xB9DB,
+0x89E5,
+0x302D,
+0xA9DE,
+0x89E5,
+0x5C21,
+0x31A1,
+0x5E3C,
+0x1B4A,
+0x29B4,
+0xD9B8,
+0x89D5,
+0x88BF,
+0x0180,
+0x00FF,
+0x0181,
+0xAAAA,
+0x0182,
+0x2806,
+0x0183,
+0x0800,
+0x0184,
+0x7060,
+0x0185,
+0x2402,
+0x300D,
+0x080F,
+0x03E0,
+0x2982,
+0x33AF,
+0x0FEF,
+0x0182,
+0x0006,
+0x33AF,
+0x080F,
+0x0800,
+0xD183,
+0x33AF,
+0x0160,
+0x0C07,
+0xD161,
+0x0162,
+0x00C6,
+0x0163,
+0x1000,
+0xD164,
+0x0165,
+0x3000,
+0x0166,
+0x7828,
+0x0167,
+0x21A2,
+0xD168,
+0x302D,
+0x080F,
+0xF000,
+0x2965,
+0x33AF,
+0x304D,
+0x080F,
+0x03FF,
+0x2960,
+0x33AF,
+0x306D,
+0xAA4B,
+0x300D,
+0x5CCD,
+0xAA1E,
+0x8A21,
+0x300D,
+0x5C4D,
+0xAA33,
+0x1B51,
+0x13CC,
+0x518D,
+0x31B7,
+0x430D,
+0xAA2B,
+0x32ED,
+0xBA2D,
+0x0C17,
+0x8A2D,
+0x0817,
+0x00FF,
+0x32ED,
+0x080F,
+0x00FF,
+0x2969,
+0x33AF,
+0x8A50,
+0x300D,
+0x5C8D,
+0xAA37,
+0x8A39,
+0x300D,
+0xAA50,
+0x1B51,
+0x13CC,
+0x558D,
+0x31B7,
+0xBA40,
+0x0C17,
+0x8A45,
+0x430D,
+0xAA43,
+0x8A45,
+0x0817,
+0x00FF,
+0x32ED,
+0x080F,
+0x00FF,
+0x2969,
+0x33AF,
+0x8A50,
+0x308D,
+0x080F,
+0x00FF,
+0x2969,
+0x33AF,
+0x6C00,
+0x080E,
+0xFF00,
+0x197B,
+0x33AE,
+0x0C1F,
+0x9007,
+0x0180,
+0x00FF,
+0x0181,
+0x5555,
+0x0182,
+0x1406,
+0x0183,
+0x0800,
+0x0184,
+0x7060,
+0x0185,
+0x2402,
+0x300D,
+0x080F,
+0x03E0,
+0x2982,
+0x33AF,
+0x0FEF,
+0x0182,
+0x0006,
+0x33AF,
+0x080F,
+0x0800,
+0xD183,
+0x33AF,
+0x0160,
+0x0C07,
+0xD161,
+0x0162,
+0x00C6,
+0x0163,
+0x2000,
+0xD164,
+0x0165,
+0x3000,
+0x0166,
+0x7828,
+0x0167,
+0x21A2,
+0xD168,
+0x302D,
+0x080F,
+0xF000,
+0x2965,
+0x33AF,
+0x304D,
+0x080F,
+0x03FF,
+0x2960,
+0x33AF,
+0x306D,
+0xAABC,
+0x300D,
+0x5CCD,
+0xAA8F,
+0x8A92,
+0x300D,
+0x5C4D,
+0xAAA4,
+0x1B52,
+0x13CD,
+0x518D,
+0x31B7,
+0x430D,
+0xAA9C,
+0x32ED,
+0xBA9E,
+0x0C17,
+0x8A9E,
+0x0817,
+0x00FF,
+0x32ED,
+0x080F,
+0xFF00,
+0x2969,
+0x33AF,
+0x8AC1,
+0x300D,
+0x5C8D,
+0xAAA8,
+0x8AAA,
+0x300D,
+0xAAC1,
+0x1B52,
+0x13CD,
+0x558D,
+0x31B7,
+0xBAB1,
+0x0C17,
+0x8AB6,
+0x430D,
+0xAAB4,
+0x8AB6,
+0x0817,
+0x00FF,
+0x32ED,
+0x080F,
+0xFF00,
+0x2969,
+0x33AF,
+0x8AC1,
+0x308D,
+0x080F,
+0xFF00,
+0x2969,
+0x33AF,
+0x6C00,
+0x080E,
+0x00FF,
+0x197B,
+0x33AE,
+0x0C1F,
+0x9007,
+0x0800,
+0x00F5,
+0x5418,
+0xBACF,
+0x5419,
+0xBACF,
+0x8AD5,
+0x080F,
+0x1C00,
+0x03F6,
+0x0003,
+0x33AF,
+0x8AE3,
+0x541A,
+0xBADE,
+0x541B,
+0xBADE,
+0x080F,
+0x1C00,
+0xD3F6,
+0x33AF,
+0x8AE3,
+0x080F,
+0x1C00,
+0x03F6,
+0x0005,
+0x33AF,
+0x0800,
+0x00F5,
+0x5418,
+0xBAEA,
+0x541A,
+0xBAEA,
+0x8AF3,
+0x5419,
+0xBAF3,
+0x541B,
+0xBAF3,
+0x080F,
+0x6000,
+0xDBF6,
+0x33AF,
+0x8B0F,
+0x5419,
+0xBAF8,
+0x541B,
+0xBAF8,
+0x8B02,
+0x5418,
+0xBB02,
+0x541A,
+0xBB02,
+0x080F,
+0x6000,
+0x03F6,
+0x0002,
+0x33AF,
+0x8B0F,
+0x571A,
+0xBB06,
+0x3302,
+0x8B07,
+0x3342,
+0x573B,
+0xBB0B,
+0x3323,
+0x8B0C,
+0x3363,
+0x5443,
+0xBAFC,
+0x8AEE,
+0x0C1F,
+0x9007,
+0x080E,
+0x6000,
+0x1BF6,
+0x33AE,
+0x5C2D,
+0xAB1C,
+0x1352,
+0x5379,
+0x422D,
+0x558D,
+0x8B27,
+0x080E,
+0x6000,
+0x1BF6,
+0x33AE,
+0x5C4D,
+0xAB27,
+0x1351,
+0x5358,
+0x422D,
+0x558D,
+0x8B27,
+0xBB2C,
+0x410D,
+0x430D,
+0x31B7,
+0x8B32,
+0x31B7,
+0x430D,
+0xAB30,
+0x8B32,
+0x0817,
+0x00FF,
+0x0C1F,
+0x9007,
+0x080E,
+0x00FF,
+0x196B,
+0x33AE,
+0x42AD,
+0x0CEF,
+0x290B,
+0x33AF,
+0x080E,
+0x03E0,
+0x196D,
+0x33AE,
+0x080F,
+0xF800,
+0x290B,
+0x33AF,
+0x080E,
+0x1C00,
+0x196D,
+0x33AE,
+0x0CEF,
+0x290C,
+0x33AF,
+0x080E,
+0x03C0,
+0x196C,
+0x33AE,
+0x31A0,
+0x080F,
+0x0078,
+0x290B,
+0x33AF,
+0x080E,
+0x003F,
+0x196C,
+0x33AE,
+0xAB5A,
+0x8B5C,
+0x5820,
+0x31A0,
+0x300D,
+0x080F,
+0x0780,
+0x290B,
+0x33AF,
+0x32ED,
+0x080F,
+0x07F8,
+0x290C,
+0x33AF,
+0x080E,
+0x0FFF,
+0x196F,
+0x33AE,
+0x42AD,
+0x080F,
+0x007F,
+0x291A,
+0x33AF,
+0x080E,
+0x0FFF,
+0x1970,
+0x33AE,
+0x42AD,
+0x080F,
+0x3F80,
+0x291A,
+0x33AF,
+0x080E,
+0x0FFF,
+0x1971,
+0x33AE,
+0x42AD,
+0x080F,
+0x007F,
+0x291B,
+0x33AF,
+0x080E,
+0x0FFF,
+0x1972,
+0x33AE,
+0x42AD,
+0x080F,
+0x3F80,
+0x291B,
+0x33AF,
+0x080F,
+0x0800,
+0xD90C,
+0x33AF,
+0x0C4F,
+0xD90D,
+0x33AF,
+0x0306,
+0x000C,
+0x0C2E,
+0x1919,
+0x33AE,
+0xAB98,
+0x8B93,
+0x0306,
+0x0008,
+0x080F,
+0x0800,
+0xD10C,
+0x33AF,
+0x0C4F,
+0xD10D,
+0x33AF,
+0x0C1F,
+0x9007,
+0x080E,
+0x0020,
+0x1B6F,
+0x33AE,
+0xABF4,
+0x8BF7,
+0x1B53,
+0x31A1,
+0x1B49,
+0x31B7,
+0x0802,
+0x0349,
+0x0C25,
+0x0807,
+0x0BB3,
+0x8C0F,
+0x0180,
+0x003F,
+0x0181,
+0xAAAA,
+0x0182,
+0x2802,
+0x0183,
+0x0800,
+0x0184,
+0x7060,
+0x0185,
+0x2402,
+0x0807,
+0x0BC4,
+0x33FE,
+0x0C1F,
+0x89C5,
+0x0160,
+0x0C07,
+0xD161,
+0x0162,
+0x0042,
+0x0163,
+0x3000,
+0xD164,
+0x0165,
+0x3000,
+0x0166,
+0x7828,
+0x0167,
+0x21A2,
+0xD168,
+0x330D,
+0x410D,
+0x530D,
+0x2969,
+0x6E00,
+0x197B,
+0x430D,
+0x31BA,
+0xD162,
+0x0165,
+0xB000,
+0x332D,
+0x410D,
+0x532D,
+0x2969,
+0x6E00,
+0x197B,
+0x430D,
+0x31BB,
+0x577A,
+0xBBE9,
+0x0C0D,
+0x080F,
+0x00FF,
+0x2BE9,
+0x33AE,
+0x32E1,
+0x0C05,
+0x0802,
+0x0349,
+0x0807,
+0x0BF4,
+0x8C0F,
+0x33FE,
+0x0C1F,
+0x87EA,
+0x1BF2,
+0x5C4D,
+0xABFD,
+0x1B52,
+0x13CD,
+0x8BFF,
+0x1B51,
+0x13CC,
+0x31A1,
+0x518D,
+0x31A0,
+0x430D,
+0xAC06,
+0x300D,
+0x8C08,
+0x080D,
+0x00FF,
+0x31B8,
+0x302D,
+0x558D,
+0xBC0D,
+0x0C0D,
+0x31B9,
+0x8BA9,
+0x1B49,
+0x31A0,
+0x30AD,
+0xAC18,
+0x5401,
+0xAC16,
+0x8C24,
+0xBC1D,
+0x8C24,
+0x5420,
+0xAC1B,
+0x8C24,
+0xBC1F,
+0x8C24,
+0x5A22,
+0x8C20,
+0x5E22,
+0x1B4A,
+0x29B4,
+0xD9B8,
+0x8C0F,
+0x9007,
+0x080F,
+0xFF00,
+0xD3E9,
+0x33AF,
+0x080E,
+0x00FF,
+0x13E8,
+0x33AE,
+0x0D4D,
+0x518D,
+0x31A2,
+0x080E,
+0xFF00,
+0x13E8,
+0x33AE,
+0x0D4D,
+0x518D,
+0x31A5,
+0x0807,
+0x0C3A,
+0x8DF4,
+0xAC40,
+0x5062,
+0x31A2,
+0x5065,
+0x31A5,
+0x8C48,
+0x5462,
+0x31A2,
+0xBC44,
+0x0C02,
+0x5465,
+0x31A5,
+0xBC48,
+0x0C05,
+0x304D,
+0x430D,
+0xAC4C,
+0x8C4E,
+0x0802,
+0x00FF,
+0x30AD,
+0x430D,
+0xAC52,
+0x8C54,
+0x0805,
+0x00FF,
+0x0807,
+0x0C57,
+0x8CCB,
+0x0800,
+0x0349,
+0x0802,
+0x034A,
+0x0803,
+0x01B4,
+0x3818,
+0x0C01,
+0x0CA4,
+0x0C37,
+0x0807,
+0x0C64,
+0x8D18,
+0x080F,
+0x03E0,
+0x0182,
+0x0006,
+0x33AF,
+0x0807,
+0x0C6C,
+0x8CD9,
+0x080E,
+0x00FF,
+0x13E8,
+0x33AE,
+0x0D4D,
+0x55AC,
+0x31A2,
+0x080E,
+0xFF00,
+0x13E8,
+0x33AE,
+0x0D4D,
+0x55AC,
+0x31A5,
+0x0807,
+0x0C7D,
+0x8DF4,
+0xAC83,
+0x5062,
+0x31A2,
+0x5065,
+0x31A5,
+0x8C8B,
+0x5462,
+0x31A2,
+0xBC87,
+0x0C02,
+0x5465,
+0x31A5,
+0xBC8B,
+0x0C05,
+0x0C0D,
+0x304D,
+0x43ED,
+0xAC96,
+0x304D,
+0x430D,
+0xAC93,
+0x8C97,
+0x0802,
+0x00FF,
+0x8C97,
+0x0C02,
+0x30AD,
+0x43ED,
+0xACA1,
+0x30AD,
+0x430D,
+0xAC9E,
+0x8CA2,
+0x0805,
+0x00FF,
+0x8CA2,
+0x0C05,
+0x0807,
+0x0CA5,
+0x8CCB,
+0x0800,
+0x0349,
+0x0802,
+0x034A,
+0x0803,
+0x01B4,
+0x3818,
+0x0801,
+0x002F,
+0x0D44,
+0x0C17,
+0x0807,
+0x0CB3,
+0x8D18,
+0x080F,
+0x03E0,
+0x0182,
+0x0004,
+0x33AF,
+0x0807,
+0x0CBB,
+0x8CD9,
+0x0800,
+0x0349,
+0x0802,
+0x034A,
+0x0803,
+0x01B4,
+0x3818,
+0x0C01,
+0x0CA4,
+0x0C37,
+0x0807,
+0x0CC8,
+0x8D18,
+0x33FE,
+0x0C1F,
+0x896A,
+0xD9AE,
+0x01AF,
+0x0016,
+0x304D,
+0x29AD,
+0xD9B6,
+0x01AF,
+0x0018,
+0x30AD,
+0x29AD,
+0xD9B6,
+0x700F,
+0xD1AE,
+0x9007,
+0x080F,
+0x7FFF,
+0x0180,
+0x07CF,
+0x33AF,
+0x0181,
+0xFFFF,
+0x0FEF,
+0x0182,
+0x0006,
+0x080F,
+0x4000,
+0xD984,
+0x080F,
+0x1C00,
+0x0184,
+0x0004,
+0x080F,
+0x0020,
+0xD984,
+0x0F0F,
+0xD184,
+0x33AF,
+0x080F,
+0x03C0,
+0xD184,
+0x33AF,
+0x080F,
+0x0800,
+0xD183,
+0x33AF,
+0x0E81,
+0x6660,
+0x080E,
+0x7FFF,
+0x198A,
+0x33AE,
+0x31A2,
+0x080E,
+0x7FFF,
+0x1986,
+0x33AE,
+0x544D,
+0x31A2,
+0x080E,
+0xFF00,
+0x1BE9,
+0x33AE,
+0x504D,
+0x31A2,
+0x430D,
+0xAD0E,
+0x8D10,
+0x0802,
+0x00FF,
+0x304D,
+0x080F,
+0xFF00,
+0x2BE9,
+0x33AF,
+0x5C21,
+0xACF9,
+0x9007,
+0x3805,
+0x0CED,
+0x52ED,
+0x54AD,
+0xAD1E,
+0x8D39,
+0x0DED,
+0x52ED,
+0x54AD,
+0xAD23,
+0x8D39,
+0x0EED,
+0x52ED,
+0x54AD,
+0xAD28,
+0x8D39,
+0x0FED,
+0x52ED,
+0x54AD,
+0xAD2D,
+0x8D39,
+0x080D,
+0x0027,
+0x52ED,
+0x54AD,
+0xAD33,
+0x8D39,
+0x308D,
+0xAD36,
+0x8D46,
+0x5C24,
+0x31A4,
+0x8D3E,
+0x32ED,
+0xAD3E,
+0x308D,
+0xAD3E,
+0x8D46,
+0x32ED,
+0xAD42,
+0x5A20,
+0x8D43,
+0x5E20,
+0x3C43,
+0xD9B8,
+0x8D18,
+0x9007,
+0x1959,
+0x1959,
+0x31A1,
+0x0800,
+0x3000,
+0x5401,
+0xBD54,
+0x0800,
+0x1000,
+0x5420,
+0xBD54,
+0x0C25,
+0x8D5C,
+0x1B5E,
+0xAD59,
+0x0807,
+0x0D59,
+0x8917,
+0x0C05,
+0x0C04,
+0x8DEC,
+0x080E,
+0x00FF,
+0x1BE9,
+0x33AE,
+0x31A0,
+0x080E,
+0xFF00,
+0x13EA,
+0x080E,
+0x00FF,
+0x1BEA,
+0x33AE,
+0x51AC,
+0xBD6C,
+0x0C01,
+0x8D73,
+0x31A1,
+0x0804,
+0x002A,
+0x55A4,
+0xBD73,
+0x0801,
+0x002A,
+0x302D,
+0x080F,
+0x00FF,
+0x2BEB,
+0x33AF,
+0x0807,
+0x0D7B,
+0x8DF4,
+0xAD7E,
+0x0C03,
+0x8D7F,
+0x4223,
+0x080E,
+0x0FE0,
+0x196F,
+0x33AE,
+0x31A2,
+0x0804,
+0x0040,
+0x5482,
+0xBD89,
+0x0C0D,
+0x31A2,
+0x4222,
+0x5062,
+0x55A0,
+0x31A0,
+0x0C04,
+0x0C2E,
+0x1BEB,
+0xAD93,
+0x8D96,
+0x300D,
+0x51A4,
+0x31A4,
+0x0C4E,
+0x1BEB,
+0xAD9A,
+0x8D9E,
+0x300D,
+0x442D,
+0x51A4,
+0x31A4,
+0x0C8E,
+0x1BEB,
+0xADA2,
+0x8DA6,
+0x300D,
+0x444D,
+0x51A4,
+0x31A4,
+0x0D0E,
+0x1BEB,
+0xADAA,
+0x8DAE,
+0x300D,
+0x446D,
+0x51A4,
+0x31A4,
+0x0E0E,
+0x1BEB,
+0xADB2,
+0x8DB6,
+0x300D,
+0x448D,
+0x51A4,
+0x31A4,
+0x080E,
+0x0020,
+0x1BEB,
+0xADBB,
+0x8DBF,
+0x300D,
+0x44AD,
+0x51A4,
+0x31A4,
+0x33AE,
+0x308D,
+0x46AD,
+0x31A4,
+0x080E,
+0xFF00,
+0x1BE9,
+0x33AE,
+0x31A1,
+0x1B5E,
+0xADDC,
+0x0CA0,
+0x5401,
+0xBDD0,
+0x0805,
+0x0060,
+0x8DDD,
+0x0D40,
+0x5401,
+0xBDD6,
+0x0805,
+0x0040,
+0x8DDD,
+0x0DE0,
+0x5401,
+0xBDDC,
+0x0805,
+0x0020,
+0x8DDD,
+0x0C05,
+0x5085,
+0x31A4,
+0x0C0D,
+0x308D,
+0x43ED,
+0xADE4,
+0x8DE6,
+0x0C04,
+0x8DEC,
+0x308D,
+0x430D,
+0xADEA,
+0x8DEC,
+0x0804,
+0x00FF,
+0x1B5E,
+0xADF2,
+0x308D,
+0x33FE,
+0x0C1F,
+0x8972,
+0x308D,
+0x8048,
+0x080E,
+0x1FE0,
+0x196E,
+0x33AE,
+0x31A3,
+0x080E,
+0x1000,
+0x196E,
+0x33AE,
+0x31A4,
+0xAE00,
+0x8E04,
+0x080D,
+0x0100,
+0x546D,
+0x31A3,
+0x308D,
+0x9007,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000
diff --git a/drivers/phy/phy-rockchip-usbdp.c b/drivers/phy/phy-rockchip-usbdp.c
index 233fbe4..7b624f8 100644
--- a/drivers/phy/phy-rockchip-usbdp.c
+++ b/drivers/phy/phy-rockchip-usbdp.c
@@ -131,6 +131,7 @@ struct rockchip_udphy {
 	u32 dp_lane_sel[4];
 	u32 dp_aux_dout_sel;
 	u32 dp_aux_din_sel;
+	u32 max_link_rate;
 	u8 bw; /* dp bandwidth */
 	int id;
 
@@ -732,6 +733,7 @@ static int rockchip_dpphy_power_on(struct phy *phy)
 
 	dp_lanes = udphy_dplane_get(udphy);
 	phy->attrs.bus_width = dp_lanes;
+	phy->attrs.max_link_rate = udphy->max_link_rate;
 
 	ret = udphy_power_on(udphy, UDPHY_MODE_DP);
 	if (ret)
@@ -1240,6 +1242,29 @@ static int rk3588_dp_phy_set_voltages(struct rockchip_udphy *udphy,
 	return 0;
 }
 
+static int rockchip_dpphy_probe(struct udevice *dev)
+{
+	struct rockchip_udphy *udphy = dev_get_priv(dev->parent);
+	u32 max_link_rate;
+
+	max_link_rate = dev_read_u32_default(dev, "max-link-rate", 8100);
+	switch (max_link_rate) {
+	case 1620:
+	case 2700:
+	case 5400:
+	case 8100:
+		break;
+	default:
+		dev_warn(dev, "invalid max-link-rate %d, using 8100\n", max_link_rate);
+		max_link_rate = 8100;
+		break;
+	}
+
+	udphy->max_link_rate = max_link_rate;
+
+	return 0;
+}
+
 static const char * const rk3588_udphy_rst_l[] = {
 	"init", "cmn", "lane", "pcs_apb", "pma_apb"
 };
@@ -1291,6 +1316,7 @@ U_BOOT_DRIVER(rockchip_udphy_dp_port) = {
 	.name		= "rockchip_udphy_dp_port",
 	.id		= UCLASS_PHY,
 	.ops		= &rockchip_dpphy_ops,
+	.probe		= rockchip_dpphy_probe,
 };
 
 U_BOOT_DRIVER(rockchip_udphy) = {
diff --git a/drivers/pinctrl/rockchip/pinctrl-rk3588.c b/drivers/pinctrl/rockchip/pinctrl-rk3588.c
index bdf628b..a519303 100644
--- a/drivers/pinctrl/rockchip/pinctrl-rk3588.c
+++ b/drivers/pinctrl/rockchip/pinctrl-rk3588.c
@@ -32,10 +32,17 @@ static int rk3588_set_mux(struct rockchip_pin_bank *bank, int pin, int mux)
 	if (bank->bank_num == 0) {
 		if ((pin >= RK_PB4) && (pin <= RK_PD7)) {
 			if (mux < 8) {
-				reg += 0x4000 - 0xC; /* PMU2_IOC_BASE */
+				u32 reg0 = 0;
+
+				reg0 = reg + 0x4000 - 0xC; /* PMU2_IOC_BASE */
 				data = (mask << (bit + 16));
 				data |= (mux & mask) << bit;
-				ret = regmap_write(regmap, reg, data);
+				ret = regmap_write(regmap, reg0, data);
+
+				reg0 = reg + 0x8000; /* BUS_IOC_BASE */
+				data = (mask << (bit + 16));
+				regmap = priv->regmap_base;
+				regmap_write(regmap, reg0, data);
 			} else {
 				u32 reg0 = 0;
 
@@ -72,97 +79,108 @@ static int rk3588_set_mux(struct rockchip_pin_bank *bank, int pin, int mux)
 #define rk3588_DRV_PINS_PER_REG		2
 #define rk3588_DRV_BANK_STRIDE		0x40
 
-#define PMU1_IOC_REG		(0x0000)
-#define PMU2_IOC_REG		(0x4000)
-#define BUS_IOC_REG		(0x8000)
-#define VCCIO1_4_IOC_REG	(0x9000)
-#define VCCIO3_5_IOC_REG	(0xA000)
-#define VCCIO2_IOC_REG		(0xB000)
-#define VCCIO6_IOC_REG		(0xC000)
-#define EMMC_IOC_REG		(0xD000)
+#define RK3588_PMU1_IOC_REG		0x0000
+#define RK3588_PMU2_IOC_REG		0x4000
+#define RK3588_BUS_IOC_REG		0x8000
+#define RK3588_VCCIO1_4_IOC_REG		0x9000
+#define RK3588_VCCIO3_5_IOC_REG		0xA000
+#define RK3588_VCCIO2_IOC_REG		0xB000
+#define RK3588_VCCIO6_IOC_REG		0xC000
+#define RK3588_EMMC_IOC_REG		0xD000
 
 static const u32 rk3588_ds_regs[][2] = {
-	{RK_GPIO0_A0, PMU1_IOC_REG + 0x0010},
-	{RK_GPIO0_A4, PMU1_IOC_REG + 0x0014},
-	{RK_GPIO0_B0, PMU1_IOC_REG + 0x0018},
-	{RK_GPIO0_B4, PMU2_IOC_REG + 0x0014},
-/*	{RK_GPIO0_C0, PMU2_IOC_REG + 0x0018},
-	{RK_GPIO0_C4, PMU2_IOC_REG + 0x001C},
-	{RK_GPIO0_D0, PMU2_IOC_REG + 0x0020},
-	{RK_GPIO0_D4, PMU2_IOC_REG + 0x0024},*/
-	{RK_GPIO1_A0, VCCIO1_4_IOC_REG + 0x0020},
-/*	{RK_GPIO1_A4, VCCIO1_4_IOC_REG + 0x0024},
-	{RK_GPIO1_B0, VCCIO1_4_IOC_REG + 0x0028},
-	{RK_GPIO1_B4, VCCIO1_4_IOC_REG + 0x002C},
-	{RK_GPIO1_C0, VCCIO1_4_IOC_REG + 0x0030},
-	{RK_GPIO1_C4, VCCIO1_4_IOC_REG + 0x0034},
-	{RK_GPIO1_D0, VCCIO1_4_IOC_REG + 0x0038},
-	{RK_GPIO1_D4, VCCIO1_4_IOC_REG + 0x003C},*/
-	{RK_GPIO2_A0, EMMC_IOC_REG + 0x0040},
-/*	{RK_GPIO2_A4, EMMC_IOC_REG + 0x0044},
-	{RK_GPIO2_B0, EMMC_IOC_REG + 0x0048},
-	{RK_GPIO2_B4, EMMC_IOC_REG + 0x004C},
-	{RK_GPIO2_C0, EMMC_IOC_REG + 0x0050},
-	{RK_GPIO2_C4, EMMC_IOC_REG + 0x0054},
-	{RK_GPIO2_D0, EMMC_IOC_REG + 0x0058},
-	{RK_GPIO2_D4, EMMC_IOC_REG + 0x005C},*/
-	{RK_GPIO3_A0, VCCIO3_5_IOC_REG + 0x0060},
-/*	{RK_GPIO3_A4, VCCIO3_5_IOC_REG + 0x0064},
-	{RK_GPIO3_B0, VCCIO3_5_IOC_REG + 0x0068},
-	{RK_GPIO3_B4, VCCIO3_5_IOC_REG + 0x006C},
-	{RK_GPIO3_C0, VCCIO3_5_IOC_REG + 0x0070},
-	{RK_GPIO3_C4, VCCIO3_5_IOC_REG + 0x0074},
-	{RK_GPIO3_D0, VCCIO3_5_IOC_REG + 0x0078},
-	{RK_GPIO3_D4, VCCIO3_5_IOC_REG + 0x007C},*/
-	{RK_GPIO4_A0, VCCIO6_IOC_REG + 0x0080},
-/*	{RK_GPIO4_A4, VCCIO6_IOC_REG + 0x0084},
-	{RK_GPIO4_B0, VCCIO6_IOC_REG + 0x0088},
-	{RK_GPIO4_B4, VCCIO6_IOC_REG + 0x008C},
-	{RK_GPIO4_C0, VCCIO6_IOC_REG + 0x0090},*/
+	{ RK_GPIO0_A0, RK3588_PMU1_IOC_REG + 0x0010 },
+	{ RK_GPIO0_A4, RK3588_PMU1_IOC_REG + 0x0014 },
+	{ RK_GPIO0_B0, RK3588_PMU1_IOC_REG + 0x0018 },
+	{ RK_GPIO0_B4, RK3588_PMU2_IOC_REG + 0x0014 },
+	{ RK_GPIO0_C0, RK3588_PMU2_IOC_REG + 0x0018 },
+	{ RK_GPIO0_C4, RK3588_PMU2_IOC_REG + 0x001C },
+	{ RK_GPIO0_D0, RK3588_PMU2_IOC_REG + 0x0020 },
+	{ RK_GPIO0_D4, RK3588_PMU2_IOC_REG + 0x0024 },
+	{ RK_GPIO1_A0, RK3588_VCCIO1_4_IOC_REG + 0x0020 },
+	{ RK_GPIO1_A4, RK3588_VCCIO1_4_IOC_REG + 0x0024 },
+	{ RK_GPIO1_B0, RK3588_VCCIO1_4_IOC_REG + 0x0028 },
+	{ RK_GPIO1_B4, RK3588_VCCIO1_4_IOC_REG + 0x002C },
+	{ RK_GPIO1_C0, RK3588_VCCIO1_4_IOC_REG + 0x0030 },
+	{ RK_GPIO1_C4, RK3588_VCCIO1_4_IOC_REG + 0x0034 },
+	{ RK_GPIO1_D0, RK3588_VCCIO1_4_IOC_REG + 0x0038 },
+	{ RK_GPIO1_D4, RK3588_VCCIO1_4_IOC_REG + 0x003C },
+	{ RK_GPIO2_A0, RK3588_EMMC_IOC_REG + 0x0040 },
+	{ RK_GPIO2_A4, RK3588_VCCIO3_5_IOC_REG + 0x0044 },
+	{ RK_GPIO2_B0, RK3588_VCCIO3_5_IOC_REG + 0x0048 },
+	{ RK_GPIO2_B4, RK3588_VCCIO3_5_IOC_REG + 0x004C },
+	{ RK_GPIO2_C0, RK3588_VCCIO3_5_IOC_REG + 0x0050 },
+	{ RK_GPIO2_C4, RK3588_VCCIO3_5_IOC_REG + 0x0054 },
+	{ RK_GPIO2_D0, RK3588_EMMC_IOC_REG + 0x0058 },
+	{ RK_GPIO2_D4, RK3588_EMMC_IOC_REG + 0x005C },
+	{ RK_GPIO3_A0, RK3588_VCCIO3_5_IOC_REG + 0x0060 },
+	{ RK_GPIO3_A4, RK3588_VCCIO3_5_IOC_REG + 0x0064 },
+	{ RK_GPIO3_B0, RK3588_VCCIO3_5_IOC_REG + 0x0068 },
+	{ RK_GPIO3_B4, RK3588_VCCIO3_5_IOC_REG + 0x006C },
+	{ RK_GPIO3_C0, RK3588_VCCIO3_5_IOC_REG + 0x0070 },
+	{ RK_GPIO3_C4, RK3588_VCCIO3_5_IOC_REG + 0x0074 },
+	{ RK_GPIO3_D0, RK3588_VCCIO3_5_IOC_REG + 0x0078 },
+	{ RK_GPIO3_D4, RK3588_VCCIO3_5_IOC_REG + 0x007C },
+	{ RK_GPIO4_A0, RK3588_VCCIO6_IOC_REG + 0x0080 },
+	{ RK_GPIO4_A4, RK3588_VCCIO6_IOC_REG + 0x0084 },
+	{ RK_GPIO4_B0, RK3588_VCCIO6_IOC_REG + 0x0088 },
+	{ RK_GPIO4_B4, RK3588_VCCIO6_IOC_REG + 0x008C },
+	{ RK_GPIO4_C0, RK3588_VCCIO6_IOC_REG + 0x0090 },
+	{ RK_GPIO4_C2, RK3588_VCCIO3_5_IOC_REG + 0x0090 },
+	{ RK_GPIO4_C4, RK3588_VCCIO3_5_IOC_REG + 0x0094 },
+	{ RK_GPIO4_D0, RK3588_VCCIO2_IOC_REG + 0x0098 },
 };
 
 static const u32 rk3588_p_regs[][2] = {
-	{RK_GPIO0_A0, PMU1_IOC_REG + 0x0020},
-	{RK_GPIO0_B0, PMU1_IOC_REG + 0x0024},
-	{RK_GPIO0_B5, PMU2_IOC_REG + 0x0028},
-	{RK_GPIO0_C0, PMU2_IOC_REG + 0x002C},
-	{RK_GPIO0_D0, PMU2_IOC_REG + 0x0030},
-	{RK_GPIO1_A0, VCCIO1_4_IOC_REG + 0x0110},
-/*	{RK_GPIO1_B0, VCCIO1_4_IOC_REG + 0x0114},
-	{RK_GPIO1_C0, VCCIO1_4_IOC_REG + 0x0118},
-	{RK_GPIO1_D0, VCCIO1_4_IOC_REG + 0x011C},*/
-	{RK_GPIO2_A0, EMMC_IOC_REG + 0x0120},
-/*	{RK_GPIO2_D0, EMMC_IOC_REG + 0x012C},*/
-	{RK_GPIO3_A0, VCCIO3_5_IOC_REG + 0x0130},
-/*	{RK_GPIO3_B0, VCCIO3_5_IOC_REG + 0x0134},
-	{RK_GPIO3_C0, VCCIO3_5_IOC_REG + 0x0138},
-	{RK_GPIO3_D0, VCCIO3_5_IOC_REG + 0x013C},*/
-	{RK_GPIO4_A0, VCCIO6_IOC_REG + 0x0140},
-/*	{RK_GPIO4_B0, VCCIO6_IOC_REG + 0x0144},
-	{RK_GPIO4_C0, VCCIO6_IOC_REG + 0x0148},
-	{RK_GPIO4_D0, VCCIO2_IOC_REG + 0x014C},*/
+	{ RK_GPIO0_A0, RK3588_PMU1_IOC_REG + 0x0020 },
+	{ RK_GPIO0_B0, RK3588_PMU1_IOC_REG + 0x0024 },
+	{ RK_GPIO0_B5, RK3588_PMU2_IOC_REG + 0x0028 },
+	{ RK_GPIO0_C0, RK3588_PMU2_IOC_REG + 0x002C },
+	{ RK_GPIO0_D0, RK3588_PMU2_IOC_REG + 0x0030 },
+	{ RK_GPIO1_A0, RK3588_VCCIO1_4_IOC_REG + 0x0110 },
+	{ RK_GPIO1_B0, RK3588_VCCIO1_4_IOC_REG + 0x0114 },
+	{ RK_GPIO1_C0, RK3588_VCCIO1_4_IOC_REG + 0x0118 },
+	{ RK_GPIO1_D0, RK3588_VCCIO1_4_IOC_REG + 0x011C },
+	{ RK_GPIO2_A0, RK3588_EMMC_IOC_REG + 0x0120 },
+	{ RK_GPIO2_A4, RK3588_VCCIO3_5_IOC_REG + 0x0120 },
+	{ RK_GPIO2_B0, RK3588_VCCIO3_5_IOC_REG + 0x0124 },
+	{ RK_GPIO2_C0, RK3588_VCCIO3_5_IOC_REG + 0x0128 },
+	{ RK_GPIO2_D0, RK3588_EMMC_IOC_REG + 0x012C },
+	{ RK_GPIO3_A0, RK3588_VCCIO3_5_IOC_REG + 0x0130 },
+	{ RK_GPIO3_B0, RK3588_VCCIO3_5_IOC_REG + 0x0134 },
+	{ RK_GPIO3_C0, RK3588_VCCIO3_5_IOC_REG + 0x0138 },
+	{ RK_GPIO3_D0, RK3588_VCCIO3_5_IOC_REG + 0x013C },
+	{ RK_GPIO4_A0, RK3588_VCCIO6_IOC_REG + 0x0140 },
+	{ RK_GPIO4_B0, RK3588_VCCIO6_IOC_REG + 0x0144 },
+	{ RK_GPIO4_C0, RK3588_VCCIO6_IOC_REG + 0x0148 },
+	{ RK_GPIO4_C2, RK3588_VCCIO3_5_IOC_REG + 0x0148 },
+	{ RK_GPIO4_D0, RK3588_VCCIO2_IOC_REG + 0x014C },
 };
 
 static const u32 rk3588_smt_regs[][2] = {
-	{RK_GPIO0_A0, PMU1_IOC_REG + 0x0030},
-	{RK_GPIO0_B0, PMU1_IOC_REG + 0x0034},
-	{RK_GPIO0_B5, PMU2_IOC_REG + 0x0040},
-	{RK_GPIO0_C0, PMU2_IOC_REG + 0x0044},
-	{RK_GPIO0_D0, PMU2_IOC_REG + 0x0048},
-	{RK_GPIO1_A0, VCCIO1_4_IOC_REG + 0x0210},
-/*	{RK_GPIO1_B0, VCCIO1_4_IOC_REG + 0x0214},
-	{RK_GPIO1_C0, VCCIO1_4_IOC_REG + 0x0218},
-	{RK_GPIO1_D0, VCCIO1_4_IOC_REG + 0x021C},*/
-	{RK_GPIO2_A0, EMMC_IOC_REG + 0x0220},
-	{RK_GPIO2_D0, EMMC_IOC_REG + 0x022C},
-	{RK_GPIO3_A0, VCCIO3_5_IOC_REG + 0x0230},
-/*	{RK_GPIO3_B0, VCCIO3_5_IOC_REG + 0x0234},
-	{RK_GPIO3_C0, VCCIO3_5_IOC_REG + 0x0238},
-	{RK_GPIO3_D0, VCCIO3_5_IOC_REG + 0x023C},*/
-	{RK_GPIO4_A0, VCCIO6_IOC_REG + 0x0240},
-/*	{RK_GPIO4_B0, VCCIO6_IOC_REG + 0x0244},
-	{RK_GPIO4_C0, VCCIO6_IOC_REG + 0x0248},
-	{RK_GPIO4_D0, VCCIO2_IOC_REG + 0x024C},*/
+	{ RK_GPIO0_A0, RK3588_PMU1_IOC_REG + 0x0030 },
+	{ RK_GPIO0_B0, RK3588_PMU1_IOC_REG + 0x0034 },
+	{ RK_GPIO0_B5, RK3588_PMU2_IOC_REG + 0x0040 },
+	{ RK_GPIO0_C0, RK3588_PMU2_IOC_REG + 0x0044 },
+	{ RK_GPIO0_D0, RK3588_PMU2_IOC_REG + 0x0048 },
+	{ RK_GPIO1_A0, RK3588_VCCIO1_4_IOC_REG + 0x0210 },
+	{ RK_GPIO1_B0, RK3588_VCCIO1_4_IOC_REG + 0x0214 },
+	{ RK_GPIO1_C0, RK3588_VCCIO1_4_IOC_REG + 0x0218 },
+	{ RK_GPIO1_D0, RK3588_VCCIO1_4_IOC_REG + 0x021C },
+	{ RK_GPIO2_A0, RK3588_EMMC_IOC_REG + 0x0220 },
+	{ RK_GPIO2_A4, RK3588_VCCIO3_5_IOC_REG + 0x0220 },
+	{ RK_GPIO2_B0, RK3588_VCCIO3_5_IOC_REG + 0x0224 },
+	{ RK_GPIO2_C0, RK3588_VCCIO3_5_IOC_REG + 0x0228 },
+	{ RK_GPIO2_D0, RK3588_EMMC_IOC_REG + 0x022C },
+	{ RK_GPIO3_A0, RK3588_VCCIO3_5_IOC_REG + 0x0230 },
+	{ RK_GPIO3_B0, RK3588_VCCIO3_5_IOC_REG + 0x0234 },
+	{ RK_GPIO3_C0, RK3588_VCCIO3_5_IOC_REG + 0x0238 },
+	{ RK_GPIO3_D0, RK3588_VCCIO3_5_IOC_REG + 0x023C },
+	{ RK_GPIO4_A0, RK3588_VCCIO6_IOC_REG + 0x0240 },
+	{ RK_GPIO4_B0, RK3588_VCCIO6_IOC_REG + 0x0244 },
+	{ RK_GPIO4_C0, RK3588_VCCIO6_IOC_REG + 0x0248 },
+	{ RK_GPIO4_C2, RK3588_VCCIO3_5_IOC_REG + 0x0248 },
+	{ RK_GPIO4_D0, RK3588_VCCIO2_IOC_REG + 0x024C },
 };
 
 #define RK3588_PULL_BITS_PER_PIN		2
diff --git a/drivers/power/charge/Kconfig b/drivers/power/charge/Kconfig
index 2f2d6c7..4f74789 100644
--- a/drivers/power/charge/Kconfig
+++ b/drivers/power/charge/Kconfig
@@ -9,3 +9,15 @@ config CHARGER_BQ25890
 	depends on DM_FUEL_GAUGE
 	help
 	  This adds support for BQ25890 charger support.
+
+config CHARGER_SC8551
+	bool "SC8551 charger support"
+	depends on DM_FUEL_GAUGE
+	help
+	  This adds support for sc8551 charger support.
+
+config CHARGER_SGM41542
+	bool "SGM41542 charger support"
+	depends on DM_FUEL_GAUGE
+	help
+	  This adds support for sgm41542 charger support.
diff --git a/drivers/power/charge/Makefile b/drivers/power/charge/Makefile
index 2ce1d23..a4fc731 100644
--- a/drivers/power/charge/Makefile
+++ b/drivers/power/charge/Makefile
@@ -6,3 +6,5 @@
 
 obj-$(CONFIG_CHARGER_BQ25700) += bq25700_charger.o
 obj-$(CONFIG_CHARGER_BQ25890) += bq25890_charger.o
+obj-$(CONFIG_CHARGER_SC8551) += sc8551_charger.o
+obj-$(CONFIG_CHARGER_SGM41542) += sgm41542_charger.o
diff --git a/drivers/power/charge/sc8551_charger.c b/drivers/power/charge/sc8551_charger.c
new file mode 100644
index 0000000..f43658b
--- /dev/null
+++ b/drivers/power/charge/sc8551_charger.c
@@ -0,0 +1,218 @@
+/*
+ * (C) Copyright 2022 Rockchip Electronics Co., Ltd
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <dm.h>
+#include <i2c.h>
+#include <irq-generic.h>
+#include <power/fuel_gauge.h>
+#include <power/power_delivery/power_delivery.h>
+#include <linux/usb/phy-rockchip-usb2.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+static int dbg_enable;
+
+#define SC8551_DBG(args...) \
+	do { \
+		if (dbg_enable) { \
+			printf(args); \
+		} \
+	} while (0)
+
+struct sc8551 {
+	struct udevice *dev;
+	struct udevice *pd;
+	bool pd_online;
+	u32 init_count;
+	u32 ichg;
+	u32 vchg;
+	int irq;
+};
+
+enum charger_type {
+	CHARGER_TYPE_NO = 0,
+	CHARGER_TYPE_USB,
+	CHARGER_TYPE_AC,
+	CHARGER_TYPE_DC,
+	CHARGER_TYPE_UNDEF,
+};
+
+/* Register 05h */
+#define SC8551_REG_05				0x05
+#define SC8551_AC_OVP_STAT_MASK			0x80
+#define SC8551_AC_OVP_STAT_SHIFT		7
+
+#define SC8551_AC_OVP_MASK			0x07
+#define SC8551_AC_OVP_SHIFT			0
+#define SC8551_AC_OVP_BASE			11
+#define SC8551_AC_OVP_LSB			1
+#define SC8551_AC_OVP_6P5V			65
+
+/* Register 0Bh */
+#define SC8551_REG_0B				0x0B
+#define SC8551_REG_RST_MASK			0x80
+#define SC8551_REG_RST_SHIFT			7
+#define SC8551_REG_RST_ENABLE			1
+#define SC8551_REG_RST_DISABLE			0
+#define SC8551_AC_OVP_VOLTAGE			13
+
+static int sc8551_read(struct sc8551 *charger, uint reg, u8 *buffer)
+{
+	u16 val;
+	int ret;
+
+	ret = dm_i2c_read(charger->dev, reg, (u8 *)&val, 1);
+	if (ret) {
+		printf("sc8551: read %#x error, ret=%d", reg, ret);
+		return ret;
+	}
+
+	*buffer = val;
+	return 0;
+}
+
+static int sc8551_write(struct sc8551 *charger, uint reg, u16 val)
+{
+	int ret;
+
+	ret = dm_i2c_write(charger->dev, reg, (u8 *)&val, 1);
+	if (ret)
+		printf("sc8551: write %#x error, ret=%d", reg, ret);
+
+	return ret;
+}
+
+static int sc8551_update_bits(struct sc8551 *charger,
+			      uint offset,
+			      uint mask,
+			      uint val)
+{
+	u8 reg;
+	int ret;
+
+	ret = sc8551_read(charger, offset, &reg);
+	if (ret)
+		return ret;
+
+	reg &= ~mask;
+
+	return sc8551_write(charger, offset, reg | val);
+}
+
+static int sc8551_charger_capability(struct udevice *dev)
+{
+	return 0;
+}
+
+static int sc8551_dwc_otg_check_dpdm(void)
+{
+#if defined(CONFIG_PHY_ROCKCHIP_INNO_USB2) && !defined(CONFIG_SPL_BUILD)
+	return rockchip_chg_get_type();
+#else
+	debug("rockchip_chg_get_type() is not implement\n");
+	return CHARGER_TYPE_NO;
+#endif
+}
+
+static int sc8551_get_usb_state(struct sc8551 *sc8551)
+{
+	int charger_type;
+
+	switch (sc8551_dwc_otg_check_dpdm()) {
+	case 0:
+		charger_type = CHARGER_TYPE_NO;
+		break;
+	case 1:
+	case 3:
+		charger_type = CHARGER_TYPE_USB;
+		break;
+	case 2:
+		charger_type = CHARGER_TYPE_AC;
+		break;
+	default:
+		charger_type = CHARGER_TYPE_NO;
+		break;
+	}
+
+	return charger_type;
+}
+
+static bool sc8551_check_charge(struct sc8551 *sc8551)
+{
+	if (sc8551_get_usb_state(sc8551) != CHARGER_TYPE_NO)
+		return true;
+
+	return false;
+}
+
+static bool sc8551_update_get_chrg_online(struct udevice *dev)
+{
+	struct sc8551 *sc8551 = dev_get_priv(dev);
+
+	return sc8551_check_charge(sc8551);
+}
+
+static int sc8551_ofdata_to_platdata(struct udevice *dev)
+{
+	return 0;
+}
+
+static int sc8551_set_acovp_th(struct sc8551 *sc, int threshold)
+{
+	int ret;
+	u8 val;
+
+	if (threshold < SC8551_AC_OVP_BASE)
+		threshold = SC8551_AC_OVP_BASE;
+
+	if (threshold == SC8551_AC_OVP_6P5V)
+		val = 0x07;
+	else
+		val = (threshold - SC8551_AC_OVP_BASE) / SC8551_AC_OVP_LSB;
+
+	val <<= SC8551_AC_OVP_SHIFT;
+
+	ret = sc8551_update_bits(sc, SC8551_REG_05,
+				 SC8551_AC_OVP_MASK, val);
+
+	return ret;
+}
+
+static int sc8551_probe(struct udevice *dev)
+{
+	struct sc8551 *charger = dev_get_priv(dev);
+
+	SC8551_DBG("sc8551: driver version-20220903\n");
+
+	charger->dev = dev;
+
+	SC8551_DBG("sc8551: not reset\n");
+
+	sc8551_set_acovp_th(charger, SC8551_AC_OVP_VOLTAGE);
+
+	return 0;
+}
+
+static const struct udevice_id charger_ids[] = {
+	{ .compatible = "sc,sc8551-standalone" },
+	{ },
+};
+
+static struct dm_fuel_gauge_ops charger_ops = {
+	.get_chrg_online = sc8551_update_get_chrg_online,
+	.capability = sc8551_charger_capability,
+};
+
+U_BOOT_DRIVER(sc8551_charger) = {
+	.name = "sc8551_charger",
+	.id = UCLASS_FG,
+	.probe = sc8551_probe,
+	.of_match = charger_ids,
+	.ops = &charger_ops,
+	.ofdata_to_platdata = sc8551_ofdata_to_platdata,
+	.priv_auto_alloc_size = sizeof(struct sc8551),
+};
diff --git a/drivers/power/charge/sgm41542_charger.c b/drivers/power/charge/sgm41542_charger.c
new file mode 100644
index 0000000..fba054e
--- /dev/null
+++ b/drivers/power/charge/sgm41542_charger.c
@@ -0,0 +1,579 @@
+/*
+ * (C) Copyright 2022 Rockchip Electronics Co., Ltd
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <dm.h>
+#include <i2c.h>
+#include <irq-generic.h>
+#include <power/fuel_gauge.h>
+#include <linux/usb/phy-rockchip-usb2.h>
+#include <power/power_delivery/power_delivery.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+static int dbg_enable;
+
+#define SGM_DBG(args...) \
+	do { \
+		if (dbg_enable) { \
+			printf(args); \
+		} \
+	} while (0)
+
+/* define register */
+#define SGM4154x_CHRG_CTRL_0			0x00
+#define SGM4154x_CHRG_CTRL_1			0x01
+#define SGM4154x_CHRG_CTRL_2			0x02
+#define SGM4154x_CHRG_CTRL_3			0x03
+#define SGM4154x_CHRG_CTRL_4			0x04
+#define SGM4154x_CHRG_CTRL_5			0x05
+#define SGM4154x_CHRG_CTRL_6			0x06
+#define SGM4154x_CHRG_CTRL_7			0x07
+#define SGM4154x_CHRG_STAT			0x08
+#define SGM4154x_CHRG_FAULT			0x09
+#define SGM4154x_CHRG_CTRL_a			0x0a
+#define SGM4154x_CHRG_CTRL_b			0x0b
+#define SGM4154x_CHRG_CTRL_c			0x0c
+#define SGM4154x_CHRG_CTRL_d			0x0d
+#define SGM4154x_INPUT_DET			0x0e
+#define SGM4154x_CHRG_CTRL_f			0x0f
+
+/* charge status flags */
+#define SGM4154x_CHRG_EN			BIT(4)
+#define SGM4154x_HIZ_EN				BIT(7)
+#define SGM4154x_TERM_EN			BIT(7)
+#define SGM4154x_VAC_OVP_MASK			GENMASK(7, 6)
+#define SGM4154x_DPDM_ONGOING			BIT(7)
+#define SGM4154x_VBUS_GOOD			BIT(7)
+
+#define SGM4154x_BOOSTV				GENMASK(5, 4)
+#define SGM4154x_BOOST_LIM			BIT(7)
+#define SGM4154x_OTG_EN				BIT(5)
+
+/* Part ID */
+#define SGM4154x_PN_MASK			GENMASK(6, 3)
+
+/* WDT TIMER SET */
+#define SGM4154x_WDT_TIMER_MASK			GENMASK(5, 4)
+#define SGM4154x_WDT_TIMER_DISABLE		0
+#define SGM4154x_WDT_TIMER_40S			BIT(4)
+#define SGM4154x_WDT_TIMER_80S			BIT(5)
+#define SGM4154x_WDT_TIMER_160S			(BIT(4) | BIT(5))
+
+#define SGM4154x_WDT_RST_MASK			BIT(6)
+
+/* SAFETY TIMER SET */
+#define SGM4154x_SAFETY_TIMER_MASK		GENMASK(3, 3)
+#define SGM4154x_SAFETY_TIMER_DISABLE		0
+#define SGM4154x_SAFETY_TIMER_EN		BIT(3)
+#define SGM4154x_SAFETY_TIMER_5H		0
+#define SGM4154x_SAFETY_TIMER_10H		BIT(2)
+
+/* recharge voltage */
+#define SGM4154x_VRECHARGE			BIT(0)
+#define SGM4154x_VRECHRG_STEP_mV		100
+#define SGM4154x_VRECHRG_OFFSET_mV		100
+
+/* charge status */
+#define SGM4154x_VSYS_STAT			BIT(0)
+#define SGM4154x_THERM_STAT			BIT(1)
+#define SGM4154x_PG_STAT			BIT(2)
+#define SGM4154x_CHG_STAT_MASK			GENMASK(4, 3)
+#define SGM4154x_PRECHRG			BIT(3)
+#define SGM4154x_FAST_CHRG			BIT(4)
+#define SGM4154x_TERM_CHRG			(BIT(3) | BIT(4))
+
+/* charge type */
+#define SGM4154x_VBUS_STAT_MASK			GENMASK(7, 5)
+#define SGM4154x_NOT_CHRGING			0
+#define SGM4154x_USB_SDP			BIT(5)
+#define SGM4154x_USB_CDP			BIT(6)
+#define SGM4154x_USB_DCP			(BIT(5) | BIT(6))
+#define SGM4154x_UNKNOWN			(BIT(7) | BIT(5))
+#define SGM4154x_NON_STANDARD			(BIT(7) | BIT(6))
+#define SGM4154x_OTG_MODE			(BIT(7) | BIT(6) | BIT(5))
+
+/* TEMP Status */
+#define SGM4154x_TEMP_MASK			GENMASK(2, 0)
+#define SGM4154x_TEMP_NORMAL			BIT(0)
+#define SGM4154x_TEMP_WARM			BIT(1)
+#define SGM4154x_TEMP_COOL			(BIT(0) | BIT(1))
+#define SGM4154x_TEMP_COLD			(BIT(0) | BIT(3))
+#define SGM4154x_TEMP_HOT			(BIT(2) | BIT(3))
+
+/* precharge current */
+#define SGM4154x_PRECHRG_CUR_MASK		GENMASK(7, 4)
+#define SGM4154x_PRECHRG_CURRENT_STEP_uA	60000
+#define SGM4154x_PRECHRG_I_MIN_uA		60000
+#define SGM4154x_PRECHRG_I_MAX_uA		780000
+#define SGM4154x_PRECHRG_I_DEF_uA		180000
+
+/* termination current */
+#define SGM4154x_TERMCHRG_CUR_MASK		GENMASK(3, 0)
+#define SGM4154x_TERMCHRG_CURRENT_STEP_uA	60000
+#define SGM4154x_TERMCHRG_I_MIN_uA		60000
+#define SGM4154x_TERMCHRG_I_MAX_uA		960000
+#define SGM4154x_TERMCHRG_I_DEF_uA		180000
+
+/* charge current */
+#define SGM4154x_ICHRG_CUR_MASK			GENMASK(5, 0)
+#define SGM4154x_ICHRG_I_STEP_uA		60000
+#define SGM4154x_ICHRG_I_MIN_uA			0
+#define SGM4154x_ICHRG_I_MAX_uA			3780000
+#define SGM4154x_ICHRG_I_DEF_uA			2040000
+
+/* charge voltage */
+#define SGM4154x_VREG_V_MASK			GENMASK(7, 3)
+#define SGM4154x_VREG_V_MAX_uV			4624000
+#define SGM4154x_VREG_V_MIN_uV			3856000
+#define SGM4154x_VREG_V_DEF_uV			4208000
+#define SGM4154x_VREG_V_STEP_uV			32000
+
+/* VREG Fine Tuning */
+#define SGM4154x_VREG_FT_MASK			GENMASK(7, 6)
+#define SGM4154x_VREG_FT_UP_8mV			BIT(6)
+#define SGM4154x_VREG_FT_DN_8mV			BIT(7)
+#define SGM4154x_VREG_FT_DN_16mV		(BIT(7) | BIT(6))
+
+/* iindpm current */
+#define SGM4154x_IINDPM_I_MASK			GENMASK(4, 0)
+#define SGM4154x_IINDPM_I_MIN_uA		100000
+#define SGM4154x_IINDPM_I_MAX_uA		2000000
+#define SGM4154x_IINDPM_STEP_uA			100000
+#define SGM4154x_IINDPM_DEF_uA			2400000
+
+#define SGM4154x_VINDPM_INT_MASK		BIT(1)
+#define SGM4154x_VINDPM_INT_DIS			BIT(1)
+#define SGM4154x_IINDPM_INT_MASK		BIT(0)
+#define SGM4154x_IINDPM_INT_DIS			BIT(0)
+
+/* vindpm voltage */
+#define SGM4154x_VINDPM_V_MASK			GENMASK(3, 0)
+#define SGM4154x_VINDPM_V_MIN_uV		3900000
+#define SGM4154x_VINDPM_V_MAX_uV		12000000
+#define SGM4154x_VINDPM_STEP_uV			100000
+#define SGM4154x_VINDPM_DEF_uV			4500000
+#define SGM4154x_VINDPM_OS_MASK			GENMASK(1, 0)
+
+/* DP DM SEL */
+#define SGM4154x_DP_VSEL_MASK			GENMASK(4, 3)
+#define SGM4154x_DM_VSEL_MASK			GENMASK(2, 1)
+
+/* PUMPX SET */
+#define SGM4154x_EN_PUMPX			BIT(7)
+#define SGM4154x_PUMPX_UP			BIT(6)
+#define SGM4154x_PUMPX_DN			BIT(5)
+
+struct sgm41542 {
+	struct udevice *dev;
+	struct udevice *pd;
+	bool pd_online;
+	u32 init_count;
+	u32 ichg;
+	u32 vchg;
+	int irq;
+};
+
+enum power_supply_type {
+	POWER_SUPPLY_TYPE_UNKNOWN = 0,
+	POWER_SUPPLY_TYPE_USB,          /* Standard Downstream Port */
+	POWER_SUPPLY_TYPE_USB_DCP,      /* Dedicated Charging Port */
+	POWER_SUPPLY_TYPE_USB_CDP,      /* Charging Downstream Port */
+	POWER_SUPPLY_TYPE_USB_FLOATING, /* DCP without shorting D+/D- */
+};
+
+static int sgm41542_read(struct sgm41542 *charger, uint reg, u8 *buffer)
+{
+	u8 val;
+	int ret;
+
+	ret = dm_i2c_read(charger->dev, reg, &val, 1);
+	if (ret) {
+		printf("sgm41542: read %#x error, ret=%d", reg, ret);
+		return ret;
+	}
+
+	*buffer = val;
+	return 0;
+}
+
+static int sgm41542_write(struct sgm41542 *charger, uint reg, u8 val)
+{
+	int ret;
+
+	ret = dm_i2c_write(charger->dev, reg, &val, 1);
+	if (ret)
+		printf("sgm41542: write %#x error, ret=%d", reg, ret);
+
+	return ret;
+}
+
+static int sgm41542_update_bits(struct sgm41542 *charger,
+				u8 offset,
+				u8 mask,
+				u8 val)
+{
+	u8 reg;
+
+	sgm41542_read(charger, offset, &reg);
+
+	reg &= ~mask;
+
+	return sgm41542_write(charger, offset, reg | val);
+}
+
+static int sgm4154x_set_input_curr_lim(struct sgm41542 *charger, int iindpm)
+{
+	u8 reg_val;
+	int ret;
+
+	if (iindpm < SGM4154x_IINDPM_I_MIN_uA)
+		iindpm = SGM4154x_IINDPM_I_MIN_uA;
+	if (iindpm >= SGM4154x_IINDPM_I_MAX_uA)
+		iindpm = SGM4154x_IINDPM_I_MAX_uA;
+
+	if (iindpm >= SGM4154x_IINDPM_I_MIN_uA &&
+	    iindpm <= SGM4154x_IINDPM_I_MAX_uA)
+		reg_val = (iindpm - SGM4154x_IINDPM_I_MIN_uA) / SGM4154x_IINDPM_STEP_uA;
+
+	ret = sgm41542_update_bits(charger,
+				   SGM4154x_CHRG_CTRL_0,
+				   SGM4154x_IINDPM_I_MASK,
+				   reg_val);
+
+	return ret;
+}
+
+static int sgm41542_get_usb_type(void)
+{
+#ifdef CONFIG_PHY_ROCKCHIP_INNO_USB2
+	return rockchip_chg_get_type();
+#else
+	return 0;
+#endif
+}
+
+static int sgm41542_charger_capability(struct udevice *dev)
+{
+	return FG_CAP_CHARGER;
+}
+
+static int sgm4154x_set_ichrg_curr(struct sgm41542 *charger, int uA)
+{
+	u8 reg_val;
+	int ret;
+
+	if (uA < SGM4154x_ICHRG_I_MIN_uA)
+		uA = SGM4154x_ICHRG_I_MIN_uA;
+	else if (uA > charger->ichg)
+		uA = uA > charger->ichg;
+
+	reg_val = uA / SGM4154x_ICHRG_I_STEP_uA;
+
+	ret = sgm41542_update_bits(charger,
+				   SGM4154x_CHRG_CTRL_2,
+				   SGM4154x_ICHRG_CUR_MASK,
+				   reg_val);
+	if (ret)
+		printf("sgm41542: set icharge current error!\n");
+
+	return ret;
+}
+
+static int sgm4154x_set_prechrg_curr(struct sgm41542 *charger, int uA)
+{
+	u8 reg_val;
+	int ret;
+
+	if (uA < SGM4154x_PRECHRG_I_MIN_uA)
+		uA = SGM4154x_PRECHRG_I_MIN_uA;
+	else if (uA > SGM4154x_PRECHRG_I_MAX_uA)
+		uA = SGM4154x_PRECHRG_I_MAX_uA;
+
+	reg_val = (uA - SGM4154x_PRECHRG_I_MIN_uA) / SGM4154x_PRECHRG_CURRENT_STEP_uA;
+
+	reg_val = reg_val << 4;
+	ret = sgm41542_update_bits(charger,
+				   SGM4154x_CHRG_CTRL_3,
+				   SGM4154x_PRECHRG_CUR_MASK,
+				   reg_val);
+	if (ret)
+		printf("sgm41542: set icharge current error!\n");
+
+	return ret;
+}
+
+static int sgm4154x_set_chrg_volt(struct sgm41542 *charger, int chrg_volt)
+{
+	u8 reg_val;
+	int ret;
+
+	if (chrg_volt < SGM4154x_VREG_V_MIN_uV)
+		chrg_volt = SGM4154x_VREG_V_MIN_uV;
+	else if (chrg_volt > SGM4154x_VREG_V_MAX_uV)
+		chrg_volt = SGM4154x_VREG_V_MAX_uV;
+
+	reg_val = (chrg_volt - SGM4154x_VREG_V_MIN_uV) / SGM4154x_VREG_V_STEP_uV;
+	reg_val = reg_val << 3;
+	SGM_DBG("reg_val: 0x%x\n", reg_val);
+	ret = sgm41542_update_bits(charger,
+				   SGM4154x_CHRG_CTRL_4,
+				   SGM4154x_VREG_V_MASK,
+				   reg_val);
+
+	return ret;
+}
+
+static int sgm41542_set_charger_voltage(struct udevice *dev, int uV)
+{
+	struct sgm41542 *charger = dev_get_priv(dev);
+
+	SGM_DBG("SGM41542: charger voltage %d\n", uV);
+	return sgm4154x_set_chrg_volt(charger, uV);
+}
+
+static int sgm41542_charger_enable(struct udevice *dev)
+{
+	struct sgm41542 *charger = dev_get_priv(dev);
+
+	SGM_DBG("SGM41542: charger enable\n");
+	sgm41542_update_bits(charger, SGM4154x_CHRG_CTRL_1,
+			     SGM4154x_CHRG_EN,
+			     SGM4154x_CHRG_EN);
+	return 0;
+}
+
+static int sgm41542_charger_disable(struct udevice *dev)
+{
+	struct sgm41542 *charger = dev_get_priv(dev);
+
+	SGM_DBG("SGM41542: charger disable\n");
+	sgm41542_update_bits(charger, SGM4154x_CHRG_CTRL_1,
+			     SGM4154x_CHRG_EN,
+			     0);
+	return 0;
+}
+
+static int sgm41542_iprechg_current(struct udevice *dev, int iprechrg_uA)
+{
+	struct sgm41542 *charger = dev_get_priv(dev);
+
+	SGM_DBG("SGM41542: charger current:iprechrg_uA: %d\n",
+		iprechrg_uA);
+
+	return sgm4154x_set_prechrg_curr(charger, iprechrg_uA);
+}
+
+static int sgm41542_charger_current(struct udevice *dev, int ichrg_uA)
+{
+	struct sgm41542 *charger = dev_get_priv(dev);
+
+	SGM_DBG("SGM41542: charger current:ichrg_uA%d\n",
+		ichrg_uA);
+
+	return sgm4154x_set_ichrg_curr(charger, ichrg_uA);
+}
+
+static int sgm41542_get_pd_output_val(struct sgm41542 *charger,
+				      int *vol,
+				      int *cur)
+{
+	struct power_delivery_data pd_data;
+	int ret;
+
+	if (!charger->pd)
+		return -EINVAL;
+
+	memset(&pd_data, 0, sizeof(pd_data));
+	ret = power_delivery_get_data(charger->pd, &pd_data);
+	if (ret)
+		return ret;
+	if (!pd_data.online || !pd_data.voltage || !pd_data.current)
+		return -EINVAL;
+
+	*vol = pd_data.voltage;
+	*cur = pd_data.current;
+	charger->pd_online = pd_data.online;
+
+	return 0;
+}
+
+static void sgm41542_charger_input_current_init(struct sgm41542 *charger)
+{
+	int sdp_inputcurrent = 500 * 1000;
+	int dcp_inputcurrent = 2000 * 1000;
+	int pd_inputvol, pd_inputcurrent;
+	int ret;
+
+	if (!charger->pd) {
+		ret = uclass_get_device(UCLASS_PD, 0, &charger->pd);
+		if (ret) {
+			if (ret == -ENODEV)
+				printf("sgm41542: Can't find PD\n");
+			else
+				printf("sgm41542: Get UCLASS PD failed: %d\n", ret);
+			charger->pd = NULL;
+		}
+	}
+
+	if (!sgm41542_get_pd_output_val(charger, &pd_inputvol, &pd_inputcurrent)) {
+		SGM_DBG("pd adapter\n");
+		sgm4154x_set_input_curr_lim(charger, pd_inputcurrent);
+	} else {
+		SGM_DBG("normal adapter: %d\n", sgm41542_get_usb_type());
+		if (sgm41542_get_usb_type() == POWER_SUPPLY_TYPE_USB_DCP)
+			sgm4154x_set_input_curr_lim(charger, dcp_inputcurrent);
+		else if (sgm41542_get_usb_type() == POWER_SUPPLY_TYPE_USB_CDP)
+			sgm4154x_set_input_curr_lim(charger, dcp_inputcurrent);
+		else if (sgm41542_get_usb_type() == POWER_SUPPLY_TYPE_USB_FLOATING)
+			sgm4154x_set_input_curr_lim(charger, dcp_inputcurrent);
+		else
+			sgm4154x_set_input_curr_lim(charger, sdp_inputcurrent);
+	}
+}
+
+static bool sgm41542_charger_status(struct udevice *dev)
+{
+	struct sgm41542 *charger = dev_get_priv(dev);
+	int state_of_charger;
+	u8 value;
+	int i = 0;
+
+__retry:
+	sgm41542_read(charger, SGM4154x_CHRG_STAT, &value);
+	state_of_charger = !!(value & SGM4154x_PG_STAT);
+	if (!state_of_charger && charger->pd_online) {
+		if (i < 3) {
+			i++;
+			mdelay(20);
+			goto __retry;
+		}
+	}
+
+	if ((state_of_charger) && (charger->init_count < 5)) {
+		sgm41542_charger_input_current_init(charger);
+		sgm41542_update_bits(charger,
+				     SGM4154x_CHRG_CTRL_1,
+				     SGM4154x_CHRG_EN,
+				     SGM4154x_CHRG_EN);
+		charger->init_count++;
+	}
+
+	if (!state_of_charger)
+		sgm4154x_set_prechrg_curr(charger, SGM4154x_PRECHRG_I_DEF_uA);
+
+	SGM_DBG("dump register:\n");
+	for (i = SGM4154x_CHRG_CTRL_0; i < SGM4154x_CHRG_CTRL_f; i++) {
+		sgm41542_read(charger, i, &value);
+		SGM_DBG("[%d]: 0x%x\n", i, value);
+	}
+	return state_of_charger;
+}
+
+static void sgm41542_irq_handler(int irq, void *data)
+{
+}
+
+static int sgm41542_ofdata_to_platdata(struct udevice *dev)
+{
+	struct sgm41542 *charger = dev_get_priv(dev);
+	u32 interrupt, phandle;
+	int ret;
+
+	charger->dev = dev;
+	charger->ichg = dev_read_u32_default(dev,
+					     "vbat-current-limit-microamp",
+					     0);
+	if (charger->ichg == 0)
+		charger->ichg = 3000 * 1000;
+	charger->vchg = dev_read_u32_default(dev,
+					     "vbat-voltage-limit-microamp",
+					     0);
+	if (charger->vchg == 0)
+		charger->vchg = 4400 * 1000;
+	SGM_DBG("charger->ichg: %d\n", charger->ichg);
+	SGM_DBG("charger->vchg: %d\n", charger->vchg);
+
+	phandle = dev_read_u32_default(dev, "interrupt-parent", -ENODATA);
+	if (phandle == -ENODATA) {
+		printf("sgm41542: read 'interrupt-parent' failed, ret=%d\n",
+		       phandle);
+		return phandle;
+	}
+
+	ret = dev_read_u32_array(dev, "interrupts", &interrupt, 1);
+	if (ret) {
+		printf("sgm41542: read 'interrupts' failed, ret=%d\n", ret);
+		return ret;
+	}
+
+	charger->irq = phandle_gpio_to_irq(phandle, interrupt);
+	if (charger->irq < 0)
+		printf("sgm41542: failed to request irq: %d\n", charger->irq);
+
+	return 0;
+}
+
+static int sgm41542_probe(struct udevice *dev)
+{
+	struct sgm41542 *charger = dev_get_priv(dev);
+	u8 value;
+	int i;
+
+	SGM_DBG("sgm41542: driver version-20220903\n");
+	SGM_DBG("sgm41542: dump register:\n");
+	for (i = SGM4154x_CHRG_CTRL_0; i < SGM4154x_CHRG_CTRL_f; i++) {
+		sgm41542_read(charger, i, &value);
+		SGM_DBG("gm41542: [%d]: 0x%x\n", i, value);
+	}
+
+	charger->dev = dev;
+	/* disable watchdog */
+	sgm41542_update_bits(charger, SGM4154x_CHRG_CTRL_5,
+			     SGM4154x_WDT_TIMER_MASK,
+			     SGM4154x_WDT_TIMER_DISABLE);
+
+	sgm41542_update_bits(charger, SGM4154x_CHRG_CTRL_a,
+			     SGM4154x_VINDPM_INT_MASK | SGM4154x_IINDPM_INT_MASK,
+			     SGM4154x_VINDPM_INT_DIS | SGM4154x_IINDPM_INT_DIS);
+
+	sgm4154x_set_ichrg_curr(charger, charger->ichg);
+	sgm4154x_set_chrg_volt(charger, charger->vchg);
+
+	if (0 && charger->irq) {
+		SGM_DBG("sgm41542: enable sgm42542 irq\n");
+		irq_install_handler(charger->irq, sgm41542_irq_handler, dev);
+		irq_handler_enable(charger->irq);
+	}
+
+	return 0;
+}
+
+static const struct udevice_id charger_ids[] = {
+	{ .compatible = "sgm,sgm41542" },
+	{ },
+};
+
+static struct dm_fuel_gauge_ops charger_ops = {
+	.get_chrg_online = sgm41542_charger_status,
+	.capability = sgm41542_charger_capability,
+	.set_charger_voltage = sgm41542_set_charger_voltage,
+	.set_charger_enable = sgm41542_charger_enable,
+	.set_charger_disable = sgm41542_charger_disable,
+	.set_charger_current = sgm41542_charger_current,
+	.set_iprechg_current = sgm41542_iprechg_current,
+
+};
+
+U_BOOT_DRIVER(sgm41542_charger) = {
+	.name = "sgm41542_charger",
+	.id = UCLASS_FG,
+	.probe = sgm41542_probe,
+	.of_match = charger_ids,
+	.ops = &charger_ops,
+	.ofdata_to_platdata = sgm41542_ofdata_to_platdata,
+	.priv_auto_alloc_size = sizeof(struct sgm41542),
+};
diff --git a/drivers/power/fuel_gauge/Kconfig b/drivers/power/fuel_gauge/Kconfig
index 2485ffe..9d1264f 100644
--- a/drivers/power/fuel_gauge/Kconfig
+++ b/drivers/power/fuel_gauge/Kconfig
@@ -16,6 +16,12 @@ config POWER_FG_CW201X
 	help
 	  This adds support for CW201X fuel gauge support.
 
+config POWER_FG_CW221X
+	bool "CW221X Fuel gauge support"
+	depends on DM_FUEL_GAUGE
+	help
+	  This adds support for CW221X fuel gauge support.
+
 config SPL_POWER_FG_CW201X
 	bool "CW201X Fuel gauge support"
 	depends on SPL_DM_FUEL_GAUGE
diff --git a/drivers/power/fuel_gauge/Makefile b/drivers/power/fuel_gauge/Makefile
index 5aa110a..70fd313 100644
--- a/drivers/power/fuel_gauge/Makefile
+++ b/drivers/power/fuel_gauge/Makefile
@@ -8,6 +8,7 @@
 obj-$(CONFIG_$(SPL_)DM_FUEL_GAUGE) += fuel_gauge_uclass.o
 
 obj-$(CONFIG_POWER_FG_CW201X) += fg_cw201x.o
+obj-$(CONFIG_POWER_FG_CW221X) += fg_cw221x.o
 obj-$(CONFIG_POWER_FG_MAX17042) += fg_max17042.o
 obj-$(CONFIG_POWER_FG_RK818) += fg_rk818.o
 obj-$(CONFIG_POWER_FG_RK816) += fg_rk816.o
diff --git a/drivers/power/fuel_gauge/fg_cw221x.c b/drivers/power/fuel_gauge/fg_cw221x.c
new file mode 100644
index 0000000..851d82b
--- /dev/null
+++ b/drivers/power/fuel_gauge/fg_cw221x.c
@@ -0,0 +1,616 @@
+/*
+ * (C) Copyright 2022 Rockchip Electronics Co., Ltd
+ *
+ * SPDX-License-Identifier:    GPL-2.0+
+ */
+
+#include <common.h>
+#include <dm.h>
+#include <errno.h>
+#include <i2c.h>
+#include <power/fuel_gauge.h>
+#include <power/pmic.h>
+#include <linux/usb/phy-rockchip-usb2.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+static int dbg_enable;
+
+#define CW_DBG(args...) \
+	do { \
+		if (dbg_enable) { \
+			printf(args); \
+		} \
+	} while (0)
+
+#define REG_CHIP_ID			0x00
+#define REG_VCELL_H			0x02
+#define REG_VCELL_L			0x03
+#define REG_SOC_INT			0x04
+#define REG_SOC_DECIMAL			0x05
+#define REG_TEMP			0x06
+#define REG_MODE_CONFIG			0x08
+#define REG_GPIO_CONFIG			0x0A
+#define REG_SOC_ALERT			0x0B
+#define REG_TEMP_MAX			0x0C
+#define REG_TEMP_MIN			0x0D
+#define REG_CURRENT_H			0x0E
+#define REG_CURRENT_L			0x0F
+#define REG_T_HOST_H			0xA0
+#define REG_T_HOST_L			0xA1
+#define REG_USER_CONF			0xA2
+#define REG_CYCLE_H			0xA4
+#define REG_CYCLE_L			0xA5
+#define REG_SOH				0xA6
+#define REG_IC_STATE			0xA7
+#define REG_FW_VERSION			0xAB
+#define REG_BAT_PROFILE			0x10
+
+#define CONFIG_MODE_RESTART		0x30
+#define CONFIG_MODE_ACTIVE		0x00
+#define CONFIG_MODE_SLEEP		0xF0
+#define CONFIG_UPDATE_FLG		0x80
+#define IC_VCHIP_ID			0xA0
+#define IC_READY_MARK			0x0C
+
+#define GPIO_ENABLE_MIN_TEMP		0
+#define GPIO_ENABLE_MAX_TEMP		0
+#define GPIO_ENABLE_SOC_CHANGE		0
+#define GPIO_SOC_IRQ_VALUE		0x0 /* 0x7F */
+#define DEFINED_MAX_TEMP		45
+#define DEFINED_MIN_TEMP		0
+
+#define CWFG_NAME			"cw221X"
+#define SIZE_OF_PROFILE			80
+
+/* mhom rsense * 1000 for convenience calculation */
+#define USER_RSENSE			1500
+
+#define queue_delayed_work_time		5000
+#define queue_start_work_time		50
+
+#define CW_SLEEP_20MS			20
+#define CW_SLEEP_10MS			10
+#define CW_UI_FULL			100
+#define COMPLEMENT_CODE_U16		0x8000
+#define CW_SLEEP_100MS			100
+#define CW_SLEEP_200MS			200
+#define CW_SLEEP_COUNTS			50
+#define CW_TRUE				1
+#define CW_RETRY_COUNT			3
+#define CW_VOL_UNIT			1000
+#define CW_LOW_VOLTAGE_REF		2500
+#define CW_LOW_VOLTAGE			3000
+#define CW_LOW_VOLTAGE_STEP		10
+
+#define CW221X_NOT_ACTIVE		1
+#define CW221X_PROFILE_NOT_READY	2
+#define CW221X_PROFILE_NEED_UPDATE	3
+
+static u8 config_profile_info[SIZE_OF_PROFILE] = {
+	0x5A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0xB2,
+	0xC2, 0xCA, 0xC2, 0xBD, 0x9C, 0x5C, 0x38, 0xFF, 0xFF, 0xC4,
+	0x86, 0x74, 0x60, 0x55, 0x4F, 0x4D, 0x4B, 0x80, 0xC0, 0xDB,
+	0xCD, 0xD0, 0xCE, 0xD2, 0xD3, 0xD2, 0xD0, 0xCE, 0xC3, 0xD5,
+	0xB9, 0xC9, 0xC5, 0xA3, 0x92, 0x8A, 0x80, 0x72, 0x63, 0x62,
+	0x74, 0x90, 0xA6, 0x7E, 0x5F, 0x48, 0x80, 0x00, 0xAB, 0x10,
+	0x00, 0xA1, 0xFB, 0x00, 0x00, 0x00, 0x64, 0x1E, 0xB1, 0x04,
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4D,
+};
+
+enum charger_type {
+	CHARGER_TYPE_NO = 0,
+	CHARGER_TYPE_USB,
+	CHARGER_TYPE_AC,
+	CHARGER_TYPE_DC,
+	CHARGER_TYPE_UNDEF,
+};
+
+struct cw221x_info {
+	struct udevice *dev;
+	int capacity;
+	u8 *bat_profile;
+	int chip_id;
+	int voltage;
+	int ic_soc_h;
+	int ic_soc_l;
+	int ui_soc;
+	int temp;
+	long cw_current;
+	int cycle;
+	int soh;
+};
+
+static u8 cw221x_read(struct cw221x_info *cw221x, u8 reg, u8 *buffer)
+{
+	u8 val;
+	int ret;
+
+	ret = dm_i2c_read(cw221x->dev, reg, &val, 1);
+	if (ret) {
+		printf("cw221x: read reg 0x%02x failed, ret=%d\n", reg, ret);
+		return ret;
+	}
+
+	*buffer = val;
+	return 0;
+}
+
+static int cw221x_write(struct cw221x_info *cw221x, u8 reg, u8 val)
+{
+	int ret;
+
+	ret = dm_i2c_write(cw221x->dev, reg, &val, 1);
+	if (ret)
+		printf("cw221x: write reg 0x%02x failed, ret=%d\n", reg, ret);
+
+	return ret;
+}
+
+static int cw221x_read_half_word(struct cw221x_info *cw221x,
+				 int reg,
+				 u16 *buffer)
+{
+	u8 vall, valh;
+	int ret;
+
+	ret = cw221x_read(cw221x, reg, &valh);
+	if (ret)
+		return ret;
+
+	ret = cw221x_read(cw221x, reg + 1, &vall);
+	if (ret)
+		return ret;
+
+	*buffer = ((u16)valh << 8) | vall;
+
+	return 0;
+}
+
+static int cw221x_ofdata_to_platdata(struct udevice *dev)
+{
+	struct cw221x_info *cw221x = dev_get_priv(dev);
+	int i, len, size;
+	const u8 *info;
+
+	if (!dev_read_prop(dev, "cellwise,battery-profile", &len) ||
+	    (len != SIZE_OF_PROFILE)) {
+		cw221x->bat_profile = config_profile_info;
+		return 0;
+	}
+
+	CW_DBG("cw221x: use dts profile\n");
+	size = sizeof(*cw221x->bat_profile) * len;
+	cw221x->bat_profile = calloc(size, 1);
+	if (!cw221x->bat_profile) {
+		CW_DBG("cw221x: calloc bat_profile fail\n");
+		return -EINVAL;
+	}
+
+	info = dev_read_u8_array_ptr(dev, "cellwise,battery-profile", len);
+	if (!info) {
+		CW_DBG("cw221x: fdtdec_get battery profile fail\n");
+		return -EINVAL;
+	}
+	for (i = 0; i < len; i++) {
+		cw221x->bat_profile[i] = info[i];
+		CW_DBG("%#x ", cw221x->bat_profile[i]);
+		if ((i + 1) % 8 == 0)
+			CW_DBG("\n");
+	}
+
+	return 0;
+}
+
+static int cw221x_get_vol(struct cw221x_info *cw221x)
+{
+	u16 value16, value16_1, value16_2;
+	int voltage;
+
+	cw221x_read_half_word(cw221x, REG_VCELL_H, &value16);
+	mdelay(10);
+
+	cw221x_read_half_word(cw221x, REG_VCELL_H, &value16_1);
+	mdelay(10);
+
+	if (value16 != value16_1) {
+		cw221x_read_half_word(cw221x, REG_VCELL_H, &value16_2);
+		if (value16_2 < 0)
+			return -1;
+		voltage = value16_2 * 5 / 16;
+
+		return voltage;
+	}
+
+	voltage = value16 * 5 / 16;
+	CW_DBG("cw221x: voltage:%d\n", voltage);
+
+	return voltage;
+}
+
+static int cw221x_dwc_otg_check_dpdm(void)
+{
+#if defined(CONFIG_PHY_ROCKCHIP_INNO_USB2) && !defined(CONFIG_SPL_BUILD)
+	return rockchip_chg_get_type();
+#else
+	CW_DBG("cw221x: rockchip_chg_get_type() is not implement\n");
+	return CHARGER_TYPE_NO;
+#endif
+}
+
+static int cw221x_get_usb_state(struct cw221x_info *cw221x)
+{
+	int charger_type;
+
+	switch (cw221x_dwc_otg_check_dpdm()) {
+	case 0:
+		charger_type = CHARGER_TYPE_NO;
+		break;
+	case 1:
+	case 3:
+		charger_type = CHARGER_TYPE_USB;
+		break;
+	case 2:
+		charger_type = CHARGER_TYPE_AC;
+		break;
+	default:
+		charger_type = CHARGER_TYPE_NO;
+		break;
+	}
+
+	return charger_type;
+}
+
+static bool cw221x_check_charge(struct cw221x_info *cw221x)
+{
+	if (cw221x_get_usb_state(cw221x) != CHARGER_TYPE_NO)
+		return true;
+
+	return false;
+}
+
+static int cw221x_get_soc(struct cw221x_info *cw221x)
+{
+	int ui_100 = CW_UI_FULL;
+	int ui_soc;
+	u16 value16, value16_1, value16_2;
+	int ret;
+
+	ret = cw221x_read_half_word(cw221x, REG_SOC_INT, &value16);
+	if (ret) {
+		printf("cw221x: get soc error!!!");
+		return ret;
+	}
+	mdelay(10);
+
+	ret = cw221x_read_half_word(cw221x, REG_SOC_INT, &value16_1);
+	if (ret) {
+		printf("cw221x: get soc error!!!");
+		return ret;
+	}
+	mdelay(10);
+
+	if (value16 != value16_1) {
+		ret = cw221x_read_half_word(cw221x, REG_SOC_INT, &value16_2);
+		if (ret) {
+			printf("cw221x: get soc error!!!");
+			return ret;
+		}
+
+		if (value16_2 < 0)
+			return -1;
+
+		value16 = value16_2;
+	}
+
+	ui_soc = value16 * 100 / (ui_100 * 256);
+
+	if (ui_soc >= 100)
+		ui_soc = 100;
+	CW_DBG("soc: %d\n", ui_soc);
+
+	return ui_soc;
+}
+
+static int cw221x_update_get_soc(struct udevice *dev)
+{
+	struct cw221x_info *cw221x = dev_get_priv(dev);
+
+	return cw221x_get_soc(cw221x);
+}
+
+/*
+ * The 0x00 register is an UNSIGNED 8bit read-only register. Its value is
+ * fixed to 0xA0 in shutdown mode and active mode.
+ */
+static void cw221X_get_chip_id(struct cw221x_info *cw221x)
+{
+	u8 chip_id;
+	int ret;
+
+	ret = cw221x_read(cw221x, REG_CHIP_ID, &chip_id);
+	if (ret) {
+		printf("cw221x: get chip id error!!!");
+		return;
+	}
+
+	cw221x->chip_id = chip_id;
+}
+
+static int cw221X_active(struct cw221x_info *cw221x)
+{
+	unsigned char reg_val = CONFIG_MODE_RESTART;
+
+	cw221x_write(cw221x, REG_MODE_CONFIG, reg_val);
+	mdelay(20);
+	reg_val = CONFIG_MODE_ACTIVE;
+	cw221x_write(cw221x, REG_MODE_CONFIG, reg_val);
+	mdelay(20);
+
+	return 0;
+}
+
+static int cw221X_sleep(struct cw221x_info *cw221x)
+{
+	unsigned char reg_val = CONFIG_MODE_RESTART;
+
+	cw221x_write(cw221x, REG_MODE_CONFIG, reg_val);
+	mdelay(20);
+	reg_val = CONFIG_MODE_SLEEP;
+	cw221x_write(cw221x, REG_MODE_CONFIG, reg_val);
+	mdelay(20);
+
+	return 0;
+}
+
+static int cw_write_profile(struct cw221x_info *cw221x, u8 buf[])
+{
+	int ret;
+	int i;
+
+	for (i = 0; i < SIZE_OF_PROFILE; i++) {
+		ret = cw221x_write(cw221x, REG_BAT_PROFILE + i, buf[i]);
+		if (ret < 0) {
+			printf("cw221x: write profile error\n");
+			return ret;
+		}
+	}
+
+	return ret;
+}
+
+/*
+ * Get the cw221X running state
+ * Determine whether the profile needs to be updated
+ */
+static int cw221X_get_state(struct cw221x_info *cw221x)
+{
+	unsigned char reg_val;
+	int ret;
+	int i;
+
+	ret = cw221x_read(cw221x, REG_MODE_CONFIG, &reg_val);
+	if (ret) {
+		printf("cw221x: get mode config error!!!");
+		return ret;
+	}
+
+	if (reg_val != CONFIG_MODE_ACTIVE)
+		return CW221X_NOT_ACTIVE;
+
+	ret = cw221x_read(cw221x, REG_SOC_ALERT, &reg_val);
+	if (ret) {
+		printf("cw221x: get soc alert error!!!");
+		return ret;
+	}
+
+	if (0x00 == (reg_val & CONFIG_UPDATE_FLG))
+		return CW221X_PROFILE_NOT_READY;
+
+	for (i = 0; i < SIZE_OF_PROFILE; i++) {
+		ret = cw221x_read(cw221x, (REG_BAT_PROFILE + i), &reg_val);
+		if (ret) {
+			printf("cw221x: get battery profile error!!!");
+			return ret;
+		}
+
+		if (cw221x->bat_profile[i] != reg_val)
+			break;
+	}
+
+	if (i != SIZE_OF_PROFILE)
+		return CW221X_PROFILE_NEED_UPDATE;
+
+	return 0;
+}
+
+static int cw_config_start_ic(struct cw221x_info *cw221x)
+{
+	int count = 0;
+	u8 reg_val;
+	int ret;
+
+	cw221X_sleep(cw221x);
+	cw_write_profile(cw221x, cw221x->bat_profile);
+	cw221X_active(cw221x);
+
+	/* set UPDATE_FLAG AND SOC INTTERRUP VALUE */
+	reg_val = CONFIG_UPDATE_FLG | GPIO_SOC_IRQ_VALUE;
+	ret = cw221x_write(cw221x, REG_SOC_ALERT, reg_val);
+	if (ret < 0)
+		return ret;
+
+	/* close all interruptes */
+	reg_val = 0;
+	ret = cw221x_write(cw221x, REG_GPIO_CONFIG, reg_val);
+	if (ret < 0)
+		return ret;
+
+	while (CW_TRUE) {
+		mdelay(CW_SLEEP_100MS);
+		ret = cw221x_read(cw221x, REG_IC_STATE, &reg_val);
+		if (ret) {
+			printf("cw221x: get ic state error!!!");
+			return ret;
+		}
+
+		if (IC_READY_MARK == (reg_val & IC_READY_MARK))
+			break;
+		count++;
+		if (count >= CW_SLEEP_COUNTS) {
+			cw221X_sleep(cw221x);
+			return -1;
+		}
+	}
+	return 0;
+}
+
+static int cw221X_init(struct cw221x_info *cw221x)
+{
+	int ret;
+
+	cw221X_get_chip_id(cw221x);
+	if (cw221x->chip_id != IC_VCHIP_ID) {
+		printf("not cw221X\n");
+		return -EINVAL;
+	}
+
+	CW_DBG("cw221X:\n");
+	ret = cw221X_get_state(cw221x);
+
+	if (ret != 0) {
+		CW_DBG("cw221x: need update profile; %d\n", ret);
+		ret = cw_config_start_ic(cw221x);
+		if (ret < 0)
+			return ret;
+	} else {
+		CW_DBG("cw221x: not need update profile\n");
+	}
+
+	CW_DBG("cw221X: init success!\n");
+
+	return 0;
+}
+
+/* get complement code function, unsigned short must be U16 */
+static long get_complement_code(unsigned short raw_code)
+{
+	long complement_code;
+	int dir;
+
+	if (0 != (raw_code & COMPLEMENT_CODE_U16)) {
+		dir = -1;
+		raw_code = (0xFFFF - raw_code) + 1;
+	} else {
+		dir = 1;
+	}
+
+	complement_code = (long)raw_code * dir;
+
+	return complement_code;
+}
+
+static int cw221x_get_current(struct cw221x_info *cw221x)
+{
+	long long cw_current;
+	u16 value16;
+	int ret;
+
+	ret = cw221x_read_half_word(cw221x, REG_CURRENT_H, &value16);
+	if (ret) {
+		printf("cw221x: get current error!!!");
+		return ret;
+	}
+
+	cw_current = get_complement_code(value16);
+	cw_current = cw_current * 1600 / USER_RSENSE;
+
+	CW_DBG("cw221x: current: %lld\n", cw_current);
+
+	return cw_current;
+}
+
+static int cw221x_update_get_current(struct udevice *dev)
+{
+	struct cw221x_info *cw221x = dev_get_priv(dev);
+
+	return cw221x_get_current(cw221x);
+}
+
+static int cw221x_get_temperature(struct udevice *dev, int *temp)
+{
+	struct cw221x_info *cw221x = dev_get_priv(dev);
+	u8 reg_val;
+	int bat_temp;
+	int ret;
+
+	ret = cw221x_read(cw221x, REG_TEMP, &reg_val);
+	if (ret)
+		return ret;
+
+	bat_temp = (int)reg_val * 10 / 2 - 400;
+	CW_DBG("cw221x: temperature: %d\n", bat_temp);
+	*temp = bat_temp;
+
+	return 0;
+}
+
+static bool cw221x_update_get_chrg_online(struct udevice *dev)
+{
+	struct cw221x_info *cw221x = dev_get_priv(dev);
+
+	return cw221x_check_charge(cw221x);
+}
+
+static int cw221x_update_get_voltage(struct udevice *dev)
+{
+	struct cw221x_info *cw221x = dev_get_priv(dev);
+	int temperture;
+
+	cw221x_get_current(cw221x);
+	cw221x_get_temperature(dev, &temperture);
+
+	return cw221x_get_vol(cw221x);
+}
+
+static int cw221x_capability(struct udevice *dev)
+{
+	return FG_CAP_FUEL_GAUGE;
+}
+
+static struct dm_fuel_gauge_ops cw221x_fg_ops = {
+	.capability = cw221x_capability,
+	.get_soc = cw221x_update_get_soc,
+	.get_voltage = cw221x_update_get_voltage,
+	.get_current = cw221x_update_get_current,
+	.get_temperature = cw221x_get_temperature,
+	.get_chrg_online = cw221x_update_get_chrg_online,
+};
+
+static int cw221x_fg_probe(struct udevice *dev)
+{
+	struct cw221x_info *cw221x = dev_get_priv(dev);
+
+	cw221x->dev = dev;
+	printf("cw221x driver version-20220903");
+	cw221X_init(cw221x);
+	printf("cw221x vol: %d, soc: %d\n",
+	       cw221x_get_vol(cw221x), cw221x_get_soc(cw221x));
+
+	return 0;
+}
+
+static const struct udevice_id cw221x_ids[] = {
+	{ .compatible = "cellwise,cw221X" },
+	{ }
+};
+
+U_BOOT_DRIVER(cw221x_fg) = {
+	.name = "cw221x_fg",
+	.id = UCLASS_FG,
+	.of_match = cw221x_ids,
+	.probe = cw221x_fg_probe,
+	.ofdata_to_platdata = cw221x_ofdata_to_platdata,
+	.ops = &cw221x_fg_ops,
+	.priv_auto_alloc_size = sizeof(struct cw221x_info),
+};
diff --git a/drivers/power/fuel_gauge/fg_rk817.c b/drivers/power/fuel_gauge/fg_rk817.c
index 2586063..75b1be9 100644
--- a/drivers/power/fuel_gauge/fg_rk817.c
+++ b/drivers/power/fuel_gauge/fg_rk817.c
@@ -965,7 +965,9 @@ static int rk817_bat_get_usb_state(struct rk817_battery_device *battery)
 
 static int rk817_bat_get_charger_type(struct rk817_battery_device *battery)
 {
+	struct rk8xx_priv *rk8xx = dev_get_priv(battery->dev->parent);
 	u32 chrg_type;
+	u8 val;
 
 	/* check by ic hardware: this check make check work safer */
 	if ((rk817_bat_read(battery, PMIC_SYS_STS) & PLUG_IN_STS) == 0)
@@ -977,9 +979,15 @@ static int rk817_bat_get_charger_type(struct rk817_battery_device *battery)
 
 	/* check USB secondly */
 	chrg_type = rk817_bat_get_usb_state(battery);
-	if (chrg_type != NO_CHARGER && battery->rsoc / 1000 >= 100)
+	if (chrg_type != NO_CHARGER && (battery->rsoc + 500) / 1000 >= 100)
 		chrg_type = CHARGE_FINISH;
 
+	if (rk8xx->variant == RK817_ID) {
+		val = rk817_bat_read(battery, PMIC_CHRG_STS);
+		if ((val & 0x70) == CHARGE_FINISH)
+			chrg_type = CHARGE_FINISH;
+	}
+
 	return chrg_type;
 }
 
diff --git a/drivers/power/fuel_gauge/fuel_gauge_uclass.c b/drivers/power/fuel_gauge/fuel_gauge_uclass.c
index bbe8147..9e335fc 100644
--- a/drivers/power/fuel_gauge/fuel_gauge_uclass.c
+++ b/drivers/power/fuel_gauge/fuel_gauge_uclass.c
@@ -70,6 +70,66 @@ bool fuel_gauge_get_chrg_online(struct udevice *dev)
 	return ops->get_chrg_online(dev);
 }
 
+int fuel_gauge_get_temperature(struct udevice *dev, int *temp)
+{
+	const struct dm_fuel_gauge_ops *ops = dev_get_driver_ops(dev);
+
+	if (!ops || !ops->get_temperature)
+		return -ENOSYS;
+
+	return ops->get_temperature(dev, temp);
+}
+
+int charger_set_charger_voltage(struct udevice *dev, int uV)
+{
+	const struct dm_fuel_gauge_ops *ops = dev_get_driver_ops(dev);
+
+	if (!ops || !ops->set_charger_voltage)
+		return -ENOSYS;
+
+	return ops->set_charger_voltage(dev, uV);
+}
+
+int charger_set_current(struct udevice *dev, int ichrg_uA)
+{
+	const struct dm_fuel_gauge_ops *ops = dev_get_driver_ops(dev);
+
+	if (!ops || !ops->set_charger_current)
+		return -ENOSYS;
+
+	return ops->set_charger_current(dev, ichrg_uA);
+}
+
+int charger_set_iprechg_current(struct udevice *dev, int iprechrg_uA)
+{
+	const struct dm_fuel_gauge_ops *ops = dev_get_driver_ops(dev);
+
+	if (!ops || !ops->set_iprechg_current)
+		return -ENOSYS;
+
+	return ops->set_iprechg_current(dev, iprechrg_uA);
+}
+
+int charger_set_enable(struct udevice *dev)
+{
+	const struct dm_fuel_gauge_ops *ops = dev_get_driver_ops(dev);
+
+	if (!ops || !ops->set_charger_enable)
+		return -ENOSYS;
+
+	return ops->set_charger_enable(dev);
+}
+
+int charger_set_disable(struct udevice *dev)
+{
+	const struct dm_fuel_gauge_ops *ops = dev_get_driver_ops(dev);
+
+	if (!ops || !ops->set_charger_disable)
+		return -ENOSYS;
+
+	return ops->set_charger_disable(dev);
+}
+
 UCLASS_DRIVER(fuel_guage) = {
 	.id		= UCLASS_FG,
 	.name		= "fuel_gauge",
diff --git a/drivers/ram/rockchip/dmc_fsp.c b/drivers/ram/rockchip/dmc_fsp.c
index 0499639..a09ca7c 100644
--- a/drivers/ram/rockchip/dmc_fsp.c
+++ b/drivers/ram/rockchip/dmc_fsp.c
@@ -24,6 +24,7 @@
 
 #define DTS_PAR_OFFSET				(4096)
 #define PARAMS_INVALID_VAL			(0xff00aa99)
+#define PARAMS_IGNORE_THIS			(0)
 
 #define PMUGRF_OS_REG(n)			(0x200 + (n) * 4)
 
@@ -132,8 +133,8 @@ static char *ddr_params_v1[] = {
 	/* if need, add parameter after and change the minor version. */
 };
 
-/* the version V1.01 will add skew info */
-static char *rk3326_dts_de_skew[] = {
+/* the expanded version V1.00 add skew info */
+static char *ddr_params_exp_v1[] = {
 	"ddr3a1_ddr4a9_de-skew",
 	"ddr3a0_ddr4a10_de-skew",
 	"ddr3a3_ddr4a6_de-skew",
@@ -362,10 +363,12 @@ static int dmc_fsp_probe(struct udevice *dev)
 	int *p = NULL;
 	char *phandle_name = NULL;
 	char **ddr_params;
+	char **ddr_params_exp;
 	int ddr_params_version;
+	int expanded_version;
 	u32 dram_type, os_reg2_val, os_reg3_val;
-	u32 i = 0, count = 0, size = 0;
 	u32 phy_de_skew_en;
+	u32 i = 0, count = 0, size = 0, count_exp = 0;
 	ulong atf_version_limit;
 
 	atf_version_limit = dev_get_driver_data(dev);
@@ -413,23 +416,34 @@ static int dmc_fsp_probe(struct udevice *dev)
 	}
 
 	if ((ddr_params_version & 0xff00) == 0x100 &&
-	    (ddr_params_version & 0xffff) <= 0x100) {
+	    (ddr_params_version & 0xffff) <= 0x101) {
 		count = ARRAY_SIZE(ddr_params_v1);
 		ddr_params = ddr_params_v1;
-	} else if ((ddr_params_version & 0xff00) == 0x100 &&
-		   (ddr_params_version & 0xffff) <= 0x101) {
-		count = ARRAY_SIZE(ddr_params_v1) + ARRAY_SIZE(rk3326_dts_de_skew);
-		ddr_params = ddr_params_v1;
 	} else {
 		printf("%s: ddr_params_version=0x%x unsupported\n", __func__, ddr_params_version);
 		return -EINVAL;
 	}
+
+	expanded_version = ofnode_read_u32_default(np_to_ofnode(np_params),
+						   "expanded_version", 0);
+	if (expanded_version != PARAMS_IGNORE_THIS) {
+		if ((expanded_version & 0xff00) == 0x100 &&
+		    (expanded_version & 0xffff) <= 0x100) {
+			count_exp = ARRAY_SIZE(ddr_params_exp_v1);
+			ddr_params_exp = ddr_params_exp_v1;
+		} else {
+			printf("expanded_version=0x%x unsupported\n",
+			       expanded_version);
+			return -1;
+		}
+	} else if ((ddr_params_version & 0xffff) == 0x101) {
+		count_exp = ARRAY_SIZE(ddr_params_exp_v1);
+	}
 	/*
 	 * page 0 is used for share param
-	 * page 1~N is uesd for dmc_fsp param
-	 * page N + 1 is uesd for de-skew param
+	 * page 1~N is used for dmc_fsp and ddr_params_exp param
 	 */
-	size = count * 4 + 4096;
+	size = ((count + count_exp) * 4 + 4096);
 	res = sip_smc_request_share_mem(DIV_ROUND_UP(size, 4096) + 1, SHARE_PAGE_TYPE_DDRFSP);
 	if (res.a0 != 0) {
 		printf("%s:no share memory for init\n", __func__);
@@ -448,16 +462,42 @@ static int dmc_fsp_probe(struct udevice *dev)
 		p[i] = ofnode_read_u32_default(np_to_ofnode(np_params), ddr_params[i],
 					       PARAMS_INVALID_VAL);
 	}
-	if (phy_de_skew_en) {
+
+	if (expanded_version != PARAMS_IGNORE_THIS) {
+		if ((expanded_version & 0xff00) == 0x100 &&
+		    (expanded_version & 0xffff) <= 0x100) {
+			phandle_name = "ddr_timing";
+			np_tim =
+			of_parse_phandle(ofnode_to_np(dev_ofnode(dev)),
+					 phandle_name, 0);
+			if (!np_tim) {
+				printf("%s: of_parse_phandle %s error!\n",
+				       __func__, phandle_name);
+				return -EINVAL;
+			}
+			for (i = count; i < (count + count_exp); i++) {
+				p[i] =
+				ofnode_read_u32_default(np_to_ofnode(np_tim),
+							ddr_params_exp[i -
+							count],
+							PARAMS_INVALID_VAL);
+			}
+			/* expanded_version and start point */
+			p[1] = (p[1] & 0xffff) | (count << 16);
+		}
+	} else if (phy_de_skew_en && (phy_de_skew_en != PARAMS_INVALID_VAL)) {
 		phandle_name = "ddr_timing";
 		np_tim = of_parse_phandle(ofnode_to_np(dev_ofnode(dev)), phandle_name, 0);
 		if (!np_tim) {
 			printf("%s: of_parse_phandle %s error!\n", __func__, phandle_name);
 			return -EINVAL;
 		}
-		for (i = ARRAY_SIZE(ddr_params_v1); i < count; i++) {
-			p[i] = ofnode_read_u32_default(np_to_ofnode(np_tim), rk3326_dts_de_skew[i - ARRAY_SIZE(ddr_params_v1)],
-						       PARAMS_INVALID_VAL);
+		for (i = count;
+		     i < (count + ARRAY_SIZE(ddr_params_exp_v1)); i++) {
+			p[i] =
+			ofnode_read_u32_default(np_to_ofnode(np_tim),
+						ddr_params_exp_v1[i - count],
+						PARAMS_INVALID_VAL);
 		}
 	}
 
diff --git a/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-1056.inc b/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-1056.inc
index 4cde215..5f7e098 100644
--- a/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-1056.inc
+++ b/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-1056.inc
@@ -2,9 +2,9 @@
 	{
 		{
 			.rank = 0x1,
-			.col = 0xC,
+			.col = 0xB,
 			.bk = 0x3,
-			.bw = 0x0,
+			.bw = 0x2,
 			.dbw = 0x0,
 			.row_3_4 = 0x0,
 			.cs0_row = 0x10,
@@ -32,7 +32,7 @@
 	},
 	{
 		{
-			{0x00000000, 0x43042001},	/* MSTR */
+			{0x00000000, 0x43040001},	/* MSTR */
 			{0x00000064, 0x008000b9},	/* RFSHTMG */
 			{0x000000d0, 0x00020103},	/* INIT0 */
 			{0x000000d4, 0x00690000},	/* INIT1 */
diff --git a/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-328.inc b/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-328.inc
index eef61ab..b938e7d 100644
--- a/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-328.inc
+++ b/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-328.inc
@@ -2,9 +2,9 @@
 	{
 		{
 			.rank = 0x1,
-			.col = 0xC,
+			.col = 0xB,
 			.bk = 0x3,
-			.bw = 0x0,
+			.bw = 0x2,
 			.dbw = 0x0,
 			.row_3_4 = 0x0,
 			.cs0_row = 0x10,
@@ -32,7 +32,7 @@
 	},
 	{
 		{
-			{0x00000000, 0x43042001},	/* MSTR */
+			{0x00000000, 0x43040001},	/* MSTR */
 			{0x00000064, 0x0027003a},	/* RFSHTMG */
 			{0x000000d0, 0x00020052},	/* INIT0 */
 			{0x000000d4, 0x00220000},	/* INIT1 */
diff --git a/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-396.inc b/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-396.inc
index 39a8271..6acf529 100644
--- a/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-396.inc
+++ b/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-396.inc
@@ -2,9 +2,9 @@
 	{
 		{
 			.rank = 0x1,
-			.col = 0xC,
+			.col = 0xB,
 			.bk = 0x3,
-			.bw = 0x0,
+			.bw = 0x2,
 			.dbw = 0x0,
 			.row_3_4 = 0x0,
 			.cs0_row = 0x10,
@@ -32,7 +32,7 @@
 	},
 	{
 		{
-			{0x00000000, 0x43042001},	/* MSTR */
+			{0x00000000, 0x43040001},	/* MSTR */
 			{0x00000064, 0x00300046},	/* RFSHTMG */
 			{0x000000d0, 0x00020062},	/* INIT0 */
 			{0x000000d4, 0x00280000},	/* INIT1 */
diff --git a/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-528.inc b/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-528.inc
index 9dbbb1a..f01d085 100644
--- a/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-528.inc
+++ b/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-528.inc
@@ -2,9 +2,9 @@
 	{
 		{
 			.rank = 0x1,
-			.col = 0xC,
+			.col = 0xB,
 			.bk = 0x3,
-			.bw = 0x0,
+			.bw = 0x2,
 			.dbw = 0x0,
 			.row_3_4 = 0x0,
 			.cs0_row = 0x10,
@@ -32,7 +32,7 @@
 	},
 	{
 		{
-			{0x00000000, 0x43042001},	/* MSTR */
+			{0x00000000, 0x43040001},	/* MSTR */
 			{0x00000064, 0x0040005d},	/* RFSHTMG */
 			{0x000000d0, 0x00020082},	/* INIT0 */
 			{0x000000d4, 0x00350000},	/* INIT1 */
diff --git a/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-664.inc b/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-664.inc
index 2b57132..e103bcd 100644
--- a/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-664.inc
+++ b/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-664.inc
@@ -2,9 +2,9 @@
 	{
 		{
 			.rank = 0x1,
-			.col = 0xC,
+			.col = 0xB,
 			.bk = 0x3,
-			.bw = 0x0,
+			.bw = 0x2,
 			.dbw = 0x0,
 			.row_3_4 = 0x0,
 			.cs0_row = 0x10,
@@ -32,7 +32,7 @@
 	},
 	{
 		{
-			{0x00000000, 0x43042001},	/* MSTR */
+			{0x00000000, 0x43040001},	/* MSTR */
 			{0x00000064, 0x00500075},	/* RFSHTMG */
 			{0x000000d0, 0x000200a4},	/* INIT0 */
 			{0x000000d4, 0x00420000},	/* INIT1 */
diff --git a/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-784.inc b/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-784.inc
index 8ad2272..3017a96 100644
--- a/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-784.inc
+++ b/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-784.inc
@@ -2,9 +2,9 @@
 	{
 		{
 			.rank = 0x1,
-			.col = 0xC,
+			.col = 0xB,
 			.bk = 0x3,
-			.bw = 0x0,
+			.bw = 0x2,
 			.dbw = 0x0,
 			.row_3_4 = 0x0,
 			.cs0_row = 0x10,
@@ -32,7 +32,7 @@
 	},
 	{
 		{
-			{0x00000000, 0x43042001},	/* MSTR */
+			{0x00000000, 0x43040001},	/* MSTR */
 			{0x00000064, 0x005f008a},	/* RFSHTMG */
 			{0x000000d0, 0x000200c1},	/* INIT0 */
 			{0x000000d4, 0x004e0000},	/* INIT1 */
diff --git a/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-924.inc b/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-924.inc
index 4cc36b0..50c0a3a 100644
--- a/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-924.inc
+++ b/drivers/ram/rockchip/sdram_inc/rv1126/sdram-rv1126-ddr3-detect-924.inc
@@ -2,9 +2,9 @@
 	{
 		{
 			.rank = 0x1,
-			.col = 0xC,
+			.col = 0xB,
 			.bk = 0x3,
-			.bw = 0x0,
+			.bw = 0x2,
 			.dbw = 0x0,
 			.row_3_4 = 0x0,
 			.cs0_row = 0x10,
@@ -32,7 +32,7 @@
 	},
 	{
 		{
-			{0x00000000, 0x43042001},	/* MSTR */
+			{0x00000000, 0x43040001},	/* MSTR */
 			{0x00000064, 0x007000a2},	/* RFSHTMG */
 			{0x000000d0, 0x000200e3},	/* INIT0 */
 			{0x000000d4, 0x005c0000},	/* INIT1 */
diff --git a/drivers/ram/rockchip/sdram_rk3308.c b/drivers/ram/rockchip/sdram_rk3308.c
index 49c56ae..d4aa199 100644
--- a/drivers/ram/rockchip/sdram_rk3308.c
+++ b/drivers/ram/rockchip/sdram_rk3308.c
@@ -4,6 +4,8 @@
  */
 
 #include <common.h>
+
+#ifdef CONFIG_TPL_BUILD
 #include <debug_uart.h>
 #include <dm.h>
 #include <dt-structs.h>
@@ -551,7 +553,7 @@ void ddr_phy_dqs_rx_dll_cfg(struct dram_info *priv, u32 freq)
 		/* 22.5 degree delay */
 		writel(LEFT_CHN_A_READ_DQS_22_5_DELAY, &priv->phy->phy_reg28);
 		writel(RIGHT_CHN_A_READ_DQS_22_5_DELAY, &priv->phy->phy_reg38);
-	} else if (freq > 441) {
+	} else {
 		/* 45 degree delay */
 		writel(LEFT_CHN_A_READ_DQS_45_DELAY, &priv->phy->phy_reg28);
 		writel(RIGHT_CHN_A_READ_DQS_45_DELAY, &priv->phy->phy_reg38);
@@ -878,3 +880,13 @@ int sdram_init(void)
 
 	return 0;
 }
+
+#else
+
+/* return: 0 = success, other = fail */
+int sdram_init(void)
+{
+	return (-1);
+}
+
+#endif /* CONFIG_TPL_BUILD */
diff --git a/drivers/ram/rockchip/sdram_rv1108_pctl_phy.c b/drivers/ram/rockchip/sdram_rv1108_pctl_phy.c
index 5918cba..643397a 100644
--- a/drivers/ram/rockchip/sdram_rv1108_pctl_phy.c
+++ b/drivers/ram/rockchip/sdram_rv1108_pctl_phy.c
@@ -4,6 +4,8 @@
  */
 
 #include <common.h>
+
+#if defined(CONFIG_SPL_BUILD) || defined(CONFIG_TPL_BUILD)
 #include <debug_uart.h>
 #include <dm.h>
 #include <dm/root.h>
@@ -640,3 +642,5 @@ re_training:
 
 	return 0;
 }
+
+#endif /* CONFIG_TPL_BUILD */
diff --git a/drivers/ram/rockchip/sdram_rv1126.c b/drivers/ram/rockchip/sdram_rv1126.c
index 9c20527..bb2ce37 100644
--- a/drivers/ram/rockchip/sdram_rv1126.c
+++ b/drivers/ram/rockchip/sdram_rv1126.c
@@ -98,7 +98,7 @@ struct rv1126_sdram_params sdram_configs[] = {
 	#include "sdram_inc/rv1126/sdram-rv1126-lpddr3-detect-924.inc"
 	#include "sdram_inc/rv1126/sdram-rv1126-lpddr3-detect-1056.inc"
 };
-#elif (CONFIG_ROCKCHIP_TPL_INIT_DRAM_TYPE == 7)
+#elif (CONFIG_ROCKCHIP_TPL_INIT_DRAM_TYPE == 7) || (CONFIG_ROCKCHIP_TPL_INIT_DRAM_TYPE == 8)
 struct rv1126_sdram_params sdram_configs[] = {
 	#include "sdram_inc/rv1126/sdram-rv1126-lpddr4-detect-328.inc"
 	#include "sdram_inc/rv1126/sdram-rv1126-lpddr4-detect-396.inc"
@@ -1248,10 +1248,16 @@ static void phy_cfg(struct dram_info *dram,
 	clrbits_le32(PHY_REG(phy_base, 0x62), BIT(5));
 	dq_map = readl(PHY_REG(phy_base, 0x4f));
 	for (i = 0; i < 4; i++) {
-		if (((dq_map >> (i * 2)) & 0x3) == 0)
+		if (((dq_map >> (i * 2)) & 0x3) == 0) {
 			byte0 = i;
-		if (((dq_map >> (i * 2)) & 0x3) == 1)
+			break;
+		}
+	}
+	for (i = 0; i < 4; i++) {
+		if (((dq_map >> (i * 2)) & 0x3) == 1) {
 			byte1 = i;
+			break;
+		}
 	}
 
 	tmp = readl(PHY_REG(phy_base, 0xf)) & (~PHY_DQ_WIDTH_MASK);
@@ -1291,12 +1297,10 @@ static int update_refresh_reg(struct dram_info *dram)
  * rank = 1: cs0
  * rank = 2: cs1
  */
-int read_mr(struct dram_info *dram, u32 rank, u32 mr_num, u32 dramtype)
+u32 read_mr(struct dram_info *dram, u32 rank, u32 mr_num, u32 dramtype)
 {
 	u32 ret;
 	u32 i, temp;
-	u32 dqmap;
-
 	void __iomem *pctl_base = dram->pctl;
 	struct sdram_head_info_index_v2 *index =
 		(struct sdram_head_info_index_v2 *)common_info;
@@ -1305,26 +1309,18 @@ int read_mr(struct dram_info *dram, u32 rank, u32 mr_num, u32 dramtype)
 	map_info = (struct dq_map_info *)((void *)common_info +
 		index->dq_map_index.offset * 4);
 
-	if (dramtype == LPDDR2)
-		dqmap = map_info->lp2_dq0_7_map;
-	else
-		dqmap = map_info->lp3_dq0_7_map;
-
 	pctl_read_mr(pctl_base, rank, mr_num);
 
-	ret = (readl(&dram->ddrgrf->ddr_grf_status[0]) & 0xff);
-
-	if (dramtype != LPDDR4) {
-		temp = 0;
-		for (i = 0; i < 8; i++) {
-			temp = temp | (((ret >> i) & 0x1) <<
-				       ((dqmap >> (i * 4)) & 0xf));
-		}
+	if (dramtype == LPDDR3) {
+		temp = (readl(&dram->ddrgrf->ddr_grf_status[0]) & 0xff);
+		ret = 0;
+		for (i = 0; i < 8; i++)
+			ret |= ((temp >> i) & 0x1) << ((map_info->lp3_dq0_7_map >> (i * 4)) & 0xf);
 	} else {
-		temp = (readl(&dram->ddrgrf->ddr_grf_status[1]) & 0xff);
+		ret = readl(&dram->ddrgrf->ddr_grf_status[1]) & 0xff;
 	}
 
-	return temp;
+	return ret;
 }
 
 /* before call this function autorefresh should be disabled */
@@ -2101,8 +2097,10 @@ static int high_freq_training(struct dram_info *dram,
 	if (dramtype == LPDDR4 || dramtype == LPDDR4X) {
 		min_val = 0xff;
 		for (j = 0; j < sdram_params->ch.cap_info.rank; j++)
-			for (i = 0; i < sdram_params->ch.cap_info.bw; i++)
-				min_val = MIN(wrlvl_result[j][i], min_val);
+			for (i = 0; i < ARRAY_SIZE(wrlvl_result[0]); i++) {
+				if ((byte_en & BIT(i)) != 0)
+					min_val = MIN(wrlvl_result[j][i], min_val);
+			}
 
 		if (min_val < 0) {
 			clk_skew = -min_val;
@@ -2385,7 +2383,7 @@ static void ddr_set_atags(struct dram_info *dram,
 	t_serial.id = 2;
 
 	atags_destroy();
-	atags_set_tag(ATAG_SERIAL,  &t_serial);
+	atags_set_tag(ATAG_SERIAL, &t_serial);
 
 	split = readl(&dram->ddrgrf->grf_ddrsplit_con);
 	memset(&t_ddrmem, 0, sizeof(struct tag_ddr_mem));
@@ -2413,11 +2411,13 @@ static void ddr_set_atags(struct dram_info *dram,
 		t_ddrmem.bank[1] = (u64)cs_cap[0] + (u64)cs_cap[1] - reduce_cap;
 	}
 
-	atags_set_tag(ATAG_DDR_MEM,  &t_ddrmem);
+	atags_set_tag(ATAG_DDR_MEM, &t_ddrmem);
 
 	memset(&t_socinfo, 0, sizeof(struct tag_soc_info));
-	t_socinfo.version = 0;
+	t_socinfo.version = 0x1;
 	t_socinfo.name = 0x1126;
+	t_socinfo.flags = SOC_FLAGS_TDBT;
+	atags_set_tag(ATAG_SOC_INFO, &t_socinfo);
 }
 
 static void print_ddr_info(struct rv1126_sdram_params *sdram_params)
@@ -2435,13 +2435,62 @@ static void print_ddr_info(struct rv1126_sdram_params *sdram_params)
 			     &sdram_params->base, split);
 }
 
+static int modify_ddr34_bw_byte_map(u8 rg_result, struct rv1126_sdram_params *sdram_params)
+{
+	struct sdram_head_info_index_v2 *index = (struct sdram_head_info_index_v2 *)common_info;
+	struct dq_map_info *map_info = (struct dq_map_info *)
+				       ((void *)common_info + index->dq_map_index.offset * 4);
+	struct sdram_cap_info *cap_info = &sdram_params->ch.cap_info;
+	u32 dramtype = sdram_params->base.dramtype;
+	u32 byte_map = 0;
+	u32 byte = 0;
+	u32 byte_map_shift;
+	int i;
+
+	if (dramtype == DDR3)
+		byte_map_shift = 24;
+	else if (dramtype == DDR4)
+		byte_map_shift = 0;
+	else
+		return -1;
+
+	for (i = 0; i < 4; i++) {
+		if ((rg_result & BIT(i)) == 0) {
+			byte_map |= byte << (i * 2);
+			byte++;
+		}
+	}
+	if (byte != 1 && byte != 2 && byte != 4) {
+		printascii("DTT result is abnormal: ");
+		printdec(byte);
+		printascii("byte\n");
+		return -1;
+	}
+	cap_info->bw = byte / 2;
+	for (i = 0; i < 4; i++) {
+		if ((rg_result & BIT(i)) != 0) {
+			byte_map |= byte << (i * 2);
+			byte++;
+		}
+	}
+
+	if ((u8)byte_map != (u8)(map_info->byte_map[0] >> byte_map_shift)) {
+		clrsetbits_le32(&map_info->byte_map[0],
+				0xff << byte_map_shift, byte_map << byte_map_shift);
+		pctl_remodify_sdram_params(&sdram_params->pctl_regs, cap_info, dramtype);
+		return 1;
+	}
+
+	return 0;
+}
+
 static int sdram_init_(struct dram_info *dram,
 		       struct rv1126_sdram_params *sdram_params, u32 post_init)
 {
 	void __iomem *pctl_base = dram->pctl;
 	void __iomem *phy_base = dram->phy;
 	u32 ddr4_vref;
-	u32 mr_tmp;
+	u32 mr_tmp, tmp;
 
 	rkclk_configure_ddr(dram, sdram_params);
 
@@ -2468,7 +2517,7 @@ static int sdram_init_(struct dram_info *dram,
 	}
 
 #ifdef CONFIG_ROCKCHIP_DRAM_EXTENDED_TEMP_SUPPORT
-	u32 tmp, trefi;
+	u32 trefi;
 
 	tmp = readl(pctl_base + DDR_PCTL2_RFSHTMG);
 	trefi = (tmp >> 16) & 0xfff;
@@ -2513,10 +2562,22 @@ static int sdram_init_(struct dram_info *dram,
 			      LPDDR4);
 	}
 
-	if (data_training(dram, 0, sdram_params, 0, READ_GATE_TRAINING) != 0) {
-		if (post_init != 0)
+	if (sdram_params->base.dramtype == DDR3 && post_init == 0)
+		setbits_le32(PHY_REG(phy_base, 0xf), 0xf);
+	tmp = data_training(dram, 0, sdram_params, 0, READ_GATE_TRAINING) & 0xf;
+
+	if (tmp != 0) {
+		if (post_init != 0) {
 			printascii("DTT cs0 error\n");
-		return -1;
+			return -1;
+		}
+		if (sdram_params->base.dramtype != DDR3 || tmp == 0xf)
+			return -1;
+	}
+
+	if (sdram_params->base.dramtype == DDR3 && post_init == 0) {
+		if (modify_ddr34_bw_byte_map((u8)tmp, sdram_params) != 0)
+			return -1;
 	}
 
 	if (sdram_params->base.dramtype == LPDDR4) {
@@ -2571,15 +2632,13 @@ static u64 dram_detect_cap(struct dram_info *dram,
 	u32 pwrctl;
 	u32 i, dq_map;
 	u32 byte1 = 0, byte0 = 0;
-	u32 tmp, byte;
-	struct sdram_head_info_index_v2 *index = (struct sdram_head_info_index_v2 *)common_info;
-	struct dq_map_info *map_info = (struct dq_map_info *)
-				       ((void *)common_info + index->dq_map_index.offset * 4);
 
-	cap_info->bw = dram_type == DDR3 ? 0 : 1;
 	if (dram_type != LPDDR4 && dram_type != LPDDR4X) {
 		if (dram_type != DDR4) {
-			coltmp = 12;
+			if (dram_type == DDR3)
+				coltmp = 11;
+			else
+				coltmp = 12;
 			bktmp = 3;
 			if (dram_type == LPDDR2)
 				rowtmp = 15;
@@ -2643,28 +2702,9 @@ static u64 dram_detect_cap(struct dram_info *dram,
 
 	setbits_le32(PHY_REG(phy_base, 0xf), 0xf);
 
-	tmp = data_training_rg(dram, 0, dram_type) & 0xf;
-
-	if (tmp == 0) {
-		cap_info->bw = 2;
-	} else {
-		if (dram_type == DDR3 || dram_type == DDR4) {
-			dq_map = 0;
-			byte = 0;
-			for (i = 0; i < 4; i++) {
-				if ((tmp & BIT(i)) == 0) {
-					dq_map |= byte << (i * 2);
-					byte++;
-				}
-			}
-			cap_info->bw = byte / 2;
-			for (i = 0; i < 4; i++) {
-				if ((tmp & BIT(i)) != 0) {
-					dq_map |= byte << (i * 2);
-					byte++;
-				}
-			}
-			clrsetbits_le32(&map_info->byte_map[0], 0xff << 24, dq_map << 24);
+	if (dram_type != DDR3) {
+		if ((data_training_rg(dram, 0, dram_type) & 0xf) == 0) {
+			cap_info->bw = 2;
 		} else {
 			dq_map = readl(PHY_REG(phy_base, 0x4f));
 			for (i = 0; i < 4; i++) {
@@ -2779,18 +2819,9 @@ static int sdram_init_detect(struct dram_info *dram,
 	u32 ret;
 	u32 sys_reg = 0;
 	u32 sys_reg3 = 0;
-	struct sdram_head_info_index_v2 *index =
-		(struct sdram_head_info_index_v2 *)common_info;
-	struct dq_map_info *map_info;
-
-	map_info = (struct dq_map_info *)((void *)common_info +
-		index->dq_map_index.offset * 4);
 
 	if (sdram_init_(dram, sdram_params, 0)) {
 		if (sdram_params->base.dramtype == DDR3) {
-			clrsetbits_le32(&map_info->byte_map[0], 0xff << 24,
-					((0x1 << 6) | (0x3 << 4) | (0x2 << 2) |
-					(0x0 << 0)) << 24);
 			if (sdram_init_(dram, sdram_params, 0))
 				return -1;
 		} else {
@@ -3557,7 +3588,7 @@ int sdram_init(void)
 
 	sdram_params = &sdram_configs[0];
 	#if (CONFIG_ROCKCHIP_TPL_INIT_DRAM_TYPE == 8)
-	for (j = 0; j < ARRAY_SIZE(sdram_configs); j++)
+	for (int j = 0; j < ARRAY_SIZE(sdram_configs); j++)
 		sdram_configs[j].base.dramtype = LPDDR4X;
 	#endif
 	if (sdram_params->base.dramtype == DDR3 ||
diff --git a/drivers/rkflash/rk_sftl_arm_v7.S b/drivers/rkflash/rk_sftl_arm_v7.S
index b15514d..dafb1f3 100644
--- a/drivers/rkflash/rk_sftl_arm_v7.S
+++ b/drivers/rkflash/rk_sftl_arm_v7.S
@@ -2,7 +2,7 @@
  * Copyright (c) 2018 Fuzhou Rockchip Electronics Co., Ltd
  *
  * SPDX-License-Identifier:    GPL-2.0
- * date: 2021-03-29
+ * date: 2022-08-15
  */
 	.arch armv7-a
 	.eabi_attribute 20, 1
@@ -4881,83 +4881,99 @@ FtlLoadBbt:
 FlashProgPages:
 	@ args = 0, pretend = 0, frame = 48
 	@ frame_needed = 0, uses_anonymous_args = 0
-	ldr	r3, .L665
+	ldr	r3, .L667
 	push	{r4, r5, r6, r7, r8, r10, fp, lr}
-	sub	sp, sp, #48
-	ldr	fp, .L665+52
+	sub	sp, sp, #56
+	ldr	fp, .L667+52
 	mov	r10, r1
 	mov	r4, r0
 	mov	r5, r0
 	ldrh	r3, [r3, #12]
 	mov	r8, #0
-	str	r2, [sp, #12]
-	str	r3, [sp, #4]
+	str	r2, [sp, #20]
+	str	r3, [sp, #12]
 	lsls	r3, r3, #3
-	str	r3, [sp, #8]
+	str	r3, [sp, #16]
 .L628:
 	cmp	r8, r10
 	bne	.L641
-	ldr	r6, .L665+4
+	ldr	fp, .L667+44
 	movs	r5, #0
 .L642:
 	cmp	r8, r5
-	beq	.L663
-	ldr	r7, .L665+8
+	beq	.L665
+	ldr	r7, .L667+4
 	movs	r1, #0
-	ldr	r2, [r6]
-	add	r0, sp, #28
+	ldr	r2, [fp]
+	add	r0, sp, #36
 	ldr	r3, [r7]
 	str	r1, [r2]
 	str	r1, [r3]
 	ldr	r1, [r4, #4]
-	str	r2, [sp, #36]
-	ldr	r2, [sp, #12]
-	str	r1, [sp, #32]
+	str	r2, [sp, #44]
+	ldr	r2, [sp, #20]
+	str	r1, [sp, #40]
 	movs	r1, #1
-	str	r3, [sp, #40]
+	str	r3, [sp, #48]
 	bl	FlashReadPages
-	ldr	r10, [sp, #28]
+	ldr	r10, [sp, #36]
 	cmp	r10, #-1
 	bne	.L643
 	ldr	r1, [r4, #4]
-	ldr	r0, .L665+12
+	ldr	r0, .L667+8
 	bl	printf
 	str	r10, [r4]
 .L643:
-	ldr	r10, [sp, #28]
+	ldr	r10, [sp, #36]
 	cmp	r10, #256
 	bne	.L644
 	ldr	r1, [r4, #4]
-	ldr	r0, .L665+16
+	ldr	r0, .L667+12
 	bl	printf
 	str	r10, [r4]
 .L644:
 	ldr	r3, [r4, #12]
 	cbz	r3, .L645
+	ldr	r1, [r7]
 	ldr	r2, [r3]
-	ldr	r3, [r7]
-	ldr	r3, [r3]
-	cmp	r2, r3
+	ldr	r0, [r1]
+	cmp	r2, r0
+	bne	.L646
+	ldr	r7, [r3, #8]
+	ldr	r6, [r1, #8]
+	cmp	r7, r6
 	beq	.L645
+.L646:
+	ldr	r1, [r1, #4]
+	stm	sp, {r0, r1}
+	ldr	r0, .L667+16
+	ldr	r3, [r3, #4]
 	ldr	r1, [r4, #4]
-	ldr	r0, .L665+20
 	bl	printf
 	mov	r3, #-1
 	str	r3, [r4]
 .L645:
 	ldr	r3, [r4, #8]
-	cbz	r3, .L646
+	cbz	r3, .L647
+	ldr	r1, [fp]
 	ldr	r2, [r3]
-	ldr	r3, [r6]
-	ldr	r3, [r3]
-	cmp	r2, r3
-	beq	.L646
+	ldr	r0, [r1]
+	cmp	r2, r0
+	bne	.L648
+	ldr	r7, [r3, #2048]
+	ldr	r6, [r1, #2048]
+	cmp	r7, r6
+	beq	.L647
+.L648:
+	ldr	r1, [r1, #4]
+	stm	sp, {r0, r1}
+	ldr	r0, .L667+20
+	ldr	r3, [r3, #4]
 	ldr	r1, [r4, #4]
-	ldr	r0, .L665+24
 	bl	printf
 	mov	r3, #-1
 	str	r3, [r4]
-.L646:
+.L647:
 	adds	r5, r5, #1
 	adds	r4, r4, #20
 	b	.L642
@@ -4968,30 +4984,30 @@ FlashProgPages:
 	cbnz	r3, .L630
 .L629:
 	movs	r2, #142
-	ldr	r1, .L665+28
-	ldr	r0, .L665+32
+	ldr	r1, .L667+24
+	ldr	r0, .L667+28
 	bl	printf
 .L630:
-	add	r2, sp, #20
-	add	r1, sp, #24
+	add	r2, sp, #28
+	add	r1, sp, #32
 	ldr	r0, [r5, #4]
 	bl	l2p_addr_tran.isra.0
-	ldr	r6, [sp, #20]
+	ldr	r6, [sp, #28]
 	cmp	r6, #3
 	bls	.L631
-.L664:
+.L666:
 	mov	r3, #-1
 	str	r3, [r5]
 	b	.L632
 .L631:
 	cbnz	r6, .L633
-	ldr	r3, [sp, #24]
-	ldr	r2, [sp, #8]
+	ldr	r3, [sp, #32]
+	ldr	r2, [sp, #16]
 	cmp	r2, r3
 	bls	.L633
-	ldr	r5, .L665+28
-	ldr	r7, .L665+36
-	b	.L662
+	ldr	r5, .L667+24
+	ldr	r7, .L667+32
+	b	.L664
 .L635:
 	mov	r3, #-1
 	ldr	r2, [r4, #-16]
@@ -5003,31 +5019,31 @@ FlashProgPages:
 	movs	r3, #16
 	movs	r2, #4
 	ldr	r1, [r4, #-12]
-	ldr	r0, .L665+40
+	ldr	r0, .L667+36
 	bl	rknand_print_hex
 	movs	r3, #4
 	ldr	r1, [r4, #-8]
 	mov	r2, r3
-	ldr	r0, .L665+44
+	ldr	r0, .L667+40
 	bl	rknand_print_hex
-.L662:
+.L664:
 	cmp	r6, r10
 	add	r4, r4, #20
 	bne	.L635
-.L663:
+.L665:
 	movs	r0, #0
-	add	sp, sp, #48
+	add	sp, sp, #56
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
 .L633:
 	ldr	r1, [r5, #8]
 	lsls	r3, r1, #26
-	beq	.L649
-	ldr	r3, .L665+4
+	beq	.L651
+	ldr	r3, .L667+44
 	ldr	r6, [r3]
 	cmp	r1, r6
 	beq	.L636
-	ldr	r3, .L665+48
+	ldr	r3, .L667+48
 	mov	r0, r6
 	ldrh	r2, [r3]
 	lsls	r2, r2, #9
@@ -5035,44 +5051,43 @@ FlashProgPages:
 .L636:
 	ldr	r3, [r5, #12]
 	mov	r2, r6
-	ldr	r1, [sp, #24]
-	ldrb	r0, [sp, #20]	@ zero_extendqisi2
+	ldr	r1, [sp, #32]
+	ldrb	r0, [sp, #28]	@ zero_extendqisi2
 	ldr	r7, [fp, #8]
 	blx	r7
 	cbnz	r0, .L637
 	str	r0, [r5]
 .L638:
-	ldr	r3, .L665
+	ldr	r3, .L667
 	ldrh	r3, [r3, #14]
 	cmp	r3, #4
 	bne	.L632
-	ldr	r0, [sp, #4]
+	ldr	r0, [sp, #12]
 	add	r2, r6, #2048
 	ldr	r3, [r5, #12]
-	ldr	r1, [sp, #24]
+	ldr	r1, [sp, #32]
 	ldr	r6, [fp, #8]
 	adds	r3, r3, #8
 	add	r1, r1, r0
-	ldrb	r0, [sp, #20]	@ zero_extendqisi2
+	ldrb	r0, [sp, #28]	@ zero_extendqisi2
 	blx	r6
 	cmp	r0, #0
-	bne	.L664
+	bne	.L666
 .L632:
 	add	r8, r8, #1
 	adds	r5, r5, #20
 	b	.L628
-.L649:
+.L651:
 	mov	r6, r1
 	b	.L636
 .L637:
 	mov	r3, #-1
 	str	r3, [r5]
 	b	.L638
-.L666:
+.L668:
 	.align	2
-.L665:
+.L667:
 	.word	.LANCHOR0
-	.word	.LANCHOR110
 	.word	.LANCHOR112
 	.word	.LC14
 	.word	.LC15
@@ -5083,6 +5098,7 @@ FlashProgPages:
 	.word	.LC6
 	.word	.LC7
 	.word	.LC8
+	.word	.LANCHOR110
 	.word	.LANCHOR11
 	.word	.LANCHOR77
 	.size	FlashProgPages, .-FlashProgPages
@@ -5097,133 +5113,133 @@ FlashProgPages:
 FtlLowFormatEraseBlock:
 	@ args = 0, pretend = 0, frame = 32
 	@ frame_needed = 0, uses_anonymous_args = 0
-	ldr	r3, .L710
+	ldr	r3, .L712
 	push	{r4, r5, r6, r7, r8, r10, fp, lr}
 	sub	sp, sp, #32
-	ldr	r7, .L710+4
+	ldr	r7, .L712+4
 	mov	r8, #0
 	mov	r6, r1
 	mov	r5, r8
 	str	r0, [r3]
 	mov	r4, r8
-	ldr	r3, .L710+8
+	ldr	r3, .L712+8
 	mov	fp, #20
 	ldr	r10, [r7]
 	str	r0, [sp, #4]
 	ldrh	r3, [r3]
 	str	r3, [sp, #12]
-	ldr	r3, .L710+12
+	ldr	r3, .L712+12
 	ldr	r3, [r3]
 	str	r3, [sp, #16]
-	ldr	r3, .L710+16
+	ldr	r3, .L712+16
 	ldr	r3, [r3]
 	str	r3, [sp, #20]
-	ldr	r3, .L710+20
+	ldr	r3, .L712+20
 	ldrh	r3, [r3]
 	str	r3, [sp, #24]
-.L668:
+.L670:
 	ldr	r3, [sp, #12]
 	uxth	r2, r8
 	cmp	r3, r2
-	bhi	.L672
+	bhi	.L674
 	cmp	r5, #0
-	beq	.L667
+	beq	.L669
 	mov	r0, r10
 	mov	r8, #0
 	mov	r10, #20
 	mov	r2, r5
 	movs	r1, #0
 	bl	FlashEraseBlocks
-.L675:
+.L677:
 	uxth	r3, r8
 	cmp	r5, r3
-	bhi	.L677
+	bhi	.L679
 	cmp	r6, #0
-	beq	.L693
-	ldr	r3, .L710+24
+	beq	.L695
+	ldr	r3, .L712+24
 	mov	r10, #1
 	ldrh	r3, [r3]
 	str	r3, [sp, #8]
-.L678:
+.L680:
 	movs	r7, #0
-.L687:
-	ldr	r3, .L710+8
+.L689:
+	ldr	r3, .L712+8
 	mov	r8, #0
 	mov	r5, r8
 	ldrh	r3, [r3]
 	str	r3, [sp, #16]
-	ldr	r3, .L710+4
+	ldr	r3, .L712+4
 	ldr	fp, [r3]
-	ldr	r3, .L710+28
+	ldr	r3, .L712+28
 	ldr	r3, [r3]
 	str	r3, [sp, #20]
-	ldr	r3, .L710+12
+	ldr	r3, .L712+12
 	ldr	r3, [r3]
 	str	r3, [sp, #24]
-	ldr	r3, .L710+20
+	ldr	r3, .L712+20
 	ldrh	r3, [r3]
 	str	r3, [sp, #28]
-.L679:
+.L681:
 	ldr	r3, [sp, #16]
 	uxth	r2, r8
 	cmp	r3, r2
-	bhi	.L682
-	cbz	r5, .L667
+	bhi	.L684
+	cbz	r5, .L669
 	mov	r0, fp
-	ldr	fp, .L710+4
+	ldr	fp, .L712+4
 	movs	r3, #1
 	mov	r2, r10
 	mov	r1, r5
 	mov	r8, #0
 	bl	FlashProgPages
 	movs	r3, #20
-.L684:
+.L686:
 	uxth	r2, r8
 	cmp	r5, r2
-	bhi	.L686
+	bhi	.L688
 	adds	r7, r7, #1
 	ldr	r2, [sp, #8]
 	uxth	r3, r7
 	cmp	r2, r3
-	bhi	.L687
-	ldr	r8, .L710+4
+	bhi	.L689
+	ldr	r8, .L712+4
 	movs	r7, #0
 	mov	fp, #20
-.L688:
+.L690:
 	uxth	r3, r7
 	cmp	r5, r3
-	bhi	.L690
+	bhi	.L692
 	ldr	r3, [sp, #4]
 	cmp	r3, #63
-	bls	.L691
-	cbz	r6, .L667
-.L691:
-	ldr	r3, .L710+4
+	bls	.L693
+	cbz	r6, .L669
+.L693:
+	ldr	r3, .L712+4
 	mov	r2, r5
 	mov	r1, r10
 	ldr	r0, [r3]
 	bl	FlashEraseBlocks
-.L667:
+.L669:
 	mov	r0, r4
 	add	sp, sp, #32
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L672:
+.L674:
 	mul	r2, fp, r8
 	movs	r3, #0
 	ldr	r1, [sp, #4]
 	str	r3, [r10, r2]
-	ldr	r3, .L710+32
+	ldr	r3, .L712+32
 	ldrb	r0, [r3, r8]	@ zero_extendqisi2
 	bl	V2P_block
 	str	r0, [sp, #8]
-	cbz	r6, .L669
+	cbz	r6, .L671
 	bl	IsBlkInVendorPart
-	cbnz	r0, .L670
-.L669:
+	cbnz	r0, .L672
+.L671:
 	ldr	r0, [sp, #8]
 	bl	FtlBbmIsBadBlock
-	cbnz	r0, .L671
+	cbnz	r0, .L673
 	ldr	r3, [sp, #8]
 	mla	r1, fp, r5, r10
 	lsls	r2, r3, #10
@@ -5238,50 +5254,50 @@ FtlLowFormatEraseBlock:
 	bic	r2, r2, #3
 	add	r2, r2, r3
 	str	r2, [r1, #12]
-.L670:
+.L672:
 	add	r8, r8, #1
-	b	.L668
-.L671:
+	b	.L670
+.L673:
 	adds	r4, r4, #1
 	uxth	r4, r4
-	b	.L670
-.L677:
+	b	.L672
+.L679:
 	mul	r3, r10, r8
 	ldr	r2, [r7]
 	adds	r1, r2, r3
 	ldr	r3, [r2, r3]
 	adds	r3, r3, #1
-	bne	.L676
+	bne	.L678
 	ldr	r0, [r1, #4]
 	adds	r4, r4, #1
 	uxth	r4, r4
 	ubfx	r0, r0, #10, #16
 	bl	FtlBbmMapBadBlock
-.L676:
+.L678:
 	add	r8, r8, #1
-	b	.L675
-.L693:
+	b	.L677
+.L695:
 	movs	r3, #2
 	mov	r10, r6
 	str	r3, [sp, #8]
-	b	.L678
-.L682:
+	b	.L680
+.L684:
 	movs	r3, #20
 	ldr	r1, [sp, #4]
 	mul	r2, r3, r8
 	movs	r3, #0
 	str	r3, [fp, r2]
-	ldr	r3, .L710+32
+	ldr	r3, .L712+32
 	ldrb	r0, [r3, r8]	@ zero_extendqisi2
 	bl	V2P_block
 	str	r0, [sp, #12]
-	cbz	r6, .L680
+	cbz	r6, .L682
 	bl	IsBlkInVendorPart
-	cbnz	r0, .L681
-.L680:
+	cbnz	r0, .L683
+.L682:
 	ldr	r0, [sp, #12]
 	bl	FtlBbmIsBadBlock
-	cbnz	r0, .L681
+	cbnz	r0, .L683
 	movs	r3, #20
 	mla	r1, r3, r5, fp
 	ldr	r3, [sp, #12]
@@ -5297,15 +5313,15 @@ FtlLowFormatEraseBlock:
 	bic	r2, r2, #3
 	add	r2, r2, r3
 	str	r2, [r1, #12]
-.L681:
+.L683:
 	add	r8, r8, #1
-	b	.L679
-.L686:
+	b	.L681
+.L688:
 	mul	r2, r3, r8
 	ldr	r1, [fp]
 	adds	r0, r1, r2
 	ldr	r2, [r1, r2]
-	cbz	r2, .L685
+	cbz	r2, .L687
 	ldr	r0, [r0, #4]
 	adds	r4, r4, #1
 	str	r3, [sp, #12]
@@ -5313,26 +5329,26 @@ FtlLowFormatEraseBlock:
 	ubfx	r0, r0, #10, #16
 	bl	FtlBbmMapBadBlock
 	ldr	r3, [sp, #12]
-.L685:
+.L687:
 	add	r8, r8, #1
-	b	.L684
-.L690:
-	cbz	r6, .L689
+	b	.L686
+.L692:
+	cbz	r6, .L691
 	mul	r3, fp, r7
 	ldr	r2, [r8]
 	adds	r1, r2, r3
 	ldr	r3, [r2, r3]
-	cbnz	r3, .L689
+	cbnz	r3, .L691
 	ldr	r0, [r1, #4]
 	movs	r1, #1
 	ubfx	r0, r0, #10, #16
 	bl	FtlFreeSysBlkQueueIn
-.L689:
+.L691:
 	adds	r7, r7, #1
-	b	.L688
-.L711:
+	b	.L690
+.L713:
 	.align	2
-.L710:
+.L712:
 	.word	.LANCHOR98
 	.word	.LANCHOR78
 	.word	.LANCHOR2
@@ -5358,8 +5374,8 @@ FlashTestBlk:
 	push	{r4, r5, lr}
 	mov	r5, r0
 	sub	sp, sp, #92
-	bls	.L715
-	ldr	r4, .L717
+	bls	.L717
+	ldr	r4, .L719
 	add	r0, sp, #24
 	movs	r2, #32
 	movs	r1, #165
@@ -5383,7 +5399,7 @@ FlashTestBlk:
 	mov	r1, r3
 	bl	FlashProgPages
 	ldr	r3, [sp, #4]
-	cbnz	r3, .L716
+	cbnz	r3, .L718
 	adds	r3, r5, #1
 	add	r0, sp, #4
 	str	r3, [sp, #8]
@@ -5396,26 +5412,26 @@ FlashTestBlk:
 	it	ne
 	movne	r4, #1
 	negs	r4, r4
-.L714:
+.L716:
 	movs	r2, #1
 	movs	r1, #0
 	add	r0, sp, #4
 	str	r5, [sp, #8]
 	bl	FlashEraseBlocks
-.L712:
+.L714:
 	mov	r0, r4
 	add	sp, sp, #92
 	@ sp needed
 	pop	{r4, r5, pc}
-.L716:
+.L718:
 	mov	r4, #-1
-	b	.L714
-.L715:
+	b	.L716
+.L717:
 	movs	r4, #0
-	b	.L712
-.L718:
+	b	.L714
+.L720:
 	.align	2
-.L717:
+.L719:
 	.word	.LANCHOR111
 	.size	FlashTestBlk, .-FlashTestBlk
 	.section	.text.FtlBbmTblFlush,"ax",%progbits
@@ -5431,28 +5447,28 @@ FtlBbmTblFlush:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r10, fp, lr}
 	movs	r1, #0
-	ldr	r7, .L733
+	ldr	r7, .L735
 	movs	r4, #0
-	ldr	r5, .L733+4
+	ldr	r5, .L735+4
 	ldr	r3, [r7]
-	ldr	fp, .L733+52
-	ldr	r6, .L733+8
+	ldr	fp, .L735+52
+	ldr	r6, .L735+8
 	str	r3, [r5, #12]
-	ldr	r3, .L733+12
+	ldr	r3, .L735+12
 	ldr	r0, [fp]
-	ldr	r8, .L733+56
+	ldr	r8, .L735+56
 	ldrh	r2, [r3]
 	str	r0, [r5, #8]
 	bl	ftl_memset
 	str	r7, [sp, #12]
-	ldr	r7, .L733+16
-.L720:
+	ldr	r7, .L735+16
+.L722:
 	ldrh	r3, [r7]
 	cmp	r4, r3
-	blt	.L721
+	blt	.L723
 	ldr	r6, [r5, #12]
 	movs	r2, #16
-	ldr	r4, .L733+20
+	ldr	r4, .L735+20
 	movs	r1, #255
 	movs	r7, #0
 	mov	r0, r6
@@ -5469,13 +5485,13 @@ FtlBbmTblFlush:
 	strh	r3, [r6, #8]	@ movhi
 	ldrh	r3, [r4, #6]
 	strh	r3, [r6, #10]	@ movhi
-	ldr	r3, .L733+24
+	ldr	r3, .L735+24
 	ldr	r3, [r3]
 	strh	r3, [r6, #12]	@ movhi
-	ldr	r3, .L733+28
+	ldr	r3, .L735+28
 	ldr	r3, [r3]
 	strh	r3, [r6, #14]	@ movhi
-.L722:
+.L724:
 	ldr	r3, [fp]
 	ldrh	r2, [r4, #2]
 	ldrh	r1, [r4]
@@ -5490,14 +5506,14 @@ FtlBbmTblFlush:
 	str	r3, [r5, #4]
 	ldrh	r3, [r4, #4]
 	str	r0, [sp]
-	ldr	r0, .L733+32
+	ldr	r0, .L735+32
 	bl	printf
-	ldr	r3, .L733+36
+	ldr	r3, .L735+36
 	ldrh	r2, [r4, #2]
 	ldrh	r3, [r3]
 	subs	r3, r3, #1
 	cmp	r2, r3
-	blt	.L723
+	blt	.L725
 	ldr	r3, [r4, #8]
 	mov	r1, #0	@ movhi
 	ldrh	r2, [r4]
@@ -5508,7 +5524,7 @@ FtlBbmTblFlush:
 	strh	r2, [r6, #8]	@ movhi
 	ldrh	r3, [r4, #4]
 	strh	r2, [r4, #4]	@ movhi
-	ldr	r2, .L733+40
+	ldr	r2, .L735+40
 	strh	r3, [r4]	@ movhi
 	lsls	r3, r3, #10
 	ldr	r0, [r2]
@@ -5517,9 +5533,9 @@ FtlBbmTblFlush:
 	mov	r1, r2
 	str	r3, [r0, #4]
 	bl	FlashEraseBlocks
-.L723:
+.L725:
 	movs	r3, #1
-	ldr	r0, .L733+4
+	ldr	r0, .L735+4
 	mov	r2, r3
 	mov	r1, r3
 	bl	FlashProgPages
@@ -5528,21 +5544,21 @@ FtlBbmTblFlush:
 	strh	r3, [r10, #2]	@ movhi
 	ldr	r3, [r5]
 	adds	r2, r3, #1
-	bne	.L724
+	bne	.L726
 	adds	r7, r7, #1
 	ldr	r1, [r5, #4]
 	uxth	r7, r7
-	ldr	r0, .L733+44
+	ldr	r0, .L735+44
 	bl	printf
 	cmp	r7, #3
-	bls	.L722
+	bls	.L724
 	mov	r2, r7
 	ldr	r1, [r5, #4]
-	ldr	r0, .L733+48
+	ldr	r0, .L735+48
 	bl	printf
-.L726:
-	b	.L726
-.L721:
+.L728:
+	b	.L728
+.L723:
 	ldrh	r2, [r8]
 	ldr	r3, [r5, #8]
 	ldr	r1, [r6, #4]!
@@ -5551,20 +5567,20 @@ FtlBbmTblFlush:
 	adds	r4, r4, #1
 	add	r0, r3, r0, lsl #2
 	bl	ftl_memcpy
-	b	.L720
-.L724:
+	b	.L722
+.L726:
 	add	r8, r8, #1
 	cmp	r8, #1
-	beq	.L722
+	beq	.L724
 	cmp	r3, #256
-	beq	.L722
+	beq	.L724
 	movs	r0, #0
 	add	sp, sp, #16
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L734:
+.L736:
 	.align	2
-.L733:
+.L735:
 	.word	.LANCHOR113
 	.word	.LANCHOR137
 	.word	.LANCHOR36+24
@@ -5594,26 +5610,26 @@ allocate_data_superblock:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r0, r1, r4, r5, r6, r7, r8, r10, fp, lr}
 	mov	r4, r0
-	ldr	r10, .L774
-.L736:
-	ldr	r3, .L774
-	ldr	r8, .L774+80
-	ldr	r7, .L774+4
+	ldr	r10, .L776
+.L738:
+	ldr	r3, .L776
+	ldr	r8, .L776+80
+	ldr	r7, .L776+4
 	ldrh	r3, [r3]
 	ldrh	r2, [r8]
 	add	r3, r3, r2
 	ldrh	r2, [r7]
 	cmp	r3, r2
-	ble	.L737
+	ble	.L739
 	movw	r2, #2667
-	ldr	r1, .L774+8
-	ldr	r0, .L774+12
+	ldr	r1, .L776+8
+	ldr	r0, .L776+12
 	bl	printf
-.L737:
-	ldr	r3, .L774+16
+.L739:
+	ldr	r3, .L776+16
 	cmp	r4, r3
-	bne	.L763
-	ldr	r2, .L774+20
+	bne	.L765
+	ldr	r2, .L776+20
 	ldrh	r3, [r10]
 	ldr	r2, [r2]
 	lsrs	r1, r3, #1
@@ -5621,41 +5637,41 @@ allocate_data_superblock:
 	adds	r1, r1, #1
 	add	r1, r1, r2, lsr #2
 	uxth	r1, r1
-	cbz	r1, .L738
+	cbz	r1, .L740
 	subs	r1, r1, #1
 	uxth	r1, r1
-.L738:
-	ldr	r0, .L774+24
+.L740:
+	ldr	r0, .L776+24
 	bl	List_pop_index_node
 	ldrh	r3, [r10]
 	mov	r5, r0
 	uxth	fp, r0
-	cbnz	r3, .L739
+	cbnz	r3, .L741
 	movw	r2, #2676
-	ldr	r1, .L774+8
-	ldr	r0, .L774+12
+	ldr	r1, .L776+8
+	ldr	r0, .L776+12
 	bl	printf
-.L739:
+.L741:
 	ldrh	r3, [r10]
 	subs	r3, r3, #1
 	strh	r3, [r10]	@ movhi
 	ldrh	r3, [r7]
 	cmp	r3, fp
-	bls	.L736
+	bls	.L738
 	uxth	r5, r5
 	lsls	r3, r5, #1
 	str	r3, [sp]
-	ldr	r3, .L774+28
+	ldr	r3, .L776+28
 	ldr	r3, [r3]
 	ldrh	r6, [r3, r5, lsl #1]
 	cmp	r6, #0
-	bne	.L736
+	bne	.L738
 	strh	fp, [r4]	@ movhi
 	mov	r0, r4
 	bl	make_superblock
 	ldrb	r3, [r4, #7]	@ zero_extendqisi2
-	cbnz	r3, .L741
-	ldr	r3, .L774+28
+	cbnz	r3, .L743
+	ldr	r3, .L776+28
 	movw	r2, #65535
 	mov	r0, fp
 	ldr	r3, [r3]
@@ -5666,30 +5682,30 @@ allocate_data_superblock:
 	add	r3, r3, r2
 	ldrh	r2, [r7]
 	cmp	r3, r2
-	ble	.L736
+	ble	.L738
 	movw	r2, #2690
-	ldr	r1, .L774+8
-	ldr	r0, .L774+12
+	ldr	r1, .L776+8
+	ldr	r0, .L776+12
 	bl	printf
-	b	.L736
-.L763:
-	movs	r1, #0
 	b	.L738
-.L741:
+.L765:
+	movs	r1, #0
+	b	.L740
+.L743:
 	ldrh	r2, [r8]
 	ldrh	r3, [r10]
 	add	r3, r3, r2
 	ldrh	r2, [r7]
 	cmp	r3, r2
-	ble	.L743
+	ble	.L745
 	movw	r2, #2693
-	ldr	r1, .L774+8
-	ldr	r0, .L774+12
+	ldr	r1, .L776+8
+	ldr	r0, .L776+12
 	bl	printf
-.L743:
-	ldr	r3, .L774+32
+.L745:
+	ldr	r3, .L776+32
 	add	lr, r4, #16
-	ldr	r2, .L774+36
+	ldr	r2, .L776+36
 	mov	r8, #0
 	ldr	ip, [r3]
 	ldrh	r0, [r2]
@@ -5697,45 +5713,45 @@ allocate_data_superblock:
 	str	r2, [sp, #4]
 	mov	r3, ip
 	mla	r0, r2, r0, ip
-.L744:
+.L746:
 	cmp	r0, r3
-	bne	.L746
-	cbnz	r6, .L747
+	bne	.L748
+	cbnz	r6, .L749
 	mov	r2, #2704
-	ldr	r1, .L774+8
-	ldr	r0, .L774+12
+	ldr	r1, .L776+8
+	ldr	r0, .L776+12
 	bl	printf
-.L747:
-	ldr	r3, .L774+40
+.L749:
+	ldr	r3, .L776+40
 	ldrh	r3, [r3]
 	cmp	r3, fp
-	bne	.L748
+	bne	.L750
 	movw	r2, #2706
-	ldr	r1, .L774+8
-	ldr	r0, .L774+12
+	ldr	r1, .L776+8
+	ldr	r0, .L776+12
 	bl	printf
-.L748:
+.L750:
 	ldrb	r3, [r4, #8]	@ zero_extendqisi2
-	ldr	r0, .L774+44
-	ldr	ip, .L774+84
-	ldr	r1, .L774+48
-	ldr	r2, .L774+52
+	ldr	r0, .L776+44
+	ldr	ip, .L776+84
+	ldr	r1, .L776+48
+	ldr	r2, .L776+52
 	ldr	lr, [r0]
 	cmp	r3, #0
-	bne	.L749
+	bne	.L751
 	ldrh	r3, [lr, r5, lsl #1]
 	cmp	r3, #0
-	beq	.L750
+	beq	.L752
 	ldrh	r8, [ip]
 	add	r3, r3, r8
-.L773:
+.L775:
 	strh	r3, [lr, r5, lsl #1]	@ movhi
 	ldr	r3, [r1]
 	adds	r3, r3, #1
 	str	r3, [r1]
-.L752:
+.L754:
 	ldr	r3, [r0]
-	ldr	r0, .L774+56
+	ldr	r0, .L776+56
 	ldrh	lr, [r3, r5, lsl #1]
 	ldr	r3, [r0]
 	cmp	lr, r3
@@ -5745,90 +5761,90 @@ allocate_data_superblock:
 	ldrh	r0, [ip]
 	ldr	ip, [r1]
 	ldrh	r1, [r7]
-	ldr	r7, .L774+60
+	ldr	r7, .L776+60
 	mla	r0, ip, r0, r3
 	bl	__aeabi_uidiv
-	ldr	r3, .L774+64
+	ldr	r3, .L776+64
 	str	r0, [r3]
-	ldr	r3, .L774+68
+	ldr	r3, .L776+68
 	ldr	r2, [r3]
 	ldr	r3, [r2, #16]
 	adds	r3, r3, #1
 	str	r3, [r2, #16]
 	movs	r2, #20
-	ldr	r3, .L774+32
+	ldr	r3, .L776+32
 	ldr	r0, [r3]
 	adds	r3, r0, #4
 	mla	r2, r2, r6, r0
 	adds	r2, r2, #24
-.L754:
+.L756:
 	adds	r3, r3, #20
 	cmp	r2, r3
-	bne	.L755
+	bne	.L757
 	movs	r7, #0
 	mov	r2, r6
 	mov	r8, r7
 	ldrb	r1, [r4, #8]	@ zero_extendqisi2
 	bl	FlashEraseBlocks
-.L756:
+.L758:
 	uxth	r3, r7
 	cmp	r6, r3
-	bhi	.L758
+	bhi	.L760
 	cmp	r8, #0
-	beq	.L759
+	beq	.L761
 	mov	r0, fp
 	bl	update_multiplier_value
 	bl	FtlBbmTblFlush
-.L759:
+.L761:
 	ldrb	r2, [r4, #7]	@ zero_extendqisi2
 	cmp	r2, #0
-	bne	.L760
-	ldr	r3, .L774+28
+	bne	.L762
+	ldr	r3, .L776+28
 	movw	r2, #65535
 	ldr	r3, [r3]
 	strh	r2, [r3, r5, lsl #1]	@ movhi
-	b	.L736
-.L746:
+	b	.L738
+.L748:
 	ldrh	r1, [lr], #2
 	movw	r2, #65535
 	str	r8, [r3, #8]
 	str	r8, [r3, #12]
 	cmp	r1, r2
-	beq	.L745
+	beq	.L747
 	ldr	r2, [sp, #4]
 	lsls	r1, r1, #10
 	mla	r2, r2, r6, ip
 	adds	r6, r6, #1
 	uxth	r6, r6
 	str	r1, [r2, #4]
-.L745:
+.L747:
 	adds	r3, r3, #20
-	b	.L744
-.L750:
+	b	.L746
+.L752:
 	movs	r3, #2
-	b	.L773
-.L749:
+	b	.L775
+.L751:
 	ldrh	r3, [lr, r5, lsl #1]
 	adds	r3, r3, #1
 	strh	r3, [lr, r5, lsl #1]	@ movhi
 	ldr	r3, [r2]
 	adds	r3, r3, #1
 	str	r3, [r2]
-	b	.L752
-.L755:
+	b	.L754
+.L757:
 	ldr	r1, [r3, #-20]
 	ands	r1, r1, r7
 	str	r1, [r3, #-20]
-	b	.L754
-.L758:
-	ldr	r2, .L774+32
+	b	.L756
+.L760:
+	ldr	r2, .L776+32
 	movs	r3, #20
 	muls	r3, r7, r3
 	ldr	r2, [r2]
 	adds	r1, r2, r3
 	ldr	r2, [r2, r3]
 	adds	r3, r2, #1
-	bne	.L757
+	bne	.L759
 	ldr	r0, [r1, #4]
 	add	r8, r8, #1
 	str	r2, [sp, #4]
@@ -5840,12 +5856,12 @@ allocate_data_superblock:
 	ldrb	r3, [r4, #7]	@ zero_extendqisi2
 	subs	r3, r3, #1
 	strb	r3, [r4, #7]
-.L757:
+.L759:
 	adds	r7, r7, #1
-	b	.L756
-.L760:
-	ldr	r3, .L774+72
-	ldr	r1, .L774+76
+	b	.L758
+.L762:
+	ldr	r3, .L776+72
+	ldr	r1, .L776+76
 	ldrh	r3, [r3]
 	strh	fp, [r4]	@ movhi
 	smulbb	r3, r3, r2
@@ -5858,27 +5874,27 @@ allocate_data_superblock:
 	str	r2, [r4, #12]
 	adds	r2, r2, #1
 	str	r2, [r1]
-	ldr	r2, .L774+28
+	ldr	r2, .L776+28
 	ldr	r1, [sp]
 	ldr	r2, [r2]
 	strh	r3, [r2, r1]	@ movhi
 	ldrh	r3, [r4, #4]
-	cbz	r3, .L761
+	cbz	r3, .L763
 	ldrb	r3, [r4, #7]	@ zero_extendqisi2
-	cbnz	r3, .L762
-.L761:
+	cbnz	r3, .L764
+.L763:
 	movw	r2, #2759
-	ldr	r1, .L774+8
-	ldr	r0, .L774+12
+	ldr	r1, .L776+8
+	ldr	r0, .L776+12
 	bl	printf
-.L762:
+.L764:
 	movs	r0, #0
 	add	sp, sp, #8
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L775:
+.L777:
 	.align	2
-.L774:
+.L776:
 	.word	.LANCHOR47
 	.word	.LANCHOR4
 	.word	.LANCHOR143
@@ -5915,43 +5931,43 @@ FtlGcFreeBadSuperBlk:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r0, r1, r4, r5, r6, r7, r8, r10, fp, lr}
 	mov	r10, r0
-	ldr	r4, .L788
+	ldr	r4, .L790
 	ldrh	r3, [r4]
-	cbz	r3, .L777
-	ldr	r8, .L788+12
+	cbz	r3, .L779
+	ldr	r8, .L790+12
 	movs	r7, #0
-.L778:
-	ldr	r3, .L788+4
+.L780:
+	ldr	r3, .L790+4
 	ldrh	r2, [r3]
 	uxth	r3, r7
 	cmp	r2, r3
-	bhi	.L784
+	bhi	.L786
 	bl	FtlGcReFreshBadBlk
-.L777:
+.L779:
 	movs	r0, #0
 	add	sp, sp, #8
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L784:
-	ldr	r2, .L788+8
+.L786:
+	ldr	r2, .L790+8
 	uxth	r3, r7
 	mov	r1, r10
 	mov	fp, #0
 	ldrb	r0, [r2, r3]	@ zero_extendqisi2
 	bl	V2P_block
 	mov	r1, r0
-.L779:
+.L781:
 	ldrh	r3, [r4]
 	uxth	r5, fp
 	cmp	r3, r5
-	bhi	.L783
+	bhi	.L785
 	adds	r7, r7, #1
-	b	.L778
-.L783:
+	b	.L780
+.L785:
 	uxth	r6, fp
 	ldrh	r3, [r8, r6, lsl #1]
 	cmp	r3, r1
-	bne	.L780
+	bne	.L782
 	mov	r0, r1
 	str	r1, [sp, #4]
 	bl	FtlBbmMapBadBlock
@@ -5959,23 +5975,23 @@ FtlGcFreeBadSuperBlk:
 	ldrh	r2, [r4]
 	add	r3, r8, r6, lsl #1
 	ldr	r1, [sp, #4]
-.L781:
+.L783:
 	cmp	r5, r2
-	bcc	.L782
+	bcc	.L784
 	subs	r2, r2, #1
 	strh	r2, [r4]	@ movhi
-.L780:
-	add	fp, fp, #1
-	b	.L779
 .L782:
+	add	fp, fp, #1
+	b	.L781
+.L784:
 	ldrh	r0, [r3, #2]!
 	adds	r5, r5, #1
 	uxth	r5, r5
 	strh	r0, [r3, #-2]	@ movhi
-	b	.L781
-.L789:
+	b	.L783
+.L791:
 	.align	2
-.L788:
+.L790:
 	.word	.LANCHOR73
 	.word	.LANCHOR2
 	.word	.LANCHOR12
@@ -5994,41 +6010,41 @@ update_vpc_list:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r3, r4, r5, lr}
 	mov	r4, r0
-	ldr	r3, .L802
+	ldr	r3, .L804
 	ldr	r3, [r3]
 	ldrh	r3, [r3, r0, lsl #1]
 	cmp	r3, #0
-	bne	.L791
-	ldr	r3, .L802+4
+	bne	.L793
+	ldr	r3, .L804+4
 	ldrh	r2, [r3]
 	cmp	r2, r0
 	itt	eq
 	movweq	r2, #65535
 	strheq	r2, [r3]	@ movhi
-	ldr	r3, .L802+8
+	ldr	r3, .L804+8
 	ldrh	r2, [r3]
 	cmp	r2, r0
 	itt	eq
 	movweq	r2, #65535
 	strheq	r2, [r3]	@ movhi
-	ldr	r3, .L802+12
+	ldr	r3, .L804+12
 	ldrh	r2, [r3]
 	cmp	r2, r0
-	bne	.L794
+	bne	.L796
 	movw	r2, #65535
 	strh	r2, [r3]	@ movhi
-.L795:
-	ldr	r5, .L802+16
+.L797:
+	ldr	r5, .L804+16
 	mov	r1, r4
-	ldr	r0, .L802+20
+	ldr	r0, .L804+20
 	bl	List_remove_node
 	ldrh	r3, [r5]
-	cbnz	r3, .L797
+	cbnz	r3, .L799
 	movw	r2, #2835
-	ldr	r1, .L802+24
-	ldr	r0, .L802+28
+	ldr	r1, .L804+24
+	ldr	r0, .L804+28
 	bl	printf
-.L797:
+.L799:
 	ldrh	r3, [r5]
 	mov	r0, r4
 	subs	r3, r3, #1
@@ -6036,43 +6052,43 @@ update_vpc_list:
 	bl	free_data_superblock
 	mov	r0, r4
 	bl	FtlGcFreeBadSuperBlk
-	ldr	r3, .L802+32
+	ldr	r3, .L804+32
 	ldrh	r2, [r5]
 	ldrh	r3, [r3]
 	add	r3, r3, r2
-	ldr	r2, .L802+36
+	ldr	r2, .L804+36
 	ldrh	r2, [r2]
 	cmp	r3, r2
-	ble	.L801
+	ble	.L803
 	movw	r2, #2838
-	ldr	r1, .L802+24
-	ldr	r0, .L802+28
+	ldr	r1, .L804+24
+	ldr	r0, .L804+28
 	bl	printf
-.L801:
+.L803:
 	movs	r0, #1
 	pop	{r3, r4, r5, pc}
-.L794:
-	ldr	r3, .L802+40
+.L796:
+	ldr	r3, .L804+40
 	ldrh	r3, [r3]
 	cmp	r3, r0
-	beq	.L800
-	ldr	r3, .L802+44
+	beq	.L802
+	ldr	r3, .L804+44
 	ldrh	r3, [r3]
 	cmp	r3, r0
-	beq	.L800
-	ldr	r3, .L802+48
+	beq	.L802
+	ldr	r3, .L804+48
 	ldrh	r3, [r3]
 	cmp	r3, r0
-	bne	.L795
-.L800:
+	bne	.L797
+.L802:
 	movs	r0, #0
 	pop	{r3, r4, r5, pc}
-.L791:
+.L793:
 	bl	List_update_data_list
-	b	.L800
-.L803:
+	b	.L802
+.L805:
 	.align	2
-.L802:
+.L804:
 	.word	.LANCHOR41
 	.word	.LANCHOR71
 	.word	.LANCHOR72
@@ -6102,47 +6118,47 @@ decrement_vpc_count:
 	push	{r4, r5, r6, lr}
 	cmp	r0, r3
 	mov	r4, r0
-	beq	.L805
-	ldr	r5, .L813
+	beq	.L807
+	ldr	r5, .L815
 	ldr	r3, [r5]
 	ldrh	r2, [r3, r0, lsl #1]
-	cbnz	r2, .L806
+	cbnz	r2, .L808
 	mov	r1, r0
-	ldr	r0, .L813+4
+	ldr	r0, .L815+4
 	bl	printf
 	ldr	r3, [r5]
 	ldrh	r5, [r3, r4, lsl #1]
-	cbz	r5, .L807
-.L811:
+	cbz	r5, .L809
+.L813:
 	movs	r5, #0
-.L804:
+.L806:
 	mov	r0, r5
 	pop	{r4, r5, r6, pc}
-.L807:
+.L809:
 	movw	r2, #2853
-.L812:
-	ldr	r1, .L813+8
-	ldr	r0, .L813+12
+.L814:
+	ldr	r1, .L815+8
+	ldr	r0, .L815+12
 	bl	printf
-	b	.L804
-.L806:
+	b	.L806
+.L808:
 	subs	r2, r2, #1
 	strh	r2, [r3, r0, lsl #1]	@ movhi
-.L805:
-	ldr	r6, .L813+16
+.L807:
+	ldr	r6, .L815+16
 	movw	r3, #65535
 	ldrh	r0, [r6]
 	cmp	r0, r3
-	bne	.L809
+	bne	.L811
 	strh	r4, [r6]	@ movhi
-	b	.L811
-.L809:
+	b	.L813
+.L811:
 	cmp	r4, r0
-	beq	.L811
+	beq	.L813
 	bl	update_vpc_list
-	ldr	r3, .L813+20
+	ldr	r3, .L815+20
 	adds	r5, r0, #0
-	ldr	r2, .L813+24
+	ldr	r2, .L815+24
 	it	ne
 	movne	r5, #1
 	strh	r4, [r6]	@ movhi
@@ -6150,21 +6166,21 @@ decrement_vpc_count:
 	ldr	r2, [r2]
 	subs	r3, r3, r2
 	asrs	r2, r3, #1
-	ldr	r3, .L813+28
+	ldr	r3, .L815+28
 	muls	r3, r2, r3
-	ldr	r2, .L813
+	ldr	r2, .L815
 	ldr	r2, [r2]
 	uxth	r1, r3
 	ldrh	r2, [r2, r1, lsl #1]
 	cmp	r2, #0
-	bne	.L804
+	bne	.L806
 	cmp	r4, r1
-	beq	.L804
+	beq	.L806
 	movw	r2, #2869
-	b	.L812
-.L814:
+	b	.L814
+.L816:
 	.align	2
-.L813:
+.L815:
 	.word	.LANCHOR41
 	.word	.LC21
 	.word	.LANCHOR146
@@ -6188,14 +6204,14 @@ FtlSuperblockPowerLostFix:
 	push	{r4, r5, r6, r7, r8, lr}
 	mov	r3, #-1
 	sub	sp, sp, #24
-	ldr	r2, .L828
+	ldr	r2, .L830
 	movs	r6, #0
 	mov	r4, r0
 	str	r3, [sp, #20]
-	ldr	r3, .L828+4
+	ldr	r3, .L830+4
 	ldr	r5, [r2]
 	mvn	r2, #2
-	ldr	r8, .L828+16
+	ldr	r8, .L830+16
 	ldr	r3, [r3]
 	str	r5, [sp, #16]
 	str	r3, [sp, #12]
@@ -6216,18 +6232,18 @@ FtlSuperblockPowerLostFix:
 	ite	eq
 	moveq	r7, #6
 	movne	r7, #7
-.L821:
+.L823:
 	ldrh	r3, [r4, #4]
-	cbnz	r3, .L817
-.L818:
-	ldr	r3, .L828+8
+	cbnz	r3, .L819
+.L820:
+	ldr	r3, .L830+8
 	ldrh	r1, [r4]
 	ldrh	r0, [r4, #4]
 	ldr	r2, [r3]
 	ldrh	r3, [r2, r1, lsl #1]
 	subs	r3, r3, r0
 	strh	r3, [r2, r1, lsl #1]	@ movhi
-	ldr	r3, .L828+12
+	ldr	r3, .L830+12
 	ldrh	r3, [r3]
 	strh	r3, [r4, #2]	@ movhi
 	movs	r3, #0
@@ -6236,12 +6252,12 @@ FtlSuperblockPowerLostFix:
 	add	sp, sp, #24
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, pc}
-.L817:
+.L819:
 	mov	r0, r4
 	bl	get_new_active_ppa
 	str	r0, [sp, #8]
 	adds	r0, r0, #1
-	beq	.L818
+	beq	.L820
 	ldr	r3, [r8]
 	movs	r1, #1
 	add	r0, sp, #4
@@ -6257,11 +6273,11 @@ FtlSuperblockPowerLostFix:
 	ldrh	r0, [r4]
 	bl	decrement_vpc_count
 	subs	r7, r7, #1
-	bne	.L821
-	b	.L818
-.L829:
+	bne	.L823
+	b	.L820
+.L831:
 	.align	2
-.L828:
+.L830:
 	.word	.LANCHOR113
 	.word	.LANCHOR105
 	.word	.LANCHOR41
@@ -6281,61 +6297,61 @@ FtlMakeBbt:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r0, r1, r4, r5, r6, r7, r8, r10, fp, lr}
 	movs	r6, #0
-	ldr	r7, .L849
+	ldr	r7, .L851
 	bl	FtlBbtMemInit
 	sub	r8, r7, #18
 	bl	FtlLoadFactoryBbt
-.L831:
-	ldr	r3, .L849+4
+.L833:
+	ldr	r3, .L851+4
 	ldrh	r3, [r3]
 	cmp	r6, r3
-	bcc	.L837
-	ldr	r5, .L849+8
+	bcc	.L839
+	ldr	r5, .L851+8
 	movs	r4, #0
-.L838:
+.L840:
 	ldrh	r3, [r5]
 	uxth	r0, r4
 	adds	r4, r4, #1
 	cmp	r3, r0
-	bhi	.L839
-	ldr	r4, .L849+12
+	bhi	.L841
+	ldr	r4, .L851+12
 	movw	r6, #65535
 	ldrh	r5, [r4, #12]
 	subs	r5, r5, #1
 	uxth	r5, r5
-.L840:
+.L842:
 	ldrh	r3, [r4, #12]
 	subs	r3, r3, #47
 	cmp	r3, r5
-	bgt	.L844
+	bgt	.L846
 	mov	r0, r5
 	bl	FtlBbmIsBadBlock
 	cmp	r0, #1
-	beq	.L841
+	beq	.L843
 	mov	r0, r5
 	bl	FlashTestBlk
 	cmp	r0, #0
-	beq	.L842
+	beq	.L844
 	mov	r0, r5
 	bl	FtlBbmMapBadBlock
-.L841:
+.L843:
 	subs	r5, r5, #1
 	uxth	r5, r5
-	b	.L840
-.L837:
-	ldr	r3, .L849+16
-	ldr	r5, .L849+20
+	b	.L842
+.L839:
+	ldr	r3, .L851+16
+	ldr	r5, .L851+20
 	ldrh	r2, [r8, #2]!
-	ldr	r4, .L849+24
+	ldr	r4, .L851+24
 	ldr	r0, [r3]
 	movw	r3, #65535
 	ldr	r10, [r5]
 	cmp	r2, r3
 	mov	fp, r4
-	ldr	r3, .L849+28
+	ldr	r3, .L851+28
 	str	r0, [r4, #8]
 	str	r10, [r4, #12]
-	beq	.L832
+	beq	.L834
 	ldrh	r5, [r3]
 	mov	r0, r4
 	str	r3, [sp]
@@ -6352,13 +6368,13 @@ FtlMakeBbt:
 	adds	r2, r2, #7
 	asrs	r2, r2, #3
 	bl	ftl_memcpy
-.L833:
+.L835:
 	uxth	r0, r5
 	adds	r6, r6, #1
 	adds	r7, r7, #4
 	bl	FtlBbmMapBadBlock
-	b	.L831
-.L832:
+	b	.L833
+.L834:
 	mov	r1, r6
 	str	r3, [sp]
 	bl	FlashGetBadBlockList
@@ -6370,21 +6386,21 @@ FtlMakeBbt:
 	ldrh	r4, [r3]
 	subs	r4, r4, #1
 	uxth	r4, r4
-.L834:
+.L836:
 	ldr	r3, [sp]
 	ldrh	r0, [r3]
 	smlabb	r0, r0, r6, r4
 	uxth	r0, r0
 	bl	FtlBbmIsBadBlock
 	cmp	r0, #1
-	beq	.L835
+	beq	.L837
 	ldr	r3, [sp, #4]
 	movs	r2, #16
 	movs	r1, #0
 	strh	r4, [r8]	@ movhi
 	ldr	r0, [r3]
 	bl	ftl_memset
-	ldr	r3, .L849+16
+	ldr	r3, .L851+16
 	mov	r2, #4096
 	movs	r1, #0
 	ldr	r0, [r3]
@@ -6402,42 +6418,42 @@ FtlMakeBbt:
 	mla	r5, r6, r5, r3
 	lsls	r3, r5, #10
 	str	r3, [fp, #4]
-	ldr	r3, .L849+32
+	ldr	r3, .L851+32
 	ldrh	r2, [r3]
 	lsls	r2, r2, #2
 	bl	ftl_memcpy
 	movs	r2, #1
-	ldr	r0, .L849+24
+	ldr	r0, .L851+24
 	mov	r1, r2
 	bl	FlashEraseBlocks
 	movs	r3, #1
-	ldr	r0, .L849+24
+	ldr	r0, .L851+24
 	mov	r2, r3
 	mov	r1, r3
 	bl	FlashProgPages
 	ldr	r3, [fp]
 	adds	r3, r3, #1
-	bne	.L833
+	bne	.L835
 	uxth	r0, r5
 	bl	FtlBbmMapBadBlock
-	b	.L834
-.L835:
+	b	.L836
+.L837:
 	subs	r4, r4, #1
 	uxth	r4, r4
-	b	.L834
-.L839:
+	b	.L836
+.L841:
 	bl	FtlBbmMapBadBlock
-	b	.L838
-.L842:
+	b	.L840
+.L844:
 	ldrh	r3, [r4]
 	cmp	r3, r6
-	bne	.L843
+	bne	.L845
 	strh	r5, [r4]	@ movhi
-	b	.L841
-.L843:
+	b	.L843
+.L845:
 	strh	r5, [r4, #4]	@ movhi
-.L844:
-	ldr	r3, .L849+36
+.L846:
+	ldr	r3, .L851+36
 	movs	r5, #0
 	str	r5, [r4, #8]
 	movs	r1, #1
@@ -6469,9 +6485,9 @@ FtlMakeBbt:
 	add	sp, sp, #8
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L850:
+.L852:
 	.align	2
-.L849:
+.L851:
 	.word	.LANCHOR36+28
 	.word	.LANCHOR9
 	.word	.LANCHOR24
@@ -6508,24 +6524,24 @@ ftl_memcmp:
 js_hash:
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 0, uses_anonymous_args = 0
-	ldr	r3, .L855
+	ldr	r3, .L857
 	add	r1, r1, r0
 	push	{r4, lr}
-.L853:
+.L855:
 	cmp	r0, r1
-	bne	.L854
+	bne	.L856
 	mov	r0, r3
 	pop	{r4, pc}
-.L854:
+.L856:
 	lsrs	r2, r3, #2
 	ldrb	r4, [r0], #1	@ zero_extendqisi2
 	add	r2, r2, r3, lsl #5
 	add	r2, r2, r4
 	eors	r3, r3, r2
-	b	.L853
-.L856:
+	b	.L855
+.L858:
 	.align	2
-.L855:
+.L857:
 	.word	1204201446
 	.size	js_hash, .-js_hash
 	.section	.text.Ftl_write_map_blk_to_last_page,"ax",%progbits
@@ -6545,14 +6561,14 @@ Ftl_write_map_blk_to_last_page:
 	mov	r4, r0
 	ldr	r5, [r0, #12]
 	cmp	r3, r2
-	bne	.L858
+	bne	.L860
 	ldrh	r3, [r0, #8]
-	cbz	r3, .L859
+	cbz	r3, .L861
 	movw	r2, #641
-	ldr	r1, .L867
-	ldr	r0, .L867+4
+	ldr	r1, .L869
+	ldr	r0, .L869+4
 	bl	printf
-.L859:
+.L861:
 	ldrh	r3, [r4, #8]
 	adds	r3, r3, #1
 	strh	r3, [r4, #8]	@ movhi
@@ -6564,20 +6580,20 @@ Ftl_write_map_blk_to_last_page:
 	ldr	r3, [r4, #28]
 	adds	r3, r3, #1
 	str	r3, [r4, #28]
-.L860:
+.L862:
 	movs	r0, #0
 	pop	{r3, r4, r5, r6, r7, r8, r10, pc}
-.L858:
+.L860:
 	ldrh	r7, [r5, r3, lsl #1]
 	movs	r1, #255
 	ldrh	r3, [r0, #2]
-	ldr	r6, .L867+8
-	ldr	r10, .L867+24
+	ldr	r6, .L869+8
+	ldr	r10, .L869+24
 	ldr	r8, [r0, #24]
 	orr	r3, r3, r7, lsl #10
 	ldr	r0, [r10]
 	str	r3, [r6, #4]
-	ldr	r3, .L867+12
+	ldr	r3, .L869+12
 	str	r0, [r6, #8]
 	ldr	r5, [r3]
 	ldr	r3, [r4, #28]
@@ -6588,7 +6604,7 @@ Ftl_write_map_blk_to_last_page:
 	ldrh	r3, [r4, #4]
 	strh	r7, [r5, #2]	@ movhi
 	strh	r3, [r5]	@ movhi
-	ldr	r3, .L867+16
+	ldr	r3, .L869+16
 	ldrh	r2, [r3]
 	lsls	r2, r2, #3
 	bl	ftl_memset
@@ -6596,11 +6612,11 @@ Ftl_write_map_blk_to_last_page:
 	movs	r3, #0
 	ldr	r1, [r10]
 	mov	r2, r3
-.L861:
+.L863:
 	uxth	r0, r3
 	cmp	ip, r0
-	bhi	.L863
-	ldr	r3, .L867+20
+	bhi	.L865
+	ldr	r3, .L869+20
 	ldr	r0, [r6, #8]
 	ldrh	r1, [r3]
 	bl	js_hash
@@ -6608,30 +6624,30 @@ Ftl_write_map_blk_to_last_page:
 	str	r0, [r5, #12]
 	movs	r3, #0
 	mov	r1, r2
-	ldr	r0, .L867+8
+	ldr	r0, .L869+8
 	bl	FlashProgPages
 	ldrh	r3, [r4, #2]
 	mov	r0, r4
 	adds	r3, r3, #1
 	strh	r3, [r4, #2]	@ movhi
 	bl	ftl_map_blk_gc
-	b	.L860
-.L863:
+	b	.L862
+.L865:
 	ldr	r0, [r8, r3, lsl #2]
 	cmp	r7, r0, lsr #10
-	bne	.L862
+	bne	.L864
 	adds	r2, r2, #1
 	uxth	r2, r2
 	str	r3, [r1, r2, lsl #3]
 	add	lr, r1, r2, lsl #3
 	ldr	r0, [r8, r3, lsl #2]
 	str	r0, [lr, #4]
-.L862:
+.L864:
 	adds	r3, r3, #1
-	b	.L861
-.L868:
+	b	.L863
+.L870:
 	.align	2
-.L867:
+.L869:
 	.word	.LANCHOR147
 	.word	.LC1
 	.word	.LANCHOR137
@@ -6653,14 +6669,14 @@ FtlMapWritePage:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r0, r1, r4, r5, r6, r7, r8, r10, fp, lr}
 	lsl	r10, r1, #2
-	ldr	r8, .L894+32
+	ldr	r8, .L896+32
 	mov	r4, r0
 	mov	r7, r1
 	movs	r6, #0
 	str	r2, [sp]
 	mov	fp, r8
-.L870:
-	ldr	r2, .L894
+.L872:
+	ldr	r2, .L896
 	ldr	r3, [r2]
 	adds	r3, r3, #1
 	str	r3, [r2]
@@ -6668,44 +6684,44 @@ FtlMapWritePage:
 	ldrh	r2, [r4, #2]
 	subs	r3, r3, #1
 	cmp	r2, r3
-	bge	.L871
+	bge	.L873
 	ldrh	r2, [r4]
 	movw	r3, #65535
 	cmp	r2, r3
-	bne	.L872
-.L871:
+	bne	.L874
+.L873:
 	mov	r0, r4
 	bl	Ftl_write_map_blk_to_last_page
-.L872:
+.L874:
 	ldrh	r2, [r4]
 	ldr	r3, [r4, #12]
 	ldrh	r3, [r3, r2, lsl #1]
-	cbnz	r3, .L873
+	cbnz	r3, .L875
 	mov	r2, #700
-	ldr	r1, .L894+4
-	ldr	r0, .L894+8
+	ldr	r1, .L896+4
+	ldr	r0, .L896+8
 	bl	printf
-.L873:
+.L875:
 	ldrh	r2, [r4]
 	ldrh	r3, [r4, #10]
 	cmp	r2, r3
-	bcc	.L874
+	bcc	.L876
 	movw	r2, #701
-	ldr	r1, .L894+4
-	ldr	r0, .L894+8
+	ldr	r1, .L896+4
+	ldr	r0, .L896+8
 	bl	printf
-.L874:
+.L876:
 	ldrh	r2, [r4]
 	movs	r1, #0
 	ldr	r3, [r4, #12]
-	ldr	r5, .L894+12
+	ldr	r5, .L896+12
 	ldrh	r3, [r3, r2, lsl #1]
 	ldrh	r2, [r4, #2]
 	str	r3, [sp, #4]
 	orr	r2, r2, r3, lsl #10
 	ldr	r3, [sp]
 	str	r2, [r5, #4]
-	ldr	r2, .L894+16
+	ldr	r2, .L896+16
 	str	r3, [r5, #8]
 	ldr	r0, [r2]
 	movs	r2, #16
@@ -6718,7 +6734,7 @@ FtlMapWritePage:
 	str	r1, [r2, #4]
 	ldrh	r1, [r4, #4]
 	strh	r3, [r2, #2]	@ movhi
-	ldr	r3, .L894+20
+	ldr	r3, .L896+20
 	strh	r1, [r2]	@ movhi
 	ldr	r0, [r5, #8]
 	ldrh	r1, [r3]
@@ -6737,10 +6753,10 @@ FtlMapWritePage:
 	uxth	r2, r2
 	adds	r3, r3, #1
 	strh	r2, [r4, #2]	@ movhi
-	bne	.L875
+	bne	.L877
 	ldr	r1, [r5, #4]
 	adds	r6, r6, #1
-	ldr	r0, .L894+24
+	ldr	r0, .L896+24
 	uxth	r6, r6
 	str	r5, [sp, #4]
 	bl	printf
@@ -6752,49 +6768,49 @@ FtlMapWritePage:
 	addls	r2, r2, #-1
 	strhls	r2, [r4, #2]	@ movhi
 	cmp	r6, #3
-	bls	.L877
+	bls	.L879
 	mov	r2, r6
 	ldr	r1, [r3, #4]
-	ldr	r0, .L894+28
+	ldr	r0, .L896+28
 	bl	printf
-.L878:
-	b	.L878
-.L877:
+.L880:
+	b	.L880
+.L879:
 	ldr	r3, [r4, #32]
 	cmp	r3, #0
-	beq	.L870
-.L893:
-	b	.L893
-.L875:
+	beq	.L872
+.L895:
+	b	.L895
+.L877:
 	ldr	r1, [r5, #4]
 	cmp	r2, #1
 	ldr	r3, [r4, #24]
 	str	r1, [r3, r10]
-	beq	.L881
+	beq	.L883
 	ldr	r3, [r5]
 	cmp	r3, #256
-	beq	.L881
+	beq	.L883
 	ldr	r2, [r4, #36]
-	cbz	r2, .L882
-.L881:
+	cbz	r2, .L884
+.L883:
 	movs	r3, #0
 	str	r3, [r4, #36]
-	b	.L870
-.L882:
+	b	.L872
+.L884:
 	adds	r3, r3, #1
-	bne	.L883
+	bne	.L885
 	movw	r2, #745
-	ldr	r1, .L894+4
-	ldr	r0, .L894+8
+	ldr	r1, .L896+4
+	ldr	r0, .L896+8
 	bl	printf
-.L883:
+.L885:
 	movs	r0, #0
 	add	sp, sp, #8
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L895:
+.L897:
 	.align	2
-.L894:
+.L896:
 	.word	.LANCHOR87
 	.word	.LANCHOR148
 	.word	.LC1
@@ -6816,31 +6832,31 @@ FtlMapWritePage:
 load_l2p_region:
 	@ args = 0, pretend = 0, frame = 8
 	@ frame_needed = 0, uses_anonymous_args = 0
-	ldr	r3, .L903
+	ldr	r3, .L905
 	push	{r0, r1, r4, r5, r6, r7, r8, r10, fp, lr}
 	mov	r5, r0
 	mov	r10, r1
 	ldrh	r2, [r3]
 	str	r3, [sp, #4]
 	cmp	r2, r0
-	bcs	.L897
+	bcs	.L899
 	movw	r2, #485
-	ldr	r1, .L903+4
-	ldr	r0, .L903+8
+	ldr	r1, .L905+4
+	ldr	r0, .L905+8
 	bl	printf
-.L897:
-	ldr	fp, .L903+48
+.L899:
+	ldr	fp, .L905+48
 	movs	r4, #12
-	ldr	r7, .L903+12
+	ldr	r7, .L905+12
 	ldr	r3, [fp]
 	ldr	r8, [r3, r5, lsl #2]
 	cmp	r8, #0
-	bne	.L898
+	bne	.L900
 	mul	r4, r4, r10
 	ldr	r2, [r7]
 	movs	r1, #255
 	adds	r0, r2, r4
-	ldr	r2, .L903+16
+	ldr	r2, .L905+16
 	ldr	r0, [r0, #8]
 	ldrh	r2, [r2]
 	bl	ftl_memset
@@ -6848,21 +6864,21 @@ load_l2p_region:
 	adds	r1, r2, r4
 	strh	r5, [r2, r4]	@ movhi
 	str	r8, [r1, #4]
-.L899:
+.L901:
 	movs	r0, #0
 	add	sp, sp, #8
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L898:
+.L900:
 	mul	r4, r4, r10
 	ldr	r2, [r7]
-	ldr	r6, .L903+20
+	ldr	r6, .L905+20
 	add	r2, r2, r4
 	mov	r0, r6
 	ldr	r2, [r2, #8]
 	str	r8, [r6, #4]
 	str	r2, [r6, #8]
-	ldr	r2, .L903+24
+	ldr	r2, .L905+24
 	ldr	r2, [r2]
 	str	r2, [r6, #12]
 	movs	r2, #1
@@ -6871,55 +6887,55 @@ load_l2p_region:
 	ldr	r10, [r6, #12]
 	ldrh	r2, [r10, #8]
 	cmp	r2, r5
-	beq	.L900
+	beq	.L902
 	mov	r2, r8
 	mov	r1, r5
-	ldr	r0, .L903+28
+	ldr	r0, .L905+28
 	bl	printf
 	movs	r3, #4
 	ldr	r1, [r6, #12]
 	mov	r2, r3
-	ldr	r0, .L903+32
+	ldr	r0, .L905+32
 	bl	rknand_print_hex
 	ldr	r3, [sp, #4]
 	movs	r2, #4
 	ldr	r1, [fp]
-	ldr	r0, .L903+36
+	ldr	r0, .L905+36
 	ldrh	r3, [r3]
 	bl	rknand_print_hex
-.L901:
+.L903:
 	ldrh	r3, [r10, #8]
 	cmp	r3, r5
-	beq	.L902
+	beq	.L904
 	mov	r2, #508
-	ldr	r1, .L903+4
-	ldr	r0, .L903+8
+	ldr	r1, .L905+4
+	ldr	r0, .L905+8
 	bl	printf
-.L902:
+.L904:
 	ldr	r3, [r7]
 	movs	r1, #0
 	adds	r2, r3, r4
 	str	r1, [r2, #4]
 	strh	r5, [r3, r4]	@ movhi
-	b	.L899
-.L900:
+	b	.L901
+.L902:
 	ldr	r2, [r6]
 	cmp	r2, #256
-	bne	.L901
+	bne	.L903
 	mov	r2, r8
 	mov	r1, r5
-	ldr	r0, .L903+40
+	ldr	r0, .L905+40
 	bl	printf
 	ldr	r3, [r7]
 	mov	r1, r5
-	ldr	r0, .L903+44
+	ldr	r0, .L905+44
 	add	r3, r3, r4
 	ldr	r2, [r3, #8]
 	bl	FtlMapWritePage
-	b	.L901
-.L904:
+	b	.L903
+.L906:
 	.align	2
-.L903:
+.L905:
 	.word	.LANCHOR31
 	.word	.LANCHOR149
 	.word	.LC1
@@ -6955,13 +6971,13 @@ ftl_map_blk_gc:
 	ldrh	r2, [r4, #8]
 	subs	r3, r3, #5
 	cmp	r2, r3
-	blt	.L906
+	blt	.L908
 	uxth	r0, r0
 	ldrh	r8, [r5, r0, lsl #1]
 	cmp	r8, #0
-	beq	.L906
+	beq	.L908
 	ldr	r3, [r4, #32]
-	cbnz	r3, .L906
+	cbnz	r3, .L908
 	movs	r2, #1
 	str	r2, [r4, #32]
 	strh	r3, [r5, r0, lsl #1]	@ movhi
@@ -6969,39 +6985,39 @@ ftl_map_blk_gc:
 	ldrh	r2, [r4, #2]
 	subs	r3, r3, #1
 	strh	r3, [r4, #8]	@ movhi
-	ldr	r3, .L921
+	ldr	r3, .L923
 	ldrh	r3, [r3]
 	cmp	r2, r3
-	bcc	.L907
+	bcc	.L909
 	mov	r0, r4
 	bl	ftl_map_blk_alloc_new_blk
-.L907:
-	ldr	r5, .L921+4
+.L909:
+	ldr	r5, .L923+4
 	movs	r6, #0
-.L908:
+.L910:
 	ldrh	r3, [r4, #6]
 	uxth	r10, r6
 	cmp	r3, r10
-	bhi	.L915
+	bhi	.L917
 	movs	r1, #1
 	mov	r0, r8
 	bl	FtlFreeSysBlkQueueIn
 	movs	r3, #0
 	str	r3, [r4, #32]
-.L906:
-	ldr	r3, .L921
+.L908:
+	ldr	r3, .L923
 	ldrh	r2, [r4, #2]
 	ldrh	r3, [r3]
 	cmp	r2, r3
-	bcc	.L916
+	bcc	.L918
 	mov	r0, r4
 	bl	ftl_map_blk_alloc_new_blk
-.L916:
+.L918:
 	movs	r0, #0
 	add	sp, sp, #8
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L915:
+.L917:
 	ldr	r3, [sp]
 	uxth	fp, r6
 	add	r3, r3, fp, lsl #2
@@ -7009,53 +7025,53 @@ ftl_map_blk_gc:
 	ldr	r3, [sp]
 	ldr	r2, [r3, fp, lsl #2]
 	cmp	r8, r2, lsr #10
-	bne	.L909
-	ldr	r3, .L921+8
+	bne	.L911
+	ldr	r3, .L923+8
 	str	r2, [r5, #4]
 	movs	r2, #1
-	ldr	r0, .L921+4
+	ldr	r0, .L923+4
 	ldr	r1, [r3]
 	str	r1, [r5, #8]
-	ldr	r1, .L921+12
+	ldr	r1, .L923+12
 	ldr	r7, [r1]
 	mov	r1, r2
 	str	r7, [r5, #12]
 	bl	FlashReadPages
 	ldrh	r2, [r7, #8]
 	cmp	r2, r10
-	beq	.L910
+	beq	.L912
 	movw	r2, #611
-	ldr	r1, .L921+16
-	ldr	r0, .L921+20
+	ldr	r1, .L923+16
+	ldr	r0, .L923+20
 	bl	printf
-.L910:
+.L912:
 	ldr	r2, [r5]
 	adds	r2, r2, #1
-	bne	.L911
-.L913:
+	bne	.L913
+.L915:
 	ldr	r2, [sp, #4]
 	movs	r3, #0
 	str	r3, [r2]
-.L912:
-	b	.L912
-.L911:
+.L914:
+	b	.L914
+.L913:
 	ldrh	r2, [r7, #8]
 	cmp	r2, r10
-	bne	.L913
+	bne	.L915
 	ldrh	r1, [r7]
 	ldrh	r2, [r4, #4]
 	cmp	r1, r2
-	bne	.L913
+	bne	.L915
 	ldr	r2, [r5, #8]
 	mov	r1, fp
 	mov	r0, r4
 	bl	FtlMapWritePage
-.L909:
+.L911:
 	adds	r6, r6, #1
-	b	.L908
-.L922:
+	b	.L910
+.L924:
 	.align	2
-.L921:
+.L923:
 	.word	.LANCHOR19
 	.word	.LANCHOR137
 	.word	.LANCHOR106
@@ -7076,9 +7092,9 @@ flush_l2p_region:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r3, r4, r5, lr}
 	movs	r4, #12
-	ldr	r5, .L924
+	ldr	r5, .L926
 	muls	r4, r0, r4
-	ldr	r0, .L924+4
+	ldr	r0, .L926+4
 	ldr	r3, [r5]
 	adds	r2, r3, r4
 	ldrh	r1, [r3, r4]
@@ -7091,9 +7107,9 @@ flush_l2p_region:
 	bic	r3, r3, #-2147483648
 	str	r3, [r4, #4]
 	pop	{r3, r4, r5, pc}
-.L925:
+.L927:
 	.align	2
-.L924:
+.L926:
 	.word	.LANCHOR54
 	.word	.LANCHOR128
 	.size	flush_l2p_region, .-flush_l2p_region
@@ -7110,30 +7126,30 @@ l2p_flush:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r4, r5, r6, lr}
 	movs	r4, #0
-	ldr	r5, .L930
-	ldr	r6, .L930+4
-.L927:
+	ldr	r5, .L932
+	ldr	r6, .L932+4
+.L929:
 	ldrh	r3, [r5]
 	uxth	r0, r4
 	cmp	r3, r0
-	bhi	.L929
+	bhi	.L931
 	movs	r0, #0
 	pop	{r4, r5, r6, pc}
-.L929:
+.L931:
 	ldr	r2, [r6]
 	uxth	r3, r4
 	movs	r1, #12
 	mla	r3, r1, r3, r2
 	ldr	r3, [r3, #4]
 	cmp	r3, #0
-	bge	.L928
+	bge	.L930
 	bl	flush_l2p_region
-.L928:
+.L930:
 	adds	r4, r4, #1
-	b	.L927
-.L931:
+	b	.L929
+.L933:
 	.align	2
-.L930:
+.L932:
 	.word	.LANCHOR32
 	.word	.LANCHOR54
 	.size	l2p_flush, .-l2p_flush
@@ -7150,36 +7166,36 @@ log2phys:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r0, r1, r4, r5, r6, r7, r8, r10, fp, lr}
 	mov	r7, r2
-	ldr	r4, .L945
+	ldr	r4, .L947
 	mov	r10, r0
 	mov	r5, r1
-	ldr	r3, .L945+4
+	ldr	r3, .L947+4
 	ldr	r2, [r4]
 	ldrh	fp, [r3]
 	cmp	r0, r2
-	bcc	.L933
+	bcc	.L935
 	mov	r2, #820
-	ldr	r1, .L945+8
-	ldr	r0, .L945+12
+	ldr	r1, .L947+8
+	ldr	r0, .L947+12
 	bl	printf
-.L933:
+.L935:
 	ldr	r3, [r4]
 	cmp	r10, r3
-	bcs	.L934
-	ldr	r3, .L945+16
+	bcs	.L936
+	ldr	r3, .L947+16
 	add	fp, fp, #7
 	lsr	r6, r10, fp
 	movs	r2, #0
 	ldrh	r1, [r3]
 	uxth	r6, r6
-	ldr	r3, .L945+20
+	ldr	r3, .L947+20
 	ldr	r0, [r3]
 	mov	r8, r3
 	movs	r3, #12
-.L935:
+.L937:
 	uxth	r4, r2
 	cmp	r4, r1
-	bcc	.L940
+	bcc	.L942
 	str	r3, [sp, #4]
 	bl	select_l2p_ram_region
 	ldr	r3, [sp, #4]
@@ -7190,31 +7206,31 @@ log2phys:
 	ldrh	r2, [r2, r3]
 	movw	r3, #65535
 	cmp	r2, r3
-	beq	.L941
+	beq	.L943
 	ldr	r3, [r1, #4]
 	cmp	r3, #0
-	bge	.L941
+	bge	.L943
 	bl	flush_l2p_region
-.L941:
+.L943:
 	mov	r1, r4
 	mov	r0, r6
 	bl	load_l2p_region
-	b	.L937
-.L934:
+	b	.L939
+.L936:
 	mov	r0, #-1
-	cbnz	r7, .L932
+	cbnz	r7, .L934
 	str	r0, [r5]
-.L932:
+.L934:
 	add	sp, sp, #8
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L940:
+.L942:
 	adds	r2, r2, #1
 	mla	ip, r3, r2, r0
 	ldrh	ip, [ip, #-12]
 	cmp	ip, r6
-	bne	.L935
-.L937:
+	bne	.L937
+.L939:
 	movs	r0, #1
 	ldr	r2, [r8]
 	lsl	r0, r0, fp
@@ -7223,35 +7239,35 @@ log2phys:
 	and	r0, r0, r10
 	uxth	r0, r0
 	mla	r3, r3, r4, r2
-	cbnz	r7, .L938
+	cbnz	r7, .L940
 	ldr	r3, [r3, #8]
 	ldr	r3, [r3, r0, lsl #2]
 	str	r3, [r5]
-.L939:
+.L941:
 	ldr	r2, [r8]
 	movs	r3, #12
 	mla	r4, r3, r4, r2
 	ldr	r3, [r4, #4]
 	adds	r2, r3, #1
-	beq	.L943
+	beq	.L945
 	adds	r3, r3, #1
 	str	r3, [r4, #4]
-.L943:
+.L945:
 	movs	r0, #0
-	b	.L932
-.L938:
+	b	.L934
+.L940:
 	ldr	r1, [r5]
 	ldr	r2, [r3, #8]
 	str	r1, [r2, r0, lsl #2]
 	ldr	r2, [r3, #4]
 	orr	r2, r2, #-2147483648
 	str	r2, [r3, #4]
-	ldr	r3, .L945+24
+	ldr	r3, .L947+24
 	strh	r6, [r3]	@ movhi
-	b	.L939
-.L946:
+	b	.L941
+.L948:
 	.align	2
-.L945:
+.L947:
 	.word	.LANCHOR151
 	.word	.LANCHOR21
 	.word	.LANCHOR152
@@ -7273,22 +7289,22 @@ FtlReUsePrevPpa:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r0, r1, r4, r5, r6, r7, r8, lr}
 	mov	r6, r0
-	ldr	r5, .L957
+	ldr	r5, .L959
 	ubfx	r0, r1, #10, #16
 	str	r1, [sp, #4]
 	bl	P2V_block_in_plane
 	ldr	r2, [r5]
 	mov	r7, r0
 	ldrh	r3, [r2, r0, lsl #1]
-	cbnz	r3, .L948
-	ldr	r2, .L957+4
+	cbnz	r3, .L950
+	ldr	r2, .L959+4
 	ldr	r4, [r2]
 	cmp	r4, #0
-	beq	.L949
-	ldr	r2, .L957+8
+	beq	.L951
+	ldr	r2, .L959+8
 	movw	lr, #65535
-	ldr	ip, .L957+24
-	ldr	r0, .L957+12
+	ldr	ip, .L959+24
+	ldr	r0, .L959+12
 	ldr	r2, [r2]
 	ldrh	r1, [r0]
 	mov	r8, r0
@@ -7297,22 +7313,22 @@ FtlReUsePrevPpa:
 	mul	r4, ip, r4
 	mov	ip, #6
 	uxth	r4, r4
-.L950:
+.L952:
 	uxth	r0, r3
 	cmp	r1, r0
-	bls	.L949
+	bls	.L951
 	cmp	r4, r7
-	bne	.L951
+	bne	.L953
 	mov	r1, r4
-	ldr	r0, .L957+4
+	ldr	r0, .L959+4
 	bl	List_remove_node
 	ldrh	r3, [r8]
-	cbnz	r3, .L952
+	cbnz	r3, .L954
 	movw	r2, #1742
-	ldr	r1, .L957+16
-	ldr	r0, .L957+20
+	ldr	r1, .L959+16
+	ldr	r0, .L959+20
 	bl	printf
-.L952:
+.L954:
 	ldrh	r3, [r8]
 	mov	r0, r4
 	subs	r3, r3, #1
@@ -7320,17 +7336,17 @@ FtlReUsePrevPpa:
 	bl	INSERT_DATA_LIST
 	ldr	r2, [r5]
 	ldrh	r3, [r2, r7, lsl #1]
-.L948:
+.L950:
 	adds	r3, r3, #1
 	strh	r3, [r2, r7, lsl #1]	@ movhi
-	b	.L949
-.L951:
+	b	.L951
+.L953:
 	mul	r4, ip, r4
 	adds	r3, r3, #1
 	ldrh	r4, [r2, r4]
 	cmp	r4, lr
-	bne	.L950
-.L949:
+	bne	.L952
+.L951:
 	movs	r2, #1
 	add	r1, sp, #4
 	mov	r0, r6
@@ -7338,9 +7354,9 @@ FtlReUsePrevPpa:
 	add	sp, sp, #8
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, pc}
-.L958:
+.L960:
 	.align	2
-.L957:
+.L959:
 	.word	.LANCHOR41
 	.word	.LANCHOR45
 	.word	.LANCHOR39
@@ -7366,144 +7382,144 @@ FtlRecoverySuperblock:
 	mov	r8, r0
 	sub	sp, sp, #48
 	cmp	r3, r2
-	beq	.L1091
+	beq	.L1093
 	ldrh	r3, [r0, #2]
 	str	r3, [sp, #4]
 	ldrb	r3, [r0, #6]	@ zero_extendqisi2
 	ldr	r1, [sp, #4]
 	str	r3, [sp, #20]
-	ldr	r3, .L1100
+	ldr	r3, .L1102
 	ldrh	r3, [r3]
 	cmp	r3, r1
 	mov	r3, #0
-	bne	.L962
+	bne	.L964
 	strh	r3, [r0, #4]	@ movhi
-.L1098:
+.L1100:
 	strb	r3, [r8, #6]
-.L1091:
+.L1093:
 	movs	r0, #0
 	add	sp, sp, #48
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L962:
+.L964:
 	ldrh	r0, [r0, #16]
-.L963:
+.L965:
 	cmp	r0, r2
 	uxth	r5, r3
 	add	r3, r3, #1
-	beq	.L964
+	beq	.L966
 	movs	r1, #1
 	bl	FtlGetLastWrittenPage
 	mov	r4, r0
 	adds	r0, r0, #1
-	beq	.L965
-	ldr	r3, .L1100+4
+	beq	.L967
+	ldr	r3, .L1102+4
 	movs	r2, #0
 	mov	r5, r2
 	movw	fp, #65535
 	mov	r10, #20
 	ldrh	ip, [r3]
-	ldr	r3, .L1100+8
+	ldr	r3, .L1102+8
 	ldr	r0, [r3]
-	ldr	r3, .L1100+12
+	ldr	r3, .L1102+12
 	ldr	r3, [r3]
 	str	r3, [sp, #8]
-	ldr	r3, .L1100+16
+	ldr	r3, .L1102+16
 	ldrh	r7, [r3]
-	ldr	r3, .L1100+20
+	ldr	r3, .L1102+20
 	ldr	r3, [r3]
 	str	r3, [sp, #12]
-	ldr	r3, .L1100+24
+	ldr	r3, .L1102+24
 	ldrh	lr, [r3]
 	add	r3, r8, #16
 	str	r3, [sp, #16]
 	str	r3, [sp]
-.L966:
+.L968:
 	uxth	r3, r2
 	cmp	ip, r3
-	bhi	.L970
+	bhi	.L972
 	movs	r2, #0
 	mov	r1, r5
 	bl	FlashReadPages
-	ldr	r2, .L1100+28
+	ldr	r2, .L1102+28
 	uxth	r1, r4
 	movw	fp, #65535
 	str	r1, [sp, #12]
 	ldr	r3, [r2]
 	subs	r3, r3, #1
 	str	r3, [sp]
-	ldr	r3, .L1100+8
+	ldr	r3, .L1102+8
 	ldr	r10, [r3]
 	movs	r3, #0
 	mov	r7, r10
-.L971:
+.L973:
 	uxth	r1, r3
 	cmp	r5, r1
-	bhi	.L976
-	bne	.L974
+	bhi	.L978
+	bne	.L976
 	adds	r3, r4, #1
 	uxth	r3, r3
 	str	r3, [sp, #8]
-.L1092:
+.L1094:
 	ldr	r0, [r10, #4]
 	ubfx	r0, r0, #10, #16
 	bl	P2V_plane
-	ldr	r3, .L1100
+	ldr	r3, .L1102
 	mov	r10, r0
 	ldr	r2, [sp, #8]
 	ldrh	r3, [r3]
 	cmp	r3, r2
-	bne	.L978
+	bne	.L980
 	ldrh	r3, [sp, #8]
 	strh	r3, [r8, #2]	@ movhi
 	movs	r3, #0
 	strb	r3, [r8, #6]
 	strh	r3, [r8, #4]	@ movhi
-.L978:
+.L980:
 	ldr	r3, [sp, #8]
 	ldr	r2, [sp, #4]
 	cmp	r3, r2
-	bne	.L979
+	bne	.L981
 	ldr	r3, [sp, #20]
 	cmp	r10, r3
-	bne	.L979
+	bne	.L981
 	ldr	r1, [sp, #8]
 	mov	r2, r10
-.L1099:
+.L1101:
 	mov	r0, r8
 	bl	ftl_sb_update_avl_pages
-	b	.L1091
-.L964:
+	b	.L1093
+.L966:
 	uxth	r1, r3
 	adds	r1, r1, #8
 	ldrh	r0, [r8, r1, lsl #1]
-	b	.L963
-.L965:
+	b	.L965
+.L967:
 	ldr	r3, [sp, #4]
-	cbz	r3, .L967
+	cbz	r3, .L969
 	movw	r2, #1809
-	ldr	r1, .L1100+32
-	ldr	r0, .L1100+36
+	ldr	r1, .L1102+32
+	ldr	r0, .L1102+36
 	bl	printf
-.L967:
+.L969:
 	ldr	r3, [sp, #20]
-	cbz	r3, .L968
+	cbz	r3, .L970
 	cmp	r5, r3
-	beq	.L968
+	beq	.L970
 	movw	r2, #1810
-	ldr	r1, .L1100+32
-	ldr	r0, .L1100+36
+	ldr	r1, .L1102+32
+	ldr	r0, .L1102+36
 	bl	printf
-.L968:
+.L970:
 	movs	r3, #0
 	strh	r3, [r8, #2]	@ movhi
-	b	.L1098
-.L970:
+	b	.L1100
+.L972:
 	ldr	r1, [sp]
 	ldrh	r3, [r1], #2
 	cmp	r3, fp
 	str	r1, [sp]
-	beq	.L969
+	beq	.L971
 	mla	r1, r10, r5, r0
 	ldr	r6, [sp, #8]
 	orr	r3, r4, r3, lsl #10
@@ -7519,53 +7535,53 @@ FtlRecoverySuperblock:
 	bic	r3, r3, #3
 	add	r3, r3, r6
 	str	r3, [r1, #12]
-.L969:
+.L971:
 	adds	r2, r2, #1
-	b	.L966
-.L976:
+	b	.L968
+.L978:
 	ldr	r1, [r7]
-	cbnz	r1, .L972
+	cbnz	r1, .L974
 	ldr	r1, [r7, #12]
 	ldr	r6, [r1, #4]
 	str	r1, [sp, #8]
 	adds	r1, r6, #1
-	beq	.L973
+	beq	.L975
 	ldr	r1, [r2]
 	mov	r0, r6
 	bl	ftl_cmp_data_ver
-	cbz	r0, .L973
+	cbz	r0, .L975
 	adds	r6, r6, #1
 	str	r6, [r2]
-.L973:
+.L975:
 	ldr	r1, [sp, #8]
 	ldr	r1, [r1]
 	adds	r1, r1, #1
-	bne	.L975
-.L974:
+	bne	.L977
+.L976:
 	uxth	r2, r4
 	uxth	r3, r3
 	str	r2, [sp, #8]
 	movs	r2, #20
 	mla	r10, r2, r3, r10
-	b	.L1092
-.L972:
+	b	.L1094
+.L974:
 	ldr	fp, [sp, #12]
-.L975:
+.L977:
 	adds	r3, r3, #1
 	adds	r7, r7, #20
-	b	.L971
-.L979:
+	b	.L973
+.L981:
 	movw	r3, #65535
 	cmp	fp, r3
-	bne	.L980
+	bne	.L982
 	ldrb	r3, [r8, #8]	@ zero_extendqisi2
 	cmp	r3, #0
-	bne	.L981
-.L980:
-	ldr	r3, .L1100+40
+	bne	.L983
+.L982:
+	ldr	r3, .L1102+40
 	uxth	r6, r4
 	uxth	r4, r4
-	ldr	r7, .L1100+8
+	ldr	r7, .L1102+8
 	ldr	r2, [r3]
 	adds	r2, r2, #1
 	itt	eq
@@ -7578,10 +7594,10 @@ FtlRecoverySuperblock:
 	subgt	r4, r6, #7
 	ldrle	r4, [sp, #4]
 	uxthgt	r4, r4
-.L984:
+.L986:
 	cmp	r4, r6
-	bhi	.L994
-	ldr	r3, .L1100+4
+	bhi	.L996
+	ldr	r3, .L1102+4
 	movw	lr, #65535
 	ldr	r0, [r7]
 	mov	ip, #20
@@ -7590,47 +7606,47 @@ FtlRecoverySuperblock:
 	str	r3, [sp, #12]
 	movs	r3, #0
 	mov	r5, r3
-	b	.L995
-.L986:
+	b	.L997
+.L988:
 	ldr	r1, [sp, #12]
 	ldrh	r2, [r1], #2
 	cmp	r2, lr
 	str	r1, [sp, #12]
-	beq	.L985
+	beq	.L987
 	mla	r1, ip, r5, r0
 	adds	r5, r5, #1
 	orr	r2, r4, r2, lsl #10
 	uxth	r5, r5
 	str	r2, [r1, #4]
-.L985:
+.L987:
 	adds	r3, r3, #1
-.L995:
+.L997:
 	uxth	r2, r3
 	cmp	fp, r2
-	bhi	.L986
+	bhi	.L988
 	mov	r1, r5
 	movs	r2, #0
 	bl	FlashReadPages
-	ldr	r3, .L1100+40
+	ldr	r3, .L1102+40
 	movs	r1, #20
 	movs	r0, #0
 	movw	ip, #65535
 	ldr	r2, [r3]
 	ldr	r3, [r7]
 	mla	r5, r1, r5, r3
-.L987:
+.L989:
 	cmp	r5, r3
-	bne	.L992
-	cbz	r0, .L993
-	ldr	r3, .L1100+40
+	bne	.L994
+	cbz	r0, .L995
+	ldr	r3, .L1102+40
 	str	r2, [r3]
-.L993:
+.L995:
 	adds	r4, r4, #1
 	uxth	r4, r4
-	b	.L984
-.L1101:
+	b	.L986
+.L1103:
 	.align	2
-.L1100:
+.L1102:
 	.word	.LANCHOR18
 	.word	.LANCHOR2
 	.word	.LANCHOR102
@@ -7642,22 +7658,22 @@ FtlRecoverySuperblock:
 	.word	.LANCHOR154
 	.word	.LC1
 	.word	.LANCHOR133
-.L992:
+.L994:
 	ldr	r1, [r3]
 	cmp	r1, #0
-	beq	.L988
-	cbz	r0, .L981
-.L1093:
-	ldr	r3, .L1102
+	beq	.L990
+	cbz	r0, .L983
+.L1095:
+	ldr	r3, .L1104
 	str	r2, [r3]
-.L981:
+.L983:
 	ldr	fp, [sp, #4]
 	movs	r2, #1
-	ldr	r6, .L1102+4
-	ldr	r3, .L1102+8
+	ldr	r6, .L1104+4
+	ldr	r3, .L1104+8
 	strh	r2, [r3]	@ movhi
-.L996:
-	ldr	r3, .L1102+12
+.L998:
+	ldr	r3, .L1104+12
 	movw	lr, #65535
 	ldr	r0, [r6]
 	movs	r7, #20
@@ -7665,64 +7681,64 @@ FtlRecoverySuperblock:
 	ldrh	r4, [r3]
 	movs	r3, #0
 	str	r3, [sp, #12]
-.L997:
+.L999:
 	uxth	r2, r3
 	cmp	r4, r2
-	bhi	.L999
+	bhi	.L1001
 	movs	r2, #0
 	ldr	r1, [sp, #12]
 	bl	FlashReadPages
 	movs	r3, #0
-.L1097:
+.L1099:
 	str	r3, [sp, #24]
 	ldr	r2, [sp, #12]
 	ldrh	r3, [sp, #24]
 	cmp	r2, r3
-	bhi	.L1028
-	ldr	r3, .L1102+16
+	bhi	.L1030
+	ldr	r3, .L1104+16
 	add	fp, fp, #1
 	uxth	fp, fp
 	ldrh	r3, [r3]
 	cmp	r3, fp
-	bne	.L996
-	ldr	r2, .L1102+12
+	bne	.L998
+	ldr	r2, .L1104+12
 	movw	r0, #65535
 	movs	r3, #0
 	strh	fp, [r8, #2]	@ movhi
 	strh	r3, [r8, #4]	@ movhi
 	ldrh	r2, [r2]
-.L1029:
+.L1031:
 	uxth	r1, r3
 	cmp	r1, r2
-	bcs	.L1091
+	bcs	.L1093
 	ldr	r1, [sp, #16]
 	ldrh	r4, [r1], #2
 	cmp	r4, r0
 	str	r1, [sp, #16]
 	add	r1, r3, #1
-	bne	.L1098
+	bne	.L1100
 	mov	r3, r1
-	b	.L1029
-.L988:
+	b	.L1031
+.L990:
 	ldr	r1, [r3, #12]
 	ldrh	lr, [r1]
 	cmp	lr, ip
-	beq	.L991
+	beq	.L993
 	ldr	r1, [r1, #4]
 	cmp	r1, #-1
 	itt	ne
 	movne	r2, r1
 	movne	r0, #1
-.L991:
+.L993:
 	adds	r3, r3, #20
-	b	.L987
-.L994:
+	b	.L989
+.L996:
 	mov	r2, #-1
-	b	.L1093
-.L999:
+	b	.L1095
+.L1001:
 	ldrh	r2, [r1], #2
 	cmp	r2, lr
-	beq	.L998
+	beq	.L1000
 	ldr	r5, [sp, #12]
 	orr	r2, fp, r2, lsl #10
 	mla	ip, r7, r5, r0
@@ -7731,10 +7747,10 @@ FtlRecoverySuperblock:
 	adds	r2, r2, #1
 	uxth	r2, r2
 	str	r2, [sp, #12]
-.L998:
+.L1000:
 	adds	r3, r3, #1
-	b	.L997
-.L1028:
+	b	.L999
+.L1030:
 	ldr	r3, [sp, #24]
 	movs	r5, #20
 	muls	r5, r3, r5
@@ -7747,45 +7763,45 @@ FtlRecoverySuperblock:
 	bl	P2V_plane
 	ldr	r3, [sp, #4]
 	cmp	fp, r3
-	bcc	.L1001
+	bcc	.L1003
 	ldr	r3, [sp, #28]
-	bne	.L1002
+	bne	.L1004
 	ldr	r2, [sp, #20]
 	cmp	r2, r0
-	bhi	.L1001
-.L1002:
+	bhi	.L1003
+.L1004:
 	ldr	r2, [sp, #8]
 	cmp	fp, r2
-	bne	.L1003
+	bne	.L1005
 	cmp	r10, r0
-	beq	.L1004
-.L1003:
+	beq	.L1006
+.L1005:
 	ldr	r3, [r3, r5]
 	adds	r3, r3, #1
-	beq	.L1005
+	beq	.L1007
 	ldr	r3, [r7, #12]
 	movw	r2, #61589
 	ldrh	r1, [r3]
 	cmp	r1, r2
-	beq	.L1006
+	beq	.L1008
 	ldrh	r0, [r8]
-.L1094:
+.L1096:
 	bl	decrement_vpc_count
-	b	.L1001
-.L1006:
+	b	.L1003
+.L1008:
 	ldr	r2, [r3, #4]
 	str	r2, [sp]
 	adds	r2, r2, #1
-	beq	.L1007
-	ldr	r2, .L1102+20
+	beq	.L1009
+	ldr	r2, .L1104+20
 	ldr	r0, [sp]
 	ldr	r1, [r2]
 	bl	ftl_cmp_data_ver
-	cbz	r0, .L1007
+	cbz	r0, .L1009
 	ldr	r1, [sp]
 	adds	r1, r1, #1
 	str	r1, [r2]
-.L1007:
+.L1009:
 	ldr	r4, [r3, #8]
 	add	r1, sp, #40
 	ldr	r3, [r3, #12]
@@ -7793,17 +7809,17 @@ FtlRecoverySuperblock:
 	mov	r0, r4
 	str	r3, [sp, #36]
 	bl	log2phys
-	ldr	r3, .L1102
+	ldr	r3, .L1104
 	ldr	r1, [r3]
 	adds	r3, r1, #1
-	beq	.L1008
+	beq	.L1010
 	ldr	r0, [sp]
 	bl	ftl_cmp_data_ver
 	cmp	r0, #0
-	beq	.L1008
+	beq	.L1010
 	ldr	r3, [sp, #36]
 	adds	r7, r3, #1
-	beq	.L1009
+	beq	.L1011
 	ldr	r0, [r6]
 	movs	r2, #0
 	movs	r1, #1
@@ -7815,119 +7831,119 @@ FtlRecoverySuperblock:
 	ldr	r1, [r2, r5]
 	adds	r3, r2, r5
 	adds	r1, r1, #1
-	bne	.L1010
-.L1011:
+	bne	.L1012
+.L1013:
 	mov	r3, #-1
 	str	r3, [sp, #36]
-.L1018:
+.L1020:
 	ldr	r7, [sp, #36]
 	adds	r0, r7, #1
-	beq	.L1001
-.L1032:
+	beq	.L1003
+.L1034:
 	ubfx	r0, r7, #10, #16
 	bl	P2V_block_in_plane
-	ldr	r3, .L1102+24
+	ldr	r3, .L1104+24
 	mov	r4, r0
 	ldrh	r3, [r3]
 	cmp	r3, r0
-	bhi	.L1024
+	bhi	.L1026
 	movw	r2, #2066
-	ldr	r1, .L1102+28
-	ldr	r0, .L1102+32
+	ldr	r1, .L1104+28
+	ldr	r0, .L1104+32
 	bl	printf
-.L1024:
-	ldr	r3, .L1102+36
+.L1026:
+	ldr	r3, .L1104+36
 	ldr	r3, [r3]
 	ldrh	r3, [r3, r4, lsl #1]
 	cmp	r3, #0
-	beq	.L1025
+	beq	.L1027
 	mov	r0, r4
-	b	.L1094
-.L1009:
+	b	.L1096
+.L1011:
 	ldr	r3, [sp, #44]
 	ldr	r2, [sp, #40]
 	cmp	r2, r3
-	bne	.L1001
+	bne	.L1003
 	movs	r2, #1
 	add	r1, sp, #36
 	mov	r0, r4
 	bl	log2phys
-.L1001:
+.L1003:
 	ldr	r3, [sp, #24]
 	adds	r3, r3, #1
-	b	.L1097
-.L1010:
+	b	.L1099
+.L1012:
 	ldr	r1, [r7, #8]
 	cmp	r4, r1
-	bne	.L1011
-	ldr	r0, .L1102
+	bne	.L1013
+	ldr	r0, .L1104
 	ldr	r1, [r7, #4]
 	ldr	r0, [r0]
 	str	r1, [sp, #28]
 	bl	ftl_cmp_data_ver
 	cmp	r0, #0
-	beq	.L1011
+	beq	.L1013
 	ldr	r1, [sp, #40]
 	ldr	r0, [sp, #44]
 	cmp	r1, r0
-	bne	.L1013
-.L1016:
+	bne	.L1015
+.L1018:
 	ldr	r1, [sp, #36]
 	mov	r0, r4
 	bl	FtlReUsePrevPpa
-	b	.L1011
-.L1013:
+	b	.L1013
+.L1015:
 	ldr	r0, [sp, #36]
 	cmp	r1, r0
-	beq	.L1011
+	beq	.L1013
 	adds	r0, r1, #1
-	beq	.L1014
+	beq	.L1016
 	str	r1, [r3, #4]
 	movs	r2, #0
 	movs	r1, #1
 	mov	r0, r3
 	ldr	r7, [r3, #12]
 	bl	FlashReadPages
-.L1015:
+.L1017:
 	ldr	r3, [r6]
 	ldr	r3, [r3, r5]
 	adds	r3, r3, #1
-	beq	.L1016
+	beq	.L1018
 	ldr	r3, [r7, #4]
-	ldr	r2, .L1102
+	ldr	r2, .L1104
 	mov	r1, r3
 	ldr	r0, [r2]
 	bl	ftl_cmp_data_ver
 	cmp	r0, #0
-	beq	.L1016
+	beq	.L1018
 	mov	r1, r3
 	ldr	r0, [sp, #28]
 	bl	ftl_cmp_data_ver
 	cmp	r0, #0
-	beq	.L1011
-	b	.L1016
-.L1014:
+	beq	.L1013
+	b	.L1018
+.L1016:
 	str	r1, [r2, r5]
-	b	.L1015
-.L1008:
+	b	.L1017
+.L1010:
 	ldr	r3, [sp, #44]
 	ldr	r2, [sp, #40]
 	cmp	r2, r3
-	beq	.L1018
+	beq	.L1020
 	ldr	r1, [sp, #36]
 	adds	r7, r1, #1
-	beq	.L1020
-	ldr	r3, .L1102+40
+	beq	.L1022
+	ldr	r3, .L1104+40
 	ldr	r3, [r3]
 	cmp	r3, r1, lsr #10
-	bhi	.L1020
-	ldr	r0, .L1102+44
-.L1096:
+	bhi	.L1022
+	ldr	r0, .L1104+44
+.L1098:
 	bl	printf
-	b	.L1001
-.L1103:
+	b	.L1003
+.L1105:
 	.align	2
-.L1102:
+.L1104:
 	.word	.LANCHOR133
 	.word	.LANCHOR102
 	.word	.LANCHOR155
@@ -7940,32 +7956,32 @@ FtlRecoverySuperblock:
 	.word	.LANCHOR41
 	.word	.LANCHOR7
 	.word	.LC27
-.L1020:
+.L1022:
 	movs	r2, #1
 	add	r1, sp, #44
 	mov	r0, r4
 	bl	log2phys
 	ldr	r7, [sp, #40]
 	adds	r5, r7, #1
-	beq	.L1018
+	beq	.L1020
 	ldr	r3, [sp, #36]
 	cmp	r7, r3
-	beq	.L1032
+	beq	.L1034
 	ubfx	r0, r7, #10, #16
 	bl	P2V_block_in_plane
-	ldr	r3, .L1104
+	ldr	r3, .L1106
 	ldrh	r3, [r3]
 	cmp	r3, r0
-	beq	.L1023
-	ldr	r3, .L1104+4
+	beq	.L1025
+	ldr	r3, .L1106+4
 	ldrh	r3, [r3]
 	cmp	r3, r0
-	beq	.L1023
-	ldr	r3, .L1104+8
+	beq	.L1025
+	ldr	r3, .L1106+8
 	ldrh	r3, [r3]
 	cmp	r3, r0
-	bne	.L1018
-.L1023:
+	bne	.L1020
+.L1025:
 	ldr	r0, [r6]
 	movs	r2, #0
 	movs	r1, #1
@@ -7975,57 +7991,57 @@ FtlRecoverySuperblock:
 	ldr	r3, [r6]
 	ldr	r3, [r3]
 	adds	r3, r3, #1
-	beq	.L1018
+	beq	.L1020
 	ldr	r1, [r5, #4]
 	ldr	r0, [sp]
 	bl	ftl_cmp_data_ver
 	cmp	r0, #0
-	bne	.L1018
+	bne	.L1020
 	movs	r2, #1
 	add	r1, sp, #40
 	mov	r0, r4
 	bl	log2phys
-	b	.L1018
-.L1025:
+	b	.L1020
+.L1027:
 	mov	r1, r4
-	ldr	r0, .L1104+12
-	b	.L1096
-.L1005:
-	ldr	r3, .L1104+16
+	ldr	r0, .L1106+12
+	b	.L1098
+.L1007:
+	ldr	r3, .L1106+16
 	ldr	r3, [r3]
 	cmp	r3, #31
-	bhi	.L1026
-	ldr	r2, .L1104+20
+	bhi	.L1028
+	ldr	r2, .L1106+20
 	str	r4, [r2, r3, lsl #2]
 	adds	r3, r3, #1
-	ldr	r2, .L1104+16
+	ldr	r2, .L1106+16
 	str	r3, [r2]
-.L1026:
+.L1028:
 	ldrh	r0, [r8]
 	bl	decrement_vpc_count
-	ldr	r3, .L1104+24
+	ldr	r3, .L1106+24
 	ldr	r2, [r3]
 	adds	r1, r2, #1
-	bne	.L1027
+	bne	.L1029
 	ldr	r2, [sp]
-.L1095:
+.L1097:
 	str	r2, [r3]
-	b	.L1001
-.L1027:
+	b	.L1003
+.L1029:
 	ldr	r1, [sp]
 	cmp	r1, r2
-	bcs	.L1001
+	bcs	.L1003
 	mov	r2, r1
-	b	.L1095
-.L1004:
+	b	.L1097
+.L1006:
 	strb	r10, [r8, #6]
 	mov	r2, r10
 	strh	fp, [r8, #2]	@ movhi
 	mov	r1, fp
-	b	.L1099
-.L1105:
+	b	.L1101
+.L1107:
 	.align	2
-.L1104:
+.L1106:
 	.word	.LANCHOR50
 	.word	.LANCHOR51
 	.word	.LANCHOR52
@@ -8047,56 +8063,56 @@ ftl_check_vpc:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r0, r1, r4, r5, r6, r7, r8, r10, fp, lr}
 	movs	r4, #0
-	ldr	r6, .L1130
-	ldr	r5, .L1130+4
-	ldr	r1, .L1130+8
-	ldr	r0, .L1130+12
+	ldr	r6, .L1132
+	ldr	r5, .L1132+4
+	ldr	r1, .L1132+8
+	ldr	r0, .L1132+12
 	bl	printf
 	mov	r2, #8192
 	movs	r1, #0
-	ldr	r0, .L1130+4
+	ldr	r0, .L1132+4
 	bl	ftl_memset
-.L1107:
+.L1109:
 	ldr	r3, [r6]
 	cmp	r4, r3
-	bcc	.L1109
-	ldr	r10, .L1130+48
+	bcc	.L1111
+	ldr	r10, .L1132+48
 	movs	r4, #0
-	ldr	r7, .L1130+16
+	ldr	r7, .L1132+16
 	mov	r6, r4
-.L1110:
+.L1112:
 	ldrh	r2, [r10]
 	uxth	r3, r4
 	cmp	r2, r3
-	bhi	.L1112
-	ldr	r3, .L1130+20
+	bhi	.L1114
+	ldr	r3, .L1132+20
 	ldr	r4, [r3]
-	cbz	r4, .L1113
-	ldr	r3, .L1130+24
+	cbz	r4, .L1115
+	ldr	r3, .L1132+24
 	mov	r8, #0
-	ldr	r5, .L1130+28
-	ldr	r10, .L1130+16
+	ldr	r5, .L1132+28
+	ldr	r10, .L1132+16
 	ldrh	r7, [r3]
 	ldr	r3, [r5]
-	ldr	fp, .L1130+4
+	ldr	fp, .L1132+4
 	subs	r4, r4, r3
-	ldr	r3, .L1130+32
+	ldr	r3, .L1132+32
 	asrs	r4, r4, #1
 	muls	r4, r3, r4
 	uxth	r4, r4
-.L1114:
+.L1116:
 	uxth	r3, r8
 	cmp	r7, r3
-	bls	.L1113
+	bls	.L1115
 	ldr	r3, [r10]
 	ldrh	r2, [r3, r4, lsl #1]
-	cbz	r2, .L1115
+	cbz	r2, .L1117
 	movs	r6, #1
 	ldrh	r3, [fp, r4, lsl #1]
 	mov	r1, r4
-	ldr	r0, .L1130+36
+	ldr	r0, .L1132+36
 	bl	printf
-.L1115:
+.L1117:
 	movs	r3, #6
 	ldr	r2, [r5]
 	muls	r4, r3, r4
@@ -8104,59 +8120,59 @@ ftl_check_vpc:
 	add	r8, r8, #1
 	ldrh	r4, [r2, r4]
 	cmp	r4, r3
-	bne	.L1114
-.L1113:
-	cbz	r6, .L1106
+	bne	.L1116
+.L1115:
+	cbz	r6, .L1108
 	movw	r2, #2394
-	ldr	r1, .L1130+8
-	ldr	r0, .L1130+40
+	ldr	r1, .L1132+8
+	ldr	r0, .L1132+40
 	bl	printf
-.L1106:
+.L1108:
 	add	sp, sp, #8
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L1109:
+.L1111:
 	movs	r2, #0
 	add	r1, sp, #4
 	mov	r0, r4
 	bl	log2phys
 	ldr	r0, [sp, #4]
 	adds	r3, r0, #1
-	beq	.L1108
+	beq	.L1110
 	ubfx	r0, r0, #10, #16
 	bl	P2V_block_in_plane
 	ldrh	r3, [r5, r0, lsl #1]
 	adds	r3, r3, #1
 	strh	r3, [r5, r0, lsl #1]	@ movhi
-.L1108:
+.L1110:
 	adds	r4, r4, #1
-	b	.L1107
-.L1112:
+	b	.L1109
+.L1114:
 	ldr	r3, [r7]
 	uxth	r5, r4
-	ldr	r8, .L1130+4
+	ldr	r8, .L1132+4
 	ldrh	r2, [r3, r5, lsl #1]
 	ldrh	r3, [r8, r5, lsl #1]
 	cmp	r2, r3
-	beq	.L1111
+	beq	.L1113
 	mov	r1, r5
-	ldr	r0, .L1130+44
+	ldr	r0, .L1132+44
 	bl	printf
 	ldr	r3, [r7]
 	movw	r2, #65535
 	ldrh	r3, [r3, r5, lsl #1]
 	cmp	r3, r2
-	beq	.L1111
+	beq	.L1113
 	ldrh	r2, [r8, r5, lsl #1]
 	cmp	r2, r3
 	it	hi
 	movhi	r6, #1
-.L1111:
+.L1113:
 	adds	r4, r4, #1
-	b	.L1110
-.L1131:
+	b	.L1112
+.L1133:
 	.align	2
-.L1130:
+.L1132:
 	.word	.LANCHOR151
 	.word	check_vpc_table
 	.word	.LANCHOR158
@@ -8184,60 +8200,60 @@ ftl_scan_all_data:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r4, r5, r6, r7, r8, lr}
 	movs	r5, #0
-	ldr	r7, .L1146
+	ldr	r7, .L1148
 	sub	sp, sp, #32
 	movs	r1, #0
-	ldr	r8, .L1146+24
-	ldr	r0, .L1146+4
+	ldr	r8, .L1148+24
+	ldr	r0, .L1148+4
 	bl	printf
-.L1133:
+.L1135:
 	ldr	r3, [r7]
 	cmp	r5, r3
-	bcc	.L1139
+	bcc	.L1141
 	add	sp, sp, #32
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, pc}
-.L1139:
+.L1141:
 	movs	r2, #0
 	add	r1, sp, #28
 	mov	r0, r5
 	bl	log2phys
 	ubfx	r3, r5, #0, #11
-	cbnz	r3, .L1134
+	cbnz	r3, .L1136
 	ldr	r2, [sp, #28]
 	mov	r1, r5
 	mov	r0, r8
 	bl	printf
-.L1134:
+.L1136:
 	ldr	r3, [sp, #28]
 	adds	r2, r3, #1
-	beq	.L1136
-	ldr	r4, .L1146+8
+	beq	.L1138
+	ldr	r4, .L1148+8
 	movs	r2, #0
 	movs	r1, #1
 	str	r3, [r4, #4]
 	mov	r0, r4
-	ldr	r3, .L1146+12
+	ldr	r3, .L1148+12
 	str	r5, [r4, #16]
 	str	r2, [r4]
 	ldr	r3, [r3]
 	str	r3, [r4, #8]
-	ldr	r3, .L1146+16
+	ldr	r3, .L1148+16
 	ldr	r6, [r3]
 	str	r6, [r4, #12]
 	bl	FlashReadPages
 	ldr	r3, [r4]
 	cmp	r3, #256
-	beq	.L1137
+	beq	.L1139
 	adds	r3, r3, #1
-	beq	.L1137
+	beq	.L1139
 	ldr	r3, [r6, #8]
 	cmp	r5, r3
-	beq	.L1136
-.L1137:
+	beq	.L1138
+.L1139:
 	ldr	r2, [r4, #8]
 	ldr	r3, [r4, #12]
-	ldr	r0, .L1146+20
+	ldr	r0, .L1148+20
 	ldr	r1, [r2, #4]
 	str	r1, [sp, #16]
 	mov	r1, r5
@@ -8252,12 +8268,12 @@ ftl_scan_all_data:
 	ldr	r2, [r4, #4]
 	ldr	r3, [r3]
 	bl	printf
-.L1136:
+.L1138:
 	adds	r5, r5, #1
-	b	.L1133
-.L1147:
+	b	.L1135
+.L1149:
 	.align	2
-.L1146:
+.L1148:
 	.word	.LANCHOR151
 	.word	.LC32
 	.word	.LANCHOR137
@@ -8277,7 +8293,7 @@ ftl_scan_all_data:
 FtlGcScanTempBlk:
 	@ args = 0, pretend = 0, frame = 48
 	@ frame_needed = 0, uses_anonymous_args = 0
-	ldr	r3, .L1180
+	ldr	r3, .L1182
 	movw	r2, #65535
 	push	{r4, r5, r6, r7, r8, r10, fp, lr}
 	sub	sp, sp, #48
@@ -8285,29 +8301,29 @@ FtlGcScanTempBlk:
 	ldrh	r5, [r3]
 	str	r3, [sp, #20]
 	cmp	r5, r2
-	beq	.L1170
-	cbnz	r5, .L1149
-.L1150:
+	beq	.L1172
+	cbnz	r5, .L1151
+.L1152:
 	bl	FtlGcPageVarInit
-	b	.L1151
-.L1170:
+	b	.L1153
+.L1172:
 	movs	r5, #0
-.L1149:
-	ldr	r3, .L1180+4
+.L1151:
+	ldr	r3, .L1182+4
 	ldrh	r3, [r3]
 	cmp	r3, r1
-	beq	.L1150
-.L1151:
-	ldr	fp, .L1180+56
-.L1167:
+	beq	.L1152
+.L1153:
+	ldr	fp, .L1182+56
+.L1169:
 	ldrh	r2, [r4]
 	movs	r3, #0
 	strb	r3, [r4, #8]
 	movw	r3, #65535
 	cmp	r2, r3
-	beq	.L1152
-.L1169:
-	ldr	r3, .L1180+8
+	beq	.L1154
+.L1171:
+	ldr	r3, .L1182+8
 	movs	r2, #0
 	ldr	r0, [fp]
 	mov	r10, r2
@@ -8315,38 +8331,38 @@ FtlGcScanTempBlk:
 	mov	r8, #20
 	ldrh	r3, [r3]
 	str	r3, [sp, #8]
-	ldr	r3, .L1180+12
+	ldr	r3, .L1182+12
 	ldr	r3, [r3]
 	str	r3, [sp, #12]
-	ldr	r3, .L1180+16
+	ldr	r3, .L1182+16
 	ldrh	r3, [r3]
 	str	r3, [sp, #16]
-	ldr	r3, .L1180+20
+	ldr	r3, .L1182+20
 	ldr	r7, [r3]
-	ldr	r3, .L1180+24
+	ldr	r3, .L1182+24
 	ldrh	ip, [r3]
 	add	r3, r4, #16
 	str	r3, [sp, #4]
-.L1153:
+.L1155:
 	ldr	r1, [sp, #8]
 	uxth	r3, r2
 	cmp	r1, r3
-	bhi	.L1155
+	bhi	.L1157
 	mov	r8, #0
 	movs	r2, #0
 	mov	r1, r10
 	bl	FlashReadPages
-.L1156:
+.L1158:
 	uxth	r3, r8
 	cmp	r10, r3
-	bhi	.L1168
-	ldr	r3, .L1180+4
+	bhi	.L1170
+	ldr	r3, .L1182+4
 	adds	r5, r5, #1
 	uxth	r5, r5
 	ldrh	r3, [r3]
 	cmp	r3, r5
-	bhi	.L1169
-.L1152:
+	bhi	.L1171
+.L1154:
 	ldr	r2, [sp, #20]
 	movw	r3, #65535
 	mov	r0, r4
@@ -8360,12 +8376,12 @@ FtlGcScanTempBlk:
 	add	sp, sp, #48
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L1155:
+.L1157:
 	ldr	r1, [sp, #4]
 	ldrh	r3, [r1], #2
 	cmp	r3, lr
 	str	r1, [sp, #4]
-	beq	.L1154
+	beq	.L1156
 	mla	r1, r8, r10, r0
 	orr	r3, r5, r3, lsl #10
 	str	r3, [r1, #4]
@@ -8382,10 +8398,10 @@ FtlGcScanTempBlk:
 	str	r3, [r1, #12]
 	add	r3, r10, #1
 	uxth	r10, r3
-.L1154:
+.L1156:
 	adds	r2, r2, #1
-	b	.L1153
-.L1168:
+	b	.L1155
+.L1170:
 	movs	r3, #20
 	ldr	r2, [fp]
 	mul	r3, r3, r8
@@ -8395,18 +8411,18 @@ FtlGcScanTempBlk:
 	ldr	r7, [r1, #12]
 	str	r0, [sp, #4]
 	cmp	r6, #0
-	bne	.L1157
+	bne	.L1159
 	ldrh	r1, [r7]
 	movw	r2, #65535
 	cmp	r1, r2
-	beq	.L1178
-	ldr	r2, .L1180+28
+	beq	.L1180
+	ldr	r2, .L1182+28
 	ldr	r0, [r7, #8]
 	ldr	r2, [r2]
 	cmp	r0, r2
-	bls	.L1159
-.L1178:
-	ldr	r3, .L1180+32
+	bls	.L1161
+.L1180:
+	ldr	r3, .L1182+32
 	movs	r1, #0
 	ldrh	r2, [r4]
 	movs	r5, #0
@@ -8414,13 +8430,13 @@ FtlGcScanTempBlk:
 	strh	r1, [r3, r2, lsl #1]	@ movhi
 	ldrh	r0, [r4]
 	bl	INSERT_FREE_LIST
-	ldr	r2, .L1180+36
+	ldr	r2, .L1182+36
 	movw	r3, #65535
 	strh	r3, [r4]	@ movhi
 	strh	r3, [r2]	@ movhi
 	bl	FtlGcPageVarInit
-	b	.L1167
-.L1159:
+	b	.L1169
+.L1161:
 	mov	r2, r6
 	add	r1, sp, #24
 	str	r3, [sp, #8]
@@ -8429,59 +8445,59 @@ FtlGcScanTempBlk:
 	ldr	r1, [sp, #24]
 	ldr	r3, [sp, #8]
 	cmp	r2, r1
-	beq	.L1161
-.L1163:
+	beq	.L1163
+.L1165:
 	ldr	r2, [r7, #8]
-.L1179:
+.L1181:
 	ldr	r1, [sp, #4]
 	add	r8, r8, #1
 	ldr	r0, [r7, #12]
 	bl	FtlGcUpdatePage
-	b	.L1156
-.L1161:
+	b	.L1158
+.L1163:
 	str	r3, [sp, #8]
 	adds	r3, r2, #1
-	beq	.L1163
+	beq	.L1165
 	str	r2, [sp, #32]
 	movs	r1, #1
-	ldr	r2, .L1180+40
+	ldr	r2, .L1182+40
 	add	r0, sp, #28
 	ldr	r2, [r2]
 	str	r2, [sp, #36]
-	ldr	r2, .L1180+44
+	ldr	r2, .L1182+44
 	ldr	r2, [r2]
 	str	r2, [sp, #40]
 	mov	r2, r6
 	bl	FlashReadPages
-	ldr	r2, .L1180+48
+	ldr	r2, .L1182+48
 	ldr	r1, [fp]
 	ldr	r3, [sp, #8]
 	ldrh	r2, [r2]
 	ldr	r0, [sp, #36]
 	add	ip, r3, r1
 	lsls	r2, r2, #7
-.L1164:
+.L1166:
 	cmp	r6, r2
-	beq	.L1163
+	beq	.L1165
 	ldr	r1, [ip, #8]
 	ldr	r3, [r0, r6, lsl #2]
 	ldr	r1, [r1, r6, lsl #2]
 	cmp	r1, r3
-	beq	.L1165
+	beq	.L1167
 	ldr	r2, [sp, #32]
 	ldrh	r1, [r4]
-	ldr	r0, .L1180+52
+	ldr	r0, .L1182+52
 	bl	printf
-	b	.L1178
-.L1165:
+	b	.L1180
+.L1167:
 	adds	r6, r6, #1
-	b	.L1164
-.L1157:
+	b	.L1166
+.L1159:
 	mov	r2, #-1
-	b	.L1179
-.L1181:
+	b	.L1181
+.L1183:
 	.align	2
-.L1180:
+.L1182:
 	.word	.LANCHOR159
 	.word	.LANCHOR18
 	.word	.LANCHOR2
@@ -8509,7 +8525,7 @@ FtlGcScanTempBlk:
 FtlVendorPartWrite:
 	@ args = 0, pretend = 0, frame = 104
 	@ frame_needed = 0, uses_anonymous_args = 0
-	ldr	r3, .L1194
+	ldr	r3, .L1196
 	push	{r4, r5, r6, r7, r8, r10, fp, lr}
 	sub	sp, sp, #104
 	str	r2, [sp]
@@ -8518,26 +8534,26 @@ FtlVendorPartWrite:
 	mov	r5, r1
 	ldrh	r3, [r3]
 	cmp	r2, r3
-	bhi	.L1190
-	ldr	r3, .L1194+4
+	bhi	.L1192
+	ldr	r3, .L1196+4
 	mov	r8, #0
 	ldrh	r6, [r3]
 	lsr	r6, r0, r6
 	lsl	fp, r6, #2
+.L1186:
+	cbnz	r5, .L1191
 .L1184:
-	cbnz	r5, .L1189
-.L1182:
 	mov	r0, r8
 	add	sp, sp, #104
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L1189:
-	ldr	r3, .L1194+8
+.L1191:
+	ldr	r3, .L1196+8
 	mov	r0, r7
-	ldr	r10, .L1194+24
+	ldr	r10, .L1196+24
 	ldr	r3, [r3]
 	ldr	r2, [r3, fp]
-	ldr	r3, .L1194+12
+	ldr	r3, .L1196+12
 	str	r2, [sp, #12]
 	ldrh	r3, [r3]
 	mov	r1, r3
@@ -8551,9 +8567,9 @@ FtlVendorPartWrite:
 	cmp	r5, r4
 	it	cc
 	uxthcc	r4, r5
-	cbz	r2, .L1186
+	cbz	r2, .L1188
 	cmp	r4, r3
-	beq	.L1186
+	beq	.L1188
 	ldr	r3, [r10]
 	add	r0, sp, #20
 	str	r2, [sp, #24]
@@ -8563,7 +8579,7 @@ FtlVendorPartWrite:
 	add	r3, sp, #40
 	str	r3, [sp, #32]
 	bl	FlashReadPages
-.L1187:
+.L1189:
 	lsls	r3, r4, #9
 	ldr	r0, [r10]
 	subs	r5, r5, r4
@@ -8576,7 +8592,7 @@ FtlVendorPartWrite:
 	bl	ftl_memcpy
 	ldr	r2, [r10]
 	mov	r1, r6
-	ldr	r0, .L1194+16
+	ldr	r0, .L1196+16
 	adds	r6, r6, #1
 	bl	FtlMapWritePage
 	ldr	r3, [sp]
@@ -8587,20 +8603,20 @@ FtlVendorPartWrite:
 	ldr	r3, [sp, #8]
 	add	r2, r2, r3
 	str	r2, [sp]
-	b	.L1184
-.L1186:
-	ldr	r3, .L1194+20
+	b	.L1186
+.L1188:
+	ldr	r3, .L1196+20
 	movs	r1, #0
 	ldr	r0, [r10]
 	ldrh	r2, [r3]
 	bl	ftl_memset
-	b	.L1187
-.L1190:
+	b	.L1189
+.L1192:
 	mov	r8, #-1
-	b	.L1182
-.L1195:
+	b	.L1184
+.L1197:
 	.align	2
-.L1194:
+.L1196:
 	.word	.LANCHOR15
 	.word	.LANCHOR21
 	.word	.LANCHOR122
@@ -8621,60 +8637,60 @@ Ftl_save_ext_data:
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 0, uses_anonymous_args = 0
 	@ link register save eliminated.
-	ldr	r2, .L1198
-	ldr	r3, .L1198+4
+	ldr	r2, .L1200
+	ldr	r3, .L1200+4
 	ldr	r1, [r2]
 	cmp	r1, r3
-	bne	.L1196
-	ldr	r3, .L1198+8
+	bne	.L1198
+	ldr	r3, .L1200+8
 	movs	r1, #1
 	movs	r0, #0
 	str	r3, [r2, #4]
-	ldr	r3, .L1198+12
+	ldr	r3, .L1200+12
 	ldr	r3, [r3]
 	str	r3, [r2, #88]
-	ldr	r3, .L1198+16
+	ldr	r3, .L1200+16
 	ldr	r3, [r3]
 	str	r3, [r2, #92]
-	ldr	r3, .L1198+20
+	ldr	r3, .L1200+20
 	ldr	r3, [r3]
 	str	r3, [r2, #8]
-	ldr	r3, .L1198+24
+	ldr	r3, .L1200+24
 	ldr	r3, [r3]
 	str	r3, [r2, #12]
-	ldr	r3, .L1198+28
+	ldr	r3, .L1200+28
 	ldr	r3, [r3]
 	str	r3, [r2, #16]
-	ldr	r3, .L1198+32
+	ldr	r3, .L1200+32
 	ldr	r3, [r3]
 	str	r3, [r2, #20]
-	ldr	r3, .L1198+36
+	ldr	r3, .L1200+36
 	ldr	r3, [r3]
 	str	r3, [r2, #28]
-	ldr	r3, .L1198+40
+	ldr	r3, .L1200+40
 	ldr	r3, [r3]
 	str	r3, [r2, #32]
-	ldr	r3, .L1198+44
+	ldr	r3, .L1200+44
 	ldr	r3, [r3]
 	str	r3, [r2, #36]
-	ldr	r3, .L1198+48
+	ldr	r3, .L1200+48
 	ldr	r3, [r3]
 	str	r3, [r2, #40]
-	ldr	r3, .L1198+52
+	ldr	r3, .L1200+52
 	ldr	r3, [r3]
 	str	r3, [r2, #44]
-	ldr	r3, .L1198+56
+	ldr	r3, .L1200+56
 	ldr	r3, [r3]
 	str	r3, [r2, #48]
 	b	FtlVendorPartWrite
-.L1196:
+.L1198:
 	bx	lr
-.L1199:
+.L1201:
 	.align	2
-.L1198:
+.L1200:
 	.word	.LANCHOR134
 	.word	1179929683
-	.word	1342177366
+	.word	1342177367
 	.word	.LANCHOR161
 	.word	.LANCHOR162
 	.word	.LANCHOR83
@@ -8699,7 +8715,7 @@ Ftl_save_ext_data:
 FtlEctTblFlush:
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 0, uses_anonymous_args = 0
-	ldr	r2, .L1205
+	ldr	r2, .L1207
 	push	{r3, lr}
 	ldrh	r3, [r2]
 	cmp	r3, #31
@@ -8708,22 +8724,22 @@ FtlEctTblFlush:
 	movhi	r3, #32
 	strhls	r3, [r2]	@ movhi
 	movls	r3, #1
-	ldr	r2, .L1205+4
-	cbnz	r0, .L1202
+	ldr	r2, .L1207+4
+	cbnz	r0, .L1204
 	ldr	r1, [r2]
 	ldr	r0, [r1, #20]
 	ldr	r1, [r1, #16]
 	add	r3, r3, r0
 	cmp	r1, r3
-	bcc	.L1203
-.L1202:
+	bcc	.L1205
+.L1204:
 	ldr	r2, [r2]
 	movs	r0, #64
 	ldr	r3, [r2, #16]
 	str	r3, [r2, #20]
-	ldr	r3, .L1205+8
+	ldr	r3, .L1207+8
 	str	r3, [r2]
-	ldr	r3, .L1205+12
+	ldr	r3, .L1207+12
 	ldrh	r1, [r3]
 	lsls	r3, r1, #9
 	str	r3, [r2, #12]
@@ -8734,12 +8750,12 @@ FtlEctTblFlush:
 	str	r3, [r2, #4]
 	bl	FtlVendorPartWrite
 	bl	Ftl_save_ext_data
-.L1203:
+.L1205:
 	movs	r0, #0
 	pop	{r3, pc}
-.L1206:
+.L1208:
 	.align	2
-.L1205:
+.L1207:
 	.word	.LANCHOR163
 	.word	.LANCHOR117
 	.word	1112818501
@@ -8771,7 +8787,7 @@ sftl_vendor_write:
 FtlVendorPartRead:
 	@ args = 0, pretend = 0, frame = 104
 	@ frame_needed = 0, uses_anonymous_args = 0
-	ldr	r3, .L1218
+	ldr	r3, .L1220
 	push	{r4, r5, r6, r7, r8, r10, fp, lr}
 	mov	r10, r2
 	adds	r2, r0, r1
@@ -8780,28 +8796,28 @@ FtlVendorPartRead:
 	mov	r6, r1
 	ldrh	r3, [r3]
 	cmp	r2, r3
-	bhi	.L1217
-	ldr	r3, .L1218+4
+	bhi	.L1219
+	ldr	r3, .L1220+4
 	mov	r8, #0
-	ldr	fp, .L1218+28
+	ldr	fp, .L1220+28
 	ldrh	r5, [r3]
 	lsr	r5, r0, r5
 	lsls	r3, r5, #2
 	str	r3, [sp]
+.L1212:
+	cbnz	r6, .L1218
 .L1210:
-	cbnz	r6, .L1216
-.L1208:
 	mov	r0, r8
 	add	sp, sp, #104
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L1216:
-	ldr	r3, .L1218+8
+.L1218:
+	ldr	r3, .L1220+8
 	mov	r0, r7
 	ldr	r2, [sp]
 	ldr	r3, [r3]
 	ldr	r3, [r3, r2]
-	ldr	r2, .L1218+12
+	ldr	r2, .L1220+12
 	str	r3, [sp, #8]
 	ldrh	r4, [r2]
 	mov	r1, r4
@@ -8816,7 +8832,7 @@ FtlVendorPartRead:
 	lsls	r2, r4, #9
 	str	r2, [sp, #8]
 	cmp	r3, #0
-	beq	.L1212
+	beq	.L1214
 	ldr	r2, [fp]
 	add	r0, sp, #20
 	str	r3, [sp, #24]
@@ -8830,28 +8846,28 @@ FtlVendorPartRead:
 	ldr	r2, [sp, #20]
 	ldr	r3, [sp, #12]
 	adds	r2, r2, #1
-	ldr	r2, .L1218+16
+	ldr	r2, .L1220+16
 	it	eq
 	moveq	r8, #-1
 	ldr	r2, [r2]
 	cmp	r2, #256
-	bne	.L1214
+	bne	.L1216
 	mov	r2, r3
 	mov	r1, r5
-	ldr	r0, .L1218+20
+	ldr	r0, .L1220+20
 	bl	printf
 	ldr	r2, [fp]
 	mov	r1, r5
-	ldr	r0, .L1218+24
+	ldr	r0, .L1220+24
 	bl	FtlMapWritePage
-.L1214:
+.L1216:
 	ldr	r1, [fp]
 	lsls	r2, r4, #9
 	ldr	r3, [sp, #4]
 	mov	r0, r10
 	add	r1, r1, r3, lsl #9
 	bl	ftl_memcpy
-.L1215:
+.L1217:
 	ldr	r3, [sp, #8]
 	adds	r5, r5, #1
 	subs	r6, r6, r4
@@ -8860,19 +8876,19 @@ FtlVendorPartRead:
 	ldr	r3, [sp]
 	adds	r3, r3, #4
 	str	r3, [sp]
-	b	.L1210
-.L1212:
+	b	.L1212
+.L1214:
 	lsls	r2, r4, #9
 	mov	r1, r3
 	mov	r0, r10
 	bl	ftl_memset
-	b	.L1215
-.L1217:
-	mov	r8, #-1
-	b	.L1208
+	b	.L1217
 .L1219:
+	mov	r8, #-1
+	b	.L1210
+.L1221:
 	.align	2
-.L1218:
+.L1220:
 	.word	.LANCHOR15
 	.word	.LANCHOR21
 	.word	.LANCHOR122
@@ -8895,30 +8911,30 @@ FtlLoadEctTbl:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r3, r4, r5, lr}
 	movs	r0, #64
-	ldr	r4, .L1222
-	ldr	r5, .L1222+4
+	ldr	r4, .L1224
+	ldr	r5, .L1224+4
 	ldr	r2, [r4]
 	ldrh	r1, [r5]
 	bl	FtlVendorPartRead
 	ldr	r3, [r4]
 	ldr	r2, [r3]
-	ldr	r3, .L1222+8
+	ldr	r3, .L1224+8
 	cmp	r2, r3
-	beq	.L1221
-	ldr	r1, .L1222+12
-	ldr	r0, .L1222+16
+	beq	.L1223
+	ldr	r1, .L1224+12
+	ldr	r0, .L1224+16
 	bl	printf
 	ldrh	r2, [r5]
 	movs	r1, #0
 	ldr	r0, [r4]
 	lsls	r2, r2, #9
 	bl	ftl_memset
-.L1221:
+.L1223:
 	movs	r0, #0
 	pop	{r3, r4, r5, pc}
-.L1223:
+.L1225:
 	.align	2
-.L1222:
+.L1224:
 	.word	.LANCHOR117
 	.word	.LANCHOR115
 	.word	1112818501
@@ -8938,75 +8954,75 @@ Ftl_load_ext_data:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r3, r4, r5, lr}
 	movs	r1, #1
-	ldr	r4, .L1227
+	ldr	r4, .L1229
 	movs	r0, #0
-	ldr	r5, .L1227+4
+	ldr	r5, .L1229+4
 	mov	r2, r4
 	bl	FtlVendorPartRead
 	ldr	r3, [r4]
 	cmp	r3, r5
-	beq	.L1225
+	beq	.L1227
 	mov	r2, #512
 	movs	r1, #0
 	mov	r0, r4
 	bl	ftl_memset
 	str	r5, [r4]
-.L1225:
+.L1227:
 	ldr	r3, [r4]
 	cmp	r3, r5
-	ldr	r3, .L1227+8
-	bne	.L1226
+	ldr	r3, .L1229+8
+	bne	.L1228
 	ldr	r1, [r4, #88]
-	ldr	r2, .L1227+12
+	ldr	r2, .L1229+12
 	str	r1, [r2]
 	ldr	r1, [r4, #92]
-	ldr	r2, .L1227+16
+	ldr	r2, .L1229+16
 	str	r1, [r2]
 	ldr	r1, [r4, #8]
-	ldr	r2, .L1227+20
+	ldr	r2, .L1229+20
 	str	r1, [r2]
 	ldr	r1, [r4, #12]
-	ldr	r2, .L1227+24
+	ldr	r2, .L1229+24
 	str	r1, [r2]
 	ldr	r1, [r4, #16]
-	ldr	r2, .L1227+28
+	ldr	r2, .L1229+28
 	str	r1, [r2]
 	ldr	r1, [r4, #20]
-	ldr	r2, .L1227+32
+	ldr	r2, .L1229+32
 	str	r1, [r2]
 	ldr	r2, [r4, #28]
 	ldr	r1, [r4, #32]
 	str	r2, [r3]
-	ldr	r2, .L1227+36
+	ldr	r2, .L1229+36
 	str	r1, [r2]
 	ldr	r1, [r4, #36]
-	ldr	r2, .L1227+40
+	ldr	r2, .L1229+40
 	str	r1, [r2]
 	ldr	r1, [r4, #40]
-	ldr	r2, .L1227+44
+	ldr	r2, .L1229+44
 	str	r1, [r2]
 	ldr	r1, [r4, #44]
-	ldr	r2, .L1227+48
+	ldr	r2, .L1229+48
 	str	r1, [r2]
 	ldr	r1, [r4, #48]
-	ldr	r2, .L1227+52
+	ldr	r2, .L1229+52
 	str	r1, [r2]
-.L1226:
-	ldr	r1, .L1227+56
-	ldr	r2, .L1227+60
+.L1228:
+	ldr	r1, .L1229+56
+	ldr	r2, .L1229+60
 	ldr	r3, [r3]
 	ldr	r0, [r1]
 	ldrh	r2, [r2]
-	ldr	r1, .L1227+64
+	ldr	r1, .L1229+64
 	mla	r0, r0, r2, r3
 	ldrh	r1, [r1]
 	bl	__aeabi_uidiv
-	ldr	r3, .L1227+68
+	ldr	r3, .L1229+68
 	str	r0, [r3]
 	pop	{r3, r4, r5, pc}
-.L1228:
+.L1230:
 	.align	2
-.L1227:
+.L1229:
 	.word	.LANCHOR134
 	.word	1179929683
 	.word	.LANCHOR90
@@ -9056,30 +9072,30 @@ FtlMapBlkWriteDump_data:
 	mov	r4, r0
 	ldr	r3, [r0, #36]
 	cmp	r3, #0
-	beq	.L1230
+	beq	.L1232
 	movs	r3, #0
-	ldr	r5, .L1242
+	ldr	r5, .L1244
 	str	r3, [r0, #36]
-	ldr	r3, .L1242+4
+	ldr	r3, .L1244+4
 	ldrh	r6, [r0, #6]
 	mov	r7, r5
 	ldr	r10, [r0, #24]
 	ldr	r3, [r3]
 	str	r3, [r5, #8]
-	ldr	r3, .L1242+8
+	ldr	r3, .L1244+8
 	ldr	r8, [r3]
 	ldrh	r3, [r0, #2]
 	str	r8, [r5, #12]
-	cbz	r3, .L1232
-	ldr	r2, .L1242+12
+	cbz	r3, .L1234
+	ldr	r2, .L1244+12
 	ldrh	r2, [r2]
 	subs	r2, r2, #1
 	cmp	r3, r2
-	bge	.L1232
+	bge	.L1234
 	ldrh	r2, [r0]
 	movw	r1, #65535
 	cmp	r2, r1
-	beq	.L1232
+	beq	.L1234
 	ldr	r1, [r0, #12]
 	subs	r3, r3, #1
 	mov	r0, r5
@@ -9091,44 +9107,44 @@ FtlMapBlkWriteDump_data:
 	bl	FlashReadPages
 	ldr	r3, [r5]
 	adds	r3, r3, #1
-	beq	.L1232
+	beq	.L1234
 	ldr	r3, [r4, #24]
 	ldrh	r1, [r8, #8]
 	ldr	r2, [r3, r1, lsl #2]
 	ldr	r3, [r5, #4]
 	cmp	r2, r3
-	bne	.L1232
+	bne	.L1234
 	ldr	r2, [r5, #8]
-.L1241:
+.L1243:
 	mov	r0, r4
 	pop	{r3, r4, r5, r6, r7, r8, r10, lr}
 	b	FtlMapWritePage
-.L1232:
+.L1234:
 	subs	r6, r6, #1
 	uxth	r6, r6
 	ldr	r3, [r10, r6, lsl #2]
 	str	r3, [r7, #4]
-	cbz	r3, .L1233
+	cbz	r3, .L1235
 	movs	r2, #1
-	ldr	r0, .L1242
+	ldr	r0, .L1244
 	mov	r1, r2
 	bl	FlashReadPages
-.L1234:
+.L1236:
 	ldr	r2, [r7, #8]
 	mov	r1, r6
-	b	.L1241
-.L1233:
-	ldr	r3, .L1242+16
+	b	.L1243
+.L1235:
+	ldr	r3, .L1244+16
 	movs	r1, #255
 	ldr	r0, [r7, #8]
 	ldrh	r2, [r3]
 	bl	ftl_memset
-	b	.L1234
-.L1230:
+	b	.L1236
+.L1232:
 	pop	{r3, r4, r5, r6, r7, r8, r10, pc}
-.L1243:
+.L1245:
 	.align	2
-.L1242:
+.L1244:
 	.word	.LANCHOR137
 	.word	.LANCHOR106
 	.word	.LANCHOR113
@@ -9148,11 +9164,11 @@ FtlVpcTblFlush:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r0, r1, r4, r5, r6, r7, r8, r10, fp, lr}
 	mov	r8, #0
-	ldr	r3, .L1259
-	ldr	r5, .L1259+4
-	ldr	fp, .L1259+72
+	ldr	r3, .L1261
+	ldr	r5, .L1261+4
+	ldr	fp, .L1261+72
 	ldr	r0, [r3]
-	ldr	r6, .L1259+8
+	ldr	r6, .L1261+8
 	ldr	r7, [fp]
 	ldrh	r2, [r5]
 	str	r0, [r6, #8]
@@ -9161,22 +9177,22 @@ FtlVpcTblFlush:
 	movw	r2, #61604
 	strh	r2, [r7]	@ movhi
 	ldr	r2, [r5, #8]
-	ldr	r4, .L1259+12
-	ldr	ip, .L1259+76
+	ldr	r4, .L1261+12
+	ldr	ip, .L1261+76
 	str	r2, [r7, #4]
-	ldr	r2, .L1259+16
+	ldr	r2, .L1261+16
 	str	r8, [r7, #8]
 	str	r8, [r7, #12]
 	stm	r4, {r2, ip}
 	ldrh	r2, [r5, #6]
 	str	r3, [sp]
-	ldr	r10, .L1259+80
+	ldr	r10, .L1261+80
 	strh	r2, [r4, #8]	@ movhi
-	ldr	r2, .L1259+20
-	ldr	r3, .L1259+24
+	ldr	r2, .L1261+20
+	ldr	r3, .L1261+24
 	ldrh	r2, [r2]
 	strb	r2, [r4, #10]
-	ldr	r2, .L1259+28
+	ldr	r2, .L1261+28
 	ldrh	r1, [r2]
 	ldrh	ip, [r2, #2]
 	strh	r1, [r4, #14]	@ movhi
@@ -9184,7 +9200,7 @@ FtlVpcTblFlush:
 	ldrb	r2, [r2, #8]	@ zero_extendqisi2
 	strb	r2, [r4, #11]
 	orr	r1, r1, ip, lsl #6
-	ldr	r2, .L1259+32
+	ldr	r2, .L1261+32
 	strh	r1, [r4, #16]	@ movhi
 	ldrh	r1, [r2]
 	ldrh	ip, [r2, #2]
@@ -9194,7 +9210,7 @@ FtlVpcTblFlush:
 	orr	r1, r1, ip, lsl #6
 	strh	r1, [r4, #20]	@ movhi
 	strb	r2, [r4, #12]
-	ldr	r2, .L1259+36
+	ldr	r2, .L1261+36
 	ldrh	r1, [r2]
 	ldrh	ip, [r2, #2]
 	strh	r1, [r4, #22]	@ movhi
@@ -9202,14 +9218,14 @@ FtlVpcTblFlush:
 	ldrb	r2, [r2, #8]	@ zero_extendqisi2
 	strb	r2, [r4, #13]
 	orr	r1, r1, ip, lsl #6
-	ldr	r2, .L1259+40
+	ldr	r2, .L1261+40
 	strh	r1, [r4, #24]	@ movhi
 	movs	r1, #255
 	ldr	r2, [r2]
 	str	r2, [r4, #32]
 	ldr	r2, [r10]
 	str	r2, [r4, #40]
-	ldr	r2, .L1259+44
+	ldr	r2, .L1261+44
 	ldr	r2, [r2]
 	str	r2, [r4, #36]
 	ldrh	r2, [r3]
@@ -9219,9 +9235,9 @@ FtlVpcTblFlush:
 	ldr	r0, [r6, #8]
 	movw	r4, #65535
 	bl	ftl_memcpy
-	ldr	r2, .L1259+48
+	ldr	r2, .L1261+48
 	ldr	r0, [r6, #8]
-	ldr	r1, .L1259+52
+	ldr	r1, .L1261+52
 	ldrh	r2, [r2]
 	adds	r0, r0, #48
 	ldr	r1, [r1]
@@ -9229,9 +9245,9 @@ FtlVpcTblFlush:
 	bl	ftl_memcpy
 	mov	r0, r8
 	bl	FtlUpdateVaildLpn
-	ldr	r3, .L1259+24
+	ldr	r3, .L1261+24
 	str	r3, [sp, #4]
-.L1245:
+.L1247:
 	ldr	r3, [sp]
 	ldrh	r1, [r5, #2]
 	ldrh	r2, [r5]
@@ -9241,11 +9257,11 @@ FtlVpcTblFlush:
 	str	r3, [r6, #12]
 	orr	r3, r1, r2, lsl #10
 	str	r3, [r6, #4]
-	ldr	r3, .L1259+56
+	ldr	r3, .L1261+56
 	ldrh	r3, [r3]
 	subs	r3, r3, #1
 	cmp	r1, r3
-	blt	.L1246
+	blt	.L1248
 	movs	r3, #0
 	ldrh	r4, [r5, #4]
 	strh	r3, [r5, #2]	@ movhi
@@ -9260,7 +9276,7 @@ FtlVpcTblFlush:
 	str	r2, [r6, #4]
 	str	r3, [r7, #4]
 	strh	r0, [r7, #2]	@ movhi
-.L1246:
+.L1248:
 	ldr	r3, [sp, #4]
 	ldrh	r1, [r3]
 	ldr	r3, [sp]
@@ -9270,7 +9286,7 @@ FtlVpcTblFlush:
 	str	r0, [r7, #12]
 	mov	r2, r3
 	mov	r1, r3
-	ldr	r0, .L1259+8
+	ldr	r0, .L1261+8
 	bl	FlashProgPages
 	ldrh	r3, [r5, #2]
 	ldr	r2, [r6]
@@ -9278,50 +9294,50 @@ FtlVpcTblFlush:
 	uxth	r3, r3
 	adds	r1, r2, #1
 	strh	r3, [r5, #2]	@ movhi
-	bne	.L1247
+	bne	.L1249
 	cmp	r3, #1
-	bne	.L1248
+	bne	.L1250
 	movw	r2, #1145
-	ldr	r1, .L1259+60
-	ldr	r0, .L1259+64
+	ldr	r1, .L1261+60
+	ldr	r0, .L1261+64
 	bl	printf
-.L1248:
+.L1250:
 	ldrh	r3, [r5, #2]
 	add	r8, r8, #1
 	uxth	r8, r8
 	cmp	r3, #1
 	itttt	eq
-	ldreq	r3, .L1259+56
+	ldreq	r3, .L1261+56
 	ldrheq	r3, [r3]
 	addeq	r3, r3, #-1
 	strheq	r3, [r5, #2]	@ movhi
 	cmp	r8, #3
-	bls	.L1245
+	bls	.L1247
 	mov	r2, r8
 	ldr	r1, [r6, #4]
-	ldr	r0, .L1259+68
+	ldr	r0, .L1261+68
 	bl	printf
-.L1251:
-	b	.L1251
-.L1247:
+.L1253:
+	b	.L1253
+.L1249:
 	cmp	r3, #1
-	beq	.L1245
+	beq	.L1247
 	cmp	r2, #256
-	beq	.L1245
+	beq	.L1247
 	movw	r3, #65535
 	cmp	r4, r3
-	beq	.L1252
+	beq	.L1254
 	movs	r1, #1
 	mov	r0, r4
 	bl	FtlFreeSysBlkQueueIn
-.L1252:
+.L1254:
 	movs	r0, #0
 	add	sp, sp, #8
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L1260:
+.L1262:
 	.align	2
-.L1259:
+.L1261:
 	.word	.LANCHOR105
 	.word	.LANCHOR138
 	.word	.LANCHOR137
@@ -9341,7 +9357,7 @@ FtlVpcTblFlush:
 	.word	.LC1
 	.word	.LC39
 	.word	.LANCHOR113
-	.word	1342177366
+	.word	1342177367
 	.word	.LANCHOR81
 	.size	FtlVpcTblFlush, .-FtlVpcTblFlush
 	.section	.text.FtlSysFlush,"ax",%progbits
@@ -9375,17 +9391,17 @@ sftl_deinit:
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r3, lr}
-	ldr	r3, .L1264
+	ldr	r3, .L1266
 	ldr	r3, [r3]
 	cmp	r3, #1
-	bne	.L1263
+	bne	.L1265
 	bl	FtlSysFlush
-.L1263:
+.L1265:
 	movs	r0, #0
 	pop	{r3, pc}
-.L1265:
+.L1267:
 	.align	2
-.L1264:
+.L1266:
 	.word	.LANCHOR165
 	.size	sftl_deinit, .-sftl_deinit
 	.section	.text.FtlDiscard,"ax",%progbits
@@ -9399,28 +9415,28 @@ sftl_deinit:
 FtlDiscard:
 	@ args = 0, pretend = 0, frame = 8
 	@ frame_needed = 0, uses_anonymous_args = 0
-	ldr	r3, .L1283
+	ldr	r3, .L1285
 	push	{r0, r1, r4, r5, r6, r7, r8, lr}
 	mov	r6, r0
 	mov	r4, r1
 	ldr	r3, [r3]
 	cmp	r3, r0
-	bls	.L1276
+	bls	.L1278
 	cmp	r3, r1
-	bcc	.L1276
+	bcc	.L1278
 	adds	r2, r0, r1
 	cmp	r3, r2
-	bcc	.L1276
+	bcc	.L1278
 	cmp	r1, #31
-	bhi	.L1268
-.L1273:
+	bhi	.L1270
+.L1275:
 	movs	r0, #0
-.L1266:
+.L1268:
 	add	sp, sp, #8
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, pc}
-.L1268:
-	ldr	r8, .L1283+12
+.L1270:
+	ldr	r8, .L1285+12
 	ldrh	r5, [r8]
 	mov	r1, r5
 	bl	__aeabi_uidiv
@@ -9428,7 +9444,7 @@ FtlDiscard:
 	mov	r7, r0
 	subs	r6, r6, r3
 	uxth	r6, r6
-	cbz	r6, .L1269
+	cbz	r6, .L1271
 	subs	r5, r5, r6
 	adds	r7, r7, #1
 	cmp	r5, r4
@@ -9436,32 +9452,32 @@ FtlDiscard:
 	movcs	r5, r4
 	uxth	r5, r5
 	subs	r4, r4, r5
-.L1269:
-	ldr	r5, .L1283+4
+.L1271:
+	ldr	r5, .L1285+4
 	mov	r3, #-1
-	ldr	r6, .L1283+8
+	ldr	r6, .L1285+8
 	str	r3, [sp, #4]
-.L1270:
+.L1272:
 	ldrh	r3, [r8]
 	cmp	r4, r3
-	bcs	.L1272
-	ldr	r3, .L1283+4
+	bcs	.L1274
+	ldr	r3, .L1285+4
 	ldr	r2, [r3]
 	cmp	r2, #32
-	bls	.L1273
+	bls	.L1275
 	movs	r4, #0
 	str	r4, [r3]
 	bl	l2p_flush
 	bl	FtlVpcTblFlush
-	b	.L1273
-.L1272:
+	b	.L1275
+.L1274:
 	movs	r2, #0
 	mov	r1, sp
 	mov	r0, r7
 	bl	log2phys
 	ldr	r3, [sp]
 	adds	r3, r3, #1
-	beq	.L1271
+	beq	.L1273
 	ldr	r3, [r5]
 	movs	r2, #1
 	add	r1, sp, #4
@@ -9476,17 +9492,17 @@ FtlDiscard:
 	ubfx	r0, r0, #10, #16
 	bl	P2V_block_in_plane
 	bl	decrement_vpc_count
-.L1271:
+.L1273:
 	ldrh	r3, [r8]
 	adds	r7, r7, #1
 	subs	r4, r4, r3
-	b	.L1270
-.L1276:
+	b	.L1272
+.L1278:
 	mov	r0, #-1
-	b	.L1266
-.L1284:
+	b	.L1268
+.L1286:
 	.align	2
-.L1283:
+.L1285:
 	.word	.LANCHOR33
 	.word	.LANCHOR166
 	.word	.LANCHOR85
@@ -9503,47 +9519,47 @@ FtlDiscard:
 allocate_new_data_superblock:
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 0, uses_anonymous_args = 0
-	ldr	r3, .L1295
+	ldr	r3, .L1297
 	push	{r4, r5, r6, lr}
 	mov	r6, r0
 	ldrh	r4, [r0]
 	ldrh	r3, [r3]
 	cmp	r3, r4
-	bcs	.L1286
+	bcs	.L1288
 	movw	r2, #2766
-	ldr	r1, .L1295+4
-	ldr	r0, .L1295+8
+	ldr	r1, .L1297+4
+	ldr	r0, .L1297+8
 	bl	printf
-.L1286:
+.L1288:
 	movw	r3, #65535
 	cmp	r4, r3
-	beq	.L1287
-	ldr	r3, .L1295+12
+	beq	.L1289
+	ldr	r3, .L1297+12
 	mov	r0, r4
 	ldr	r3, [r3]
 	ldrh	r3, [r3, r4, lsl #1]
-	cbz	r3, .L1288
+	cbz	r3, .L1290
 	bl	INSERT_DATA_LIST
-.L1287:
-	ldr	r5, .L1295+16
+.L1289:
+	ldr	r5, .L1297+16
 	movw	r2, #65535
 	movs	r3, #1
 	strb	r3, [r6, #8]
 	ldrh	r0, [r5]
 	cmp	r0, r2
-	beq	.L1289
+	beq	.L1291
 	cmp	r4, r0
-	bne	.L1290
-	ldr	r3, .L1295+12
+	bne	.L1292
+	ldr	r3, .L1297+12
 	ldr	r3, [r3]
 	ldrh	r3, [r3, r0, lsl #1]
-	cbz	r3, .L1291
-.L1290:
+	cbz	r3, .L1293
+.L1292:
 	bl	update_vpc_list
-.L1291:
+.L1293:
 	movw	r3, #65535
 	strh	r3, [r5]	@ movhi
-.L1289:
+.L1291:
 	mov	r0, r6
 	bl	allocate_data_superblock
 	bl	l2p_flush
@@ -9552,12 +9568,12 @@ allocate_new_data_superblock:
 	bl	FtlVpcTblFlush
 	movs	r0, #0
 	pop	{r4, r5, r6, pc}
-.L1288:
+.L1290:
 	bl	INSERT_FREE_LIST
-	b	.L1287
-.L1296:
+	b	.L1289
+.L1298:
 	.align	2
-.L1295:
+.L1297:
 	.word	.LANCHOR4
 	.word	.LANCHOR167
 	.word	.LC1
@@ -9577,31 +9593,31 @@ FtlProgPages:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r10, fp, lr}
 	movs	r6, #0
-	ldr	r10, .L1316+20
+	ldr	r10, .L1318+20
 	mov	r5, r3
 	movs	r2, #0
 	mov	r4, r0
-	ldr	fp, .L1316
+	ldr	fp, .L1318
 	mov	r8, r1
 	ldrb	r3, [r3, #9]	@ zero_extendqisi2
 	bl	FlashProgPages
-.L1298:
+.L1300:
 	cmp	r6, r8
-	bne	.L1305
-	ldr	r3, .L1316
+	bne	.L1307
+	ldr	r3, .L1318
 	ldrb	r2, [r5, #6]	@ zero_extendqisi2
 	ldrh	r3, [r3]
 	cmp	r2, r3
-	bcc	.L1297
+	bcc	.L1299
 	mov	r2, #1000
-	ldr	r1, .L1316+4
-	ldr	r0, .L1316+8
+	ldr	r1, .L1318+4
+	ldr	r0, .L1318+8
 	bl	printf
-.L1297:
+.L1299:
 	add	sp, sp, #16
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L1300:
+.L1302:
 	ldr	r1, [r4, #4]
 	mov	r0, r10
 	bl	printf
@@ -9610,10 +9626,10 @@ FtlProgPages:
 	bl	P2V_block_in_plane
 	bl	decrement_vpc_count
 	ldrh	r3, [r5, #4]
-	cbnz	r3, .L1299
+	cbnz	r3, .L1301
 	mov	r0, r5
 	bl	allocate_new_data_superblock
-.L1299:
+.L1301:
 	mov	r0, r5
 	bl	get_new_active_ppa
 	movs	r2, #0
@@ -9623,21 +9639,21 @@ FtlProgPages:
 	ldrb	r3, [r5, #9]	@ zero_extendqisi2
 	mov	r0, r4
 	bl	FlashProgPages
-.L1305:
+.L1307:
 	ldr	r2, [r4]
 	adds	r3, r2, #1
-	beq	.L1300
+	beq	.L1302
 	cmp	r2, #256
-	beq	.L1300
+	beq	.L1302
 	ldrb	r2, [r5, #6]	@ zero_extendqisi2
 	ldrh	r3, [fp]
 	cmp	r2, r3
-	bcc	.L1301
+	bcc	.L1303
 	movw	r2, #985
-	ldr	r1, .L1316+4
-	ldr	r0, .L1316+8
+	ldr	r1, .L1318+4
+	ldr	r0, .L1318+8
 	bl	printf
-.L1301:
+.L1303:
 	ldr	r3, [r4, #4]
 	add	r1, sp, #16
 	movs	r2, #1
@@ -9652,24 +9668,24 @@ FtlProgPages:
 	ldr	r3, [sp, #4]
 	mov	r7, r0
 	adds	r3, r3, #1
-	beq	.L1302
-	ldr	r3, .L1316+12
+	beq	.L1304
+	ldr	r3, .L1318+12
 	ldr	r3, [r3]
 	ldrh	r2, [r3, r0, lsl #1]
-	cbnz	r2, .L1303
+	cbnz	r2, .L1305
 	mov	r1, r0
-	ldr	r0, .L1316+16
+	ldr	r0, .L1318+16
 	bl	printf
-.L1303:
+.L1305:
 	mov	r0, r7
 	bl	decrement_vpc_count
-.L1302:
+.L1304:
 	adds	r6, r6, #1
 	adds	r4, r4, #20
-	b	.L1298
-.L1317:
+	b	.L1300
+.L1319:
 	.align	2
-.L1316:
+.L1318:
 	.word	.LANCHOR2
 	.word	.LANCHOR168
 	.word	.LC1
@@ -9690,66 +9706,66 @@ FtlGcFreeTempBlock:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r10, fp, lr}
 	movw	r3, #65535
-	ldr	r4, .L1333
+	ldr	r4, .L1335
 	ldrh	r2, [r4]
 	cmp	r2, r3
-	beq	.L1319
-	ldr	r3, .L1333+4
+	beq	.L1321
+	ldr	r3, .L1335+4
 	mov	r0, r4
 	ldrh	r1, [r3]
 	bl	FtlGcScanTempBlk
 	str	r0, [sp, #12]
-.L1319:
-	ldr	r3, .L1333+8
+.L1321:
+	ldr	r3, .L1335+8
 	movs	r2, #0
 	str	r2, [r3]
 	movw	r3, #65535
 	ldrh	r2, [r4]
 	cmp	r2, r3
-	beq	.L1321
-	ldr	r6, .L1333+4
+	beq	.L1323
+	ldr	r6, .L1335+4
 	ldrb	r0, [r4, #7]	@ zero_extendqisi2
-	ldr	r5, .L1333+12
+	ldr	r5, .L1335+12
 	ldrh	r2, [r6]
 	ldrh	r1, [r5]
 	muls	r2, r0, r2
 	cmp	r1, r2
-	beq	.L1322
+	beq	.L1324
 	movs	r2, #164
-	ldr	r1, .L1333+16
-	ldr	r0, .L1333+20
+	ldr	r1, .L1335+16
+	ldr	r0, .L1335+20
 	bl	printf
-.L1322:
+.L1324:
 	ldrh	r6, [r6]
 	ldrb	r3, [r4, #7]	@ zero_extendqisi2
-	ldr	r2, .L1333+24
+	ldr	r2, .L1335+24
 	ldrh	r0, [r4]
-	ldr	fp, .L1333+56
+	ldr	fp, .L1335+56
 	smulbb	r3, r3, r6
 	ldr	r1, [r2]
 	movs	r6, #0
 	mov	r10, r2
 	strh	r3, [r1, r0, lsl #1]	@ movhi
-	ldr	r1, .L1333+28
+	ldr	r1, .L1335+28
 	ldrh	r3, [r5]
 	ldr	r0, [r1]
 	add	r3, r3, r0
 	str	r3, [r1]
-.L1323:
+.L1325:
 	ldrh	r2, [r5]
 	uxth	r3, r6
 	cmp	r2, r3
-	bhi	.L1327
+	bhi	.L1329
 	movw	r0, #65535
 	bl	decrement_vpc_count
 	ldrh	r0, [r4]
 	ldr	r3, [r10]
 	ldrh	r3, [r3, r0, lsl #1]
 	cmp	r3, #0
-	beq	.L1328
+	beq	.L1330
 	bl	INSERT_DATA_LIST
-.L1329:
-	ldr	r2, .L1333+32
+.L1331:
+	ldr	r2, .L1335+32
 	movs	r3, #0
 	movw	r6, #65535
 	strh	r3, [r5]	@ movhi
@@ -9757,38 +9773,38 @@ FtlGcFreeTempBlock:
 	strh	r3, [r2]	@ movhi
 	bl	l2p_flush
 	bl	FtlVpcTblFlush
-	ldr	r3, .L1333+36
+	ldr	r3, .L1335+36
 	strh	r6, [r3]	@ movhi
-	ldr	r3, .L1333+40
+	ldr	r3, .L1335+40
 	ldrh	r2, [r3]
-	ldr	r3, .L1333+44
+	ldr	r3, .L1335+44
 	ldrh	r3, [r3]
 	add	r3, r3, r3, lsl #1
 	cmp	r2, r3, asr #2
 	ittt	gt
-	ldrgt	r3, .L1333+48
+	ldrgt	r3, .L1335+48
 	movgt	r2, #20
 	strhgt	r2, [r3]	@ movhi
-.L1321:
+.L1323:
 	movs	r0, #0
 	add	sp, sp, #16
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L1327:
+.L1329:
 	uxth	r3, r6
 	mov	r8, #12
 	ldr	r2, [fp]
 	mul	r8, r8, r3
-	ldr	r3, .L1333+52
+	ldr	r3, .L1335+52
 	ldr	r3, [r3]
 	add	r7, r3, r8
 	ldr	r0, [r7, #8]
 	cmp	r0, r2
-	bcc	.L1324
-.L1331:
+	bcc	.L1326
+.L1333:
 	ldrh	r0, [r4]
-	b	.L1332
-.L1324:
+	b	.L1334
+.L1326:
 	movs	r2, #0
 	add	r1, sp, #12
 	str	r3, [sp, #4]
@@ -9797,7 +9813,7 @@ FtlGcFreeTempBlock:
 	ldr	r2, [sp, #12]
 	ldr	r0, [r3, r8]
 	cmp	r0, r2
-	bne	.L1326
+	bne	.L1328
 	ubfx	r0, r0, #10, #16
 	bl	P2V_block_in_plane
 	movs	r2, #1
@@ -9806,22 +9822,22 @@ FtlGcFreeTempBlock:
 	ldr	r0, [r7, #8]
 	bl	log2phys
 	mov	r0, r8
-.L1332:
+.L1334:
 	bl	decrement_vpc_count
-	b	.L1325
-.L1326:
+	b	.L1327
+.L1328:
 	ldr	r3, [r7, #4]
 	cmp	r2, r3
-	bne	.L1331
-.L1325:
+	bne	.L1333
+.L1327:
 	adds	r6, r6, #1
-	b	.L1323
-.L1328:
+	b	.L1325
+.L1330:
 	bl	INSERT_FREE_LIST
-	b	.L1329
-.L1334:
+	b	.L1331
+.L1336:
 	.align	2
-.L1333:
+.L1335:
 	.word	.LANCHOR52
 	.word	.LANCHOR18
 	.word	.LANCHOR132
@@ -9850,27 +9866,27 @@ FtlGcPageRecovery:
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r3, r4, r5, lr}
-	ldr	r4, .L1337
-	ldr	r5, .L1337+4
+	ldr	r4, .L1339
+	ldr	r5, .L1339+4
 	ldrh	r1, [r4]
 	mov	r0, r5
 	bl	FtlGcScanTempBlk
 	ldrh	r2, [r5, #2]
 	ldrh	r3, [r4]
 	cmp	r2, r3
-	bcc	.L1335
-	ldr	r0, .L1337+8
+	bcc	.L1337
+	ldr	r0, .L1339+8
 	bl	FtlMapBlkWriteDump_data
 	movs	r0, #0
 	bl	FtlGcFreeTempBlock
-	ldr	r3, .L1337+12
+	ldr	r3, .L1339+12
 	movs	r2, #0
 	str	r2, [r3]
-.L1335:
+.L1337:
 	pop	{r3, r4, r5, pc}
-.L1338:
+.L1340:
 	.align	2
-.L1337:
+.L1339:
 	.word	.LANCHOR18
 	.word	.LANCHOR52
 	.word	.LANCHOR128
@@ -9889,13 +9905,13 @@ FtlPowerLostRecovery:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r3, r4, r5, lr}
 	movs	r4, #0
-	ldr	r5, .L1340
-	ldr	r3, .L1340+4
+	ldr	r5, .L1342
+	ldr	r3, .L1342+4
 	mov	r0, r5
 	str	r4, [r3]
 	bl	FtlRecoverySuperblock
 	mov	r0, r5
-	ldr	r5, .L1340+8
+	ldr	r5, .L1342+8
 	bl	FtlSlcSuperblockCheck
 	mov	r0, r5
 	bl	FtlRecoverySuperblock
@@ -9906,9 +9922,9 @@ FtlPowerLostRecovery:
 	bl	decrement_vpc_count
 	mov	r0, r4
 	pop	{r3, r4, r5, pc}
-.L1341:
+.L1343:
 	.align	2
-.L1340:
+.L1342:
 	.word	.LANCHOR50
 	.word	.LANCHOR156
 	.word	.LANCHOR51
@@ -9926,32 +9942,32 @@ Ftl_gc_temp_data_write_back:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r3, r4, r5, r6, r7, lr}
 	movs	r3, #0
-	ldr	r4, .L1350
+	ldr	r4, .L1352
 	movs	r6, #0
 	movs	r7, #20
 	mov	r2, r3
-	ldr	r5, .L1350+4
+	ldr	r5, .L1352+4
 	ldr	r1, [r4]
 	ldr	r0, [r5]
 	bl	FlashProgPages
-.L1343:
+.L1345:
 	ldr	r1, [r4]
 	uxth	r3, r6
 	cmp	r1, r3
-	bhi	.L1346
+	bhi	.L1348
 	ldr	r0, [r5]
 	bl	FtlGcBufFree
-	ldr	r3, .L1350+8
+	ldr	r3, .L1352+8
 	movs	r0, #0
 	str	r0, [r4]
 	ldrh	r3, [r3, #4]
-	cbnz	r3, .L1342
+	cbnz	r3, .L1344
 	movs	r0, #1
 	bl	FtlGcFreeTempBlock
 	movs	r0, #1
-.L1342:
+.L1344:
 	pop	{r3, r4, r5, r6, r7, pc}
-.L1346:
+.L1348:
 	muls	r3, r7, r3
 	ldr	r2, [r5]
 	adds	r6, r6, #1
@@ -9964,10 +9980,10 @@ Ftl_gc_temp_data_write_back:
 	ldrne	r2, [r0, #8]
 	ldr	r0, [r0, #12]
 	bl	FtlGcUpdatePage
-	b	.L1343
-.L1351:
+	b	.L1345
+.L1353:
 	.align	2
-.L1350:
+.L1352:
 	.word	.LANCHOR61
 	.word	.LANCHOR103
 	.word	.LANCHOR52
@@ -9985,34 +10001,34 @@ Ftl_get_new_temp_ppa:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r3, r4, r5, lr}
 	movw	r3, #65535
-	ldr	r4, .L1355
+	ldr	r4, .L1357
 	ldrh	r2, [r4]
 	cmp	r2, r3
-	beq	.L1353
+	beq	.L1355
 	ldrh	r3, [r4, #4]
-	cbnz	r3, .L1354
-.L1353:
+	cbnz	r3, .L1356
+.L1355:
 	movs	r0, #0
 	movs	r5, #0
 	bl	FtlGcFreeTempBlock
-	ldr	r0, .L1355
+	ldr	r0, .L1357
 	strb	r5, [r4, #8]
 	bl	allocate_data_superblock
-	ldr	r3, .L1355+4
+	ldr	r3, .L1357+4
 	strh	r5, [r3]	@ movhi
-	ldr	r3, .L1355+8
+	ldr	r3, .L1357+8
 	strh	r5, [r3]	@ movhi
 	bl	l2p_flush
 	mov	r0, r5
 	bl	FtlEctTblFlush
 	bl	FtlVpcTblFlush
-.L1354:
-	ldr	r0, .L1355
+.L1356:
+	ldr	r0, .L1357
 	pop	{r3, r4, r5, lr}
 	b	get_new_active_ppa
-.L1356:
+.L1358:
 	.align	2
-.L1355:
+.L1357:
 	.word	.LANCHOR52
 	.word	.LANCHOR68
 	.word	.LANCHOR69
@@ -10028,188 +10044,188 @@ Ftl_get_new_temp_ppa:
 rk_ftl_garbage_collect:
 	@ args = 0, pretend = 0, frame = 40
 	@ frame_needed = 0, uses_anonymous_args = 0
-	ldr	r3, .L1447
+	ldr	r3, .L1449
 	push	{r4, r5, r6, r7, r8, r10, fp, lr}
 	sub	sp, sp, #48
 	str	r0, [sp, #28]
 	ldr	r0, [r3]
 	cmp	r0, #0
-	bne	.L1414
-	ldr	r3, .L1447+4
+	bne	.L1416
+	ldr	r3, .L1449+4
 	ldrh	r3, [r3]
 	cmp	r3, #47
-	bls	.L1357
-	ldr	r3, .L1447+8
+	bls	.L1359
+	ldr	r3, .L1449+8
 	movw	r4, #65535
 	ldrh	r0, [r3]
 	cmp	r0, r4
-	beq	.L1359
-	ldr	r1, .L1447+12
+	beq	.L1361
+	ldr	r1, .L1449+12
 	ldrh	r2, [r1]
 	cmp	r2, r4
 	itt	eq
 	strheq	r0, [r1]	@ movhi
 	strheq	r2, [r3]	@ movhi
-.L1359:
+.L1361:
 	ldr	r3, [sp, #28]
 	cmp	r3, #0
-	bne	.L1416
-	ldr	r3, .L1447+16
+	bne	.L1418
+	ldr	r3, .L1449+16
 	ldrh	r3, [r3]
 	cmp	r3, #24
-	bhi	.L1417
-	ldr	r2, .L1447+20
+	bhi	.L1419
+	ldr	r2, .L1449+20
 	cmp	r3, #16
 	ldrh	r4, [r2]
-	bls	.L1362
+	bls	.L1364
 	lsrs	r4, r4, #5
-.L1361:
-	ldr	r2, .L1447+24
+.L1363:
+	ldr	r2, .L1449+24
 	ldrh	r1, [r2]
 	cmp	r1, r3
 	mov	r1, r2
-	bcs	.L1365
-	ldr	r3, .L1447+28
+	bcs	.L1367
+	ldr	r3, .L1449+28
 	movw	r0, #65535
 	ldrh	r3, [r3]
 	cmp	r3, r0
-	bne	.L1366
-	ldr	r0, .L1447+12
+	bne	.L1368
+	ldr	r0, .L1449+12
 	ldrh	r0, [r0]
 	cmp	r0, r3
-	bne	.L1366
-	ldr	r3, .L1447+32
+	bne	.L1368
+	ldr	r3, .L1449+32
 	ldrh	r0, [r3]
-	cbnz	r0, .L1367
-	ldr	r3, .L1447+36
-	ldr	r4, .L1447+40
+	cbnz	r0, .L1369
+	ldr	r3, .L1449+36
+	ldr	r4, .L1449+40
 	ldr	r3, [r3]
 	ldr	r4, [r4]
 	add	r3, r3, r3, lsl #1
 	cmp	r4, r3, lsr #2
-	bcs	.L1368
-.L1367:
-	ldr	r3, .L1447+44
+	bcs	.L1370
+.L1369:
+	ldr	r3, .L1449+44
 	ldrh	r3, [r3]
 	add	r3, r3, r3, lsl #1
 	asrs	r3, r3, #2
 	strh	r3, [r1]	@ movhi
-.L1369:
-	ldr	r3, .L1447+48
+.L1371:
+	ldr	r3, .L1449+48
 	movs	r2, #0
 	str	r2, [r3]
-.L1357:
+.L1359:
 	add	sp, sp, #48
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L1362:
+.L1364:
 	cmp	r3, #12
-	bls	.L1363
+	bls	.L1365
 	lsrs	r4, r4, #4
-	b	.L1361
-.L1363:
+	b	.L1363
+.L1365:
 	cmp	r3, #8
-	bls	.L1361
+	bls	.L1363
 	lsrs	r4, r4, #2
-	b	.L1361
-.L1417:
+	b	.L1363
+.L1419:
 	movs	r4, #1
-	b	.L1361
-.L1368:
+	b	.L1363
+.L1370:
 	movs	r3, #18
 	strh	r3, [r2]	@ movhi
-	b	.L1369
-.L1366:
-	ldr	r3, .L1447+44
+	b	.L1371
+.L1368:
+	ldr	r3, .L1449+44
 	ldrh	r3, [r3]
 	add	r3, r3, r3, lsl #1
 	asrs	r3, r3, #2
 	strh	r3, [r1]	@ movhi
-.L1365:
-	ldr	r3, .L1447+52
+.L1367:
+	ldr	r3, .L1449+52
 	ldrh	r3, [r3]
-	cbz	r3, .L1360
+	cbz	r3, .L1362
 	adds	r4, r4, #32
 	uxth	r4, r4
-.L1360:
-	ldr	r5, .L1447+56
+.L1362:
+	ldr	r5, .L1449+56
 	movw	r3, #65535
 	ldrh	r2, [r5]
 	cmp	r2, r3
-	bne	.L1372
-	ldr	r3, .L1447+12
+	bne	.L1374
+	ldr	r3, .L1449+12
 	ldrh	r1, [r3]
 	cmp	r1, r2
-	beq	.L1373
-	ldr	r0, .L1447+60
+	beq	.L1375
+	ldr	r0, .L1449+60
 	ldr	r0, [r0]
 	ldrh	r1, [r0, r1, lsl #1]
-	cbnz	r1, .L1374
+	cbnz	r1, .L1376
 	strh	r2, [r3]	@ movhi
-.L1374:
+.L1376:
 	ldrh	r2, [r3]
 	strh	r2, [r5]	@ movhi
 	movw	r2, #65535
 	strh	r2, [r3]	@ movhi
-.L1373:
+.L1375:
 	ldrh	r0, [r5]
 	movw	r6, #65535
 	movs	r3, #0
 	strb	r3, [r5, #8]
 	cmp	r0, r6
-	beq	.L1372
+	beq	.L1374
 	bl	IsBlkInGcList
-	cbz	r0, .L1376
+	cbz	r0, .L1378
 	strh	r6, [r5]	@ movhi
-.L1376:
+.L1378:
 	ldrh	r2, [r5]
 	movw	r3, #65535
 	cmp	r2, r3
-	beq	.L1372
-	ldr	r0, .L1447+56
+	beq	.L1374
+	ldr	r0, .L1449+56
 	bl	make_superblock
-	ldr	r2, .L1447+64
+	ldr	r2, .L1449+64
 	movs	r3, #0
 	strh	r3, [r5, #2]	@ movhi
 	strb	r3, [r5, #6]
 	strh	r3, [r2]	@ movhi
-	ldr	r3, .L1447+60
+	ldr	r3, .L1449+60
 	ldrh	r2, [r5]
 	ldr	r3, [r3]
 	ldrh	r2, [r3, r2, lsl #1]
-	ldr	r3, .L1447+68
+	ldr	r3, .L1449+68
 	strh	r2, [r3]	@ movhi
-.L1372:
-	ldr	r2, .L1447+72
+.L1374:
+	ldr	r2, .L1449+72
 	ldrh	r3, [r5]
 	ldrh	r2, [r2]
 	cmp	r2, r3
-	beq	.L1377
-	ldr	r2, .L1447+76
+	beq	.L1379
+	ldr	r2, .L1449+76
 	ldrh	r2, [r2]
 	cmp	r2, r3
-	beq	.L1377
-	ldr	r2, .L1447+28
+	beq	.L1379
+	ldr	r2, .L1449+28
 	ldrh	r2, [r2]
 	cmp	r2, r3
-	bne	.L1378
-.L1377:
+	bne	.L1380
+.L1379:
 	movw	r3, #65535
 	strh	r3, [r5]	@ movhi
-.L1378:
-	ldr	r5, .L1447+56
+.L1380:
+	ldr	r5, .L1449+56
 	mov	r6, r5
-.L1413:
+.L1415:
 	ldrh	r2, [r5]
 	movw	r3, #65535
 	cmp	r2, r3
-	bne	.L1379
-	ldr	fp, .L1447+88
+	bne	.L1381
+	ldr	fp, .L1449+88
 	movs	r2, #0
-	ldr	r3, .L1447+48
+	ldr	r3, .L1449+48
 	mov	r8, fp
 	str	r2, [r3]
-.L1380:
+.L1382:
 	ldrh	r7, [fp]
 	mov	r0, r7
 	bl	List_get_gc_head_node
@@ -10217,15 +10233,15 @@ rk_ftl_garbage_collect:
 	movw	r1, #65535
 	cmp	r3, r1
 	strh	r3, [r6]	@ movhi
-	bne	.L1381
+	bne	.L1383
 	movs	r3, #0
 	movs	r0, #8
 	strh	r3, [fp]	@ movhi
-	b	.L1357
-.L1416:
+	b	.L1359
+.L1418:
 	movs	r4, #1
-	b	.L1360
-.L1381:
+	b	.L1362
+.L1383:
 	str	r0, [sp, #16]
 	mov	r0, r3
 	str	r3, [sp, #12]
@@ -10233,60 +10249,60 @@ rk_ftl_garbage_collect:
 	bl	IsBlkInGcList
 	ldr	r3, [sp, #12]
 	ldr	r2, [sp, #16]
-	cbz	r0, .L1382
+	cbz	r0, .L1384
 	strh	r7, [fp]	@ movhi
-	b	.L1380
-.L1382:
+	b	.L1382
+.L1384:
 	uxth	r0, r2
-	ldr	r2, .L1447+20
-	ldr	r10, .L1447+60
+	ldr	r2, .L1449+20
+	ldr	r10, .L1449+60
 	uxth	r7, r7
 	ldrh	lr, [r2]
-	ldr	r2, .L1447+80
+	ldr	r2, .L1449+80
 	ldr	r1, [r10]
 	strh	r7, [fp]	@ movhi
 	ldrh	r2, [r2]
 	ldrh	ip, [r1, r0, lsl #1]
 	mul	r2, r2, lr
 	cmp	ip, r2, asr #1
-	bgt	.L1384
+	bgt	.L1386
 	cmp	r7, #48
-	bls	.L1385
+	bls	.L1387
 	cmp	ip, #8
-	bls	.L1385
-	ldr	r7, .L1447+84
+	bls	.L1387
+	ldr	r7, .L1449+84
 	ldrh	r7, [r7]
 	cmp	r7, #35
-	bhi	.L1385
-.L1384:
+	bhi	.L1387
+.L1386:
 	movs	r7, #0
 	strh	r7, [r8]	@ movhi
-.L1385:
+.L1387:
 	ldrh	r1, [r1, r0, lsl #1]
 	cmp	r2, r1
-	bgt	.L1386
+	bgt	.L1388
 	ldrh	r2, [r8]
 	cmp	r2, #3
-	bhi	.L1386
+	bhi	.L1388
 	movw	r3, #65535
 	strh	r3, [r6]	@ movhi
 	movs	r3, #0
 	strh	r3, [r8]	@ movhi
-.L1446:
-	ldr	r3, .L1447+32
+.L1448:
+	ldr	r3, .L1449+32
 	ldrh	r0, [r3]
-	b	.L1357
-.L1386:
-	cbnz	r1, .L1387
+	b	.L1359
+.L1388:
+	cbnz	r1, .L1389
 	movw	r0, #65535
 	bl	decrement_vpc_count
 	ldrh	r3, [r8]
 	adds	r3, r3, #1
 	strh	r3, [r8]	@ movhi
-	b	.L1380
-.L1448:
+	b	.L1382
+.L1450:
 	.align	2
-.L1447:
+.L1449:
 	.word	.LANCHOR93
 	.word	.LANCHOR43
 	.word	.LANCHOR72
@@ -10310,65 +10326,65 @@ rk_ftl_garbage_collect:
 	.word	.LANCHOR2
 	.word	.LANCHOR68
 	.word	.LANCHOR101
-.L1387:
+.L1389:
 	movs	r2, #0
 	strb	r2, [r6, #8]
-	ldr	r2, .L1449
+	ldr	r2, .L1451
 	ldrh	r2, [r2]
 	cmp	r2, r3
-	bne	.L1388
+	bne	.L1390
 	movw	r2, #717
-	ldr	r1, .L1449+4
-	ldr	r0, .L1449+8
+	ldr	r1, .L1451+4
+	ldr	r0, .L1451+8
 	bl	printf
-.L1388:
-	ldr	r3, .L1449+12
+.L1390:
+	ldr	r3, .L1451+12
 	ldrh	r2, [r6]
 	ldrh	r3, [r3]
 	cmp	r2, r3
-	bne	.L1389
+	bne	.L1391
 	movw	r2, #718
-	ldr	r1, .L1449+4
-	ldr	r0, .L1449+8
+	ldr	r1, .L1451+4
+	ldr	r0, .L1451+8
 	bl	printf
-.L1389:
-	ldr	r3, .L1449+16
+.L1391:
+	ldr	r3, .L1451+16
 	ldrh	r2, [r6]
 	ldrh	r3, [r3]
 	cmp	r2, r3
-	bne	.L1390
+	bne	.L1392
 	movw	r2, #719
-	ldr	r1, .L1449+4
-	ldr	r0, .L1449+8
+	ldr	r1, .L1451+4
+	ldr	r0, .L1451+8
 	bl	printf
-.L1390:
+.L1392:
 	mov	r0, r5
 	bl	make_superblock
-	ldr	r2, .L1449+20
+	ldr	r2, .L1451+20
 	movs	r3, #0
 	ldrh	r1, [r6]
 	strh	r3, [r2]	@ movhi
 	ldr	r2, [r10]
 	ldrh	r1, [r2, r1, lsl #1]
-	ldr	r2, .L1449+24
+	ldr	r2, .L1451+24
 	strh	r3, [r6, #2]	@ movhi
 	strb	r3, [r6, #6]
 	strh	r1, [r2]	@ movhi
-.L1379:
-	ldr	r3, .L1449+28
+.L1381:
+	ldr	r3, .L1451+28
 	movs	r2, #1
 	str	r2, [r3]
-	ldr	r3, .L1449+32
+	ldr	r3, .L1451+32
 	ldrh	r3, [r3]
 	str	r3, [sp, #16]
 	ldr	r3, [sp, #28]
-	cbz	r3, .L1391
-	ldr	r3, .L1449+36
+	cbz	r3, .L1393
+	ldr	r3, .L1451+36
 	ldr	r2, [sp, #16]
 	ldrh	r1, [r6]
 	ldrh	r3, [r3]
 	muls	r3, r2, r3
-	ldr	r2, .L1449+40
+	ldr	r2, .L1451+40
 	ldr	r2, [r2]
 	ldrh	r2, [r2, r1, lsl #1]
 	subs	r3, r3, r2
@@ -10376,10 +10392,10 @@ rk_ftl_garbage_collect:
 	addmi	r3, r3, #3
 	add	r4, r4, r3, asr #2
 	uxth	r4, r4
-.L1391:
+.L1393:
 	ldrh	r3, [r6, #2]
 	ldr	r1, [sp, #16]
-	ldr	fp, .L1449+64
+	ldr	fp, .L1451+64
 	adds	r2, r3, r4
 	cmp	r2, r1
 	itt	gt
@@ -10389,27 +10405,27 @@ rk_ftl_garbage_collect:
 	it	gt
 	uxthgt	r4, r4
 	str	r3, [sp, #24]
-.L1394:
+.L1396:
 	ldrh	r3, [sp, #24]
 	cmp	r4, r3
-	bls	.L1402
-	ldr	r3, .L1449+36
+	bls	.L1404
+	ldr	r3, .L1451+36
 	movw	r10, #65535
 	ldrh	r1, [r5, #2]
 	mov	ip, #20
 	ldr	r0, [fp]
 	ldrh	lr, [r3]
 	ldr	r3, [sp, #24]
-	ldr	r7, .L1449+44
+	ldr	r7, .L1451+44
 	adds	r3, r1, r3
 	str	r3, [sp, #20]
 	movs	r3, #0
 	str	r3, [sp, #12]
-	b	.L1403
-.L1396:
+	b	.L1405
+.L1398:
 	ldrh	r2, [r7, #2]!
 	cmp	r2, r10
-	beq	.L1395
+	beq	.L1397
 	ldr	r1, [sp, #12]
 	mla	r8, ip, r1, r0
 	ldr	r1, [sp, #20]
@@ -10419,27 +10435,27 @@ rk_ftl_garbage_collect:
 	adds	r2, r2, #1
 	uxth	r2, r2
 	str	r2, [sp, #12]
-.L1395:
+.L1397:
 	adds	r3, r3, #1
-.L1403:
+.L1405:
 	uxth	r2, r3
 	cmp	lr, r2
-	bhi	.L1396
+	bhi	.L1398
 	ldrb	r2, [r5, #8]	@ zero_extendqisi2
 	ldr	r1, [sp, #12]
 	bl	FlashReadPages
 	movs	r3, #0
-.L1445:
+.L1447:
 	str	r3, [sp, #20]
 	ldr	r2, [sp, #12]
 	ldrh	r3, [sp, #20]
 	cmp	r2, r3
-	bhi	.L1401
+	bhi	.L1403
 	ldr	r3, [sp, #24]
 	adds	r3, r3, #1
 	str	r3, [sp, #24]
-	b	.L1394
-.L1401:
+	b	.L1396
+.L1403:
 	ldr	r3, [sp, #20]
 	movs	r7, #20
 	muls	r7, r3, r7
@@ -10447,20 +10463,20 @@ rk_ftl_garbage_collect:
 	adds	r2, r3, r7
 	ldr	r3, [r3, r7]
 	adds	r3, r3, #1
-	beq	.L1398
+	beq	.L1400
 	ldr	r8, [r2, #12]
 	movw	r3, #61589
 	ldrh	r2, [r8]
 	cmp	r2, r3
-	bne	.L1398
+	bne	.L1400
 	ldr	r10, [r8, #8]
 	cmp	r10, #-1
-	bne	.L1399
+	bne	.L1401
 	movw	r2, #753
-	ldr	r1, .L1449+4
-	ldr	r0, .L1449+8
+	ldr	r1, .L1451+4
+	ldr	r0, .L1451+8
 	bl	printf
-.L1399:
+.L1401:
 	movs	r2, #0
 	add	r1, sp, #40
 	mov	r0, r10
@@ -10470,10 +10486,10 @@ rk_ftl_garbage_collect:
 	add	r0, r0, r7
 	ldr	r2, [r0, #4]
 	cmp	r2, r3
-	bne	.L1398
-	ldr	r2, .L1449+20
-	ldr	r10, .L1449+60
-	ldr	r1, .L1449+48
+	bne	.L1400
+	ldr	r2, .L1451+20
+	ldr	r10, .L1451+60
+	ldr	r1, .L1451+48
 	ldrh	r3, [r2]
 	str	r1, [sp, #36]
 	adds	r3, r3, #1
@@ -10495,7 +10511,7 @@ rk_ftl_garbage_collect:
 	ldr	r0, [fp]
 	mla	r2, r1, r3, r2
 	add	r0, r0, r7
-	ldr	r7, .L1449+16
+	ldr	r7, .L1451+16
 	ldr	r1, [r0, #8]
 	adds	r3, r3, #1
 	str	r1, [r2, #8]
@@ -10506,7 +10522,7 @@ rk_ftl_garbage_collect:
 	str	r2, [r8, #12]
 	ldrh	r2, [r7]
 	strh	r2, [r8, #2]	@ movhi
-	ldr	r2, .L1449+52
+	ldr	r2, .L1451+52
 	str	r3, [r10]
 	ldr	r2, [r2]
 	str	r2, [r8, #4]
@@ -10514,44 +10530,44 @@ rk_ftl_garbage_collect:
 	ldrb	r2, [r7, #7]	@ zero_extendqisi2
 	ldr	r3, [r10]
 	cmp	r2, r3
-	beq	.L1400
+	beq	.L1402
 	ldrh	r3, [r7, #4]
-	cbnz	r3, .L1398
-.L1400:
+	cbnz	r3, .L1400
+.L1402:
 	bl	Ftl_gc_temp_data_write_back
-	cbz	r0, .L1398
-	ldr	r3, .L1449+28
+	cbz	r0, .L1400
+	ldr	r3, .L1451+28
 	movs	r2, #0
 	movw	r1, #65535
 	str	r2, [r3]
-	ldr	r3, .L1449+56
+	ldr	r3, .L1451+56
 	strh	r1, [r3]	@ movhi
 	strh	r2, [r3, #2]	@ movhi
-	b	.L1446
-.L1398:
+	b	.L1448
+.L1400:
 	ldr	r3, [sp, #20]
 	adds	r3, r3, #1
-	b	.L1445
-.L1402:
+	b	.L1447
+.L1404:
 	ldrh	r3, [r5, #2]
 	add	r4, r4, r3
 	ldr	r3, [sp, #16]
 	uxth	r4, r4
 	cmp	r3, r4
 	strh	r4, [r5, #2]	@ movhi
-	bhi	.L1404
-	ldr	r3, .L1449+60
+	bhi	.L1406
+	ldr	r3, .L1451+60
 	ldr	r3, [r3]
-	cbz	r3, .L1405
+	cbz	r3, .L1407
 	bl	Ftl_gc_temp_data_write_back
-	cbz	r0, .L1405
-	ldr	r3, .L1449+28
+	cbz	r0, .L1407
+	ldr	r3, .L1451+28
 	movs	r2, #0
 	str	r2, [r3]
-	b	.L1446
-.L1450:
+	b	.L1448
+.L1452:
 	.align	2
-.L1449:
+.L1451:
 	.word	.LANCHOR50
 	.word	.LANCHOR174
 	.word	.LC1
@@ -10569,50 +10585,50 @@ rk_ftl_garbage_collect:
 	.word	.LANCHOR144
 	.word	.LANCHOR61
 	.word	.LANCHOR65
-.L1405:
-	ldr	r3, .L1451
+.L1407:
+	ldr	r3, .L1453
 	ldrh	r4, [r3]
 	cmp	r4, #0
-	bne	.L1406
-	ldr	r8, .L1451+28
+	bne	.L1408
+	ldr	r8, .L1453+28
 	ldrh	r1, [r5]
 	ldr	r3, [r8]
 	ldrh	r3, [r3, r1, lsl #1]
 	cmp	r3, #0
-	beq	.L1406
-	ldr	r0, .L1451+4
-	ldr	r10, .L1451+32
+	beq	.L1408
+	ldr	r0, .L1453+4
+	ldr	r10, .L1453+32
 	ldrh	r2, [r5, #2]
 	ldrh	r0, [r0]
 	str	r3, [sp]
 	mov	r3, r4
 	str	r0, [sp, #4]
-	ldr	r0, .L1451+8
+	ldr	r0, .L1453+8
 	bl	printf
-.L1407:
+.L1409:
 	ldr	r3, [r10]
 	cmp	r4, r3
-	bcs	.L1409
+	bcs	.L1411
 	movs	r2, #0
 	add	r1, sp, #44
 	mov	r0, r4
 	bl	log2phys
 	ldr	r7, [sp, #44]
 	adds	r3, r7, #1
-	beq	.L1408
+	beq	.L1410
 	ubfx	r0, r7, #10, #16
 	bl	P2V_block_in_plane
 	ldrh	r3, [r5]
 	cmp	r3, r0
-	bne	.L1408
+	bne	.L1410
 	mov	r2, r7
 	mov	r1, r4
-	ldr	r0, .L1451+12
+	ldr	r0, .L1453+12
 	bl	printf
-.L1409:
+.L1411:
 	ldr	r3, [r10]
 	cmp	r4, r3
-	bcc	.L1406
+	bcc	.L1408
 	ldrh	r2, [r5]
 	movs	r1, #0
 	ldr	r3, [r8]
@@ -10621,32 +10637,32 @@ rk_ftl_garbage_collect:
 	bl	update_vpc_list
 	bl	l2p_flush
 	bl	FtlVpcTblFlush
-.L1406:
+.L1408:
 	movw	r3, #65535
 	strh	r3, [r5]	@ movhi
-.L1404:
-	ldr	r3, .L1451+16
+.L1406:
+	ldr	r3, .L1453+16
 	movs	r2, #0
 	str	r2, [r3]
-	ldr	r3, .L1451+20
+	ldr	r3, .L1453+20
 	ldrh	r0, [r3]
 	cmp	r0, #2
-	bhi	.L1412
-	ldr	r3, .L1451+24
+	bhi	.L1414
+	ldr	r3, .L1453+24
 	ldrh	r4, [r3]
-	b	.L1413
-.L1408:
+	b	.L1415
+.L1410:
 	adds	r4, r4, #1
-	b	.L1407
-.L1412:
-	adds	r0, r0, #1
-	b	.L1357
+	b	.L1409
 .L1414:
+	adds	r0, r0, #1
+	b	.L1359
+.L1416:
 	movs	r0, #0
-	b	.L1357
-.L1452:
+	b	.L1359
+.L1454:
 	.align	2
-.L1451:
+.L1453:
 	.word	.LANCHOR172
 	.word	.LANCHOR173
 	.word	.LC42
@@ -10674,34 +10690,34 @@ FtlRead:
 	mov	r5, r1
 	mov	r10, r3
 	str	r2, [sp, #4]
-	bne	.L1454
+	bne	.L1456
 	mov	r2, r3
 	ldr	r1, [sp, #4]
 	add	r0, r5, #256
 	bl	FtlVendorPartRead
 	mov	r4, r0
-.L1453:
+.L1455:
 	mov	r0, r4
 	add	sp, sp, #56
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L1454:
-	ldr	r3, .L1488
+.L1456:
+	ldr	r3, .L1490
 	ldr	r3, [r3]
 	cmp	r1, r3
-	bcs	.L1477
+	bcs	.L1479
 	ldr	r2, [sp, #4]
 	cmp	r2, r3
-	bhi	.L1477
+	bhi	.L1479
 	adds	r2, r1, r2
 	cmp	r3, r2
 	str	r2, [sp, #12]
-	bcc	.L1477
-	ldr	r3, .L1488+4
+	bcc	.L1479
+	ldr	r3, .L1490+4
 	ldr	r4, [r3]
 	adds	r6, r4, #1
-	beq	.L1453
-	ldr	r3, .L1488+8
+	beq	.L1455
+	ldr	r3, .L1490+8
 	mov	r0, r5
 	mov	r8, #0
 	mov	r7, r8
@@ -10715,7 +10731,7 @@ FtlRead:
 	subs	r0, r3, #1
 	bl	__aeabi_uidiv
 	ldr	r3, [sp, #16]
-	ldr	r2, .L1488+12
+	ldr	r2, .L1490+12
 	ldr	r1, [sp, #4]
 	rsb	r3, r3, #1
 	ldr	r6, [sp, #16]
@@ -10728,53 +10744,53 @@ FtlRead:
 	add	r3, r3, r1
 	ldr	r1, [sp, #8]
 	str	r3, [r2]
-	ldr	r2, .L1488+16
+	ldr	r2, .L1490+16
 	ldr	r3, [r2]
 	add	r3, r3, r1
 	str	r3, [r2]
-.L1456:
+.L1458:
 	ldr	r3, [sp, #8]
-	cbnz	r3, .L1473
-	ldr	r3, .L1488+20
+	cbnz	r3, .L1475
+	ldr	r3, .L1490+20
 	ldrh	r3, [r3]
-	cbnz	r3, .L1474
-	ldr	r3, .L1488+24
+	cbnz	r3, .L1476
+	ldr	r3, .L1490+24
 	ldrh	r3, [r3]
 	cmp	r3, #31
-	bhi	.L1453
-.L1474:
+	bhi	.L1455
+.L1476:
 	movs	r1, #1
 	movs	r0, #0
 	bl	rk_ftl_garbage_collect
-	b	.L1453
-.L1473:
+	b	.L1455
+.L1475:
 	movs	r2, #0
 	add	r1, sp, #52
 	mov	r0, r6
 	bl	log2phys
 	ldr	r3, [sp, #52]
 	adds	r0, r3, #1
-	bne	.L1457
-	ldr	r3, .L1488+8
+	bne	.L1459
+	ldr	r3, .L1490+8
 	mov	fp, #0
-.L1458:
+.L1460:
 	ldrh	r0, [r3]
 	cmp	fp, r0
-	bcc	.L1460
-.L1461:
+	bcc	.L1462
+.L1463:
 	ldr	r3, [sp, #8]
 	adds	r6, r6, #1
 	subs	r3, r3, #1
 	str	r3, [sp, #8]
-	beq	.L1465
-	ldr	r3, .L1488+28
+	beq	.L1467
+	ldr	r3, .L1490+28
 	ldrh	r3, [r3]
 	cmp	r7, r3, lsl #2
-	bne	.L1456
-.L1465:
+	bne	.L1458
+.L1467:
 	cmp	r7, #0
-	beq	.L1456
-	ldr	r3, .L1488+32
+	beq	.L1458
+	ldr	r3, .L1490+32
 	movs	r2, #0
 	mov	r1, r7
 	mov	fp, #0
@@ -10788,31 +10804,31 @@ FtlRead:
 	ldr	r3, [sp, #28]
 	lsls	r3, r3, #9
 	str	r3, [sp, #40]
-.L1472:
+.L1474:
 	movs	r3, #20
 	mul	r3, r3, fp
 	str	r3, [sp, #32]
-	ldr	r3, .L1488+32
+	ldr	r3, .L1490+32
 	ldr	r2, [r3]
 	ldr	r3, [sp, #32]
 	add	r2, r2, r3
 	ldr	r3, [sp, #16]
 	ldr	r1, [r2, #16]
 	cmp	r3, r1
-	bne	.L1467
+	bne	.L1469
 	ldr	r1, [r2, #8]
-	ldr	r2, .L1488+36
+	ldr	r2, .L1490+36
 	ldr	r2, [r2]
 	cmp	r1, r2
-	bne	.L1468
+	bne	.L1470
 	ldr	r3, [sp, #36]
 	mov	r0, r10
 	ldr	r2, [sp, #40]
 	add	r1, r1, r3
-.L1487:
+.L1489:
 	bl	ftl_memcpy
-.L1468:
-	ldr	r3, .L1488+32
+.L1470:
+	ldr	r3, .L1490+32
 	ldr	r2, [sp, #32]
 	ldr	r3, [r3]
 	adds	r2, r3, r2
@@ -10821,32 +10837,32 @@ FtlRead:
 	ldr	r0, [r0, #8]
 	cmp	r1, r0
 	itttt	ne
-	ldrne	r0, .L1488+40
+	ldrne	r0, .L1490+40
 	ldrne	r1, [r0, #72]
 	addne	r1, r1, #1
 	strne	r1, [r0, #72]
 	ldr	r1, [sp, #32]
 	ldr	r3, [r3, r1]
 	adds	r1, r3, #1
-	bne	.L1470
-	ldr	r1, .L1488+40
+	bne	.L1472
+	ldr	r1, .L1490+40
 	mov	r4, r3
 	ldr	r2, [r1, #72]
 	adds	r2, r2, #1
 	str	r2, [r1, #72]
-.L1471:
+.L1473:
 	add	fp, fp, #1
 	cmp	r7, fp
-	bne	.L1472
+	bne	.L1474
 	movs	r7, #0
-	b	.L1456
-.L1460:
+	b	.L1458
+.L1462:
 	mla	r0, r0, r6, fp
 	cmp	r5, r0
-	bhi	.L1459
+	bhi	.L1461
 	ldr	r2, [sp, #12]
 	cmp	r2, r0
-	bls	.L1459
+	bls	.L1461
 	subs	r0, r0, r5
 	mov	r2, #512
 	movs	r1, #0
@@ -10854,20 +10870,20 @@ FtlRead:
 	str	r3, [sp, #32]
 	bl	ftl_memset
 	ldr	r3, [sp, #32]
-.L1459:
+.L1461:
 	add	fp, fp, #1
-	b	.L1458
-.L1457:
-	ldr	r2, .L1488+32
+	b	.L1460
+.L1459:
+	ldr	r2, .L1490+32
 	mov	fp, #20
 	ldr	r2, [r2]
 	mla	fp, fp, r7, r2
 	str	r3, [fp, #4]
 	ldr	r3, [sp, #16]
 	cmp	r6, r3
-	ldr	r3, .L1488+8
-	bne	.L1462
-	ldr	r2, .L1488+36
+	ldr	r3, .L1490+8
+	bne	.L1464
+	ldr	r2, .L1490+36
 	mov	r0, r5
 	ldrh	r3, [r3]
 	ldr	r2, [r2]
@@ -10884,11 +10900,11 @@ FtlRead:
 	movcs	r2, r1
 	cmp	r3, r2
 	str	r2, [sp, #28]
-	bne	.L1463
+	bne	.L1465
 	str	r10, [fp, #8]
-.L1463:
-	ldr	r3, .L1488+44
-	ldr	r2, .L1488+48
+.L1465:
+	ldr	r3, .L1490+44
+	ldr	r2, .L1490+48
 	str	r6, [fp, #16]
 	ldrh	r3, [r3]
 	ldr	r2, [r2]
@@ -10897,12 +10913,12 @@ FtlRead:
 	bic	r3, r3, #3
 	add	r3, r3, r2
 	str	r3, [fp, #12]
-	b	.L1461
-.L1462:
+	b	.L1463
+.L1464:
 	ldr	r2, [sp, #20]
 	cmp	r6, r2
-	bne	.L1464
-	ldr	r2, .L1488+52
+	bne	.L1466
+	ldr	r2, .L1490+52
 	ldr	r1, [sp, #12]
 	ldr	r2, [r2]
 	str	r2, [fp, #8]
@@ -10910,47 +10926,47 @@ FtlRead:
 	mul	r3, r2, r6
 	sub	r8, r1, r3
 	cmp	r2, r8
-	bne	.L1463
-.L1486:
+	bne	.L1465
+.L1488:
 	subs	r3, r3, r5
 	add	r3, r10, r3, lsl #9
 	str	r3, [fp, #8]
-	b	.L1463
-.L1464:
+	b	.L1465
+.L1466:
 	ldrh	r3, [r3]
 	muls	r3, r6, r3
-	b	.L1486
-.L1467:
+	b	.L1488
+.L1469:
 	ldr	r3, [sp, #20]
 	cmp	r3, r1
-	bne	.L1468
-	ldr	r3, .L1488+52
+	bne	.L1470
+	ldr	r3, .L1490+52
 	ldr	r1, [r2, #8]
 	ldr	r2, [r3]
 	cmp	r1, r2
-	bne	.L1468
-	ldr	r2, .L1488+8
+	bne	.L1470
+	ldr	r2, .L1490+8
 	ldr	r3, [sp, #20]
 	ldrh	r0, [r2]
 	ldr	r2, [sp, #44]
 	muls	r0, r3, r0
 	subs	r0, r0, r5
 	add	r0, r10, r0, lsl #9
-	b	.L1487
-.L1470:
+	b	.L1489
+.L1472:
 	cmp	r3, #256
-	bne	.L1471
+	bne	.L1473
 	ldr	r0, [r2, #4]
 	ubfx	r0, r0, #10, #16
 	bl	P2V_block_in_plane
 	bl	FtlGcRefreshBlock
-	b	.L1471
-.L1477:
+	b	.L1473
+.L1479:
 	mov	r4, #-1
-	b	.L1453
-.L1489:
+	b	.L1455
+.L1491:
 	.align	2
-.L1488:
+.L1490:
 	.word	.LANCHOR33
 	.word	.LANCHOR165
 	.word	.LANCHOR11
@@ -11001,36 +11017,36 @@ FtlWrite:
 	mov	r10, r1
 	str	r2, [sp, #16]
 	str	r3, [sp, #20]
-	bne	.L1492
+	bne	.L1494
 	mov	r2, r3
 	ldr	r1, [sp, #16]
 	add	r0, r10, #256
 	bl	FtlVendorPartWrite
-.L1491:
+.L1493:
 	add	sp, sp, #72
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L1492:
-	ldr	r3, .L1538
+.L1494:
+	ldr	r3, .L1540
 	ldr	r3, [r3]
 	cmp	r1, r3
-	bcs	.L1527
+	bcs	.L1529
 	ldr	r2, [sp, #16]
 	cmp	r2, r3
-	bhi	.L1527
+	bhi	.L1529
 	adds	r4, r1, r2
 	cmp	r3, r4
-	bcc	.L1527
-	ldr	r3, .L1538+4
+	bcc	.L1529
+	ldr	r3, .L1540+4
 	ldr	r0, [r3]
 	adds	r1, r0, #1
-	beq	.L1491
-	ldr	r3, .L1538+8
+	beq	.L1493
+	ldr	r3, .L1540+8
 	mov	r2, #2048
 	mov	r0, r10
-	ldr	r7, .L1538+12
+	ldr	r7, .L1540+12
 	str	r2, [r3]
-	ldr	r3, .L1538+16
+	ldr	r3, .L1540+16
 	ldrh	r5, [r3]
 	mov	r1, r5
 	bl	__aeabi_uidiv
@@ -11042,7 +11058,7 @@ FtlWrite:
 	ldr	r1, [sp, #16]
 	ldr	r5, [sp, #12]
 	subs	r3, r0, r2
-	ldr	r2, .L1538+20
+	ldr	r2, .L1540+20
 	str	r3, [sp, #32]
 	adds	r3, r3, #1
 	str	r3, [sp, #8]
@@ -11051,39 +11067,39 @@ FtlWrite:
 	add	r3, r3, r1
 	ldr	r1, [sp, #8]
 	str	r3, [r2]
-	ldr	r2, .L1538+24
+	ldr	r2, .L1540+24
 	ldr	r3, [r2]
 	add	r3, r3, r1
 	str	r3, [r2]
-.L1494:
+.L1496:
 	ldr	r3, [sp, #8]
-	cbnz	r3, .L1520
-	ldr	r5, .L1538+28
+	cbnz	r3, .L1522
+	ldr	r5, .L1540+28
 	mov	r0, r3
 	ldr	r1, [sp, #32]
 	bl	rk_ftl_garbage_collect
 	ldrh	r2, [r5]
 	cmp	r2, #5
-	bls	.L1521
-.L1523:
+	bls	.L1523
+.L1525:
 	movs	r0, #0
-	b	.L1491
-.L1520:
-	ldr	r4, .L1538+32
+	b	.L1493
+.L1522:
+	ldr	r4, .L1540+32
 	ldrb	r2, [r7, #6]	@ zero_extendqisi2
 	ldrh	r3, [r4]
 	cmp	r2, r3
-	bcc	.L1495
+	bcc	.L1497
 	movw	r2, #1041
-	ldr	r1, .L1538+36
-	ldr	r0, .L1538+40
+	ldr	r1, .L1540+36
+	ldr	r0, .L1540+40
 	bl	printf
-.L1495:
+.L1497:
 	ldrh	r3, [r7, #4]
-	cbnz	r3, .L1496
+	cbnz	r3, .L1498
 	mov	r0, r7
 	bl	allocate_new_data_superblock
-.L1496:
+.L1498:
 	ldrb	r3, [r7, #7]	@ zero_extendqisi2
 	ldrh	r2, [r7, #4]
 	lsls	r3, r3, #2
@@ -11098,22 +11114,22 @@ FtlWrite:
 	str	r3, [sp, #44]
 	ldrh	r3, [r4]
 	cmp	r2, r3
-	bcc	.L1497
+	bcc	.L1499
 	movw	r2, #1074
-	ldr	r1, .L1538+36
-	ldr	r0, .L1538+40
+	ldr	r1, .L1540+36
+	ldr	r0, .L1540+40
 	bl	printf
-.L1497:
-	ldr	r8, .L1538+44
+.L1499:
+	ldr	r8, .L1540+44
 	movs	r3, #0
 	str	r3, [sp, #4]
-.L1498:
+.L1500:
 	ldr	r3, [sp, #4]
 	ldr	r2, [sp, #44]
 	cmp	r3, r2
-	bne	.L1518
-.L1499:
-	ldr	r0, .L1538+44
+	bne	.L1520
+.L1501:
+	ldr	r0, .L1540+44
 	mov	r3, r7
 	movs	r2, #0
 	ldr	r1, [sp, #4]
@@ -11122,21 +11138,21 @@ FtlWrite:
 	ldr	r3, [sp, #4]
 	ldr	r2, [sp, #8]
 	cmp	r3, r2
-	bls	.L1519
+	bls	.L1521
 	mov	r2, #1152
-	ldr	r1, .L1538+36
-	ldr	r0, .L1538+40
+	ldr	r1, .L1540+36
+	ldr	r0, .L1540+40
 	bl	printf
-.L1519:
+.L1521:
 	ldr	r3, [sp, #8]
 	ldr	r2, [sp, #4]
 	subs	r3, r3, r2
 	str	r3, [sp, #8]
-	b	.L1494
-.L1518:
+	b	.L1496
+.L1520:
 	ldrh	r3, [r7, #4]
 	cmp	r3, #0
-	beq	.L1499
+	beq	.L1501
 	movs	r2, #0
 	add	r1, sp, #48
 	mov	r0, r5
@@ -11144,7 +11160,7 @@ FtlWrite:
 	bl	log2phys
 	mov	r0, r7
 	bl	get_new_active_ppa
-	ldr	r2, .L1538+48
+	ldr	r2, .L1540+48
 	ldr	r1, [sp, #4]
 	ldr	r3, [sp, #4]
 	ldrh	r2, [r2]
@@ -11156,7 +11172,7 @@ FtlWrite:
 	bic	r1, r1, #3
 	str	r5, [r3, #16]
 	str	r1, [sp, #36]
-	ldr	r1, .L1538+52
+	ldr	r1, .L1540+52
 	ldr	r0, [sp, #36]
 	ldr	r1, [r1]
 	add	fp, r1, r0
@@ -11166,12 +11182,12 @@ FtlWrite:
 	mov	r0, fp
 	bl	ftl_memset
 	ldr	r3, [sp, #12]
-	ldr	r2, .L1538+16
+	ldr	r2, .L1540+16
 	cmp	r5, r3
-	beq	.L1500
+	beq	.L1502
 	ldr	r3, [sp, #28]
 	cmp	r5, r3
-	bne	.L1533
+	bne	.L1535
 	ldrh	r2, [r2]
 	ldr	r3, [sp, #16]
 	smulbb	r2, r2, r5
@@ -11180,8 +11196,8 @@ FtlWrite:
 	str	r3, [sp, #24]
 	subs	r4, r4, r2
 	uxth	r4, r4
-	b	.L1503
-.L1500:
+	b	.L1505
+.L1502:
 	ldrh	r4, [r2]
 	mov	r0, r10
 	mov	r1, r4
@@ -11192,42 +11208,42 @@ FtlWrite:
 	cmp	r4, r3
 	it	cs
 	movcs	r4, r3
-.L1503:
-	ldr	r3, .L1538+16
+.L1505:
+	ldr	r3, .L1540+16
 	ldrh	r3, [r3]
 	cmp	r4, r3
 	ldr	r3, [sp, #12]
-	bne	.L1504
+	bne	.L1506
 	cmp	r5, r3
 	ldr	r3, [r8]
 	add	r6, r6, r3
-	bne	.L1505
+	bne	.L1507
 	ldr	r3, [sp, #20]
-.L1535:
+.L1537:
 	str	r3, [r6, #8]
-	b	.L1506
-.L1505:
+	b	.L1508
+.L1507:
 	muls	r4, r5, r4
 	ldr	r3, [sp, #20]
 	sub	r4, r4, r10
 	add	r4, r3, r4, lsl #9
 	str	r4, [r6, #8]
-.L1506:
-	ldr	r3, .L1538+32
+.L1508:
+	ldr	r3, .L1540+32
 	ldrb	r2, [r7, #6]	@ zero_extendqisi2
 	ldrh	r3, [r3]
 	cmp	r2, r3
-	bcc	.L1515
+	bcc	.L1517
 	movw	r2, #1143
-	ldr	r1, .L1538+36
-	ldr	r0, .L1538+40
+	ldr	r1, .L1540+36
+	ldr	r0, .L1540+40
 	bl	printf
-.L1515:
+.L1517:
 	ldr	r2, [sp, #40]
 	movw	r3, #61589
 	ldr	r1, [sp, #36]
 	strh	r3, [r2, r1]	@ movhi
-	ldr	r2, .L1538+56
+	ldr	r2, .L1540+56
 	str	r5, [fp, #8]
 	adds	r5, r5, #1
 	ldr	r3, [r2]
@@ -11244,19 +11260,19 @@ FtlWrite:
 	ldr	r3, [sp, #4]
 	adds	r3, r3, #1
 	str	r3, [sp, #4]
-	b	.L1498
-.L1504:
+	b	.L1500
+.L1506:
 	cmp	r5, r3
 	ldr	r3, [r8]
 	ite	eq
-	ldreq	r2, .L1538+60
-	ldrne	r2, .L1538+64
+	ldreq	r2, .L1540+60
+	ldrne	r2, .L1540+64
 	add	r3, r3, r6
 	ldr	r2, [r2]
 	str	r2, [r3, #8]
 	ldr	r3, [sp, #48]
 	adds	r2, r3, #1
-	beq	.L1509
+	beq	.L1511
 	str	r3, [sp, #56]
 	movs	r1, #1
 	ldr	r3, [r8]
@@ -11271,52 +11287,52 @@ FtlWrite:
 	bl	FlashReadPages
 	ldr	r3, [sp, #52]
 	adds	r0, r3, #1
-	bne	.L1510
-	ldr	r1, .L1538+68
-	ldr	r0, .L1538+72
+	bne	.L1512
+	ldr	r1, .L1540+68
+	ldr	r0, .L1540+72
 	ldr	r2, [r1, #72]
 	adds	r2, r2, #1
 	str	r2, [r1, #72]
 	mov	r2, r5
 	ldr	r1, [fp, #8]
 	bl	printf
-.L1513:
+.L1515:
 	ldr	r3, [sp, #12]
 	lsls	r2, r4, #9
 	cmp	r5, r3
-	bne	.L1514
+	bne	.L1516
 	ldr	r3, [r8]
 	ldr	r1, [sp, #20]
 	add	r6, r6, r3
 	ldr	r3, [sp, #24]
 	ldr	r0, [r6, #8]
 	add	r0, r0, r3, lsl #9
-.L1536:
+.L1538:
 	bl	ftl_memcpy
-	b	.L1506
-.L1510:
+	b	.L1508
+.L1512:
 	ldr	r1, [fp, #8]
 	cmp	r5, r1
-	beq	.L1512
-	ldr	r2, .L1538+68
-	ldr	r0, .L1538+76
+	beq	.L1514
+	ldr	r2, .L1540+68
+	ldr	r0, .L1540+76
 	ldr	r3, [r2, #72]
 	adds	r3, r3, #1
 	str	r3, [r2, #72]
 	mov	r2, r5
 	bl	printf
-.L1512:
+.L1514:
 	ldr	r3, [fp, #8]
 	cmp	r5, r3
-	beq	.L1513
+	beq	.L1515
 	mov	r2, #1128
-	ldr	r1, .L1538+36
-	ldr	r0, .L1538+40
+	ldr	r1, .L1540+36
+	ldr	r0, .L1540+40
 	bl	printf
-	b	.L1513
-.L1539:
+	b	.L1515
+.L1541:
 	.align	2
-.L1538:
+.L1540:
 	.word	.LANCHOR33
 	.word	.LANCHOR165
 	.word	.LANCHOR175
@@ -11337,17 +11353,17 @@ FtlWrite:
 	.word	.LANCHOR134
 	.word	.LC44
 	.word	.LC45
-.L1509:
+.L1511:
 	ldr	r3, [r8]
 	movs	r1, #0
-	ldr	r2, .L1540
+	ldr	r2, .L1542
 	add	r3, r3, r6
 	ldrh	r2, [r2]
 	ldr	r0, [r3, #8]
 	bl	ftl_memset
-	b	.L1513
-.L1514:
-	ldr	r3, .L1540+4
+	b	.L1515
+.L1516:
+	ldr	r3, .L1542+4
 	ldrh	r1, [r3]
 	ldr	r3, [r8]
 	muls	r1, r5, r1
@@ -11356,8 +11372,8 @@ FtlWrite:
 	ldr	r0, [r6, #8]
 	sub	r1, r1, r10
 	add	r1, r3, r1, lsl #9
-	b	.L1536
-.L1533:
+	b	.L1538
+.L1535:
 	ldr	r3, [r8]
 	add	r6, r6, r3
 	ldrh	r3, [r2]
@@ -11365,30 +11381,30 @@ FtlWrite:
 	muls	r3, r5, r3
 	sub	r3, r3, r10
 	add	r3, r2, r3, lsl #9
-	b	.L1535
-.L1521:
-	ldr	r6, .L1540+8
+	b	.L1537
+.L1523:
+	ldr	r6, .L1542+8
 	mov	r4, #256
-	ldr	r7, .L1540+12
-.L1524:
+	ldr	r7, .L1542+12
+.L1526:
 	ldrh	r3, [r6]
 	movw	r2, #65535
 	cmp	r3, r2
-	bne	.L1522
+	bne	.L1524
 	ldrh	r2, [r7]
 	cmp	r2, r3
-	bne	.L1522
+	bne	.L1524
 	movs	r0, #0
 	bl	List_get_gc_head_node
 	uxth	r0, r0
 	bl	FtlGcRefreshBlock
-.L1522:
-	ldr	r2, .L1540+16
+.L1524:
+	ldr	r2, .L1542+16
 	movs	r3, #128
 	movs	r1, #1
 	mov	r0, r1
 	strh	r3, [r2]	@ movhi
-	ldr	r2, .L1540+20
+	ldr	r2, .L1542+20
 	strh	r3, [r2]	@ movhi
 	bl	rk_ftl_garbage_collect
 	movs	r1, #1
@@ -11396,16 +11412,16 @@ FtlWrite:
 	bl	rk_ftl_garbage_collect
 	ldrh	r3, [r5]
 	cmp	r3, #2
-	bhi	.L1523
+	bhi	.L1525
 	subs	r4, r4, #1
-	bne	.L1524
-	b	.L1523
-.L1527:
+	bne	.L1526
+	b	.L1525
+.L1529:
 	mov	r0, #-1
-	b	.L1491
-.L1541:
+	b	.L1493
+.L1543:
 	.align	2
-.L1540:
+.L1542:
 	.word	.LANCHOR22
 	.word	.LANCHOR11
 	.word	.LANCHOR144
@@ -11442,16 +11458,16 @@ FtlLoadSysInfo:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r4, r5, r6, r7, r8, r10, fp, lr}
 	movs	r1, #0
-	ldr	r8, .L1573+140
+	ldr	r8, .L1575+140
 	sub	sp, sp, #24
-	ldr	r7, .L1573
+	ldr	r7, .L1575
 	ldr	r3, [r8]
-	ldr	r4, .L1573+4
-	ldr	fp, .L1573+144
+	ldr	r4, .L1575+4
+	ldr	fp, .L1575+144
 	ldrh	r2, [r7]
-	ldr	r5, .L1573+8
+	ldr	r5, .L1575+8
 	str	r3, [r4, #8]
-	ldr	r6, .L1573+12
+	ldr	r6, .L1575+12
 	ldr	r3, [fp]
 	lsls	r2, r2, #1
 	ldr	r0, [r5]
@@ -11461,33 +11477,33 @@ FtlLoadSysInfo:
 	movw	r3, #65535
 	str	r5, [sp, #16]
 	cmp	r0, r3
-	bne	.L1544
-.L1555:
+	bne	.L1546
+.L1557:
 	mov	r0, #-1
-.L1543:
+.L1545:
 	add	sp, sp, #24
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L1544:
+.L1546:
 	movs	r1, #1
 	bl	FtlGetLastWrittenPage
 	ldrsh	r10, [r6]
 	sxth	r5, r0
 	adds	r0, r0, #1
 	strh	r0, [r6, #2]	@ movhi
-.L1546:
+.L1548:
 	cmp	r5, #0
-	bge	.L1552
+	bge	.L1554
 	movw	r2, #1474
-	ldr	r1, .L1573+16
-	ldr	r0, .L1573+20
+	ldr	r1, .L1575+16
+	ldr	r0, .L1575+20
 	bl	printf
-	b	.L1551
-.L1552:
+	b	.L1553
+.L1554:
 	orr	r3, r5, r10, lsl #10
 	movs	r2, #1
 	mov	r1, r2
-	ldr	r0, .L1573+4
+	ldr	r0, .L1575+4
 	str	r3, [r4, #4]
 	ldr	r3, [r8]
 	str	r3, [r4, #8]
@@ -11495,67 +11511,67 @@ FtlLoadSysInfo:
 	ldr	r3, [r4, #12]
 	ldr	r3, [r3, #12]
 	str	r3, [sp, #20]
-	cbz	r3, .L1547
+	cbz	r3, .L1549
 	ldr	r2, [r4]
 	adds	r2, r2, #1
-	beq	.L1547
-	ldr	r2, .L1573+24
+	beq	.L1549
+	ldr	r2, .L1575+24
 	ldr	r0, [r4, #8]
 	ldrh	r1, [r2]
 	bl	js_hash
 	ldr	r3, [sp, #20]
 	cmp	r3, r0
-	beq	.L1547
+	beq	.L1549
 	str	r0, [sp, #8]
 	mov	r2, r10
 	str	r3, [sp, #4]
 	ldrh	r3, [r6, #4]
-	ldr	r1, .L1573+16
-	ldr	r0, .L1573+28
+	ldr	r1, .L1575+16
+	ldr	r0, .L1575+28
 	str	r3, [sp]
 	mov	r3, r5
 	bl	printf
-	cbnz	r5, .L1548
+	cbnz	r5, .L1550
 	ldrh	r3, [r6, #4]
 	cmp	r10, r3
-	beq	.L1548
+	beq	.L1550
 	sxth	r10, r3
-	ldr	r3, .L1573+32
+	ldr	r3, .L1575+32
 	ldrh	r5, [r3]
-.L1550:
+.L1552:
 	subs	r5, r5, #1
 	sxth	r5, r5
-	b	.L1546
-.L1548:
+	b	.L1548
+.L1550:
 	mov	r3, #-1
 	str	r3, [r4]
-.L1547:
+.L1549:
 	ldr	r3, [r4]
 	adds	r3, r3, #1
-	beq	.L1550
+	beq	.L1552
 	ldr	r3, [r8]
-	ldr	r2, .L1573+36
+	ldr	r2, .L1575+36
 	ldr	r3, [r3]
 	cmp	r3, r2
-	bne	.L1550
+	bne	.L1552
 	ldr	r3, [fp]
 	ldrh	r2, [r3]
 	movw	r3, #61604
 	cmp	r2, r3
-	bne	.L1550
-.L1551:
-	ldr	r2, .L1573+24
+	bne	.L1552
+.L1553:
+	ldr	r2, .L1575+24
 	ldrh	r3, [r7]
 	ldrh	r2, [r2]
 	adds	r3, r3, #24
 	cmp	r2, r3, lsl #1
-	bcs	.L1554
+	bcs	.L1556
 	movw	r2, #1476
-	ldr	r1, .L1573+16
-	ldr	r0, .L1573+20
+	ldr	r1, .L1575+16
+	ldr	r0, .L1575+20
 	bl	printf
-.L1554:
-	ldr	r5, .L1573+40
+.L1556:
+	ldr	r5, .L1575+40
 	movs	r2, #48
 	ldr	r1, [r4, #8]
 	mov	r0, r5
@@ -11569,56 +11585,56 @@ FtlLoadSysInfo:
 	ldr	r0, [r3]
 	bl	ftl_memcpy
 	ldr	r2, [r5]
-	ldr	r3, .L1573+36
+	ldr	r3, .L1575+36
 	cmp	r2, r3
-	bne	.L1555
-	ldr	r3, .L1573+44
+	bne	.L1557
+	ldr	r3, .L1575+44
 	ldrb	r2, [r4, #10]	@ zero_extendqisi2
 	ldrh	r5, [r5, #8]
 	ldrh	r3, [r3]
 	strh	r5, [r6, #6]	@ movhi
 	cmp	r2, r3
-	bne	.L1555
-	ldr	r3, .L1573+48
-	ldr	r2, .L1573+52
+	bne	.L1557
+	ldr	r3, .L1575+48
+	ldr	r2, .L1575+52
 	str	r5, [r3]
-	ldr	r3, .L1573+56
+	ldr	r3, .L1575+56
 	ldrh	r3, [r3]
 	muls	r3, r5, r3
 	str	r3, [r2]
-	ldr	r2, .L1573+60
+	ldr	r2, .L1575+60
 	ldrh	r2, [r2]
 	muls	r3, r2, r3
-	ldr	r2, .L1573+64
+	ldr	r2, .L1575+64
 	str	r3, [r2]
-	ldr	r3, .L1573+68
+	ldr	r3, .L1575+68
 	ldr	r6, [r3]
-	ldr	r3, .L1573+72
+	ldr	r3, .L1575+72
 	ldrh	r0, [r3, #6]
-	ldr	r3, .L1573+76
+	ldr	r3, .L1575+76
 	subs	r0, r6, r0
 	ldrh	r1, [r3]
 	subs	r0, r0, r5
 	bl	__aeabi_uidiv
-	ldr	r3, .L1573+80
+	ldr	r3, .L1575+80
 	cmp	r5, r6
 	strh	r0, [r3]	@ movhi
-	bls	.L1556
+	bls	.L1558
 	movw	r2, #1498
-	ldr	r1, .L1573+16
-	ldr	r0, .L1573+20
+	ldr	r1, .L1575+16
+	ldr	r0, .L1575+20
 	bl	printf
-.L1556:
+.L1558:
 	ldrh	r2, [r4, #16]
-	ldr	r3, .L1573+84
+	ldr	r3, .L1575+84
 	ldrh	ip, [r4, #14]
-	ldr	r7, .L1573+88
+	ldr	r7, .L1575+88
 	lsrs	r1, r2, #6
 	and	r2, r2, #63
 	strb	r2, [r3, #6]
 	ldrb	r2, [r4, #11]	@ zero_extendqisi2
 	strh	r1, [r3, #2]	@ movhi
-	ldr	r1, .L1573+92
+	ldr	r1, .L1575+92
 	strb	r2, [r3, #8]
 	ldrh	r2, [r4, #18]
 	strh	ip, [r3]	@ movhi
@@ -11637,7 +11653,7 @@ FtlLoadSysInfo:
 	strh	r5, [r1, #2]	@ movhi
 	ldrh	r5, [r4, #22]
 	strb	r2, [r1, #8]
-	ldr	r2, .L1573+96
+	ldr	r2, .L1575+96
 	strh	r5, [r2]	@ movhi
 	ldrh	r5, [r4, #24]
 	lsrs	r6, r5, #6
@@ -11647,31 +11663,31 @@ FtlLoadSysInfo:
 	strh	r6, [r2, #2]	@ movhi
 	ldr	r6, [r4, #32]
 	strb	r5, [r2, #8]
-	ldr	r5, .L1573+100
+	ldr	r5, .L1575+100
 	str	r3, [r5]
-	ldr	r5, .L1573+104
+	ldr	r5, .L1575+104
 	str	r3, [r5]
-	ldr	r5, .L1573+108
+	ldr	r5, .L1575+108
 	str	r3, [r5]
-	ldr	r5, .L1573+112
+	ldr	r5, .L1575+112
 	str	r3, [r5]
-	ldr	r5, .L1573+116
+	ldr	r5, .L1575+116
 	str	r6, [r5]
 	mov	r6, r1
-	ldr	r5, .L1573+120
+	ldr	r5, .L1575+120
 	str	r3, [r5]
-	ldr	r5, .L1573+124
+	ldr	r5, .L1575+124
 	str	r3, [r5]
-	ldr	r5, .L1573+128
+	ldr	r5, .L1575+128
 	ldr	lr, [r4, #40]
 	str	r3, [r5]
-	ldr	r3, .L1573+132
+	ldr	r3, .L1575+132
 	ldr	r5, [r3]
 	cmp	lr, r5
 	mov	r5, r2
 	it	hi
 	strhi	lr, [r3]
-	ldr	r3, .L1573+136
+	ldr	r3, .L1575+136
 	ldr	r2, [r4, #36]
 	ldr	r1, [r3]
 	cmp	r2, r1
@@ -11679,36 +11695,36 @@ FtlLoadSysInfo:
 	strhi	r2, [r3]
 	movw	r3, #65535
 	cmp	ip, r3
-	beq	.L1559
-	ldr	r0, .L1573+84
+	beq	.L1561
+	ldr	r0, .L1575+84
 	bl	make_superblock
-.L1559:
+.L1561:
 	ldrh	r2, [r6]
 	movw	r3, #65535
 	cmp	r2, r3
-	beq	.L1560
-	ldr	r0, .L1573+92
+	beq	.L1562
+	ldr	r0, .L1575+92
 	bl	make_superblock
-.L1560:
+.L1562:
 	ldrh	r2, [r5]
 	movw	r3, #65535
 	cmp	r2, r3
-	beq	.L1561
-	ldr	r0, .L1573+96
+	beq	.L1563
+	ldr	r0, .L1575+96
 	bl	make_superblock
-.L1561:
+.L1563:
 	ldrh	r2, [r7]
 	movw	r3, #65535
 	cmp	r2, r3
-	beq	.L1562
-	ldr	r0, .L1573+88
+	beq	.L1564
+	ldr	r0, .L1575+88
 	bl	make_superblock
-.L1562:
+.L1564:
 	movs	r0, #0
-	b	.L1543
-.L1574:
+	b	.L1545
+.L1576:
 	.align	2
-.L1573:
+.L1575:
 	.word	.LANCHOR4
 	.word	.LANCHOR137
 	.word	.LANCHOR41
@@ -11767,7 +11783,7 @@ FtlMapTblRecovery:
 	movs	r7, #0
 	str	r3, [sp, #8]
 	ldr	r3, [r0, #16]
-	ldr	r6, .L1616
+	ldr	r6, .L1618
 	str	r3, [sp, #24]
 	ldrh	r3, [r0, #6]
 	str	r3, [sp, #12]
@@ -11777,13 +11793,13 @@ FtlMapTblRecovery:
 	ldr	r3, [sp, #12]
 	lsls	r2, r3, #2
 	bl	ftl_memset
-	ldr	r3, .L1616+4
+	ldr	r3, .L1618+4
 	str	r7, [r4, #32]
 	str	r7, [r4, #28]
 	ldr	r2, [r3]
 	str	r3, [sp, #20]
 	str	r2, [r6, #8]
-	ldr	r2, .L1616+8
+	ldr	r2, .L1618+8
 	ldr	fp, [r2]
 	movw	r2, #65535
 	str	fp, [r6, #12]
@@ -11791,20 +11807,20 @@ FtlMapTblRecovery:
 	strh	r2, [r4, #2]	@ movhi
 	movs	r2, #1
 	str	r2, [r4, #36]
-.L1576:
+.L1578:
 	ldr	r3, [sp, #16]
 	sxth	r5, r7
 	cmp	r5, r3
-	bge	.L1595
+	bge	.L1597
 	ldr	r3, [sp, #16]
 	subs	r3, r3, #1
 	cmp	r5, r3
-	bne	.L1577
+	bne	.L1579
 	movs	r1, #1
 	ldrh	r0, [r8, r5, lsl #1]
 	bl	FtlGetLastWrittenPage
 	sxth	r3, r0
-	ldr	r6, .L1616
+	ldr	r6, .L1618
 	add	r10, r8, r5, lsl #1
 	strh	r7, [r4]	@ movhi
 	str	r3, [sp, #16]
@@ -11814,22 +11830,22 @@ FtlMapTblRecovery:
 	strh	r0, [r4, #2]	@ movhi
 	ldr	r3, [r3, r5, lsl #2]
 	str	r3, [r4, #28]
-.L1578:
+.L1580:
 	ldr	r3, [sp, #16]
 	sxth	r8, r7
 	cmp	r8, r3
-	ble	.L1581
-.L1595:
+	ble	.L1583
+.L1597:
 	mov	r0, r4
 	bl	ftl_free_no_use_map_blk
-	ldr	r3, .L1616+12
+	ldr	r3, .L1618+12
 	ldrh	r2, [r4, #2]
 	ldrh	r3, [r3]
 	cmp	r2, r3
-	bne	.L1583
+	bne	.L1585
 	mov	r0, r4
 	bl	ftl_map_blk_alloc_new_blk
-.L1583:
+.L1585:
 	mov	r0, r4
 	bl	ftl_map_blk_gc
 	mov	r0, r4
@@ -11838,9 +11854,9 @@ FtlMapTblRecovery:
 	add	sp, sp, #40
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L1581:
+.L1583:
 	ldrh	r2, [r10]
-	ldr	r0, .L1616
+	ldr	r0, .L1618
 	orr	r2, r8, r2, lsl #10
 	str	r2, [r6, #4]
 	movs	r2, #1
@@ -11849,34 +11865,34 @@ FtlMapTblRecovery:
 	ldr	r2, [r6, #12]
 	ldr	r2, [r2, #12]
 	str	r2, [sp, #20]
-	cbz	r2, .L1579
+	cbz	r2, .L1581
 	ldr	r1, [r6]
 	adds	r1, r1, #1
-	beq	.L1579
-	ldr	r3, .L1616+16
+	beq	.L1581
+	ldr	r3, .L1618+16
 	ldr	r0, [r6, #8]
 	ldrh	r1, [r3]
 	bl	js_hash
 	ldr	r2, [sp, #20]
 	cmp	r2, r0
-	beq	.L1579
+	beq	.L1581
 	str	r0, [sp, #4]
 	mov	r3, r8
 	str	r2, [sp]
 	mov	r2, r5
-	ldr	r1, .L1616+20
-	ldr	r0, .L1616+24
+	ldr	r1, .L1618+20
+	ldr	r0, .L1618+24
 	bl	printf
 	mov	r3, #-1
 	str	r3, [r6]
-.L1579:
+.L1581:
 	ldr	r3, [r6]
 	adds	r3, r3, #1
-	beq	.L1580
+	beq	.L1582
 	ldrh	r3, [fp, #8]
 	ldr	r2, [sp, #12]
 	cmp	r2, r3
-	bls	.L1580
+	bls	.L1582
 	ldrh	r1, [fp]
 	ldrh	r2, [r4, #4]
 	cmp	r1, r2
@@ -11884,15 +11900,15 @@ FtlMapTblRecovery:
 	ldreq	r2, [r6, #4]
 	ldreq	r1, [sp, #8]
 	streq	r2, [r1, r3, lsl #2]
-.L1580:
+.L1582:
 	adds	r7, r7, #1
-	b	.L1578
-.L1577:
+	b	.L1580
+.L1579:
 	ldr	r3, [sp, #20]
-	ldr	r10, .L1616+12
+	ldr	r10, .L1618+12
 	ldrh	r2, [r8, r5, lsl #1]
 	ldr	r3, [r3]
-	ldr	r0, .L1616
+	ldr	r0, .L1618
 	str	r3, [r6, #8]
 	add	r3, r8, r5, lsl #1
 	str	r3, [sp, #28]
@@ -11905,25 +11921,25 @@ FtlMapTblRecovery:
 	bl	FlashReadPages
 	ldr	r3, [r6]
 	adds	r3, r3, #1
-	beq	.L1597
+	beq	.L1599
 	ldrh	r2, [fp]
 	ldrh	r3, [r4, #4]
 	cmp	r2, r3
-	bne	.L1597
+	bne	.L1599
 	ldrh	r2, [fp, #8]
 	movw	r3, #64245
 	cmp	r2, r3
-	beq	.L1585
-.L1597:
+	beq	.L1587
+.L1599:
 	mov	r10, #0
-.L1586:
-	ldr	r2, .L1616+12
+.L1588:
+	ldr	r2, .L1618+12
 	sxth	r3, r10
 	ldrh	r2, [r2]
 	cmp	r3, r2
-	bge	.L1593
+	bge	.L1595
 	ldr	r2, [sp, #28]
-	ldr	r0, .L1616
+	ldr	r0, .L1618
 	str	r3, [sp, #36]
 	ldrh	r2, [r2]
 	orr	r2, r3, r2, lsl #10
@@ -11934,34 +11950,34 @@ FtlMapTblRecovery:
 	ldr	r2, [r6, #12]
 	ldr	r2, [r2, #12]
 	str	r2, [sp, #32]
-	cbz	r2, .L1590
+	cbz	r2, .L1592
 	ldr	r1, [r6]
 	adds	r1, r1, #1
-	beq	.L1590
-	ldr	r1, .L1616+16
+	beq	.L1592
+	ldr	r1, .L1618+16
 	ldr	r0, [r6, #8]
 	ldrh	r1, [r1]
 	bl	js_hash
 	ldr	r2, [sp, #32]
 	cmp	r2, r0
-	beq	.L1590
+	beq	.L1592
 	str	r0, [sp, #4]
 	str	r2, [sp]
 	mov	r2, r5
 	ldr	r3, [sp, #36]
-	ldr	r1, .L1616+20
-	ldr	r0, .L1616+28
+	ldr	r1, .L1618+20
+	ldr	r0, .L1618+28
 	bl	printf
 	mov	r3, #-1
 	str	r3, [r6]
-.L1590:
+.L1592:
 	ldr	r3, [r6]
 	adds	r3, r3, #1
-	beq	.L1591
+	beq	.L1593
 	ldrh	r3, [fp, #8]
 	ldr	r2, [sp, #12]
 	cmp	r2, r3
-	bls	.L1591
+	bls	.L1593
 	ldrh	r1, [fp]
 	ldrh	r2, [r4, #4]
 	cmp	r1, r2
@@ -11969,39 +11985,39 @@ FtlMapTblRecovery:
 	ldreq	r2, [r6, #4]
 	ldreq	r1, [sp, #8]
 	streq	r2, [r1, r3, lsl #2]
-.L1591:
+.L1593:
 	add	r10, r10, #1
-	b	.L1586
-.L1585:
+	b	.L1588
+.L1587:
 	ldr	r3, [sp, #20]
 	movs	r1, #0
 	ldrh	r2, [r10]
 	ldr	r0, [r3]
 	add	lr, r2, #-1
-.L1587:
+.L1589:
 	sxth	r3, r1
 	cmp	r3, lr
-	blt	.L1589
-.L1593:
+	blt	.L1591
+.L1595:
 	adds	r7, r7, #1
-	b	.L1576
-.L1589:
+	b	.L1578
+.L1591:
 	lsls	r5, r3, #3
 	ldr	r3, [r0, r3, lsl #3]
 	ldr	r2, [sp, #12]
 	uxth	ip, r3
 	cmp	r2, ip
-	bls	.L1588
+	bls	.L1590
 	add	r5, r5, r0
 	ldr	r2, [sp, #8]
 	ldr	r5, [r5, #4]
 	str	r5, [r2, ip, lsl #2]
-.L1588:
+.L1590:
 	adds	r1, r1, #1
-	b	.L1587
-.L1617:
+	b	.L1589
+.L1619:
 	.align	2
-.L1616:
+.L1618:
 	.word	.LANCHOR137
 	.word	.LANCHOR105
 	.word	.LANCHOR113
@@ -12023,36 +12039,36 @@ FtlLoadVonderInfo:
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r3, lr}
-	ldr	r3, .L1619
-	ldr	r0, .L1619+4
+	ldr	r3, .L1621
+	ldr	r0, .L1621+4
 	ldrh	r3, [r3]
 	strh	r3, [r0, #10]	@ movhi
 	movw	r3, #61574
 	strh	r3, [r0, #4]	@ movhi
-	ldr	r3, .L1619+8
+	ldr	r3, .L1621+8
 	ldrh	r3, [r3]
 	strh	r3, [r0, #8]	@ movhi
-	ldr	r3, .L1619+12
+	ldr	r3, .L1621+12
 	ldrh	r3, [r3]
 	strh	r3, [r0, #6]	@ movhi
-	ldr	r3, .L1619+16
+	ldr	r3, .L1621+16
 	ldr	r3, [r3]
 	str	r3, [r0, #12]
-	ldr	r3, .L1619+20
+	ldr	r3, .L1621+20
 	ldr	r3, [r3]
 	str	r3, [r0, #16]
-	ldr	r3, .L1619+24
+	ldr	r3, .L1621+24
 	ldr	r3, [r3]
 	str	r3, [r0, #20]
-	ldr	r3, .L1619+28
+	ldr	r3, .L1621+28
 	ldr	r3, [r3]
 	str	r3, [r0, #24]
 	bl	FtlMapTblRecovery
 	movs	r0, #0
 	pop	{r3, pc}
-.L1620:
+.L1622:
 	.align	2
-.L1619:
+.L1621:
 	.word	.LANCHOR26
 	.word	.LANCHOR160
 	.word	.LANCHOR34
@@ -12075,13 +12091,13 @@ FtlLoadMapInfo:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r3, lr}
 	bl	FtlL2PDataInit
-	ldr	r0, .L1622
+	ldr	r0, .L1624
 	bl	FtlMapTblRecovery
 	movs	r0, #0
 	pop	{r3, pc}
-.L1623:
+.L1625:
 	.align	2
-.L1622:
+.L1624:
 	.word	.LANCHOR128
 	.size	FtlLoadMapInfo, .-FtlLoadMapInfo
 	.section	.text.FtlSysBlkInit,"ax",%progbits
@@ -12097,27 +12113,27 @@ FtlSysBlkInit:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r3, r4, r5, r6, r7, lr}
 	movs	r3, #0
-	ldr	r4, .L1637
+	ldr	r4, .L1639
 	strh	r3, [r4]	@ movhi
-	ldr	r3, .L1637+4
+	ldr	r3, .L1639+4
 	ldrh	r0, [r3]
 	bl	FtlFreeSysBlkQueueInit
 	bl	FtlScanSysBlk
-	ldr	r3, .L1637+8
+	ldr	r3, .L1639+8
 	ldrh	r2, [r3]
 	movw	r3, #65535
 	cmp	r2, r3
-	bne	.L1625
-.L1627:
+	bne	.L1627
+.L1629:
 	mov	r6, #-1
-.L1624:
+.L1626:
 	mov	r0, r6
 	pop	{r3, r4, r5, r6, r7, pc}
-.L1625:
+.L1627:
 	bl	FtlLoadSysInfo
 	mov	r6, r0
 	cmp	r0, #0
-	bne	.L1627
+	bne	.L1629
 	bl	FtlLoadMapInfo
 	bl	FtlLoadVonderInfo
 	bl	Ftl_load_ext_data
@@ -12127,40 +12143,40 @@ FtlSysBlkInit:
 	bl	FtlPowerLostRecovery
 	movs	r0, #1
 	bl	FtlUpdateVaildLpn
-	ldr	r3, .L1637+12
+	ldr	r3, .L1639+12
 	movs	r0, #12
 	ldrh	r1, [r3]
-	ldr	r3, .L1637+16
+	ldr	r3, .L1639+16
 	ldr	r2, [r3]
 	mov	r3, r6
-.L1628:
+.L1630:
 	cmp	r3, r1
-	bge	.L1633
+	bge	.L1635
 	mla	r5, r0, r3, r2
 	ldr	r5, [r5, #4]
 	cmp	r5, #0
-	bge	.L1629
-.L1633:
-	ldr	r0, .L1637+20
+	bge	.L1631
+.L1635:
+	ldr	r0, .L1639+20
 	cmp	r3, r1
 	ldr	r2, [r0]
 	add	r2, r2, #32
 	str	r2, [r0]
-	bge	.L1635
-.L1630:
-	ldr	r5, .L1637+24
-	ldr	r4, .L1637+28
+	bge	.L1637
+.L1632:
+	ldr	r5, .L1639+24
+	ldr	r4, .L1639+28
 	mov	r0, r5
 	bl	FtlSuperblockPowerLostFix
 	mov	r0, r4
 	bl	FtlSuperblockPowerLostFix
-	ldr	r3, .L1637+32
+	ldr	r3, .L1639+32
 	ldrh	r1, [r5]
 	ldrh	r0, [r5, #4]
 	ldr	r2, [r3]
 	ldrh	r3, [r2, r1, lsl #1]
 	subs	r3, r3, r0
-	ldr	r0, .L1637+36
+	ldr	r0, .L1639+36
 	strh	r3, [r2, r1, lsl #1]	@ movhi
 	ldrh	r7, [r4, #4]
 	ldrh	r3, [r0]
@@ -12176,27 +12192,27 @@ FtlSysBlkInit:
 	strb	r3, [r4, #6]
 	strh	r3, [r4, #4]	@ movhi
 	strh	r2, [r4, #2]	@ movhi
-	ldr	r2, .L1637+40
+	ldr	r2, .L1639+40
 	ldrh	r3, [r2, #30]
 	adds	r3, r3, #1
 	strh	r3, [r2, #30]	@ movhi
 	bl	l2p_flush
 	bl	FtlVpcTblFlush
-.L1636:
+.L1638:
 	bl	FtlVpcTblFlush
-	b	.L1624
-.L1629:
+	b	.L1626
+.L1631:
 	adds	r3, r3, #1
-	b	.L1628
-.L1635:
+	b	.L1630
+.L1637:
 	ldrh	r3, [r4]
 	cmp	r3, #0
-	bne	.L1630
+	bne	.L1632
 	bl	l2p_flush
-	b	.L1636
-.L1638:
+	b	.L1638
+.L1640:
 	.align	2
-.L1637:
+.L1639:
 	.word	.LANCHOR155
 	.word	.LANCHOR3
 	.word	.LANCHOR138
@@ -12222,66 +12238,66 @@ ftl_low_format:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r10, fp, lr}
 	movs	r3, #0
-	ldr	r2, .L1663
-	ldr	r4, .L1663+4
+	ldr	r2, .L1665
+	ldr	r4, .L1665+4
 	str	r3, [r2]
-	ldr	r5, .L1663+8
-	ldr	r2, .L1663+12
+	ldr	r5, .L1665+8
+	ldr	r2, .L1665+12
 	mov	r8, r4
 	ldrh	r0, [r4]
 	str	r3, [r5]
 	str	r3, [r2]
 	bl	FtlFreeSysBlkQueueInit
 	bl	FtlLoadBbt
-	cbz	r0, .L1640
+	cbz	r0, .L1642
 	bl	FtlMakeBbt
-.L1640:
-	ldr	r3, .L1663+16
-	ldr	r2, .L1663+20
-	ldr	r7, .L1663+24
+.L1642:
+	ldr	r3, .L1665+16
+	ldr	r2, .L1665+20
+	ldr	r7, .L1665+24
 	ldrh	r1, [r3]
 	ldr	r4, [r2]
-	ldr	r2, .L1663+28
+	ldr	r2, .L1665+28
 	str	r3, [sp, #4]
 	lsls	r1, r1, #7
 	ldr	r6, [r2]
 	movs	r2, #0
-.L1641:
+.L1643:
 	uxth	r3, r2
 	adds	r2, r2, #1
 	cmp	r3, r1
-	blt	.L1642
-	ldr	r7, .L1663+32
+	blt	.L1644
+	ldr	r7, .L1665+32
 	mov	r10, #0
-	ldr	r6, .L1663+36
+	ldr	r6, .L1665+36
 	ldrh	r4, [r7]
 	mov	fp, r6
-.L1643:
+.L1645:
 	ldrh	r3, [r6]
 	cmp	r3, r4
-	bhi	.L1644
-	ldr	r6, .L1663+40
+	bhi	.L1646
+	ldr	r6, .L1665+40
 	sub	r3, r10, #2
 	ldrh	r1, [r6]
 	cmp	r3, r1, lsl #1
-	bgt	.L1645
-.L1649:
+	bgt	.L1647
+.L1651:
 	movs	r4, #0
 	mov	r8, r4
-.L1646:
+.L1648:
 	ldrh	r3, [r7]
 	uxth	r0, r4
 	adds	r4, r4, #1
 	cmp	r3, r0
-	bhi	.L1650
+	bhi	.L1652
 	ldrh	r2, [fp]
-	ldr	r3, .L1663+44
+	ldr	r3, .L1665+44
 	ldrh	r4, [r6]
-	ldr	r6, .L1663+48
+	ldr	r6, .L1665+48
 	str	r2, [r3]
-	ldr	r3, .L1663+52
+	ldr	r3, .L1665+52
 	mov	r1, r4
-	ldr	r7, .L1663+56
+	ldr	r7, .L1665+56
 	ldr	r2, [r3]
 	mov	r0, r2
 	str	r2, [sp, #12]
@@ -12294,7 +12310,7 @@ ftl_low_format:
 	movs	r1, #24
 	muls	r1, r4, r1
 	cmp	r8, r1
-	ble	.L1651
+	ble	.L1653
 	ldr	r2, [sp, #12]
 	mov	r1, r4
 	str	r0, [sp, #8]
@@ -12305,10 +12321,10 @@ ftl_low_format:
 	lsrs	r0, r0, #5
 	adds	r0, r0, #24
 	strh	r0, [r6]	@ movhi
-.L1651:
-	ldr	r2, .L1663+60
+.L1653:
+	ldr	r2, .L1665+60
 	ldrh	r2, [r2]
-	cbz	r2, .L1653
+	cbz	r2, .L1655
 	ldrh	r1, [r6]
 	add	r1, r1, r2, lsr #1
 	strh	r1, [r6]	@ movhi
@@ -12319,39 +12335,39 @@ ftl_low_format:
 	strlt	r3, [r7]
 	addlt	r2, r2, r10
 	strhlt	r2, [r6]	@ movhi
-.L1653:
+.L1655:
 	ldrh	r2, [r6]
 	ldr	r3, [r7]
-	ldr	r6, .L1663+64
+	ldr	r6, .L1665+64
 	subs	r3, r3, r2
 	muls	r4, r3, r4
-	ldr	r3, .L1663+68
+	ldr	r3, .L1665+68
 	ldrh	r3, [r3]
 	str	r4, [r6]
 	muls	r4, r3, r4
 	ldr	r3, [sp, #4]
 	ldrh	r3, [r3]
 	str	r4, [r7]
-	ldr	r7, .L1663+72
+	ldr	r7, .L1665+72
 	muls	r4, r3, r4
-	ldr	r3, .L1663+76
+	ldr	r3, .L1665+76
 	str	r4, [r3]
 	bl	FtlBbmTblFlush
 	ldrh	r2, [fp]
 	movs	r1, #0
 	ldr	r0, [r7]
-	ldr	r4, .L1663+80
+	ldr	r4, .L1665+80
 	lsls	r2, r2, #1
 	mov	r10, r4
 	bl	ftl_memset
-	ldr	r2, .L1663+84
+	ldr	r2, .L1665+84
 	movs	r3, #0
 	movw	r1, #65535
 	strh	r3, [r4, #2]	@ movhi
 	mov	r8, r1
 	strb	r3, [r4, #6]
 	str	r3, [r2]
-	ldr	r2, .L1663+88
+	ldr	r2, .L1665+88
 	strh	r3, [r4]	@ movhi
 	strh	r3, [r2, #2]	@ movhi
 	strb	r3, [r2, #6]
@@ -12359,26 +12375,26 @@ ftl_low_format:
 	movs	r3, #1
 	strh	r1, [r2]	@ movhi
 	strb	r3, [r4, #8]
-.L1655:
+.L1657:
 	mov	r0, r10
 	bl	make_superblock
 	ldrb	r3, [r4, #7]	@ zero_extendqisi2
 	ldrh	r2, [r4]
 	cmp	r3, #0
-	bne	.L1656
+	bne	.L1658
 	ldr	r3, [r7]
 	strh	r8, [r3, r2, lsl #1]	@ movhi
 	ldrh	r3, [r4]
 	adds	r3, r3, #1
 	strh	r3, [r4]	@ movhi
-	b	.L1655
-.L1642:
+	b	.L1657
+.L1644:
 	mvns	r0, r3
 	orr	r0, r3, r0, lsl #16
 	str	r0, [r4, r3, lsl #2]
 	str	r7, [r6, r3, lsl #2]
-	b	.L1641
-.L1644:
+	b	.L1643
+.L1646:
 	mov	r0, r4
 	movs	r1, #1
 	bl	FtlLowFormatEraseBlock
@@ -12386,11 +12402,11 @@ ftl_low_format:
 	add	r10, r10, r0
 	uxth	r10, r10
 	uxth	r4, r4
-	b	.L1643
-.L1645:
+	b	.L1645
+.L1647:
 	mov	r0, r10
 	bl	__aeabi_uidiv
-	ldr	r3, .L1663+92
+	ldr	r3, .L1665+92
 	ldr	r3, [r3]
 	add	r0, r0, r3
 	uxth	r0, r0
@@ -12398,23 +12414,23 @@ ftl_low_format:
 	ldrh	r0, [r8]
 	bl	FtlFreeSysBlkQueueInit
 	ldrh	r4, [r7]
-.L1647:
+.L1649:
 	ldrh	r3, [fp]
 	cmp	r3, r4
-	bls	.L1649
+	bls	.L1651
 	mov	r0, r4
 	movs	r1, #1
 	adds	r4, r4, #1
 	bl	FtlLowFormatEraseBlock
 	uxth	r4, r4
-	b	.L1647
-.L1650:
+	b	.L1649
+.L1652:
 	movs	r1, #0
 	bl	FtlLowFormatEraseBlock
 	add	r8, r8, r0
 	uxth	r8, r8
-	b	.L1646
-.L1656:
+	b	.L1648
+.L1658:
 	ldr	r3, [r5]
 	movw	r8, #65535
 	ldrh	r1, [r4, #4]
@@ -12424,7 +12440,7 @@ ftl_low_format:
 	ldr	r3, [r7]
 	strh	r1, [r3, r2, lsl #1]	@ movhi
 	movs	r2, #0
-	ldr	r3, .L1663+96
+	ldr	r3, .L1665+96
 	strh	r2, [r3, #2]	@ movhi
 	mov	r10, r3
 	strb	r2, [r3, #6]
@@ -12434,19 +12450,19 @@ ftl_low_format:
 	strh	r2, [r3]	@ movhi
 	movs	r2, #1
 	strb	r2, [r3, #8]
-.L1657:
+.L1659:
 	mov	r0, r10
 	bl	make_superblock
 	ldrb	r3, [r4, #7]	@ zero_extendqisi2
 	ldrh	r2, [r4]
-	cbnz	r3, .L1658
+	cbnz	r3, .L1660
 	ldr	r3, [r7]
 	strh	r8, [r3, r2, lsl #1]	@ movhi
 	ldrh	r3, [r4]
 	adds	r3, r3, #1
 	strh	r3, [r4]	@ movhi
-	b	.L1657
-.L1658:
+	b	.L1659
+.L1660:
 	ldr	r3, [r5]
 	ldrh	r1, [r4, #4]
 	str	r3, [r4, #12]
@@ -12455,10 +12471,10 @@ ftl_low_format:
 	movw	r4, #65535
 	ldr	r3, [r7]
 	strh	r1, [r3, r2, lsl #1]	@ movhi
-	ldr	r3, .L1663+100
+	ldr	r3, .L1665+100
 	strh	r4, [r3]	@ movhi
 	bl	FtlFreeSysBlkQueueOut
-	ldr	r3, .L1663+104
+	ldr	r3, .L1665+104
 	movs	r2, #0
 	strh	r2, [r3, #2]	@ movhi
 	ldr	r2, [r6]
@@ -12471,18 +12487,18 @@ ftl_low_format:
 	str	r2, [r5]
 	bl	FtlVpcTblFlush
 	bl	FtlSysBlkInit
-	cbnz	r0, .L1659
-	ldr	r3, .L1663+108
+	cbnz	r0, .L1661
+	ldr	r3, .L1665+108
 	movs	r2, #1
 	str	r2, [r3]
-.L1659:
+.L1661:
 	movs	r0, #0
 	add	sp, sp, #16
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L1664:
+.L1666:
 	.align	2
-.L1663:
+.L1665:
 	.word	.LANCHOR82
 	.word	.LANCHOR3
 	.word	.LANCHOR81
@@ -12525,40 +12541,40 @@ sftl_init:
 	@ frame_needed = 0, uses_anonymous_args = 0
 	push	{r4, r5, r6, lr}
 	mov	r3, #-1
-	ldr	r4, .L1677
+	ldr	r4, .L1679
 	movs	r6, #0
-	ldr	r1, .L1677+4
-	ldr	r0, .L1677+8
+	ldr	r1, .L1679+4
+	ldr	r0, .L1679+8
 	str	r3, [r4]
 	bl	printf
-	ldr	r0, .L1677+12
+	ldr	r0, .L1679+12
 	bl	FtlConstantsInit
-	ldr	r5, .L1677+16
+	ldr	r5, .L1679+16
 	bl	FtlMemInit
 	bl	FtlVariablesInit
-	ldr	r3, .L1677+20
+	ldr	r3, .L1679+20
 	ldrh	r0, [r3]
 	bl	FtlFreeSysBlkQueueInit
-.L1666:
+.L1668:
 	bl	FtlLoadBbt
-	cbz	r0, .L1667
-.L1676:
+	cbz	r0, .L1669
+.L1678:
 	ldr	r3, [r5]
 	cmp	r3, #1
-	bne	.L1666
+	bne	.L1668
 	str	r6, [r5]
 	bl	ftl_low_format
-	b	.L1666
-.L1667:
+	b	.L1668
+.L1669:
 	bl	FtlSysBlkInit
 	cmp	r0, #0
-	bne	.L1676
+	bne	.L1678
 	movs	r3, #1
 	str	r3, [r4]
 	pop	{r4, r5, r6, pc}
-.L1678:
+.L1680:
 	.align	2
-.L1677:
+.L1679:
 	.word	.LANCHOR165
 	.word	.LC49
 	.word	.LC38
@@ -12585,31 +12601,31 @@ FtlWriteToIDB:
 	mov	r4, r0
 	mov	r5, r1
 	mov	r6, r2
-	ldr	r10, .L1747+16
-	bls	.L1680
+	ldr	r10, .L1749+16
+	bls	.L1682
 	cmp	r0, #576
-	bcc	.L1681
-.L1680:
+	bcc	.L1683
+.L1682:
 	ldr	r3, [r10]
-	cbnz	r3, .L1682
-.L1746:
+	cbnz	r3, .L1684
+.L1748:
 	movs	r4, #0
-	b	.L1679
-.L1682:
-	ldr	r3, .L1747
+	b	.L1681
+.L1684:
+	ldr	r3, .L1749
 	ldr	fp, [r3]
-	ldr	r3, .L1747+4
+	ldr	r3, .L1749+4
 	ldr	r2, [fp]
 	cmp	r2, r3
-	bne	.L1684
-	ldr	r3, .L1747+8
+	bne	.L1686
+	ldr	r3, .L1749+8
 	add	r0, fp, #260096
 	movs	r2, #0
 	ldrh	r1, [r3, #10]
 	movw	r3, #65023
-.L1688:
+.L1690:
 	ldr	r4, [r0, #-4]!
-	cbnz	r4, .L1685
+	cbnz	r4, .L1687
 	ldr	r4, [fp, r2, lsl #2]
 	adds	r2, r2, #1
 	cmp	r2, #4096
@@ -12618,13 +12634,13 @@ FtlWriteToIDB:
 	movhi	r2, #0
 	cmp	r3, #4096
 	str	r4, [r0, #2048]
-	bne	.L1688
+	bne	.L1690
 	mov	r3, #512
-	b	.L1743
-.L1685:
+	b	.L1745
+.L1687:
 	adds	r3, r3, #127
 	lsrs	r3, r3, #7
-.L1743:
+.L1745:
 	str	r3, [sp, #8]
 	lsls	r1, r1, #2
 	ldr	r3, [sp, #8]
@@ -12634,7 +12650,7 @@ FtlWriteToIDB:
 	adds	r3, r0, #1
 	ldr	r1, [sp, #8]
 	mov	r2, r3
-	ldr	r0, .L1747+12
+	ldr	r0, .L1749+12
 	str	r3, [sp, #16]
 	bl	printf
 	ldr	r3, [sp, #8]
@@ -12642,60 +12658,60 @@ FtlWriteToIDB:
 	str	r3, [sp, #32]
 	movs	r3, #0
 	str	r3, [sp, #20]
-.L1745:
+.L1747:
 	str	r3, [sp, #12]
 	ldr	r2, [sp, #12]
 	ldr	r3, [sp, #16]
 	add	r3, r3, r2
 	cmp	r3, #8
 	str	r3, [sp, #28]
-	bls	.L1711
+	bls	.L1713
 	ldr	r3, [sp, #20]
-	cbnz	r3, .L1712
-.L1684:
+	cbnz	r3, .L1714
+.L1686:
 	mov	r3, #-1
 	str	r3, [sp, #8]
-.L1712:
-	ldr	r3, .L1747+16
+.L1714:
+	ldr	r3, .L1749+16
 	movs	r2, #0
 	ldr	r4, [sp, #8]
 	str	r2, [r3]
-	ldr	r3, .L1747
+	ldr	r3, .L1749
 	ldr	r0, [r3]
 	bl	free
-	ldr	r3, .L1747+20
+	ldr	r3, .L1749+20
 	ldr	r0, [r3]
 	bl	free
-.L1679:
+.L1681:
 	mov	r0, r4
 	add	sp, sp, #104
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r10, fp, pc}
-.L1711:
-	ldr	r3, .L1747+20
+.L1713:
+	ldr	r3, .L1749+20
 	mov	r2, #512
 	movs	r1, #0
 	ldr	r0, [r3]
 	bl	memset
-	ldr	r3, .L1747+8
+	ldr	r3, .L1749+8
 	ldrh	r5, [r3, #10]
 	ldr	r3, [sp, #12]
 	muls	r3, r5, r3
 	str	r3, [sp, #24]
-	ldr	r3, .L1747+24
+	ldr	r3, .L1749+24
 	ldr	r2, [r3, #16]
 	cmp	r2, #0
-	beq	.L1719
+	beq	.L1721
 	ldr	r3, [r3, #20]
 	cmp	r3, #0
 	ite	eq
 	moveq	r6, #6
 	movne	r6, #9
-.L1690:
+.L1692:
 	ldr	r7, [sp, #24]
 	movs	r4, #0
-	ldr	r8, .L1747+24
-.L1691:
+	ldr	r8, .L1749+24
+.L1693:
 	mov	r1, r7
 	ldr	r3, [r8, #4]
 	movs	r0, #0
@@ -12704,20 +12720,20 @@ FtlWriteToIDB:
 	ldr	r3, [sp, #16]
 	add	r7, r7, r5
 	cmp	r3, r4
-	bhi	.L1691
+	bhi	.L1693
 	cmp	r6, #9
-	bne	.L1721
-	ldr	r3, .L1747+20
+	bne	.L1723
+	ldr	r3, .L1749+20
 	mov	r2, #1024
 	movs	r1, #0
 	ldr	r4, [r3]
 	mov	r0, r4
 	bl	ftl_memset
 	movs	r2, #4
-	ldr	r3, .L1747+28
+	ldr	r3, .L1749+28
 	strb	r2, [r4, #17]
 	movs	r1, #12
-	ldr	r2, .L1747+8
+	ldr	r2, .L1749+8
 	adds	r0, r4, r1
 	str	r3, [r4]
 	movs	r3, #0
@@ -12732,17 +12748,17 @@ FtlWriteToIDB:
 	strh	r3, [r4, #22]	@ movhi
 	bl	js_hash
 	str	r0, [r4, #8]
-.L1692:
+.L1694:
 	ldr	r3, [sp, #16]
 	mov	r10, fp
-	ldr	r8, .L1747+24
+	ldr	r8, .L1749+24
 	muls	r3, r5, r3
 	movs	r5, #0
 	str	r3, [sp, #36]
-.L1693:
+.L1695:
 	ldr	r3, [sp, #36]
 	cmp	r5, r3
-	beq	.L1700
+	beq	.L1702
 	cmp	r6, #9
 	ite	ne
 	lslne	r3, r5, #2
@@ -12751,9 +12767,9 @@ FtlWriteToIDB:
 	movw	r3, #61424
 	str	r3, [sp, #44]
 	cmp	r5, #0
-	bne	.L1696
+	bne	.L1698
 	cmp	r6, #9
-	bne	.L1696
+	bne	.L1698
 	ldr	r3, [r8, #16]
 	movs	r0, #70
 	blx	r3
@@ -12763,41 +12779,41 @@ FtlWriteToIDB:
 	ldr	r1, [sp, #24]
 	mov	r0, r5
 	blx	r7
-	ldr	r2, .L1747+8
+	ldr	r2, .L1749+8
 	mov	r7, r0
 	ldr	r3, [r8, #16]
 	ldrb	r0, [r2, #22]	@ zero_extendqisi2
 	blx	r3
 	adds	r7, r7, #1
-	bne	.L1697
-.L1700:
-	ldr	r3, .L1747+20
+	bne	.L1699
+.L1702:
+	ldr	r3, .L1749+20
 	ldr	r7, [r3]
-	ldr	r3, .L1747+8
+	ldr	r3, .L1749+8
 	ldrb	r2, [r3, #14]	@ zero_extendqisi2
 	ldrh	r3, [r3, #10]
 	str	r2, [sp, #24]
 	ldr	r2, [sp, #12]
 	mul	r10, r3, r2
-	ldr	r2, .L1747+24
+	ldr	r2, .L1749+24
 	ldr	r1, [r2, #16]
 	cmp	r1, #0
-	bne	.L1698
+	bne	.L1700
 	mov	r8, #6
-.L1699:
+.L1701:
 	ldr	r2, [sp, #16]
 	movs	r4, #0
-	ldr	r5, .L1747+24
+	ldr	r5, .L1749+24
 	muls	r3, r2, r3
 	str	r3, [sp, #36]
-.L1702:
+.L1704:
 	ldr	r3, [sp, #36]
 	cmp	r4, r3
-	beq	.L1706
+	beq	.L1708
 	cmp	r4, #0
-	bne	.L1703
+	bne	.L1705
 	cmp	r8, #9
-	bne	.L1703
+	bne	.L1705
 	ldr	r3, [r5, #16]
 	movs	r0, #70
 	blx	r3
@@ -12813,57 +12829,57 @@ FtlWriteToIDB:
 	ldr	r3, [r5, #20]
 	ldr	r0, [sp, #24]
 	blx	r3
-	ldr	r2, .L1747+8
+	ldr	r2, .L1749+8
 	ldr	r3, [r5, #16]
 	ldrb	r0, [r2, #22]	@ zero_extendqisi2
 	blx	r3
 	ldr	r3, [r7]
-	ldr	r2, .L1747+28
+	ldr	r2, .L1749+28
 	cmp	r3, r2
-	beq	.L1704
-.L1706:
-	ldr	r3, .L1747+20
+	beq	.L1706
+.L1708:
+	ldr	r3, .L1749+20
 	mov	r1, fp
 	movs	r4, #0
 	ldr	r0, [r3]
-.L1705:
+.L1707:
 	mov	r6, r1
 	ldr	r2, [r0, r4, lsl #2]
 	ldr	r3, [r6]
 	lsls	r5, r4, #2
 	adds	r1, r1, #4
 	cmp	r2, r3
-	beq	.L1708
+	beq	.L1710
 	mov	r2, #512
 	movs	r1, #0
 	bl	memset
-	ldr	r3, .L1747+20
+	ldr	r3, .L1749+20
 	ldr	r1, [sp, #12]
-	ldr	r0, .L1747+32
+	ldr	r0, .L1749+32
 	ldr	r2, [r3]
 	str	r4, [sp]
 	ldr	r3, [r6]
 	ldr	r2, [r2, r5]
 	bl	printf
-	ldr	r3, .L1747+8
+	ldr	r3, .L1749+8
 	movs	r0, #0
 	ldr	r2, [sp, #12]
 	ldrh	r1, [r3, #10]
-	ldr	r3, .L1747+24
+	ldr	r3, .L1749+24
 	muls	r2, r1, r2
 	ldr	r3, [r3, #4]
 	mov	r1, r2
 	blx	r3
-.L1709:
+.L1711:
 	ldr	r3, [sp, #28]
-	b	.L1745
-.L1719:
-	movs	r6, #6
-	b	.L1690
+	b	.L1747
 .L1721:
-	movs	r4, #0
+	movs	r6, #6
 	b	.L1692
-.L1696:
+.L1723:
+	movs	r4, #0
+	b	.L1694
+.L1698:
 	ldr	r1, [sp, #24]
 	add	r3, sp, #40
 	ldr	r7, [r8, #8]
@@ -12872,19 +12888,19 @@ FtlWriteToIDB:
 	add	r1, r1, r5
 	blx	r7
 	adds	r0, r0, #1
-	beq	.L1700
+	beq	.L1702
 	add	r10, r10, #2048
-.L1697:
+.L1699:
 	adds	r5, r5, #1
-	b	.L1693
-.L1698:
+	b	.L1695
+.L1700:
 	ldr	r2, [r2, #20]
 	cmp	r2, #0
 	ite	eq
 	moveq	r8, #6
 	movne	r8, #9
-	b	.L1699
-.L1703:
+	b	.L1701
+.L1705:
 	add	r3, sp, #40
 	mov	r2, r7
 	add	r1, r10, r4
@@ -12892,29 +12908,29 @@ FtlWriteToIDB:
 	ldr	r6, [r5, #12]
 	blx	r6
 	adds	r0, r0, #1
-	beq	.L1706
+	beq	.L1708
 	ldr	r2, [sp, #44]
 	movw	r3, #61424
 	cmp	r2, r3
-	bne	.L1706
+	bne	.L1708
 	add	r7, r7, #2048
-.L1704:
+.L1706:
 	adds	r4, r4, #1
-	b	.L1702
-.L1708:
+	b	.L1704
+.L1710:
 	ldr	r3, [sp, #32]
 	adds	r4, r4, #1
 	cmp	r4, r3
-	bne	.L1705
+	bne	.L1707
 	ldr	r3, [sp, #20]
 	adds	r3, r3, #1
 	cmp	r3, #5
 	str	r3, [sp, #20]
-	bls	.L1709
-	b	.L1712
-.L1748:
+	bls	.L1711
+	b	.L1714
+.L1750:
 	.align	2
-.L1747:
+.L1749:
 	.word	.LANCHOR182
 	.word	-52655045
 	.word	.LANCHOR0
@@ -12924,31 +12940,31 @@ FtlWriteToIDB:
 	.word	.LANCHOR77
 	.word	1179535694
 	.word	.LC51
-.L1681:
+.L1683:
 	cmp	r0, #64
-	bne	.L1713
-	ldr	fp, .L1749+4
+	bne	.L1715
+	ldr	fp, .L1751+4
 	mov	r0, #262144
 	bl	ftl_malloc
 	str	r0, [fp]
 	mov	r0, #262144
 	bl	ftl_malloc
-	ldr	r3, .L1749
+	ldr	r3, .L1751
 	str	r0, [r3]
 	ldr	r3, [fp]
-	cbz	r3, .L1714
-	cbz	r0, .L1714
+	cbz	r3, .L1716
+	cbz	r0, .L1716
 	movs	r2, #1
 	movs	r1, #0
 	str	r2, [r10]
 	mov	r0, r3
 	mov	r2, #262144
 	bl	ftl_memset
-.L1713:
+.L1715:
 	ldr	r3, [r10]
 	cmp	r3, #0
-	beq	.L1746
-	ldr	r3, .L1749+4
+	beq	.L1748
+	ldr	r3, .L1751+4
 	cmp	r4, #63
 	itett	ls
 	rsbls	r1, r4, #64
@@ -12957,7 +12973,7 @@ FtlWriteToIDB:
 	addls	r1, r6, r1, lsl #9
 	ldr	r0, [r3]
 	ittt	hi
-	ldrhi	r3, .L1749+8
+	ldrhi	r3, .L1751+8
 	addhi	r3, r3, r4
 	addhi	r0, r0, r3, lsl #9
 	cmp	r8, #576
@@ -12966,15 +12982,15 @@ FtlWriteToIDB:
 	subcs	r5, r5, #446
 	lsls	r2, r5, #9
 	bl	ftl_memcpy
-	b	.L1746
-.L1714:
-	ldr	r1, .L1749+12
-	ldr	r0, .L1749+16
+	b	.L1748
+.L1716:
+	ldr	r1, .L1751+12
+	ldr	r0, .L1751+16
 	bl	printf
-	b	.L1713
-.L1750:
+	b	.L1715
+.L1752:
 	.align	2
-.L1749:
+.L1751:
 	.word	.LANCHOR183
 	.word	.LANCHOR182
 	.word	8388544
@@ -12998,24 +13014,24 @@ sftl_write:
 	mov	r5, r2
 	add	r6, r6, r4
 	bl	FtlWriteToIDB
-.L1752:
+.L1754:
 	cmp	r4, #256
 	sub	r1, r6, r4
 	mov	r3, r5
-	bhi	.L1754
+	bhi	.L1756
 	mov	r2, r4
 	movs	r0, #0
 	pop	{r4, r5, r6, lr}
 	b	FtlWrite
-.L1754:
+.L1756:
 	mov	r2, #256
 	movs	r0, #0
 	bl	FtlWrite
-	cbnz	r0, .L1751
+	cbnz	r0, .L1753
 	add	r5, r5, #131072
 	sub	r4, r4, #256
-	b	.L1752
-.L1751:
+	b	.L1754
+.L1753:
 	pop	{r4, r5, r6, pc}
 	.size	sftl_write, .-sftl_write
 	.global	g_nand_ops
@@ -14253,9 +14269,9 @@ power_up_flag:
 .LC15:
 	.ascii	"prog read REFRESH: = %x\012\000"
 .LC16:
-	.ascii	"prog read s error: = %x %x %x\012\000"
+	.ascii	"prog read s error: = %x %x %x %x %x\012\000"
 .LC17:
-	.ascii	"prog read d error: = %x %x %x\012\000"
+	.ascii	"prog read d error: = %x %x %x %x %x\012\000"
 	.section	.rodata.FlashReadPages.str1.1,"aMS",%progbits,1
 .LC11:
 	.ascii	"FlashReadPages %x %x error_ecc_bits %d\012\000"
@@ -14333,216 +14349,216 @@ power_up_flag:
 	.section	.rodata.INSERT_DATA_LIST.str1.1,"aMS",%progbits,1
 .LC1:
 	.ascii	"\012!!!!! error @ func:%s - line:%d\012\000"
-	.section	.rodata.__func__.10032,"a",%progbits
+	.section	.rodata.__func__.10007,"a",%progbits
+	.set	.LANCHOR167,. + 0
+	.type	__func__.10007, %object
+	.size	__func__.10007, 29
+__func__.10007:
+	.ascii	"allocate_new_data_superblock\000"
+	.section	.rodata.__func__.10014,"a",%progbits
+	.set	.LANCHOR60,. + 0
+	.type	__func__.10014, %object
+	.size	__func__.10014, 19
+__func__.10014:
+	.ascii	"get_new_active_ppa\000"
+	.section	.rodata.__func__.10027,"a",%progbits
+	.set	.LANCHOR145,. + 0
+	.type	__func__.10027, %object
+	.size	__func__.10027, 16
+__func__.10027:
+	.ascii	"update_vpc_list\000"
+	.section	.rodata.__func__.10034,"a",%progbits
+	.set	.LANCHOR146,. + 0
+	.type	__func__.10034, %object
+	.size	__func__.10034, 20
+__func__.10034:
+	.ascii	"decrement_vpc_count\000"
+	.section	.rodata.__func__.10104,"a",%progbits
 	.set	.LANCHOR169,. + 0
-	.type	__func__.10032, %object
-	.size	__func__.10032, 19
-__func__.10032:
+	.type	__func__.10104, %object
+	.size	__func__.10104, 19
+__func__.10104:
 	.ascii	"FtlGcFreeTempBlock\000"
-	.section	.rodata.__func__.10131,"a",%progbits
+	.section	.rodata.__func__.10203,"a",%progbits
 	.set	.LANCHOR174,. + 0
-	.type	__func__.10131, %object
-	.size	__func__.10131, 23
-__func__.10131:
+	.type	__func__.10203, %object
+	.size	__func__.10203, 23
+__func__.10203:
 	.ascii	"rk_ftl_garbage_collect\000"
-	.section	.rodata.__func__.10399,"a",%progbits
+	.section	.rodata.__func__.10471,"a",%progbits
 	.set	.LANCHOR136,. + 0
-	.type	__func__.10399, %object
-	.size	__func__.10399, 15
-__func__.10399:
+	.type	__func__.10471, %object
+	.size	__func__.10471, 15
+__func__.10471:
 	.ascii	"FlashReadPages\000"
-	.section	.rodata.__func__.10418,"a",%progbits
+	.section	.rodata.__func__.10490,"a",%progbits
 	.set	.LANCHOR141,. + 0
-	.type	__func__.10418, %object
-	.size	__func__.10418, 15
-__func__.10418:
+	.type	__func__.10490, %object
+	.size	__func__.10490, 15
+__func__.10490:
 	.ascii	"FlashProgPages\000"
-	.section	.rodata.__func__.10442,"a",%progbits
+	.section	.rodata.__func__.10514,"a",%progbits
 	.set	.LANCHOR76,. + 0
-	.type	__func__.10442, %object
-	.size	__func__.10442, 17
-__func__.10442:
+	.type	__func__.10514, %object
+	.size	__func__.10514, 17
+__func__.10514:
 	.ascii	"FlashEraseBlocks\000"
-	.section	.rodata.__func__.10561,"a",%progbits
+	.section	.rodata.__func__.10633,"a",%progbits
 	.set	.LANCHOR184,. + 0
-	.type	__func__.10561, %object
-	.size	__func__.10561, 14
-__func__.10561:
+	.type	__func__.10633, %object
+	.size	__func__.10633, 14
+__func__.10633:
 	.ascii	"FtlWriteToIDB\000"
-	.section	.rodata.__func__.9055,"a",%progbits
+	.section	.rodata.__func__.9127,"a",%progbits
 	.set	.LANCHOR168,. + 0
-	.type	__func__.9055, %object
-	.size	__func__.9055, 13
-__func__.9055:
+	.type	__func__.9127, %object
+	.size	__func__.9127, 13
+__func__.9127:
 	.ascii	"FtlProgPages\000"
-	.section	.rodata.__func__.9083,"a",%progbits
+	.section	.rodata.__func__.9155,"a",%progbits
 	.set	.LANCHOR176,. + 0
-	.type	__func__.9083, %object
-	.size	__func__.9083, 9
-__func__.9083:
+	.type	__func__.9155, %object
+	.size	__func__.9155, 9
+__func__.9155:
 	.ascii	"FtlWrite\000"
-	.section	.rodata.__func__.9165,"a",%progbits
+	.section	.rodata.__func__.9237,"a",%progbits
 	.set	.LANCHOR127,. + 0
-	.type	__func__.9165, %object
-	.size	__func__.9165, 14
-__func__.9165:
+	.type	__func__.9237, %object
+	.size	__func__.9237, 14
+__func__.9237:
 	.ascii	"FtlBbt2Bitmap\000"
-	.section	.rodata.__func__.9200,"a",%progbits
+	.section	.rodata.__func__.9272,"a",%progbits
 	.set	.LANCHOR140,. + 0
-	.type	__func__.9200, %object
-	.size	__func__.9200, 11
-__func__.9200:
+	.type	__func__.9272, %object
+	.size	__func__.9272, 11
+__func__.9272:
 	.ascii	"FtlLoadBbt\000"
-	.section	.rodata.__func__.9315,"a",%progbits
+	.section	.rodata.__func__.9387,"a",%progbits
 	.set	.LANCHOR48,. + 0
-	.type	__func__.9315, %object
-	.size	__func__.9315, 17
-__func__.9315:
+	.type	__func__.9387, %object
+	.size	__func__.9387, 17
+__func__.9387:
 	.ascii	"INSERT_FREE_LIST\000"
-	.section	.rodata.__func__.9320,"a",%progbits
+	.section	.rodata.__func__.9392,"a",%progbits
 	.set	.LANCHOR44,. + 0
-	.type	__func__.9320, %object
-	.size	__func__.9320, 17
-__func__.9320:
+	.type	__func__.9392, %object
+	.size	__func__.9392, 17
+__func__.9392:
 	.ascii	"INSERT_DATA_LIST\000"
-	.section	.rodata.__func__.9351,"a",%progbits
+	.section	.rodata.__func__.9423,"a",%progbits
 	.set	.LANCHOR49,. + 0
-	.type	__func__.9351, %object
-	.size	__func__.9351, 17
-__func__.9351:
+	.type	__func__.9423, %object
+	.size	__func__.9423, 17
+__func__.9423:
 	.ascii	"List_remove_node\000"
-	.section	.rodata.__func__.9383,"a",%progbits
+	.section	.rodata.__func__.9455,"a",%progbits
 	.set	.LANCHOR53,. + 0
-	.type	__func__.9383, %object
-	.size	__func__.9383, 22
-__func__.9383:
+	.type	__func__.9455, %object
+	.size	__func__.9455, 22
+__func__.9455:
 	.ascii	"List_update_data_list\000"
-	.section	.rodata.__func__.9392,"a",%progbits
+	.section	.rodata.__func__.9464,"a",%progbits
 	.set	.LANCHOR149,. + 0
-	.type	__func__.9392, %object
-	.size	__func__.9392, 16
-__func__.9392:
+	.type	__func__.9464, %object
+	.size	__func__.9464, 16
+__func__.9464:
 	.ascii	"load_l2p_region\000"
-	.section	.rodata.__func__.9425,"a",%progbits
+	.section	.rodata.__func__.9497,"a",%progbits
 	.set	.LANCHOR80,. + 0
-	.type	__func__.9425, %object
-	.size	__func__.9425, 26
-__func__.9425:
+	.type	__func__.9497, %object
+	.size	__func__.9497, 26
+__func__.9497:
 	.ascii	"ftl_map_blk_alloc_new_blk\000"
-	.section	.rodata.__func__.9436,"a",%progbits
+	.section	.rodata.__func__.9508,"a",%progbits
 	.set	.LANCHOR150,. + 0
-	.type	__func__.9436, %object
-	.size	__func__.9436, 15
-__func__.9436:
+	.type	__func__.9508, %object
+	.size	__func__.9508, 15
+__func__.9508:
 	.ascii	"ftl_map_blk_gc\000"
-	.section	.rodata.__func__.9451,"a",%progbits
+	.section	.rodata.__func__.9523,"a",%progbits
 	.set	.LANCHOR147,. + 0
-	.type	__func__.9451, %object
-	.size	__func__.9451, 31
-__func__.9451:
+	.type	__func__.9523, %object
+	.size	__func__.9523, 31
+__func__.9523:
 	.ascii	"Ftl_write_map_blk_to_last_page\000"
-	.section	.rodata.__func__.9465,"a",%progbits
+	.section	.rodata.__func__.9537,"a",%progbits
 	.set	.LANCHOR148,. + 0
-	.type	__func__.9465, %object
-	.size	__func__.9465, 16
-__func__.9465:
+	.type	__func__.9537, %object
+	.size	__func__.9537, 16
+__func__.9537:
 	.ascii	"FtlMapWritePage\000"
-	.section	.rodata.__func__.9490,"a",%progbits
+	.section	.rodata.__func__.9562,"a",%progbits
 	.set	.LANCHOR56,. + 0
-	.type	__func__.9490, %object
-	.size	__func__.9490, 22
-__func__.9490:
+	.type	__func__.9562, %object
+	.size	__func__.9562, 22
+__func__.9562:
 	.ascii	"select_l2p_ram_region\000"
-	.section	.rodata.__func__.9507,"a",%progbits
+	.section	.rodata.__func__.9579,"a",%progbits
 	.set	.LANCHOR152,. + 0
-	.type	__func__.9507, %object
-	.size	__func__.9507, 9
-__func__.9507:
+	.type	__func__.9579, %object
+	.size	__func__.9579, 9
+__func__.9579:
 	.ascii	"log2phys\000"
-	.section	.rodata.__func__.9571,"a",%progbits
+	.section	.rodata.__func__.9643,"a",%progbits
 	.set	.LANCHOR164,. + 0
-	.type	__func__.9571, %object
-	.size	__func__.9571, 15
-__func__.9571:
+	.type	__func__.9643, %object
+	.size	__func__.9643, 15
+__func__.9643:
 	.ascii	"FtlVpcTblFlush\000"
-	.section	.rodata.__func__.9593,"a",%progbits
+	.section	.rodata.__func__.9665,"a",%progbits
 	.set	.LANCHOR139,. + 0
-	.type	__func__.9593, %object
-	.size	__func__.9593, 14
-__func__.9593:
+	.type	__func__.9665, %object
+	.size	__func__.9665, 14
+__func__.9665:
 	.ascii	"FtlScanSysBlk\000"
-	.section	.rodata.__func__.9642,"a",%progbits
+	.section	.rodata.__func__.9714,"a",%progbits
 	.set	.LANCHOR177,. + 0
-	.type	__func__.9642, %object
-	.size	__func__.9642, 15
-__func__.9642:
+	.type	__func__.9714, %object
+	.size	__func__.9714, 15
+__func__.9714:
 	.ascii	"FtlLoadSysInfo\000"
-	.section	.rodata.__func__.9664,"a",%progbits
+	.section	.rodata.__func__.9736,"a",%progbits
 	.set	.LANCHOR179,. + 0
-	.type	__func__.9664, %object
-	.size	__func__.9664, 18
-__func__.9664:
+	.type	__func__.9736, %object
+	.size	__func__.9736, 18
+__func__.9736:
 	.ascii	"FtlMapTblRecovery\000"
-	.section	.rodata.__func__.9710,"a",%progbits
+	.section	.rodata.__func__.9782,"a",%progbits
 	.set	.LANCHOR153,. + 0
-	.type	__func__.9710, %object
-	.size	__func__.9710, 16
-__func__.9710:
+	.type	__func__.9782, %object
+	.size	__func__.9782, 16
+__func__.9782:
 	.ascii	"FtlReUsePrevPpa\000"
-	.section	.rodata.__func__.9744,"a",%progbits
+	.section	.rodata.__func__.9816,"a",%progbits
 	.set	.LANCHOR154,. + 0
-	.type	__func__.9744, %object
-	.size	__func__.9744, 22
-__func__.9744:
+	.type	__func__.9816, %object
+	.size	__func__.9816, 22
+__func__.9816:
 	.ascii	"FtlRecoverySuperblock\000"
-	.section	.rodata.__func__.9801,"a",%progbits
+	.section	.rodata.__func__.9873,"a",%progbits
 	.set	.LANCHOR59,. + 0
-	.type	__func__.9801, %object
-	.size	__func__.9801, 16
-__func__.9801:
+	.type	__func__.9873, %object
+	.size	__func__.9873, 16
+__func__.9873:
 	.ascii	"make_superblock\000"
-	.section	.rodata.__func__.9822,"a",%progbits
+	.section	.rodata.__func__.9894,"a",%progbits
 	.set	.LANCHOR135,. + 0
-	.type	__func__.9822, %object
-	.size	__func__.9822, 18
-__func__.9822:
+	.type	__func__.9894, %object
+	.size	__func__.9894, 18
+__func__.9894:
 	.ascii	"SupperBlkListInit\000"
-	.section	.rodata.__func__.9849,"a",%progbits
+	.section	.rodata.__func__.9921,"a",%progbits
 	.set	.LANCHOR158,. + 0
-	.type	__func__.9849, %object
-	.size	__func__.9849, 14
-__func__.9849:
+	.type	__func__.9921, %object
+	.size	__func__.9921, 14
+__func__.9921:
 	.ascii	"ftl_check_vpc\000"
-	.section	.rodata.__func__.9914,"a",%progbits
+	.section	.rodata.__func__.9986,"a",%progbits
 	.set	.LANCHOR143,. + 0
-	.type	__func__.9914, %object
-	.size	__func__.9914, 25
-__func__.9914:
+	.type	__func__.9986, %object
+	.size	__func__.9986, 25
+__func__.9986:
 	.ascii	"allocate_data_superblock\000"
-	.section	.rodata.__func__.9935,"a",%progbits
-	.set	.LANCHOR167,. + 0
-	.type	__func__.9935, %object
-	.size	__func__.9935, 29
-__func__.9935:
-	.ascii	"allocate_new_data_superblock\000"
-	.section	.rodata.__func__.9942,"a",%progbits
-	.set	.LANCHOR60,. + 0
-	.type	__func__.9942, %object
-	.size	__func__.9942, 19
-__func__.9942:
-	.ascii	"get_new_active_ppa\000"
-	.section	.rodata.__func__.9955,"a",%progbits
-	.set	.LANCHOR145,. + 0
-	.type	__func__.9955, %object
-	.size	__func__.9955, 16
-__func__.9955:
-	.ascii	"update_vpc_list\000"
-	.section	.rodata.__func__.9962,"a",%progbits
-	.set	.LANCHOR146,. + 0
-	.type	__func__.9962, %object
-	.size	__func__.9962, 20
-__func__.9962:
-	.ascii	"decrement_vpc_count\000"
 	.section	.rodata.decrement_vpc_count.str1.1,"aMS",%progbits,1
 .LC21:
 	.ascii	"decrement_vpc_count %x = %d\012\000"
@@ -14587,5 +14603,5 @@ __func__.9962:
 	.ascii	"\012\000"
 	.section	.rodata.sftl_init.str1.1,"aMS",%progbits,1
 .LC49:
-	.ascii	"SFTL version: 5.0.56 20210329\000"
+	.ascii	"SFTL version: 5.0.58 20220814\000"
 	.hidden	free
diff --git a/drivers/rkflash/rk_sftl_arm_v8.S b/drivers/rkflash/rk_sftl_arm_v8.S
index 8a60a9d..dd88089 100644
--- a/drivers/rkflash/rk_sftl_arm_v8.S
+++ b/drivers/rkflash/rk_sftl_arm_v8.S
@@ -2,7 +2,7 @@
  * Copyright (c) 2018 Fuzhou Rockchip Electronics Co., Ltd
  *
  * SPDX-License-Identifier:    GPL-2.0
- * date: 2021-03-29
+ * date: 2022-08-15
  */
 	.arch armv8-a+nosimd
 	.file	"rk_sftl.c"
@@ -4146,7 +4146,7 @@ FlashProgPages:
 	mov	x24, x22
 .L562:
 	cmp	x19, x21
-	beq	.L583
+	beq	.L585
 	ldr	x1, [x20, #:lo12:.LANCHOR110]
 	ldr	x0, [x22, #:lo12:.LANCHOR112]
 	str	wzr, [x1]
@@ -4178,32 +4178,46 @@ FlashProgPages:
 .L564:
 	ldr	x0, [x19, 16]
 	cbz	x0, .L565
+	ldr	x1, [x24, #:lo12:.LANCHOR112]
 	ldr	w2, [x0]
-	ldr	x0, [x24, #:lo12:.LANCHOR112]
-	ldr	w3, [x0]
-	cmp	w2, w3
+	ldr	w4, [x1]
+	cmp	w2, w4
+	bne	.L566
+	ldr	w5, [x0, 8]
+	ldr	w3, [x1, 8]
+	cmp	w5, w3
 	beq	.L565
-	ldr	w1, [x19, 4]
+.L566:
+	ldr	w3, [x0, 4]
 	adrp	x0, .LC16
+	ldr	w5, [x1, 4]
 	add	x0, x0, :lo12:.LC16
+	ldr	w1, [x19, 4]
 	bl	printf
 	mov	w0, -1
 	str	w0, [x19]
 .L565:
 	ldr	x0, [x19, 8]
-	cbz	x0, .L566
+	cbz	x0, .L567
+	ldr	x1, [x23, #:lo12:.LANCHOR110]
 	ldr	w2, [x0]
-	ldr	x0, [x23, #:lo12:.LANCHOR110]
-	ldr	w3, [x0]
-	cmp	w2, w3
-	beq	.L566
-	ldr	w1, [x19, 4]
+	ldr	w4, [x1]
+	cmp	w2, w4
+	bne	.L568
+	ldr	w5, [x0, 2048]
+	ldr	w3, [x1, 2048]
+	cmp	w5, w3
+	beq	.L567
+.L568:
+	ldr	w3, [x0, 4]
 	adrp	x0, .LC17
+	ldr	w5, [x1, 4]
 	add	x0, x0, :lo12:.LC17
+	ldr	w1, [x19, 4]
 	bl	printf
 	mov	w0, -1
 	str	w0, [x19]
-.L566:
+.L567:
 	add	x19, x19, 32
 	b	.L562
 .L561:
@@ -4225,7 +4239,7 @@ FlashProgPages:
 	ldr	w0, [x29, 120]
 	cmp	w0, 3
 	bls	.L551
-.L585:
+.L587:
 	mov	w0, -1
 	str	w0, [x20]
 	b	.L552
@@ -4239,7 +4253,7 @@ FlashProgPages:
 	mov	w23, -1
 	add	x20, x20, :lo12:.LANCHOR141
 	add	x22, x22, :lo12:.LC6
-	b	.L582
+	b	.L584
 .L555:
 	ldr	w2, [x19, 4]
 	mov	x1, x20
@@ -4259,10 +4273,10 @@ FlashProgPages:
 	mov	w2, w3
 	add	x0, x0, :lo12:.LC8
 	bl	rknand_print_hex
-.L582:
+.L584:
 	cmp	x19, x21
 	bne	.L555
-.L583:
+.L585:
 	ldp	x19, x20, [sp, 16]
 	mov	w0, 0
 	ldp	x21, x22, [sp, 32]
@@ -4274,7 +4288,7 @@ FlashProgPages:
 .L553:
 	ldr	x1, [x20, 8]
 	tst	x1, 63
-	beq	.L569
+	beq	.L571
 	adrp	x0, .LANCHOR110
 	ldr	x26, [x0, #:lo12:.LANCHOR110]
 	cmp	x1, x26
@@ -4307,11 +4321,11 @@ FlashProgPages:
 	add	w1, w24, w1
 	add	x3, x3, 8
 	blr	x5
-	cbnz	w0, .L585
+	cbnz	w0, .L587
 .L552:
 	add	x20, x20, 32
 	b	.L548
-.L569:
+.L571:
 	mov	x26, x1
 	b	.L556
 .L557:
@@ -4351,43 +4365,43 @@ FtlLowFormatEraseBlock:
 	ldrh	w12, [x25, #:lo12:.LANCHOR23]
 	stp	x27, x28, [sp, 80]
 	str	x0, [x29, 112]
-.L587:
+.L589:
 	cmp	w8, w5, uxth
-	bhi	.L591
-	cbz	w24, .L586
+	bhi	.L593
+	cbz	w24, .L588
 	mov	w2, w24
 	ubfiz	x24, x24, 5, 16
 	mov	x26, 0
 	mov	w1, 0
 	mov	x0, x6
 	bl	FlashEraseBlocks
-.L595:
+.L597:
 	ldr	x0, [x21, #:lo12:.LANCHOR78]
 	add	x1, x0, x26
 	ldr	w0, [x0, x26]
 	cmn	w0, #1
-	bne	.L594
+	bne	.L596
 	ldr	w0, [x1, 4]
 	add	w19, w19, 1
 	and	w19, w19, 65535
 	lsr	w0, w0, 10
 	bl	FtlBbmMapBadBlock
-.L594:
+.L596:
 	add	x26, x26, 32
 	cmp	x26, x24
-	bne	.L595
-	cbz	w22, .L608
+	bne	.L597
+	cbz	w22, .L610
 	adrp	x0, .LANCHOR19
 	mov	w26, 1
 	ldrh	w28, [x0, #:lo12:.LANCHOR19]
-.L596:
+.L598:
 	add	x0, x20, :lo12:.LANCHOR2
 	adrp	x27, .LANCHOR12
 	str	x0, [x29, 120]
 	mov	w24, 0
 	add	x0, x27, :lo12:.LANCHOR12
 	str	x0, [x29, 104]
-.L604:
+.L606:
 	ldr	x0, [x29, 120]
 	mov	x5, 0
 	ldr	x6, [x21, #:lo12:.LANCHOR78]
@@ -4398,10 +4412,10 @@ FtlLowFormatEraseBlock:
 	ldr	x8, [x0, #:lo12:.LANCHOR108]
 	ldr	x0, [x29, 112]
 	ldr	x10, [x0, #:lo12:.LANCHOR109]
-.L597:
+.L599:
 	cmp	w7, w5, uxth
-	bhi	.L600
-	cbz	w20, .L586
+	bhi	.L602
+	cbz	w20, .L588
 	mov	w1, w20
 	mov	w3, 1
 	mov	w2, w26
@@ -4409,11 +4423,11 @@ FtlLowFormatEraseBlock:
 	bl	FlashProgPages
 	mov	x27, 0
 	ubfiz	x1, x20, 5, 16
-.L603:
+.L605:
 	ldr	x0, [x21, #:lo12:.LANCHOR78]
 	add	x3, x0, x27
 	ldr	w0, [x0, x27]
-	cbz	w0, .L602
+	cbz	w0, .L604
 	ldr	w0, [x3, 4]
 	add	w19, w19, 1
 	str	x1, [x29, 96]
@@ -4421,36 +4435,36 @@ FtlLowFormatEraseBlock:
 	lsr	w0, w0, 10
 	bl	FtlBbmMapBadBlock
 	ldr	x1, [x29, 96]
-.L602:
+.L604:
 	add	x27, x27, 32
 	cmp	x1, x27
-	bne	.L603
+	bne	.L605
 	add	w24, w24, 1
 	cmp	w28, w24, uxth
-	bhi	.L604
+	bhi	.L606
 	mov	x24, 0
-.L606:
-	cbz	w22, .L605
+.L608:
+	cbz	w22, .L607
 	ldr	x0, [x21, #:lo12:.LANCHOR78]
 	add	x1, x0, x24
 	ldr	w0, [x0, x24]
-	cbnz	w0, .L605
+	cbnz	w0, .L607
 	ldr	w0, [x1, 4]
 	mov	w1, 1
 	lsr	w0, w0, 10
 	bl	FtlFreeSysBlkQueueIn
-.L605:
+.L607:
 	add	x24, x24, 32
 	cmp	x24, x27
-	bne	.L606
+	bne	.L608
 	cmp	w23, 63
 	ccmp	w22, 0, 0, hi
-	beq	.L586
+	beq	.L588
 	ldr	x0, [x21, #:lo12:.LANCHOR78]
 	mov	w2, w20
 	mov	w1, w26
 	bl	FlashEraseBlocks
-.L586:
+.L588:
 	mov	w0, w19
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
@@ -4459,7 +4473,7 @@ FtlLowFormatEraseBlock:
 	ldp	x27, x28, [sp, 80]
 	ldp	x29, x30, [sp], 128
 	ret
-.L591:
+.L593:
 	lsl	x0, x5, 5
 	mov	w1, w23
 	str	wzr, [x6, x0]
@@ -4467,13 +4481,13 @@ FtlLowFormatEraseBlock:
 	bl	V2P_block
 	and	w13, w0, 65535
 	mov	w14, w13
-	cbz	w22, .L588
+	cbz	w22, .L590
 	bl	IsBlkInVendorPart
-	cbnz	w0, .L589
-.L588:
+	cbnz	w0, .L591
+.L590:
 	mov	w0, w14
 	bl	FtlBbmIsBadBlock
-	cbnz	w0, .L590
+	cbnz	w0, .L592
 	ubfiz	x0, x24, 5, 16
 	mul	w1, w24, w12
 	add	x0, x6, x0
@@ -4484,18 +4498,18 @@ FtlLowFormatEraseBlock:
 	add	x1, x11, x1, sxtw 2
 	str	w13, [x0, 4]
 	stp	x10, x1, [x0, 8]
-.L589:
+.L591:
 	add	x5, x5, 1
-	b	.L587
-.L590:
+	b	.L589
+.L592:
 	add	w19, w19, 1
 	and	w19, w19, 65535
-	b	.L589
-.L608:
+	b	.L591
+.L610:
 	mov	w26, 0
 	mov	w28, 2
-	b	.L596
-.L600:
+	b	.L598
+.L602:
 	lsl	x0, x5, 5
 	mov	w1, w23
 	str	wzr, [x6, x0]
@@ -4504,13 +4518,13 @@ FtlLowFormatEraseBlock:
 	bl	V2P_block
 	and	w12, w0, 65535
 	mov	w13, w12
-	cbz	w22, .L598
+	cbz	w22, .L600
 	bl	IsBlkInVendorPart
-	cbnz	w0, .L599
-.L598:
+	cbnz	w0, .L601
+.L600:
 	mov	w0, w13
 	bl	FtlBbmIsBadBlock
-	cbnz	w0, .L599
+	cbnz	w0, .L601
 	ubfiz	x0, x20, 5, 16
 	mul	w1, w20, w11
 	add	x0, x6, x0
@@ -4521,9 +4535,9 @@ FtlLowFormatEraseBlock:
 	add	x1, x10, x1, sxtw 2
 	str	w12, [x0, 4]
 	stp	x8, x1, [x0, 8]
-.L599:
+.L601:
 	add	x5, x5, 1
-	b	.L597
+	b	.L599
 	.size	FtlLowFormatEraseBlock, .-FtlLowFormatEraseBlock
 	.section	.text.FlashTestBlk,"ax",@progbits
 	.align	2
@@ -4535,7 +4549,7 @@ FlashTestBlk:
 	stp	x19, x20, [sp, 16]
 	and	w19, w0, 65535
 	cmp	w19, 11
-	bls	.L632
+	bls	.L634
 	adrp	x20, .LANCHOR111
 	mov	w2, 32
 	mov	w1, 165
@@ -4560,7 +4574,7 @@ FlashTestBlk:
 	mov	w1, w3
 	bl	FlashProgPages
 	ldr	w0, [x29, 32]
-	cbnz	w0, .L633
+	cbnz	w0, .L635
 	add	w0, w19, 1
 	mov	w3, 1
 	str	w0, [x29, 36]
@@ -4571,23 +4585,23 @@ FlashTestBlk:
 	ldr	w0, [x29, 32]
 	cmp	w0, 0
 	csetm	w20, ne
-.L631:
+.L633:
 	mov	w2, 1
 	mov	w1, 0
 	add	x0, x29, 32
 	str	w19, [x29, 36]
 	bl	FlashEraseBlocks
-.L629:
+.L631:
 	mov	w0, w20
 	ldp	x19, x20, [sp, 16]
 	ldp	x29, x30, [sp], 128
 	ret
-.L633:
+.L635:
 	mov	w20, -1
-	b	.L631
-.L632:
+	b	.L633
+.L634:
 	mov	w20, 0
-	b	.L629
+	b	.L631
 	.size	FlashTestBlk, .-FlashTestBlk
 	.section	.text.FtlBbmTblFlush,"ax",@progbits
 	.align	2
@@ -4620,10 +4634,10 @@ FtlBbmTblFlush:
 	add	x27, x27, :lo12:.LANCHOR126
 	mov	w1, 0
 	bl	ftl_memset
-.L636:
+.L638:
 	ldrh	w0, [x26]
 	cmp	w24, w0
-	blt	.L637
+	blt	.L639
 	add	x20, x20, :lo12:.LANCHOR137
 	add	x19, x21, :lo12:.LANCHOR36
 	mov	w2, 16
@@ -4653,7 +4667,7 @@ FtlBbmTblFlush:
 	adrp	x0, .LANCHOR142
 	ldr	w0, [x0, #:lo12:.LANCHOR142]
 	strh	w0, [x27, 14]
-.L638:
+.L640:
 	ldrh	w1, [x19]
 	ldrh	w4, [x27, 10]
 	ldrh	w2, [x19, 2]
@@ -4671,7 +4685,7 @@ FtlBbmTblFlush:
 	ldrh	w1, [x19, 2]
 	sub	w0, w0, #1
 	cmp	w1, w0
-	blt	.L639
+	blt	.L641
 	ldr	w0, [x19, 8]
 	mov	w2, 1
 	ldrh	w1, [x19, 4]
@@ -4690,7 +4704,7 @@ FtlBbmTblFlush:
 	str	w1, [x0, 4]
 	mov	w1, w2
 	bl	FlashEraseBlocks
-.L639:
+.L641:
 	mov	w3, 1
 	mov	x0, x20
 	mov	w2, w3
@@ -4701,7 +4715,7 @@ FtlBbmTblFlush:
 	strh	w0, [x19, 2]
 	ldr	w0, [x20]
 	cmn	w0, #1
-	bne	.L640
+	bne	.L642
 	ldr	w1, [x20, 4]
 	add	w21, w21, 1
 	adrp	x0, .LC19
@@ -4709,15 +4723,15 @@ FtlBbmTblFlush:
 	add	x0, x0, :lo12:.LC19
 	bl	printf
 	cmp	w21, 3
-	bls	.L638
+	bls	.L640
 	ldr	w1, [x20, 4]
 	adrp	x0, .LC20
 	mov	w2, w21
 	add	x0, x0, :lo12:.LC20
 	bl	printf
-.L642:
-	b	.L642
-.L637:
+.L644:
+	b	.L644
+.L639:
 	ldrh	w2, [x27]
 	ldr	x1, [x25], 8
 	ldr	x0, [x19, 8]
@@ -4726,13 +4740,13 @@ FtlBbmTblFlush:
 	add	w24, w24, 1
 	add	x0, x0, x3, sxtw 2
 	bl	ftl_memcpy
-	b	.L636
-.L640:
+	b	.L638
+.L642:
 	add	w24, w24, 1
 	cmp	w24, 1
-	beq	.L638
+	beq	.L640
 	cmp	w0, 256
-	beq	.L638
+	beq	.L640
 	mov	w0, 0
 	ldr	x27, [sp, 80]
 	ldp	x19, x20, [sp, 16]
@@ -4760,7 +4774,7 @@ allocate_data_superblock:
 	add	x0, x27, :lo12:.LANCHOR43
 	stp	x25, x26, [sp, 64]
 	str	x0, [x29, 104]
-.L651:
+.L653:
 	ldr	x1, [x29, 104]
 	adrp	x23, .LANCHOR4
 	ldrh	w0, [x28, #:lo12:.LANCHOR47]
@@ -4768,18 +4782,18 @@ allocate_data_superblock:
 	add	w0, w0, w1
 	ldrh	w1, [x23, #:lo12:.LANCHOR4]
 	cmp	w0, w1
-	ble	.L652
+	ble	.L654
 	adrp	x1, .LANCHOR143
 	adrp	x0, .LC1
 	mov	w2, 2667
 	add	x1, x1, :lo12:.LANCHOR143
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L652:
+.L654:
 	adrp	x0, .LANCHOR52
 	add	x0, x0, :lo12:.LANCHOR52
 	cmp	x19, x0
-	bne	.L678
+	bne	.L680
 	adrp	x1, .LANCHOR94
 	ldrh	w0, [x24]
 	ldr	w1, [x1, #:lo12:.LANCHOR94]
@@ -4788,39 +4802,39 @@ allocate_data_superblock:
 	add	w0, w0, 1
 	add	w1, w0, w1, lsr 2
 	ands	w1, w1, 65535
-	beq	.L653
+	beq	.L655
 	sub	w1, w1, #1
 	and	w1, w1, 65535
-.L653:
+.L655:
 	adrp	x0, .LANCHOR45
 	add	x0, x0, :lo12:.LANCHOR45
 	bl	List_pop_index_node
 	and	w22, w0, 65535
 	ldrh	w0, [x24]
-	cbnz	w0, .L654
+	cbnz	w0, .L656
 	adrp	x1, .LANCHOR143
 	adrp	x0, .LC1
 	mov	w2, 2676
 	add	x1, x1, :lo12:.LANCHOR143
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L654:
+.L656:
 	ldrh	w0, [x24]
 	sub	w0, w0, #1
 	strh	w0, [x24]
 	ldrh	w0, [x23, #:lo12:.LANCHOR4]
 	cmp	w0, w22
-	bls	.L651
+	bls	.L653
 	adrp	x25, .LANCHOR41
 	ubfiz	x20, x22, 1, 16
 	ldr	x0, [x25, #:lo12:.LANCHOR41]
 	ldrh	w21, [x0, x20]
-	cbnz	w21, .L651
+	cbnz	w21, .L653
 	strh	w22, [x19]
 	mov	x0, x19
 	bl	make_superblock
 	ldrb	w0, [x19, 7]
-	cbnz	w0, .L656
+	cbnz	w0, .L658
 	ldr	x0, [x25, #:lo12:.LANCHOR41]
 	mov	w1, -1
 	strh	w1, [x0, x20]
@@ -4831,31 +4845,31 @@ allocate_data_superblock:
 	add	w0, w0, w1
 	ldrh	w1, [x23, #:lo12:.LANCHOR4]
 	cmp	w0, w1
-	ble	.L651
+	ble	.L653
 	mov	w2, 2690
 	adrp	x1, .LANCHOR143
 	adrp	x0, .LC1
 	add	x1, x1, :lo12:.LANCHOR143
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-	b	.L651
-.L678:
-	mov	w1, 0
 	b	.L653
-.L656:
+.L680:
+	mov	w1, 0
+	b	.L655
+.L658:
 	ldrh	w1, [x27, #:lo12:.LANCHOR43]
 	ldrh	w0, [x24]
 	add	w0, w0, w1
 	ldrh	w1, [x23, #:lo12:.LANCHOR4]
 	cmp	w0, w1
-	ble	.L658
+	ble	.L660
 	adrp	x1, .LANCHOR143
 	adrp	x0, .LC1
 	mov	w2, 2693
 	add	x1, x1, :lo12:.LANCHOR143
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L658:
+.L660:
 	adrp	x0, .LANCHOR2
 	adrp	x25, .LANCHOR78
 	add	x26, x19, 16
@@ -4867,53 +4881,53 @@ allocate_data_superblock:
 	add	x1, x3, 8
 	add	x0, x0, 8
 	add	x0, x3, x0
-.L659:
+.L661:
 	cmp	x0, x1
-	bne	.L661
-	cbnz	w21, .L662
+	bne	.L663
+	cbnz	w21, .L664
 	adrp	x1, .LANCHOR143
 	adrp	x0, .LC1
 	mov	w2, 2704
 	add	x1, x1, :lo12:.LANCHOR143
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L662:
+.L664:
 	adrp	x0, .LANCHOR144
 	ldrh	w0, [x0, #:lo12:.LANCHOR144]
 	cmp	w0, w22
-	bne	.L663
+	bne	.L665
 	adrp	x1, .LANCHOR143
 	adrp	x0, .LC1
 	mov	w2, 2706
 	add	x1, x1, :lo12:.LANCHOR143
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L663:
+.L665:
 	ldrb	w0, [x19, 8]
 	adrp	x3, .LANCHOR46
 	adrp	x5, .LANCHOR13
 	adrp	x2, .LANCHOR89
 	adrp	x1, .LANCHOR90
 	ldr	x4, [x3, #:lo12:.LANCHOR46]
-	cbnz	w0, .L664
+	cbnz	w0, .L666
 	ldrh	w0, [x4, x20]
-	cbz	w0, .L665
+	cbz	w0, .L667
 	ldrh	w6, [x5, #:lo12:.LANCHOR13]
 	add	w0, w0, w6
-.L689:
+.L691:
 	strh	w0, [x4, x20]
 	ldr	w0, [x2, #:lo12:.LANCHOR89]
 	add	w0, w0, 1
 	str	w0, [x2, #:lo12:.LANCHOR89]
-.L667:
+.L669:
 	ldr	x0, [x3, #:lo12:.LANCHOR46]
 	ldrh	w3, [x0, x20]
 	adrp	x0, .LANCHOR91
 	ldr	w4, [x0, #:lo12:.LANCHOR91]
 	cmp	w3, w4
-	bls	.L668
+	bls	.L670
 	str	w3, [x0, #:lo12:.LANCHOR91]
-.L668:
+.L670:
 	ldr	w2, [x2, #:lo12:.LANCHOR89]
 	ldr	w1, [x1, #:lo12:.LANCHOR90]
 	ldrh	w0, [x5, #:lo12:.LANCHOR13]
@@ -4932,67 +4946,67 @@ allocate_data_superblock:
 	add	x1, x1, 4
 	add	x2, x0, 4
 	add	x1, x0, x1
-.L669:
+.L671:
 	cmp	x1, x2
-	bne	.L670
+	bne	.L672
 	ldrb	w1, [x19, 8]
 	mov	w2, w21
 	mov	x23, 0
 	bl	FlashEraseBlocks
 	mov	w1, 0
-.L671:
+.L673:
 	cmp	w21, w23, uxth
-	bhi	.L673
-	cbz	w1, .L674
+	bhi	.L675
+	cbz	w1, .L676
 	mov	w0, w22
 	bl	update_multiplier_value
 	bl	FtlBbmTblFlush
-.L674:
+.L676:
 	ldrb	w0, [x19, 7]
-	cbnz	w0, .L675
+	cbnz	w0, .L677
 	adrp	x0, .LANCHOR41
 	mov	w1, -1
 	ldr	x0, [x0, #:lo12:.LANCHOR41]
 	strh	w1, [x0, x20]
-	b	.L651
-.L661:
+	b	.L653
+.L663:
 	ldrh	w2, [x4]
 	stp	xzr, xzr, [x1]
 	cmp	w2, w6
-	beq	.L660
+	beq	.L662
 	ubfiz	x5, x21, 5, 16
 	add	w21, w21, 1
 	add	x5, x3, x5
 	and	w21, w21, 65535
 	lsl	w2, w2, 10
 	str	w2, [x5, 4]
-.L660:
+.L662:
 	add	x1, x1, 32
 	add	x4, x4, 2
-	b	.L659
-.L665:
+	b	.L661
+.L667:
 	mov	w0, 2
-	b	.L689
-.L664:
+	b	.L691
+.L666:
 	ldrh	w0, [x4, x20]
 	add	w0, w0, 1
 	strh	w0, [x4, x20]
 	ldr	w0, [x1, #:lo12:.LANCHOR90]
 	add	w0, w0, 1
 	str	w0, [x1, #:lo12:.LANCHOR90]
-	b	.L667
-.L670:
+	b	.L669
+.L672:
 	ldr	w3, [x2]
 	and	w3, w3, -1024
 	str	w3, [x2], 32
-	b	.L669
-.L673:
+	b	.L671
+.L675:
 	ldr	x2, [x25, #:lo12:.LANCHOR78]
 	lsl	x0, x23, 5
 	add	x3, x2, x0
 	ldr	w2, [x2, x0]
 	cmn	w2, #1
-	bne	.L672
+	bne	.L674
 	add	w1, w1, 1
 	ldr	w0, [x3, 4]
 	stp	w2, w1, [x29, 96]
@@ -5003,11 +5017,11 @@ allocate_data_superblock:
 	ldrb	w0, [x19, 7]
 	sub	w0, w0, #1
 	strb	w0, [x19, 7]
-.L672:
+.L674:
 	add	x23, x23, 1
 	add	x26, x26, 2
-	b	.L671
-.L675:
+	b	.L673
+.L677:
 	adrp	x1, .LANCHOR18
 	adrp	x2, .LANCHOR81
 	strh	wzr, [x19, 2]
@@ -5025,17 +5039,17 @@ allocate_data_superblock:
 	ldr	x1, [x1, #:lo12:.LANCHOR41]
 	strh	w0, [x1, x20]
 	ldrh	w0, [x19, 4]
-	cbz	w0, .L676
+	cbz	w0, .L678
 	ldrb	w0, [x19, 7]
-	cbnz	w0, .L677
-.L676:
+	cbnz	w0, .L679
+.L678:
 	adrp	x1, .LANCHOR143
 	adrp	x0, .LC1
 	mov	w2, 2759
 	add	x1, x1, :lo12:.LANCHOR143
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L677:
+.L679:
 	ldp	x19, x20, [sp, 16]
 	mov	w0, 0
 	ldp	x21, x22, [sp, 32]
@@ -5060,17 +5074,17 @@ FtlGcFreeBadSuperBlk:
 	stp	x19, x20, [sp, 16]
 	stp	x23, x24, [sp, 48]
 	str	x27, [sp, 80]
-	cbz	w0, .L691
+	cbz	w0, .L693
 	adrp	x23, .LANCHOR74
 	add	x24, x23, :lo12:.LANCHOR74
 	mov	w19, 0
-.L692:
+.L694:
 	adrp	x0, .LANCHOR2
 	ldrh	w0, [x0, #:lo12:.LANCHOR2]
 	cmp	w0, w19
-	bhi	.L698
+	bhi	.L700
 	bl	FtlGcReFreshBadBlk
-.L691:
+.L693:
 	mov	w0, 0
 	ldr	x27, [sp, 80]
 	ldp	x19, x20, [sp, 16]
@@ -5079,7 +5093,7 @@ FtlGcFreeBadSuperBlk:
 	ldp	x25, x26, [sp, 64]
 	ldp	x29, x30, [sp], 96
 	ret
-.L698:
+.L700:
 	adrp	x0, .LANCHOR12
 	add	x0, x0, :lo12:.LANCHOR12
 	mov	w1, w25
@@ -5088,19 +5102,19 @@ FtlGcFreeBadSuperBlk:
 	ldrb	w0, [x0, w19, sxtw]
 	bl	V2P_block
 	and	w26, w0, 65535
-.L693:
+.L695:
 	ldrh	w0, [x22]
 	cmp	w0, w20
-	bhi	.L697
+	bhi	.L699
 	add	w19, w19, 1
 	and	w19, w19, 65535
-	b	.L692
-.L697:
+	b	.L694
+.L699:
 	add	x0, x23, :lo12:.LANCHOR74
 	add	w27, w20, 1
 	ldrh	w0, [x0, w20, sxtw 1]
 	cmp	w0, w26
-	bne	.L694
+	bne	.L696
 	mov	w0, w26
 	bl	FtlBbmMapBadBlock
 	bl	FtlBbmTblFlush
@@ -5108,22 +5122,22 @@ FtlGcFreeBadSuperBlk:
 	sxtw	x3, w27
 	and	x4, x20, 65535
 	mov	x0, 0
-.L695:
+.L697:
 	add	w2, w20, w0
 	cmp	w1, w2, uxth
-	bhi	.L696
+	bhi	.L698
 	sub	w1, w1, #1
 	strh	w1, [x22]
-.L694:
-	and	w20, w27, 65535
-	b	.L693
 .L696:
+	and	w20, w27, 65535
+	b	.L695
+.L698:
 	add	x2, x3, x0
 	ldrh	w5, [x24, x2, lsl 1]
 	add	x2, x4, x0
 	add	x0, x0, 1
 	strh	w5, [x24, x2, lsl 1]
-	b	.L695
+	b	.L697
 	.size	FtlGcFreeBadSuperBlk, .-FtlGcFreeBadSuperBlk
 	.section	.text.update_vpc_list,"ax",@progbits
 	.align	2
@@ -5138,42 +5152,42 @@ update_vpc_list:
 	ldr	x1, [x1, #:lo12:.LANCHOR41]
 	ubfiz	x0, x19, 1, 16
 	ldrh	w0, [x1, x0]
-	cbnz	w0, .L704
+	cbnz	w0, .L706
 	adrp	x0, .LANCHOR71
 	ldrh	w1, [x0, #:lo12:.LANCHOR71]
 	cmp	w1, w19
-	bne	.L705
+	bne	.L707
 	mov	w1, -1
 	strh	w1, [x0, #:lo12:.LANCHOR71]
-.L705:
+.L707:
 	adrp	x0, .LANCHOR72
 	ldrh	w1, [x0, #:lo12:.LANCHOR72]
 	cmp	w1, w19
-	bne	.L706
+	bne	.L708
 	mov	w1, -1
 	strh	w1, [x0, #:lo12:.LANCHOR72]
-.L706:
+.L708:
 	adrp	x0, .LANCHOR144
 	ldrh	w1, [x0, #:lo12:.LANCHOR144]
 	cmp	w1, w19
-	bne	.L707
+	bne	.L709
 	mov	w1, -1
 	strh	w1, [x0, #:lo12:.LANCHOR144]
-.L708:
+.L710:
 	adrp	x20, .LANCHOR43
 	mov	w1, w19
 	adrp	x0, .LANCHOR40
 	add	x0, x0, :lo12:.LANCHOR40
 	bl	List_remove_node
 	ldrh	w0, [x20, #:lo12:.LANCHOR43]
-	cbnz	w0, .L710
+	cbnz	w0, .L712
 	adrp	x1, .LANCHOR145
 	adrp	x0, .LC1
 	mov	w2, 2835
 	add	x1, x1, :lo12:.LANCHOR145
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L710:
+.L712:
 	ldrh	w0, [x20, #:lo12:.LANCHOR43]
 	sub	w0, w0, #1
 	strh	w0, [x20, #:lo12:.LANCHOR43]
@@ -5188,39 +5202,39 @@ update_vpc_list:
 	adrp	x1, .LANCHOR4
 	ldrh	w1, [x1, #:lo12:.LANCHOR4]
 	cmp	w0, w1
-	ble	.L714
+	ble	.L716
 	adrp	x1, .LANCHOR145
 	adrp	x0, .LC1
 	mov	w2, 2838
 	add	x1, x1, :lo12:.LANCHOR145
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L714:
+.L716:
 	mov	w0, 1
-	b	.L703
-.L707:
+	b	.L705
+.L709:
 	adrp	x0, .LANCHOR50
 	ldrh	w0, [x0, #:lo12:.LANCHOR50]
 	cmp	w0, w19
-	beq	.L713
+	beq	.L715
 	adrp	x0, .LANCHOR51
 	ldrh	w0, [x0, #:lo12:.LANCHOR51]
 	cmp	w0, w19
-	beq	.L713
+	beq	.L715
 	adrp	x0, .LANCHOR52
 	ldrh	w0, [x0, #:lo12:.LANCHOR52]
 	cmp	w0, w19
-	bne	.L708
-.L713:
+	bne	.L710
+.L715:
 	mov	w0, 0
-.L703:
+.L705:
 	ldp	x19, x20, [sp, 16]
 	ldp	x29, x30, [sp], 32
 	ret
-.L704:
+.L706:
 	mov	w0, w19
 	bl	List_update_data_list
-	b	.L713
+	b	.L715
 	.size	update_vpc_list, .-update_vpc_list
 	.section	.text.decrement_vpc_count,"ax",@progbits
 	.align	2
@@ -5234,12 +5248,12 @@ decrement_vpc_count:
 	str	x21, [sp, 32]
 	mov	w0, 65535
 	cmp	w19, w0
-	beq	.L717
+	beq	.L719
 	adrp	x21, .LANCHOR41
 	ubfiz	x20, x19, 1, 16
 	ldr	x1, [x21, #:lo12:.LANCHOR41]
 	ldrh	w0, [x1, x20]
-	cbnz	w0, .L718
+	cbnz	w0, .L720
 	mov	w2, 0
 	mov	w1, w19
 	adrp	x0, .LC21
@@ -5247,37 +5261,37 @@ decrement_vpc_count:
 	bl	printf
 	ldr	x0, [x21, #:lo12:.LANCHOR41]
 	ldrh	w0, [x0, x20]
-	cbz	w0, .L719
-.L724:
+	cbz	w0, .L721
+.L726:
 	mov	w20, 0
-.L716:
+.L718:
 	mov	w0, w20
 	ldr	x21, [sp, 32]
 	ldp	x19, x20, [sp, 16]
 	ldp	x29, x30, [sp], 48
 	ret
-.L719:
+.L721:
 	mov	w2, 2853
 	adrp	x1, .LANCHOR146
 	adrp	x0, .LC1
 	add	x1, x1, :lo12:.LANCHOR146
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-	b	.L724
-.L718:
+	b	.L726
+.L720:
 	sub	w0, w0, #1
 	strh	w0, [x1, x20]
-.L717:
+.L719:
 	adrp	x21, .LANCHOR130
 	mov	w1, 65535
 	ldrh	w0, [x21, #:lo12:.LANCHOR130]
 	cmp	w0, w1
-	bne	.L721
+	bne	.L723
 	strh	w19, [x21, #:lo12:.LANCHOR130]
-	b	.L724
-.L721:
+	b	.L726
+.L723:
 	cmp	w19, w0
-	beq	.L724
+	beq	.L726
 	bl	update_vpc_list
 	cmp	w0, 0
 	adrp	x1, .LANCHOR39
@@ -5295,16 +5309,16 @@ decrement_vpc_count:
 	ldr	x1, [x1, #:lo12:.LANCHOR41]
 	and	x2, x0, 65535
 	ldrh	w1, [x1, x2, lsl 1]
-	cbnz	w1, .L716
+	cbnz	w1, .L718
 	cmp	w19, w0, uxth
-	beq	.L716
+	beq	.L718
 	mov	w2, 2869
 	adrp	x1, .LANCHOR146
 	adrp	x0, .LC1
 	add	x1, x1, :lo12:.LANCHOR146
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-	b	.L716
+	b	.L718
 	.size	decrement_vpc_count, .-decrement_vpc_count
 	.section	.text.FtlSuperblockPowerLostFix,"ax",@progbits
 	.align	2
@@ -5341,10 +5355,10 @@ FtlSuperblockPowerLostFix:
 	mov	w1, 22136
 	movk	w1, 0x1234, lsl 16
 	str	w1, [x0, 4]
-.L731:
+.L733:
 	ldrh	w0, [x19, 4]
-	cbnz	w0, .L727
-.L728:
+	cbnz	w0, .L729
+.L730:
 	ldrh	w0, [x19]
 	adrp	x1, .LANCHOR41
 	ldrh	w3, [x19, 4]
@@ -5362,12 +5376,12 @@ FtlSuperblockPowerLostFix:
 	ldp	x19, x20, [sp, 16]
 	ldp	x29, x30, [sp], 80
 	ret
-.L727:
+.L729:
 	mov	x0, x19
 	bl	get_new_active_ppa
 	str	w0, [x29, 52]
 	cmn	w0, #1
-	beq	.L728
+	beq	.L730
 	ldr	w0, [x22]
 	mov	w3, 0
 	str	w0, [x21, 4]
@@ -5382,8 +5396,8 @@ FtlSuperblockPowerLostFix:
 	ldrh	w0, [x19]
 	bl	decrement_vpc_count
 	subs	w20, w20, #1
-	bne	.L731
-	b	.L728
+	bne	.L733
+	b	.L730
 	.size	FtlSuperblockPowerLostFix, .-FtlSuperblockPowerLostFix
 	.section	.text.FtlMakeBbt,"ax",@progbits
 	.align	2
@@ -5409,42 +5423,42 @@ FtlMakeBbt:
 	adrp	x0, .LANCHOR9
 	add	x0, x0, :lo12:.LANCHOR9
 	str	x0, [x29, 120]
-.L740:
+.L742:
 	ldr	x0, [x29, 120]
 	ldrh	w0, [x0]
 	cmp	w22, w0
-	bcc	.L746
+	bcc	.L748
 	adrp	x21, .LANCHOR24
 	add	x21, x21, :lo12:.LANCHOR24
 	mov	w19, 0
-.L747:
+.L749:
 	ldrh	w0, [x21]
 	cmp	w0, w19
-	bhi	.L748
+	bhi	.L750
 	add	x21, x20, :lo12:.LANCHOR36
 	mov	w22, 65535
 	ldrh	w19, [x21, 12]
 	sub	w19, w19, #1
 	and	w19, w19, 65535
-.L749:
+.L751:
 	ldrh	w0, [x21, 12]
 	sub	w0, w0, #47
 	cmp	w0, w19
-	bgt	.L753
+	bgt	.L755
 	mov	w0, w19
 	bl	FtlBbmIsBadBlock
 	cmp	w0, 1
-	beq	.L750
+	beq	.L752
 	mov	w0, w19
 	bl	FlashTestBlk
-	cbz	w0, .L751
+	cbz	w0, .L753
 	mov	w0, w19
 	bl	FtlBbmMapBadBlock
-.L750:
+.L752:
 	sub	w19, w19, #1
 	and	w19, w19, 65535
-	b	.L749
-.L746:
+	b	.L751
+.L748:
 	adrp	x2, .LANCHOR113
 	adrp	x0, .LANCHOR105
 	add	x19, x28, :lo12:.LANCHOR137
@@ -5456,7 +5470,7 @@ FtlMakeBbt:
 	stp	x0, x26, [x19, 8]
 	adrp	x23, .LANCHOR16
 	str	x2, [x29, 112]
-	beq	.L741
+	beq	.L743
 	ldrh	w4, [x23, #:lo12:.LANCHOR16]
 	mov	w2, 1
 	madd	w27, w4, w22, w1
@@ -5471,14 +5485,14 @@ FtlMakeBbt:
 	add	w2, w2, 7
 	lsr	w2, w2, 3
 	bl	ftl_memcpy
-.L742:
+.L744:
 	mov	w0, w27
 	add	w22, w22, 1
 	bl	FtlBbmMapBadBlock
 	add	x24, x24, 8
 	add	x21, x21, 2
-	b	.L740
-.L741:
+	b	.L742
+.L743:
 	mov	w1, w22
 	bl	FlashGetBadBlockList
 	ldr	x0, [x19, 8]
@@ -5491,12 +5505,12 @@ FtlMakeBbt:
 	add	x0, x0, :lo12:.LANCHOR126
 	and	w19, w19, 65535
 	str	x0, [x29, 104]
-.L743:
+.L745:
 	ldrh	w0, [x23]
 	madd	w0, w22, w0, w19
 	bl	FtlBbmIsBadBlock
 	cmp	w0, 1
-	beq	.L744
+	beq	.L746
 	ldr	x0, [x29, 112]
 	mov	w2, 16
 	strh	w19, [x21]
@@ -5534,29 +5548,29 @@ FtlMakeBbt:
 	bl	FlashProgPages
 	ldr	w0, [x25]
 	cmn	w0, #1
-	bne	.L742
+	bne	.L744
 	mov	w0, w27
 	bl	FtlBbmMapBadBlock
-	b	.L743
-.L744:
+	b	.L745
+.L746:
 	sub	w19, w19, #1
 	and	w19, w19, 65535
-	b	.L743
-.L748:
+	b	.L745
+.L750:
 	mov	w0, w19
 	add	w19, w19, 1
 	bl	FtlBbmMapBadBlock
 	and	w19, w19, 65535
-	b	.L747
-.L751:
+	b	.L749
+.L753:
 	ldrh	w0, [x21]
 	cmp	w0, w22
-	bne	.L752
+	bne	.L754
 	strh	w19, [x21]
-	b	.L750
-.L752:
+	b	.L752
+.L754:
 	strh	w19, [x21, 4]
-.L753:
+.L755:
 	adrp	x0, .LANCHOR78
 	add	x19, x20, :lo12:.LANCHOR36
 	ldrh	w1, [x20, #:lo12:.LANCHOR36]
@@ -5611,18 +5625,18 @@ js_hash:
 	mov	w0, 42982
 	mov	x3, 0
 	movk	w0, 0x47c6, lsl 16
-.L761:
+.L763:
 	cmp	w1, w3
-	bhi	.L762
+	bhi	.L764
 	ret
-.L762:
+.L764:
 	lsr	w2, w0, 2
 	ldrb	w5, [x4, x3]
 	add	w2, w2, w0, lsl 5
 	add	x3, x3, 1
 	add	w2, w2, w5
 	eor	w0, w0, w2
-	b	.L761
+	b	.L763
 	.size	js_hash, .-js_hash
 	.section	.text.Ftl_write_map_blk_to_last_page,"ax",@progbits
 	.align	2
@@ -5639,16 +5653,16 @@ Ftl_write_map_blk_to_last_page:
 	ldrh	w0, [x0]
 	stp	x23, x24, [sp, 48]
 	cmp	w0, w1
-	bne	.L764
+	bne	.L766
 	ldrh	w0, [x19, 8]
-	cbz	w0, .L765
+	cbz	w0, .L767
 	adrp	x1, .LANCHOR147
 	adrp	x0, .LC1
 	mov	w2, 641
 	add	x1, x1, :lo12:.LANCHOR147
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L765:
+.L767:
 	ldrh	w0, [x19, 8]
 	add	w0, w0, 1
 	strh	w0, [x19, 8]
@@ -5659,14 +5673,14 @@ Ftl_write_map_blk_to_last_page:
 	add	w0, w0, 1
 	strh	wzr, [x19]
 	str	w0, [x19, 48]
-.L766:
+.L768:
 	mov	w0, 0
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
 	ldp	x23, x24, [sp, 48]
 	ldp	x29, x30, [sp], 64
 	ret
-.L764:
+.L766:
 	ubfiz	x0, x0, 1, 16
 	adrp	x2, .LANCHOR113
 	adrp	x24, .LANCHOR105
@@ -5697,9 +5711,9 @@ Ftl_write_map_blk_to_last_page:
 	mov	x0, 0
 	ldr	x3, [x24, #:lo12:.LANCHOR105]
 	mov	w1, 0
-.L767:
+.L769:
 	cmp	w4, w0, uxth
-	bhi	.L769
+	bhi	.L771
 	add	x20, x20, :lo12:.LANCHOR137
 	adrp	x0, .LANCHOR22
 	ldrh	w1, [x0, #:lo12:.LANCHOR22]
@@ -5716,11 +5730,11 @@ Ftl_write_map_blk_to_last_page:
 	strh	w0, [x19, 2]
 	mov	x0, x19
 	bl	ftl_map_blk_gc
-	b	.L766
-.L769:
+	b	.L768
+.L771:
 	ldr	w2, [x23, x0, lsl 2]
 	cmp	w22, w2, lsr 10
-	bne	.L768
+	bne	.L770
 	add	w1, w1, 1
 	and	w1, w1, 65535
 	ubfiz	x2, x1, 1, 16
@@ -5728,9 +5742,9 @@ Ftl_write_map_blk_to_last_page:
 	add	x2, x2, 1
 	ldr	w5, [x23, x0, lsl 2]
 	str	w5, [x3, x2, lsl 2]
-.L768:
+.L770:
 	add	x0, x0, 1
-	b	.L767
+	b	.L769
 	.size	Ftl_write_map_blk_to_last_page, .-Ftl_write_map_blk_to_last_page
 	.section	.text.FtlMapWritePage,"ax",@progbits
 	.align	2
@@ -5755,7 +5769,7 @@ FtlMapWritePage:
 	add	x23, x23, :lo12:.LANCHOR148
 	add	x28, x25, :lo12:.LANCHOR19
 	mov	w21, 0
-.L775:
+.L777:
 	ldr	w0, [x22]
 	ldrh	w1, [x19, 2]
 	add	w0, w0, 1
@@ -5763,35 +5777,35 @@ FtlMapWritePage:
 	ldrh	w0, [x25, #:lo12:.LANCHOR19]
 	sub	w0, w0, #1
 	cmp	w1, w0
-	bge	.L776
+	bge	.L778
 	ldrh	w1, [x19]
 	mov	w0, 65535
 	cmp	w1, w0
-	bne	.L777
-.L776:
+	bne	.L779
+.L778:
 	mov	x0, x19
 	bl	Ftl_write_map_blk_to_last_page
-.L777:
+.L779:
 	ldrh	w1, [x19]
 	ldr	x0, [x19, 16]
 	ldrh	w0, [x0, x1, lsl 1]
-	cbnz	w0, .L778
+	cbnz	w0, .L780
 	adrp	x0, .LC1
 	mov	w2, 700
 	mov	x1, x23
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L778:
+.L780:
 	ldrh	w1, [x19]
 	ldrh	w0, [x19, 10]
 	cmp	w1, w0
-	bcc	.L779
+	bcc	.L781
 	adrp	x0, .LC1
 	mov	w2, 701
 	mov	x1, x23
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L779:
+.L781:
 	ldrh	w1, [x19]
 	adrp	x4, .LANCHOR137
 	ldr	x0, [x19, 16]
@@ -5834,7 +5848,7 @@ FtlMapWritePage:
 	ldr	w1, [x4, #:lo12:.LANCHOR137]
 	strh	w0, [x19, 2]
 	cmn	w1, #1
-	bne	.L780
+	bne	.L782
 	ldr	w1, [x20, 4]
 	adrp	x0, .LC22
 	str	x4, [x29, 104]
@@ -5845,50 +5859,50 @@ FtlMapWritePage:
 	ldrh	w0, [x19, 2]
 	ldr	x2, [x29, 104]
 	cmp	w0, 2
-	bhi	.L781
+	bhi	.L783
 	ldrh	w0, [x28]
 	sub	w0, w0, #1
 	strh	w0, [x19, 2]
-.L781:
+.L783:
 	cmp	w21, 3
-	bls	.L782
+	bls	.L784
 	add	x0, x2, :lo12:.LANCHOR137
 	mov	w2, w21
 	ldr	w1, [x0, 4]
 	adrp	x0, .LC23
 	add	x0, x0, :lo12:.LC23
 	bl	printf
-.L783:
-	b	.L783
-.L782:
+.L785:
+	b	.L785
+.L784:
 	ldr	w0, [x19, 52]
-	cbz	w0, .L775
-.L798:
-	b	.L798
-.L780:
+	cbz	w0, .L777
+.L800:
+	b	.L800
+.L782:
 	ldr	x1, [x19, 40]
 	cmp	w0, 1
 	ldr	w2, [x20, 4]
 	str	w2, [x1, x26]
-	beq	.L786
+	beq	.L788
 	ldr	w0, [x4, #:lo12:.LANCHOR137]
 	cmp	w0, 256
-	beq	.L786
+	beq	.L788
 	ldr	w1, [x19, 56]
-	cbz	w1, .L787
-.L786:
+	cbz	w1, .L789
+.L788:
 	str	wzr, [x19, 56]
-	b	.L775
-.L787:
+	b	.L777
+.L789:
 	cmn	w0, #1
-	bne	.L788
+	bne	.L790
 	adrp	x1, .LANCHOR148
 	adrp	x0, .LC1
 	mov	w2, 745
 	add	x1, x1, :lo12:.LANCHOR148
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L788:
+.L790:
 	ldp	x19, x20, [sp, 16]
 	mov	w0, 0
 	ldp	x21, x22, [sp, 32]
@@ -5915,20 +5929,20 @@ load_l2p_region:
 	stp	x25, x26, [sp, 64]
 	str	x27, [sp, 80]
 	cmp	w0, w20
-	bcs	.L801
+	bcs	.L803
 	adrp	x1, .LANCHOR149
 	adrp	x0, .LC1
 	mov	w2, 485
 	add	x1, x1, :lo12:.LANCHOR149
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L801:
+.L803:
 	adrp	x27, .LANCHOR123
 	ubfiz	x0, x20, 2, 16
 	adrp	x22, .LANCHOR54
 	ldr	x1, [x27, #:lo12:.LANCHOR123]
 	ldr	w23, [x1, x0]
-	cbnz	w23, .L802
+	cbnz	w23, .L804
 	ldr	x0, [x22, #:lo12:.LANCHOR54]
 	lsl	x19, x19, 4
 	adrp	x1, .LANCHOR22
@@ -5941,7 +5955,7 @@ load_l2p_region:
 	add	x1, x0, x19
 	strh	w20, [x0, x19]
 	str	wzr, [x1, 4]
-.L803:
+.L805:
 	mov	w0, 0
 	ldr	x27, [sp, 80]
 	ldp	x19, x20, [sp, 16]
@@ -5950,7 +5964,7 @@ load_l2p_region:
 	ldp	x25, x26, [sp, 64]
 	ldp	x29, x30, [sp], 96
 	ret
-.L802:
+.L804:
 	ldr	x0, [x22, #:lo12:.LANCHOR54]
 	lsl	x19, x19, 4
 	adrp	x26, .LANCHOR137
@@ -5969,7 +5983,7 @@ load_l2p_region:
 	ldr	x25, [x21, 16]
 	ldrh	w0, [x25, 8]
 	cmp	w0, w20
-	beq	.L804
+	beq	.L806
 	mov	w2, w23
 	mov	w1, w20
 	adrp	x0, .LC24
@@ -5987,26 +6001,26 @@ load_l2p_region:
 	mov	w2, 4
 	add	x0, x0, :lo12:.LC25
 	bl	rknand_print_hex
-.L805:
+.L807:
 	ldrh	w0, [x25, 8]
 	cmp	w0, w20
-	beq	.L806
+	beq	.L808
 	adrp	x1, .LANCHOR149
 	adrp	x0, .LC1
 	mov	w2, 508
 	add	x1, x1, :lo12:.LANCHOR149
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L806:
+.L808:
 	ldr	x0, [x22, #:lo12:.LANCHOR54]
 	add	x1, x0, x19
 	str	wzr, [x1, 4]
 	strh	w20, [x0, x19]
-	b	.L803
-.L804:
+	b	.L805
+.L806:
 	ldr	w0, [x26, #:lo12:.LANCHOR137]
 	cmp	w0, 256
-	bne	.L805
+	bne	.L807
 	mov	w2, w23
 	mov	w1, w20
 	adrp	x0, .LC26
@@ -6019,7 +6033,7 @@ load_l2p_region:
 	adrp	x0, .LANCHOR128
 	add	x0, x0, :lo12:.LANCHOR128
 	bl	FtlMapWritePage
-	b	.L805
+	b	.L807
 	.size	load_l2p_region, .-load_l2p_region
 	.section	.text.ftl_map_blk_gc,"ax",@progbits
 	.align	2
@@ -6042,12 +6056,12 @@ ftl_map_blk_gc:
 	ldrh	w2, [x19, 8]
 	sub	w1, w1, #5
 	cmp	w2, w1
-	blt	.L809
+	blt	.L811
 	ubfiz	x0, x0, 1, 16
 	ldrh	w22, [x20, x0]
-	cbz	w22, .L809
+	cbz	w22, .L811
 	ldr	w1, [x19, 52]
-	cbnz	w1, .L809
+	cbnz	w1, .L811
 	mov	w1, 1
 	str	w1, [x19, 52]
 	strh	wzr, [x20, x0]
@@ -6057,31 +6071,31 @@ ftl_map_blk_gc:
 	strh	w0, [x19, 8]
 	ldrh	w0, [x24, #:lo12:.LANCHOR19]
 	cmp	w1, w0
-	bcc	.L810
+	bcc	.L812
 	mov	x0, x19
 	bl	ftl_map_blk_alloc_new_blk
-.L810:
+.L812:
 	adrp	x26, .LANCHOR137
 	adrp	x23, .LANCHOR150
 	add	x27, x26, :lo12:.LANCHOR137
 	add	x23, x23, :lo12:.LANCHOR150
 	mov	w20, 0
-.L811:
+.L813:
 	ldrh	w0, [x19, 6]
 	cmp	w0, w20
-	bhi	.L818
+	bhi	.L820
 	mov	w1, 1
 	mov	w0, w22
 	bl	FtlFreeSysBlkQueueIn
 	str	wzr, [x19, 52]
-.L809:
+.L811:
 	ldrh	w1, [x19, 2]
 	ldrh	w0, [x24, #:lo12:.LANCHOR19]
 	cmp	w1, w0
-	bcc	.L819
+	bcc	.L821
 	mov	x0, x19
 	bl	ftl_map_blk_alloc_new_blk
-.L819:
+.L821:
 	mov	w0, 0
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
@@ -6090,12 +6104,12 @@ ftl_map_blk_gc:
 	ldp	x27, x28, [sp, 80]
 	ldp	x29, x30, [sp], 96
 	ret
-.L818:
+.L820:
 	ubfiz	x0, x20, 2, 16
 	add	x28, x25, x0
 	ldr	w1, [x25, x0]
 	cmp	w22, w1, lsr 10
-	bne	.L812
+	bne	.L814
 	adrp	x2, .LANCHOR106
 	add	x0, x26, :lo12:.LANCHOR137
 	ldr	x2, [x2, #:lo12:.LANCHOR106]
@@ -6109,36 +6123,36 @@ ftl_map_blk_gc:
 	bl	FlashReadPages
 	ldrh	w0, [x21, 8]
 	cmp	w0, w20
-	beq	.L813
+	beq	.L815
 	adrp	x0, .LC1
 	mov	w2, 611
 	mov	x1, x23
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L813:
+.L815:
 	ldr	w0, [x27]
 	cmn	w0, #1
-	bne	.L814
-.L816:
+	bne	.L816
+.L818:
 	str	wzr, [x28]
-.L815:
-	b	.L815
-.L814:
+.L817:
+	b	.L817
+.L816:
 	ldrh	w0, [x21, 8]
 	cmp	w0, w20
-	bne	.L816
+	bne	.L818
 	ldrh	w1, [x21]
 	ldrh	w0, [x19, 4]
 	cmp	w1, w0
-	bne	.L816
+	bne	.L818
 	ldr	x2, [x27, 8]
 	mov	w1, w20
 	mov	x0, x19
 	bl	FtlMapWritePage
-.L812:
+.L814:
 	add	w20, w20, 1
 	and	w20, w20, 65535
-	b	.L811
+	b	.L813
 	.size	ftl_map_blk_gc, .-ftl_map_blk_gc
 	.section	.text.flush_l2p_region,"ax",@progbits
 	.align	2
@@ -6180,27 +6194,27 @@ l2p_flush:
 	str	x21, [sp, 32]
 	mov	w19, 0
 	adrp	x21, .LANCHOR54
-.L828:
+.L830:
 	ldrh	w0, [x20]
 	cmp	w0, w19
-	bhi	.L830
+	bhi	.L832
 	mov	w0, 0
 	ldr	x21, [sp, 32]
 	ldp	x19, x20, [sp, 16]
 	ldp	x29, x30, [sp], 48
 	ret
-.L830:
+.L832:
 	ldr	x1, [x21, #:lo12:.LANCHOR54]
 	ubfiz	x0, x19, 4, 16
 	add	x0, x1, x0
 	ldr	w0, [x0, 4]
-	tbz	w0, #31, .L829
+	tbz	w0, #31, .L831
 	mov	w0, w19
 	bl	flush_l2p_region
-.L829:
+.L831:
 	add	w19, w19, 1
 	and	w19, w19, 65535
-	b	.L828
+	b	.L830
 	.size	l2p_flush, .-l2p_flush
 	.section	.text.log2phys,"ax",@progbits
 	.align	2
@@ -6222,17 +6236,17 @@ log2phys:
 	ldr	w1, [x0, #:lo12:.LANCHOR151]
 	mov	w21, w2
 	cmp	w25, w1
-	bcc	.L833
+	bcc	.L835
 	adrp	x1, .LANCHOR152
 	adrp	x0, .LC1
 	mov	w2, 820
 	add	x1, x1, :lo12:.LANCHOR152
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L833:
+.L835:
 	ldr	w0, [x19, #:lo12:.LANCHOR151]
 	cmp	w25, w0
-	bcs	.L834
+	bcs	.L836
 	adrp	x23, .LANCHOR54
 	add	w24, w24, 7
 	adrp	x0, .LANCHOR32
@@ -6241,10 +6255,10 @@ log2phys:
 	and	w22, w22, 65535
 	ldrh	w1, [x0, #:lo12:.LANCHOR32]
 	mov	x0, 0
-.L835:
+.L837:
 	and	x19, x0, 65535
 	cmp	w19, w1
-	bcc	.L840
+	bcc	.L842
 	bl	select_l2p_ram_region
 	and	x19, x0, 65535
 	ldr	x2, [x23, #:lo12:.LANCHOR54]
@@ -6254,33 +6268,33 @@ log2phys:
 	ldrh	w2, [x2, x1]
 	mov	w1, 65535
 	cmp	w2, w1
-	beq	.L841
+	beq	.L843
 	ldr	w1, [x3, 4]
-	tbz	w1, #31, .L841
+	tbz	w1, #31, .L843
 	bl	flush_l2p_region
-.L841:
+.L843:
 	mov	w1, w26
 	mov	w0, w22
 	bl	load_l2p_region
-	b	.L837
-.L834:
+	b	.L839
+.L836:
 	mov	w0, -1
-	cbnz	w21, .L832
+	cbnz	w21, .L834
 	str	w0, [x20]
-.L832:
+.L834:
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
 	ldp	x23, x24, [sp, 48]
 	ldp	x25, x26, [sp, 64]
 	ldp	x29, x30, [sp], 80
 	ret
-.L840:
+.L842:
 	add	x0, x0, 1
 	add	x3, x2, x0, lsl 4
 	ldrh	w3, [x3, -16]
 	cmp	w3, w22
-	bne	.L835
-.L837:
+	bne	.L837
+.L839:
 	mov	x0, 1
 	ldr	x1, [x23, #:lo12:.LANCHOR54]
 	lsl	x0, x0, x24
@@ -6288,22 +6302,22 @@ log2phys:
 	and	w0, w0, w25
 	and	x0, x0, 65535
 	add	x1, x1, x19, lsl 4
-	cbnz	w21, .L838
+	cbnz	w21, .L840
 	ldr	x1, [x1, 8]
 	ldr	w0, [x1, x0, lsl 2]
 	str	w0, [x20]
-.L839:
+.L841:
 	ldr	x0, [x23, #:lo12:.LANCHOR54]
 	add	x19, x0, x19, lsl 4
 	ldr	w0, [x19, 4]
 	cmn	w0, #1
-	beq	.L843
+	beq	.L845
 	add	w0, w0, 1
 	str	w0, [x19, 4]
-.L843:
+.L845:
 	mov	w0, 0
-	b	.L832
-.L838:
+	b	.L834
+.L840:
 	ldr	x2, [x1, 8]
 	ldr	w3, [x20]
 	str	w3, [x2, x0, lsl 2]
@@ -6312,7 +6326,7 @@ log2phys:
 	str	w0, [x1, 4]
 	adrp	x0, .LANCHOR55
 	strh	w22, [x0, #:lo12:.LANCHOR55]
-	b	.L839
+	b	.L841
 	.size	log2phys, .-log2phys
 	.section	.text.FtlReUsePrevPpa,"ax",@progbits
 	.align	2
@@ -6333,10 +6347,10 @@ FtlReUsePrevPpa:
 	and	w3, w0, 65535
 	ubfiz	x20, x3, 1, 16
 	ldrh	w1, [x2, x20]
-	cbnz	w1, .L847
+	cbnz	w1, .L849
 	adrp	x0, .LANCHOR45
 	ldr	x19, [x0, #:lo12:.LANCHOR45]
-	cbz	x19, .L848
+	cbz	x19, .L850
 	adrp	x2, .LANCHOR39
 	mov	x5, -6148914691236517206
 	movk	x5, 0xaaab, lsl 0
@@ -6349,23 +6363,23 @@ FtlReUsePrevPpa:
 	mul	x19, x19, x5
 	mov	w5, 6
 	and	w19, w19, 65535
-.L849:
+.L851:
 	cmp	w1, w4
-	beq	.L848
+	beq	.L850
 	cmp	w19, w3
-	bne	.L850
+	bne	.L852
 	mov	w1, w19
 	add	x0, x0, :lo12:.LANCHOR45
 	bl	List_remove_node
 	ldrh	w0, [x23, #:lo12:.LANCHOR47]
-	cbnz	w0, .L851
+	cbnz	w0, .L853
 	adrp	x1, .LANCHOR153
 	adrp	x0, .LC1
 	mov	w2, 1742
 	add	x1, x1, :lo12:.LANCHOR153
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L851:
+.L853:
 	ldrh	w0, [x23, #:lo12:.LANCHOR47]
 	sub	w0, w0, #1
 	strh	w0, [x23, #:lo12:.LANCHOR47]
@@ -6375,7 +6389,7 @@ FtlReUsePrevPpa:
 	ldrh	w0, [x1, x20]
 	add	w0, w0, 1
 	strh	w0, [x1, x20]
-.L848:
+.L850:
 	add	x1, x29, 76
 	mov	w2, 1
 	mov	w0, w21
@@ -6385,18 +6399,18 @@ FtlReUsePrevPpa:
 	ldr	x23, [sp, 48]
 	ldp	x29, x30, [sp], 80
 	ret
-.L850:
+.L852:
 	umull	x19, w19, w5
 	ldrh	w19, [x2, x19]
 	cmp	w19, w6
-	beq	.L848
+	beq	.L850
 	add	w1, w1, 1
 	and	w1, w1, 65535
-	b	.L849
-.L847:
+	b	.L851
+.L849:
 	add	w1, w1, 1
 	strh	w1, [x2, x20]
-	b	.L848
+	b	.L850
 	.size	FtlReUsePrevPpa, .-FtlReUsePrevPpa
 	.section	.text.FtlRecoverySuperblock,"ax",@progbits
 	.align	2
@@ -6414,7 +6428,7 @@ FtlRecoverySuperblock:
 	stp	x25, x26, [sp, 64]
 	cmp	w0, w1
 	stp	x27, x28, [sp, 80]
-	beq	.L984
+	beq	.L986
 	ldrb	w0, [x19, 6]
 	str	w0, [x29, 164]
 	adrp	x0, .LANCHOR18
@@ -6422,11 +6436,11 @@ FtlRecoverySuperblock:
 	str	x0, [x29, 128]
 	ldrh	w2, [x0, #:lo12:.LANCHOR18]
 	cmp	w2, w26
-	bne	.L860
+	bne	.L862
 	strh	wzr, [x19, 4]
-.L991:
+.L993:
 	strb	wzr, [x19, 6]
-.L984:
+.L986:
 	ldp	x19, x20, [sp, 16]
 	mov	w0, 0
 	ldp	x21, x22, [sp, 32]
@@ -6435,17 +6449,17 @@ FtlRecoverySuperblock:
 	ldp	x27, x28, [sp, 80]
 	ldp	x29, x30, [sp], 192
 	ret
-.L860:
+.L862:
 	ldrh	w0, [x19, 16]
 	mov	w20, 0
-.L861:
+.L863:
 	cmp	w0, w1
-	beq	.L862
+	beq	.L864
 	mov	w1, 1
 	bl	FtlGetLastWrittenPage
 	mov	w23, w0
 	cmn	w0, #1
-	beq	.L863
+	beq	.L865
 	adrp	x1, .LANCHOR63
 	adrp	x2, .LANCHOR2
 	adrp	x20, .LANCHOR102
@@ -6466,9 +6480,9 @@ FtlRecoverySuperblock:
 	ldrh	w1, [x2, #:lo12:.LANCHOR2]
 	add	x1, x1, 8
 	add	x1, x19, x1, lsl 1
-.L864:
+.L866:
 	cmp	x4, x1
-	bne	.L868
+	bne	.L870
 	mov	w2, 0
 	mov	w1, w22
 	bl	FlashReadPages
@@ -6482,69 +6496,69 @@ FtlRecoverySuperblock:
 	mov	w3, 0
 	sub	w21, w21, #1
 	str	x0, [x29, 144]
-.L869:
+.L871:
 	cmp	w22, w3
-	bne	.L874
+	bne	.L876
 	add	w22, w23, 1
 	ldr	w0, [x4, 4]
 	and	w22, w22, 65535
-.L986:
+.L988:
 	lsr	w0, w0, 10
 	bl	P2V_plane
 	and	w27, w0, 65535
 	ldr	x0, [x29, 128]
 	ldrh	w0, [x0, #:lo12:.LANCHOR18]
 	cmp	w0, w22
-	bne	.L876
+	bne	.L878
 	strh	w22, [x19, 2]
 	strb	wzr, [x19, 6]
 	strh	wzr, [x19, 4]
-.L876:
+.L878:
 	ldr	w0, [x29, 164]
 	cmp	w22, w26
 	cset	w1, eq
 	cmp	w27, w0
 	cset	w0, eq
 	tst	w1, w0
-	beq	.L877
-.L992:
+	beq	.L879
+.L994:
 	mov	w2, w27
 	mov	w1, w22
 	mov	x0, x19
 	bl	ftl_sb_update_avl_pages
-	b	.L984
-.L862:
+	b	.L986
+.L864:
 	add	w20, w20, 1
 	and	w20, w20, 65535
 	add	x0, x19, x20, sxtw 1
 	ldrh	w0, [x0, 16]
-	b	.L861
-.L863:
-	cbz	w26, .L865
+	b	.L863
+.L865:
+	cbz	w26, .L867
 	adrp	x1, .LANCHOR154
 	adrp	x0, .LC1
 	mov	w2, 1809
 	add	x1, x1, :lo12:.LANCHOR154
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L865:
+.L867:
 	ldr	w0, [x29, 164]
 	cmp	w0, 0
 	ccmp	w20, w0, 4, ne
-	beq	.L866
+	beq	.L868
 	adrp	x1, .LANCHOR154
 	adrp	x0, .LC1
 	mov	w2, 1810
 	add	x1, x1, :lo12:.LANCHOR154
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L866:
-	strh	wzr, [x19, 2]
-	b	.L991
 .L868:
+	strh	wzr, [x19, 2]
+	b	.L993
+.L870:
 	ldrh	w3, [x4]
 	cmp	w3, w10
-	beq	.L867
+	beq	.L869
 	ubfiz	x2, x22, 5, 16
 	orr	w3, w23, w3, lsl 10
 	add	x2, x0, x2
@@ -6559,90 +6573,90 @@ FtlRecoverySuperblock:
 	asr	w3, w3, 2
 	add	x3, x7, x3, sxtw 2
 	str	x3, [x2, 16]
-.L867:
+.L869:
 	add	x4, x4, 2
-	b	.L864
-.L874:
+	b	.L866
+.L876:
 	ldr	w0, [x11]
-	cbnz	w0, .L870
+	cbnz	w0, .L872
 	ldr	x8, [x11, 16]
 	ldr	w5, [x8, 4]
 	cmn	w5, #1
-	beq	.L871
+	beq	.L873
 	ldr	w1, [x7]
 	mov	w0, w5
 	bl	ftl_cmp_data_ver
-	cbz	w0, .L871
+	cbz	w0, .L873
 	add	w5, w5, 1
 	str	w5, [x7]
-.L871:
+.L873:
 	ldr	w0, [x8]
 	cmn	w0, #1
-	bne	.L873
+	bne	.L875
 	ubfiz	x3, x3, 5, 16
 	and	w22, w23, 65535
 	add	x3, x4, x3
 	ldr	w0, [x3, 4]
-	b	.L986
-.L870:
+	b	.L988
+.L872:
 	mov	w6, w10
-.L873:
+.L875:
 	add	w3, w3, 1
 	add	x11, x11, 32
 	and	w3, w3, 65535
-	b	.L869
-.L877:
+	b	.L871
+.L879:
 	mov	w0, 65535
 	cmp	w6, w0
-	bne	.L878
+	bne	.L880
 	ldrb	w0, [x19, 8]
-	cbnz	w0, .L879
-.L878:
+	cbnz	w0, .L881
+.L880:
 	adrp	x25, .LANCHOR133
 	and	w28, w23, 65535
 	ldr	w0, [x25, #:lo12:.LANCHOR133]
 	cmn	w0, #1
-	bne	.L880
+	bne	.L882
 	str	w21, [x25, #:lo12:.LANCHOR133]
-.L880:
+.L882:
 	add	w0, w26, 7
 	cmp	w0, w23, uxth
-	bge	.L930
+	bge	.L932
 	sub	w24, w28, #7
 	and	w24, w24, 65535
-.L881:
+.L883:
 	ldr	x0, [x29, 152]
 	mov	w3, 65535
 	mov	w5, 1
 	add	x4, x0, :lo12:.LANCHOR2
-.L882:
+.L884:
 	cmp	w24, w28
-	bhi	.L892
+	bhi	.L894
 	ldrh	w1, [x4]
 	mov	w23, 0
 	ldr	x0, [x20, #:lo12:.LANCHOR102]
 	add	x1, x1, 8
 	ldr	x2, [x29, 168]
 	add	x1, x19, x1, lsl 1
-	b	.L893
-.L930:
+	b	.L895
+.L932:
 	mov	w24, w26
-	b	.L881
-.L884:
+	b	.L883
+.L886:
 	ldrh	w6, [x2]
 	cmp	w6, w3
-	beq	.L883
+	beq	.L885
 	ubfiz	x7, x23, 5, 16
 	add	w23, w23, 1
 	add	x7, x0, x7
 	and	w23, w23, 65535
 	orr	w6, w24, w6, lsl 10
 	str	w6, [x7, 4]
-.L883:
+.L885:
 	add	x2, x2, 2
-.L893:
+.L895:
 	cmp	x1, x2
-	bne	.L884
+	bne	.L886
 	mov	w1, w23
 	mov	w2, 0
 	str	w5, [x29, 112]
@@ -6659,21 +6673,21 @@ FtlRecoverySuperblock:
 	add	x23, x2, x23
 	ldr	x4, [x29, 136]
 	mov	w2, 0
-.L885:
+.L887:
 	cmp	x23, x0
-	bne	.L890
-	cbz	w2, .L891
+	bne	.L892
+	cbz	w2, .L893
 	str	w1, [x25, #:lo12:.LANCHOR133]
-.L891:
+.L893:
 	add	w24, w24, 1
 	and	w24, w24, 65535
-	b	.L882
-.L890:
+	b	.L884
+.L892:
 	ldr	w6, [x0, -16]
-	cbz	w6, .L886
-	cbz	w2, .L879
+	cbz	w6, .L888
+	cbz	w2, .L881
 	str	w1, [x25, #:lo12:.LANCHOR133]
-.L879:
+.L881:
 	adrp	x0, .LANCHOR155
 	mov	w23, w26
 	mov	w1, 1
@@ -6681,7 +6695,7 @@ FtlRecoverySuperblock:
 	strh	w1, [x0, #:lo12:.LANCHOR155]
 	add	x0, x28, :lo12:.LANCHOR133
 	str	x0, [x29, 104]
-.L894:
+.L896:
 	ldr	x1, [x29, 152]
 	mov	w24, 0
 	ldr	x0, [x20, #:lo12:.LANCHOR102]
@@ -6690,9 +6704,9 @@ FtlRecoverySuperblock:
 	ldrh	w1, [x1, #:lo12:.LANCHOR2]
 	add	x1, x1, 8
 	add	x1, x19, x1, lsl 1
-.L895:
+.L897:
 	cmp	x1, x2
-	bne	.L897
+	bne	.L899
 	mov	w2, 0
 	mov	w1, w24
 	bl	FlashReadPages
@@ -6702,62 +6716,62 @@ FtlRecoverySuperblock:
 	adrp	x0, .LANCHOR156
 	add	x0, x0, :lo12:.LANCHOR156
 	str	x0, [x29, 120]
-.L898:
+.L900:
 	ldr	x0, [x29, 112]
 	cmp	x25, x0
-	bne	.L924
+	bne	.L926
 	ldr	x0, [x29, 128]
 	add	w23, w23, 1
 	and	w23, w23, 65535
 	ldrh	w0, [x0, #:lo12:.LANCHOR18]
 	cmp	w0, w23
-	bne	.L894
+	bne	.L896
 	ldr	x0, [x29, 152]
 	mov	w2, 65535
 	strh	w23, [x19, 2]
 	strh	wzr, [x19, 4]
 	ldrh	w1, [x0, #:lo12:.LANCHOR2]
 	mov	w0, 0
-.L925:
+.L927:
 	cmp	w0, w1
-	beq	.L984
+	beq	.L986
 	ldr	x4, [x29, 168]
 	ldrh	w3, [x4], 2
 	str	x4, [x29, 168]
 	cmp	w3, w2
-	beq	.L926
+	beq	.L928
 	strb	w0, [x19, 6]
-	b	.L984
-.L886:
+	b	.L986
+.L888:
 	ldr	x6, [x0]
 	ldrh	w7, [x6]
 	cmp	w7, w3
-	beq	.L889
+	beq	.L891
 	ldr	w6, [x6, 4]
 	cmn	w6, #1
 	csel	w1, w1, w6, eq
 	csel	w2, w2, w5, eq
-.L889:
+.L891:
 	add	x0, x0, 32
-	b	.L885
-.L892:
+	b	.L887
+.L894:
 	mov	w0, -1
 	str	w0, [x25, #:lo12:.LANCHOR133]
-	b	.L879
-.L897:
+	b	.L881
+.L899:
 	ldrh	w3, [x2]
 	cmp	w3, w5
-	beq	.L896
+	beq	.L898
 	ubfiz	x4, x24, 5, 16
 	add	w24, w24, 1
 	add	x4, x0, x4
 	and	w24, w24, 65535
 	orr	w3, w23, w3, lsl 10
 	str	w3, [x4, 4]
-.L896:
+.L898:
 	add	x2, x2, 2
-	b	.L895
-.L924:
+	b	.L897
+.L926:
 	ldr	x4, [x20, #:lo12:.LANCHOR102]
 	add	x4, x4, x25
 	ldr	w5, [x4, 4]
@@ -6766,38 +6780,38 @@ FtlRecoverySuperblock:
 	bl	P2V_plane
 	and	w0, w0, 65535
 	cmp	w23, w26
-	bcc	.L899
+	bcc	.L901
 	ldr	w1, [x29, 164]
 	ccmp	w1, w0, 0, eq
-	bhi	.L899
+	bhi	.L901
 	cmp	w23, w22
 	ccmp	w27, w0, 0, eq
-	beq	.L900
+	beq	.L902
 	ldr	w0, [x4]
 	cmn	w0, #1
-	beq	.L901
+	beq	.L903
 	ldr	x3, [x4, 16]
 	mov	w0, 61589
 	ldrh	w1, [x3]
 	cmp	w1, w0
-	beq	.L902
+	beq	.L904
 	ldrh	w0, [x19]
-.L988:
+.L990:
 	bl	decrement_vpc_count
-	b	.L899
-.L902:
+	b	.L901
+.L904:
 	ldr	w21, [x3, 4]
 	cmn	w21, #1
-	beq	.L903
+	beq	.L905
 	ldr	x0, [x29, 144]
 	ldr	w1, [x0, #:lo12:.LANCHOR82]
 	mov	w0, w21
 	bl	ftl_cmp_data_ver
-	cbz	w0, .L903
+	cbz	w0, .L905
 	ldr	x1, [x29, 144]
 	add	w0, w21, 1
 	str	w0, [x1, #:lo12:.LANCHOR82]
-.L903:
+.L905:
 	ldp	w24, w0, [x3, 8]
 	add	x1, x29, 184
 	str	w0, [x29, 180]
@@ -6807,12 +6821,12 @@ FtlRecoverySuperblock:
 	ldr	w1, [x28, #:lo12:.LANCHOR133]
 	ldr	w3, [x29, 180]
 	cmn	w1, #1
-	beq	.L904
+	beq	.L906
 	mov	w0, w21
 	bl	ftl_cmp_data_ver
-	cbz	w0, .L904
+	cbz	w0, .L906
 	cmn	w3, #1
-	beq	.L905
+	beq	.L907
 	ldr	x0, [x20, #:lo12:.LANCHOR102]
 	mov	w2, 0
 	mov	w1, 1
@@ -6826,15 +6840,15 @@ FtlRecoverySuperblock:
 	add	x3, x0, x25
 	ldr	w0, [x0, x25]
 	cmn	w0, #1
-	bne	.L906
-.L907:
+	bne	.L908
+.L909:
 	mov	w0, -1
 	str	w0, [x29, 180]
-.L914:
+.L916:
 	ldr	w3, [x29, 180]
 	cmn	w3, #1
-	beq	.L899
-.L929:
+	beq	.L901
+.L931:
 	lsr	w0, w3, 10
 	bl	P2V_block_in_plane
 	and	w24, w0, 65535
@@ -6842,7 +6856,7 @@ FtlRecoverySuperblock:
 	mov	w3, w24
 	ldrh	w0, [x0, #:lo12:.LANCHOR4]
 	cmp	w0, w24
-	bhi	.L920
+	bhi	.L922
 	mov	w2, 2066
 	adrp	x1, .LANCHOR154
 	adrp	x0, .LC1
@@ -6851,50 +6865,50 @@ FtlRecoverySuperblock:
 	str	w24, [x29, 136]
 	bl	printf
 	ldr	w3, [x29, 136]
-.L920:
+.L922:
 	adrp	x1, .LANCHOR41
 	ubfiz	x0, x24, 1, 16
 	ldr	x1, [x1, #:lo12:.LANCHOR41]
 	ldrh	w0, [x1, x0]
-	cbz	w0, .L921
+	cbz	w0, .L923
 	mov	w0, w3
-	b	.L988
-.L905:
+	b	.L990
+.L907:
 	ldp	w1, w0, [x29, 184]
 	cmp	w1, w0
-	bne	.L899
+	bne	.L901
 	mov	w2, 1
 	add	x1, x29, 180
 	mov	w0, w24
 	bl	log2phys
-.L899:
+.L901:
 	add	x25, x25, 32
-	b	.L898
-.L906:
+	b	.L900
+.L908:
 	ldr	w0, [x4, 8]
 	cmp	w24, w0
-	bne	.L907
+	bne	.L909
 	ldr	w0, [x4, 4]
 	str	w0, [x29, 136]
 	str	x4, [x29, 96]
 	uxtw	x1, w0
 	ldr	w0, [x28, #:lo12:.LANCHOR133]
 	bl	ftl_cmp_data_ver
-	cbz	w0, .L907
+	cbz	w0, .L909
 	ldp	w0, w1, [x29, 184]
 	ldr	x4, [x29, 96]
 	cmp	w0, w1
 	ldr	w1, [x29, 180]
-	bne	.L909
-.L987:
+	bne	.L911
+.L989:
 	mov	w0, w24
 	bl	FtlReUsePrevPpa
-	b	.L907
-.L909:
+	b	.L909
+.L911:
 	cmp	w0, w1
-	beq	.L907
+	beq	.L909
 	cmn	w0, #1
-	beq	.L910
+	beq	.L912
 	ldr	x4, [x3, 16]
 	mov	w2, 0
 	str	w0, [x3, 4]
@@ -6903,70 +6917,70 @@ FtlRecoverySuperblock:
 	mov	x0, x3
 	bl	FlashReadPages
 	ldr	x4, [x29, 96]
-.L911:
+.L913:
 	ldr	x0, [x20, #:lo12:.LANCHOR102]
 	ldr	w0, [x0, x25]
 	cmn	w0, #1
-	beq	.L912
+	beq	.L914
 	ldr	x0, [x29, 104]
 	ldr	w3, [x4, 4]
 	mov	w1, w3
 	ldr	w0, [x0]
 	bl	ftl_cmp_data_ver
-	cbz	w0, .L912
+	cbz	w0, .L914
 	ldr	w0, [x29, 136]
 	mov	w1, w3
 	bl	ftl_cmp_data_ver
-	cbz	w0, .L907
-.L912:
+	cbz	w0, .L909
+.L914:
 	ldr	w1, [x29, 180]
-	b	.L987
-.L910:
+	b	.L989
+.L912:
 	str	w0, [x3]
-	b	.L911
-.L904:
+	b	.L913
+.L906:
 	ldp	w1, w0, [x29, 184]
 	cmp	w1, w0
-	beq	.L914
-	cmn	w3, #1
 	beq	.L916
+	cmn	w3, #1
+	beq	.L918
 	adrp	x0, .LANCHOR7
 	ldr	w0, [x0, #:lo12:.LANCHOR7]
 	cmp	w0, w3, lsr 10
-	bhi	.L916
+	bhi	.L918
 	adrp	x0, .LC27
 	mov	w1, w3
 	add	x0, x0, :lo12:.LC27
-.L990:
+.L992:
 	bl	printf
-	b	.L899
-.L916:
+	b	.L901
+.L918:
 	mov	w2, 1
 	add	x1, x29, 188
 	mov	w0, w24
 	bl	log2phys
 	ldr	w3, [x29, 184]
 	cmn	w3, #1
-	beq	.L914
+	beq	.L916
 	ldr	w0, [x29, 180]
 	cmp	w3, w0
-	beq	.L929
+	beq	.L931
 	lsr	w0, w3, 10
 	bl	P2V_block_in_plane
 	adrp	x1, .LANCHOR50
 	and	w0, w0, 65535
 	ldrh	w1, [x1, #:lo12:.LANCHOR50]
 	cmp	w1, w0
-	beq	.L919
+	beq	.L921
 	adrp	x1, .LANCHOR51
 	ldrh	w1, [x1, #:lo12:.LANCHOR51]
 	cmp	w1, w0
-	beq	.L919
+	beq	.L921
 	adrp	x1, .LANCHOR52
 	ldrh	w1, [x1, #:lo12:.LANCHOR52]
 	cmp	w1, w0
-	bne	.L914
-.L919:
+	bne	.L916
+.L921:
 	ldr	x0, [x20, #:lo12:.LANCHOR102]
 	mov	w2, 0
 	mov	w1, 1
@@ -6977,54 +6991,54 @@ FtlRecoverySuperblock:
 	ldr	x0, [x20, #:lo12:.LANCHOR102]
 	ldr	w0, [x0]
 	cmn	w0, #1
-	beq	.L914
+	beq	.L916
 	ldr	x4, [x29, 136]
 	mov	w0, w21
 	ldr	w1, [x4, 4]
 	bl	ftl_cmp_data_ver
-	cbnz	w0, .L914
+	cbnz	w0, .L916
 	mov	w2, 1
 	add	x1, x29, 184
 	mov	w0, w24
 	bl	log2phys
-	b	.L914
-.L921:
+	b	.L916
+.L923:
 	adrp	x0, .LC28
 	mov	w1, w24
 	add	x0, x0, :lo12:.LC28
-	b	.L990
-.L901:
+	b	.L992
+.L903:
 	ldr	x0, [x29, 120]
 	ldr	w0, [x0]
 	cmp	w0, 31
-	bhi	.L922
+	bhi	.L924
 	adrp	x1, .LANCHOR157
 	add	x1, x1, :lo12:.LANCHOR157
 	str	w5, [x1, w0, uxtw 2]
 	add	w0, w0, 1
 	ldr	x1, [x29, 120]
 	str	w0, [x1]
-.L922:
+.L924:
 	ldrh	w0, [x19]
 	bl	decrement_vpc_count
 	ldr	w0, [x28, #:lo12:.LANCHOR133]
 	cmn	w0, #1
-	bne	.L923
-.L989:
+	bne	.L925
+.L991:
 	str	w21, [x28, #:lo12:.LANCHOR133]
-	b	.L899
-.L923:
+	b	.L901
+.L925:
 	cmp	w21, w0
-	bcs	.L899
-	b	.L989
-.L926:
+	bcs	.L901
+	b	.L991
+.L928:
 	add	w0, w0, 1
 	and	w0, w0, 65535
-	b	.L925
-.L900:
+	b	.L927
+.L902:
 	strb	w27, [x19, 6]
 	strh	w22, [x19, 2]
-	b	.L992
+	b	.L994
 	.size	FtlRecoverySuperblock, .-FtlRecoverySuperblock
 	.section	.text.ftl_check_vpc,"ax",@progbits
 	.align	2
@@ -7052,10 +7066,10 @@ ftl_check_vpc:
 	mov	w1, 0
 	mov	x0, x19
 	bl	ftl_memset
-.L994:
+.L996:
 	ldr	w0, [x23]
 	cmp	w22, w0
-	bcc	.L996
+	bcc	.L998
 	adrp	x22, .LANCHOR4
 	adrp	x24, .LC30
 	add	x22, x22, :lo12:.LANCHOR4
@@ -7064,13 +7078,13 @@ ftl_check_vpc:
 	mov	w23, 0
 	mov	w19, 0
 	adrp	x25, .LANCHOR41
-.L997:
+.L999:
 	ldrh	w0, [x22]
 	cmp	w0, w19
-	bhi	.L999
+	bhi	.L1001
 	adrp	x0, .LANCHOR45
 	ldr	x19, [x0, #:lo12:.LANCHOR45]
-	cbz	x19, .L1000
+	cbz	x19, .L1002
 	adrp	x0, .LANCHOR47
 	adrp	x25, .LC31
 	add	x20, x20, :lo12:check_vpc_table
@@ -7088,17 +7102,17 @@ ftl_check_vpc:
 	movk	x1, 0xaaab, lsl 0
 	mul	x19, x19, x1
 	and	w19, w19, 65535
-.L1001:
+.L1003:
 	cmp	w22, w26
-	bne	.L1003
-.L1000:
-	cbz	w23, .L993
+	bne	.L1005
+.L1002:
+	cbz	w23, .L995
 	adrp	x0, .LC1
 	mov	w2, 2394
 	add	x1, x21, :lo12:.LANCHOR158
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L993:
+.L995:
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
 	ldp	x23, x24, [sp, 48]
@@ -7106,31 +7120,31 @@ ftl_check_vpc:
 	ldp	x27, x28, [sp, 80]
 	ldp	x29, x30, [sp], 112
 	ret
-.L996:
+.L998:
 	mov	w2, 0
 	add	x1, x29, 108
 	mov	w0, w22
 	bl	log2phys
 	ldr	w0, [x29, 108]
 	cmn	w0, #1
-	beq	.L995
+	beq	.L997
 	lsr	w0, w0, 10
 	bl	P2V_block_in_plane
 	and	x0, x0, 65535
 	ldrh	w1, [x19, x0, lsl 1]
 	add	w1, w1, 1
 	strh	w1, [x19, x0, lsl 1]
-.L995:
+.L997:
 	add	w22, w22, 1
-	b	.L994
-.L999:
+	b	.L996
+.L1001:
 	ldr	x0, [x25, #:lo12:.LANCHOR41]
 	ubfiz	x28, x19, 1, 16
 	sxtw	x27, w19
 	ldrh	w2, [x0, x28]
 	ldrh	w3, [x26, x27, lsl 1]
 	cmp	w2, w3
-	beq	.L998
+	beq	.L1000
 	mov	w1, w19
 	mov	x0, x24
 	bl	printf
@@ -7138,34 +7152,34 @@ ftl_check_vpc:
 	mov	w1, 65535
 	ldrh	w0, [x0, x28]
 	cmp	w0, w1
-	beq	.L998
+	beq	.L1000
 	ldrh	w1, [x26, x27, lsl 1]
 	cmp	w1, w0
 	csinc	w23, w23, wzr, ls
-.L998:
+.L1000:
 	add	w19, w19, 1
 	and	w19, w19, 65535
-	b	.L997
-.L1003:
+	b	.L999
+.L1005:
 	ldr	x1, [x27, #:lo12:.LANCHOR41]
 	ubfiz	x0, x19, 1, 16
 	ldrh	w2, [x1, x0]
-	cbz	w2, .L1002
+	cbz	w2, .L1004
 	ldrh	w3, [x20, w19, sxtw 1]
 	mov	w23, 1
 	mov	w1, w19
 	mov	x0, x25
 	bl	printf
-.L1002:
+.L1004:
 	ldr	x0, [x24, #:lo12:.LANCHOR39]
 	umull	x19, w19, w28
 	ldrh	w19, [x0, x19]
 	mov	w0, 65535
 	cmp	w19, w0
-	beq	.L1000
+	beq	.L1002
 	add	w22, w22, 1
 	and	w22, w22, 65535
-	b	.L1001
+	b	.L1003
 	.size	ftl_check_vpc, .-ftl_check_vpc
 	.section	.text.ftl_scan_all_data,"ax",@progbits
 	.align	2
@@ -7187,32 +7201,32 @@ ftl_scan_all_data:
 	add	x21, x21, :lo12:.LANCHOR151
 	str	x23, [sp, 64]
 	bl	printf
-.L1019:
+.L1021:
 	ldr	w0, [x21]
 	cmp	w19, w0
-	bcc	.L1025
+	bcc	.L1027
 	ldp	x19, x20, [sp, 32]
 	ldp	x21, x22, [sp, 48]
 	ldp	x29, x30, [sp, 16]
 	ldr	x23, [sp, 64]
 	add	sp, sp, 96
 	ret
-.L1025:
+.L1027:
 	mov	w2, 0
 	add	x1, x29, 76
 	mov	w0, w19
 	bl	log2phys
 	tst	x19, 2047
-	bne	.L1020
+	bne	.L1022
 	ldr	w2, [x29, 76]
 	adrp	x0, .LC33
 	mov	w1, w19
 	add	x0, x0, :lo12:.LC33
 	bl	printf
-.L1020:
+.L1022:
 	ldr	w1, [x29, 76]
 	cmn	w1, #1
-	beq	.L1022
+	beq	.L1024
 	add	x0, x20, :lo12:.LANCHOR137
 	str	wzr, [x20, #:lo12:.LANCHOR137]
 	mov	w2, 0
@@ -7229,11 +7243,11 @@ ftl_scan_all_data:
 	ldr	w0, [x20, #:lo12:.LANCHOR137]
 	cmp	w0, 256
 	ccmn	w0, #1, 4, ne
-	beq	.L1023
+	beq	.L1025
 	ldr	w0, [x23, 8]
 	cmp	w19, w0
-	beq	.L1022
-.L1023:
+	beq	.L1024
+.L1025:
 	ldp	x1, x0, [x22, 8]
 	ldr	w2, [x1, 4]
 	str	w2, [sp]
@@ -7245,9 +7259,9 @@ ftl_scan_all_data:
 	add	x0, x0, :lo12:.LC34
 	mov	w1, w19
 	bl	printf
-.L1022:
+.L1024:
 	add	w19, w19, 1
-	b	.L1019
+	b	.L1021
 	.size	ftl_scan_all_data, .-ftl_scan_all_data
 	.section	.text.FtlGcScanTempBlk,"ax",@progbits
 	.align	2
@@ -7266,28 +7280,28 @@ FtlGcScanTempBlk:
 	stp	x23, x24, [sp, 48]
 	cmp	w20, w0
 	str	x27, [sp, 80]
-	beq	.L1048
-	cbnz	w20, .L1028
-.L1029:
+	beq	.L1050
+	cbnz	w20, .L1030
+.L1031:
 	bl	FtlGcPageVarInit
-	b	.L1030
-.L1048:
+	b	.L1032
+.L1050:
 	mov	w20, 0
-.L1028:
+.L1030:
 	adrp	x0, .LANCHOR18
 	ldrh	w0, [x0, #:lo12:.LANCHOR18]
 	cmp	w0, w1
-	beq	.L1029
-.L1030:
+	beq	.L1031
+.L1032:
 	adrp	x26, .LANCHOR151
 	add	x26, x26, :lo12:.LANCHOR151
-.L1045:
+.L1047:
 	ldrh	w1, [x19]
 	mov	w0, 65535
 	strb	wzr, [x19, 8]
 	cmp	w1, w0
-	beq	.L1031
-.L1047:
+	beq	.L1033
+.L1049:
 	adrp	x1, .LANCHOR63
 	adrp	x24, .LANCHOR102
 	add	x4, x19, 16
@@ -7305,24 +7319,24 @@ FtlGcScanTempBlk:
 	ldrh	w1, [x1, #:lo12:.LANCHOR2]
 	add	x1, x1, 8
 	add	x1, x19, x1, lsl 1
-.L1032:
+.L1034:
 	cmp	x1, x4
-	bne	.L1034
+	bne	.L1036
 	mov	w1, w21
 	ubfiz	x21, x21, 5, 16
 	mov	x22, 0
 	mov	w2, 0
 	bl	FlashReadPages
-.L1035:
+.L1037:
 	cmp	x21, x22
-	bne	.L1046
+	bne	.L1048
 	adrp	x0, .LANCHOR18
 	add	w20, w20, 1
 	and	w20, w20, 65535
 	ldrh	w0, [x0, #:lo12:.LANCHOR18]
 	cmp	w0, w20
-	bhi	.L1047
-.L1031:
+	bhi	.L1049
+.L1033:
 	strh	w20, [x19, 2]
 	mov	w0, -1
 	strb	wzr, [x19, 6]
@@ -7339,10 +7353,10 @@ FtlGcScanTempBlk:
 	ldp	x25, x26, [sp, 64]
 	ldp	x29, x30, [sp], 144
 	ret
-.L1034:
+.L1036:
 	ldrh	w3, [x4]
 	cmp	w3, w10
-	beq	.L1033
+	beq	.L1035
 	ubfiz	x2, x21, 5, 16
 	orr	w3, w20, w3, lsl 10
 	add	x2, x0, x2
@@ -7357,25 +7371,25 @@ FtlGcScanTempBlk:
 	asr	w3, w3, 2
 	add	x3, x7, x3, sxtw 2
 	str	x3, [x2, 16]
-.L1033:
+.L1035:
 	add	x4, x4, 2
-	b	.L1032
-.L1046:
+	b	.L1034
+.L1048:
 	ldr	x0, [x24, #:lo12:.LANCHOR102]
 	add	x1, x0, x22
 	ldr	w0, [x0, x22]
 	ldr	w27, [x1, 4]
 	ldr	x23, [x1, 16]
-	cbnz	w0, .L1036
+	cbnz	w0, .L1038
 	ldrh	w1, [x23]
 	mov	w0, 65535
 	cmp	w1, w0
-	beq	.L1058
+	beq	.L1060
 	ldr	w0, [x23, 8]
 	ldr	w1, [x26]
 	cmp	w0, w1
-	bls	.L1038
-.L1058:
+	bls	.L1040
+.L1060:
 	adrp	x0, .LANCHOR41
 	ldrh	w1, [x19]
 	mov	w20, 0
@@ -7388,26 +7402,26 @@ FtlGcScanTempBlk:
 	strh	w0, [x19]
 	strh	w0, [x1, #:lo12:.LANCHOR144]
 	bl	FtlGcPageVarInit
-	b	.L1045
-.L1038:
+	b	.L1047
+.L1040:
 	add	x1, x29, 108
 	mov	w2, 0
 	bl	log2phys
 	ldr	w0, [x23, 12]
 	ldr	w1, [x29, 108]
 	cmp	w0, w1
-	beq	.L1040
-.L1042:
+	beq	.L1042
+.L1044:
 	ldr	w2, [x23, 8]
-.L1059:
+.L1061:
 	ldr	w0, [x23, 12]
 	mov	w1, w27
 	add	x22, x22, 32
 	bl	FtlGcUpdatePage
-	b	.L1035
-.L1040:
+	b	.L1037
+.L1042:
 	cmn	w0, #1
-	beq	.L1042
+	beq	.L1044
 	str	w0, [x29, 116]
 	adrp	x0, .LANCHOR109
 	mov	w2, 0
@@ -7426,25 +7440,25 @@ FtlGcScanTempBlk:
 	add	x2, x2, x22
 	mov	x0, 0
 	ubfiz	x1, x1, 9, 16
-.L1043:
+.L1045:
 	cmp	x0, x1
-	beq	.L1042
+	beq	.L1044
 	ldr	x4, [x2, 8]
 	ldr	w5, [x4, x0]
 	add	x0, x0, 4
 	add	x4, x3, x0
 	ldr	w4, [x4, -4]
 	cmp	w5, w4
-	beq	.L1043
+	beq	.L1045
 	ldrh	w1, [x19]
 	adrp	x0, .LC35
 	ldr	w2, [x29, 116]
 	add	x0, x0, :lo12:.LC35
 	bl	printf
-	b	.L1058
-.L1036:
+	b	.L1060
+.L1038:
 	mov	w2, -1
-	b	.L1059
+	b	.L1061
 	.size	FtlGcScanTempBlk, .-FtlGcScanTempBlk
 	.section	.text.FtlVendorPartWrite,"ax",@progbits
 	.align	2
@@ -7464,7 +7478,7 @@ FtlVendorPartWrite:
 	stp	x23, x24, [sp, 48]
 	stp	x25, x26, [sp, 64]
 	cmp	w1, w0
-	bhi	.L1068
+	bhi	.L1070
 	adrp	x0, .LANCHOR21
 	adrp	x25, .LANCHOR11
 	adrp	x26, .LANCHOR22
@@ -7474,9 +7488,9 @@ FtlVendorPartWrite:
 	add	x26, x26, :lo12:.LANCHOR22
 	mov	w23, 0
 	lsr	w21, w28, w21
+.L1064:
+	cbnz	w20, .L1069
 .L1062:
-	cbnz	w20, .L1067
-.L1060:
 	mov	w0, w23
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
@@ -7485,7 +7499,7 @@ FtlVendorPartWrite:
 	ldp	x27, x28, [sp, 80]
 	ldp	x29, x30, [sp], 208
 	ret
-.L1067:
+.L1069:
 	ldrh	w1, [x25]
 	adrp	x0, .LANCHOR122
 	adrp	x27, .LANCHOR107
@@ -7498,9 +7512,9 @@ FtlVendorPartWrite:
 	and	w19, w19, 65535
 	cmp	w20, w19
 	csel	w19, w0, w19, cc
-	cbz	w2, .L1064
+	cbz	w2, .L1066
 	cmp	w19, w1
-	beq	.L1064
+	beq	.L1066
 	ldr	x0, [x27, #:lo12:.LANCHOR107]
 	str	x0, [x29, 120]
 	add	x0, x29, 144
@@ -7510,7 +7524,7 @@ FtlVendorPartWrite:
 	mov	w1, w2
 	add	x0, x29, 112
 	bl	FlashReadPages
-.L1065:
+.L1067:
 	lsl	w4, w19, 9
 	ldr	x0, [x27, #:lo12:.LANCHOR107]
 	lsl	w22, w22, 7
@@ -7531,16 +7545,16 @@ FtlVendorPartWrite:
 	ldr	w4, [x29, 108]
 	csinv	w23, w23, wzr, ne
 	add	x24, x24, x4, sxtw
-	b	.L1062
-.L1064:
+	b	.L1064
+.L1066:
 	ldrh	w2, [x26]
 	mov	w1, 0
 	ldr	x0, [x27, #:lo12:.LANCHOR107]
 	bl	ftl_memset
-	b	.L1065
-.L1068:
+	b	.L1067
+.L1070:
 	mov	w23, -1
-	b	.L1060
+	b	.L1062
 	.size	FtlVendorPartWrite, .-FtlVendorPartWrite
 	.section	.text.Ftl_save_ext_data,"ax",@progbits
 	.align	2
@@ -7553,8 +7567,8 @@ Ftl_save_ext_data:
 	mov	w0, 19539
 	movk	w0, 0x4654, lsl 16
 	cmp	w1, w0
-	bne	.L1073
-	mov	w0, 86
+	bne	.L1075
+	mov	w0, 87
 	mov	w1, 1
 	movk	w0, 0x5000, lsl 16
 	str	w0, [x2, 4]
@@ -7596,7 +7610,7 @@ Ftl_save_ext_data:
 	str	w0, [x2, 48]
 	mov	w0, 0
 	b	FtlVendorPartWrite
-.L1073:
+.L1075:
 	ret
 	.size	Ftl_save_ext_data, .-Ftl_save_ext_data
 	.section	.text.FtlEctTblFlush,"ax",@progbits
@@ -7607,20 +7621,20 @@ FtlEctTblFlush:
 	adrp	x2, .LANCHOR163
 	ldrh	w1, [x2, #:lo12:.LANCHOR163]
 	cmp	w1, 31
-	bhi	.L1079
+	bhi	.L1081
 	add	w1, w1, 1
 	strh	w1, [x2, #:lo12:.LANCHOR163]
 	mov	w1, 1
-.L1076:
+.L1078:
 	adrp	x2, .LANCHOR117
-	cbnz	w0, .L1077
+	cbnz	w0, .L1079
 	ldr	x0, [x2, #:lo12:.LANCHOR117]
 	ldr	w3, [x0, 20]
 	ldr	w0, [x0, 16]
 	add	w1, w1, w3
 	cmp	w0, w1
-	bcc	.L1081
-.L1077:
+	bcc	.L1083
+.L1079:
 	stp	x29, x30, [sp, -16]!
 	add	x29, sp, 0
 	ldr	x2, [x2, #:lo12:.LANCHOR117]
@@ -7643,10 +7657,10 @@ FtlEctTblFlush:
 	mov	w0, 0
 	ldp	x29, x30, [sp], 16
 	ret
-.L1079:
-	mov	w1, 32
-	b	.L1076
 .L1081:
+	mov	w1, 32
+	b	.L1078
+.L1083:
 	mov	w0, 0
 	ret
 	.size	FtlEctTblFlush, .-FtlEctTblFlush
@@ -7676,7 +7690,7 @@ FtlVendorPartRead:
 	stp	x25, x26, [sp, 64]
 	stp	x27, x28, [sp, 80]
 	cmp	w1, w0
-	bhi	.L1093
+	bhi	.L1095
 	adrp	x0, .LANCHOR21
 	mov	x25, x2
 	mov	w24, 0
@@ -7686,9 +7700,9 @@ FtlVendorPartRead:
 	add	x0, x0, :lo12:.LANCHOR11
 	str	x0, [x29, 104]
 	lsr	w20, w22, w20
+.L1088:
+	cbnz	w21, .L1094
 .L1086:
-	cbnz	w21, .L1092
-.L1084:
 	mov	w0, w24
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
@@ -7697,7 +7711,7 @@ FtlVendorPartRead:
 	ldp	x27, x28, [sp, 80]
 	ldp	x29, x30, [sp], 208
 	ret
-.L1092:
+.L1094:
 	ldr	x0, [x27, #:lo12:.LANCHOR122]
 	ldr	w4, [x0, w20, uxtw 2]
 	ldr	x0, [x29, 104]
@@ -7710,7 +7724,7 @@ FtlVendorPartRead:
 	cmp	w21, w19
 	csel	w19, w0, w19, cc
 	lsl	w26, w19, 9
-	cbz	w4, .L1088
+	cbz	w4, .L1090
 	adrp	x28, .LANCHOR107
 	mov	w2, 1
 	str	w4, [x29, 96]
@@ -7730,7 +7744,7 @@ FtlVendorPartRead:
 	csinv	w24, w24, wzr, ne
 	ldr	w0, [x0, #:lo12:.LANCHOR137]
 	cmp	w0, 256
-	bne	.L1090
+	bne	.L1092
 	mov	w2, w4
 	mov	w1, w20
 	adrp	x0, .LC36
@@ -7743,28 +7757,28 @@ FtlVendorPartRead:
 	add	x0, x0, :lo12:.LANCHOR160
 	bl	FtlMapWritePage
 	ldr	x5, [x29, 96]
-.L1090:
+.L1092:
 	ldr	x1, [x5, #:lo12:.LANCHOR107]
 	lsl	w23, w23, 7
 	mov	w2, w26
 	mov	x0, x25
 	add	x1, x1, x23, sxtw 2
 	bl	ftl_memcpy
-.L1091:
+.L1093:
 	add	w20, w20, 1
 	sub	w21, w21, w19
 	add	w22, w22, w19
 	add	x25, x25, x26, sxtw
-	b	.L1086
-.L1088:
+	b	.L1088
+.L1090:
 	mov	w2, w26
 	mov	w1, 0
 	mov	x0, x25
 	bl	ftl_memset
-	b	.L1091
-.L1093:
+	b	.L1093
+.L1095:
 	mov	w24, -1
-	b	.L1084
+	b	.L1086
 	.size	FtlVendorPartRead, .-FtlVendorPartRead
 	.section	.text.FtlLoadEctTbl,"ax",@progbits
 	.align	2
@@ -7785,7 +7799,7 @@ FtlLoadEctTbl:
 	mov	w0, 17221
 	movk	w0, 0x4254, lsl 16
 	cmp	w1, w0
-	beq	.L1096
+	beq	.L1098
 	adrp	x1, .LC37
 	adrp	x0, .LC38
 	add	x1, x1, :lo12:.LC37
@@ -7796,7 +7810,7 @@ FtlLoadEctTbl:
 	ldrh	w2, [x20, #:lo12:.LANCHOR115]
 	lsl	w2, w2, 9
 	bl	ftl_memset
-.L1096:
+.L1098:
 	mov	w0, 0
 	ldp	x19, x20, [sp, 16]
 	ldp	x29, x30, [sp], 32
@@ -7821,18 +7835,18 @@ Ftl_load_ext_data:
 	mov	w20, 19539
 	movk	w20, 0x4654, lsl 16
 	cmp	w0, w20
-	beq	.L1099
+	beq	.L1101
 	mov	w2, 512
 	mov	w1, 0
 	mov	x0, x21
 	bl	ftl_memset
 	str	w20, [x19, #:lo12:.LANCHOR134]
-.L1099:
+.L1101:
 	ldr	w1, [x19, #:lo12:.LANCHOR134]
 	add	x0, x19, :lo12:.LANCHOR134
 	cmp	w1, w20
 	adrp	x1, .LANCHOR90
-	bne	.L1100
+	bne	.L1102
 	adrp	x2, .LANCHOR161
 	ldr	w3, [x0, 88]
 	str	w3, [x2, #:lo12:.LANCHOR161]
@@ -7867,7 +7881,7 @@ Ftl_load_ext_data:
 	ldr	w2, [x0, 48]
 	adrp	x0, .LANCHOR92
 	str	w2, [x0, #:lo12:.LANCHOR92]
-.L1100:
+.L1102:
 	adrp	x0, .LANCHOR13
 	adrp	x2, .LANCHOR89
 	ldr	w1, [x1, #:lo12:.LANCHOR90]
@@ -7898,7 +7912,7 @@ sftl_vendor_read:
 	.type	FtlMapBlkWriteDump_data, %function
 FtlMapBlkWriteDump_data:
 	ldr	w1, [x0, 56]
-	cbz	w1, .L1103
+	cbz	w1, .L1105
 	stp	x29, x30, [sp, -80]!
 	add	x29, sp, 0
 	stp	x19, x20, [sp, 16]
@@ -7919,16 +7933,16 @@ FtlMapBlkWriteDump_data:
 	str	x24, [x21, 16]
 	str	wzr, [x19, 56]
 	ldr	x25, [x19, 40]
-	cbz	w0, .L1105
+	cbz	w0, .L1107
 	adrp	x1, .LANCHOR19
 	ldrh	w1, [x1, #:lo12:.LANCHOR19]
 	sub	w1, w1, #1
 	cmp	w0, w1
-	bge	.L1105
+	bge	.L1107
 	ldrh	w1, [x19]
 	mov	w2, 65535
 	cmp	w1, w2
-	beq	.L1105
+	beq	.L1107
 	ldr	x2, [x19, 16]
 	ubfiz	x1, x1, 1, 16
 	sub	w0, w0, #1
@@ -7941,16 +7955,16 @@ FtlMapBlkWriteDump_data:
 	bl	FlashReadPages
 	ldr	w0, [x23, #:lo12:.LANCHOR137]
 	cmn	w0, #1
-	beq	.L1105
+	beq	.L1107
 	ldrh	w1, [x24, 8]
 	ldr	x2, [x19, 40]
 	ubfiz	x0, x1, 2, 16
 	ldr	w2, [x2, x0]
 	ldr	w0, [x21, 4]
 	cmp	w2, w0
-	bne	.L1105
+	bne	.L1107
 	ldr	x2, [x21, 8]
-.L1117:
+.L1119:
 	mov	x0, x19
 	ldr	x25, [sp, 64]
 	ldp	x19, x20, [sp, 16]
@@ -7958,30 +7972,30 @@ FtlMapBlkWriteDump_data:
 	ldp	x23, x24, [sp, 48]
 	ldp	x29, x30, [sp], 80
 	b	FtlMapWritePage
-.L1105:
+.L1107:
 	sub	w20, w20, #1
 	and	w20, w20, 65535
 	ubfiz	x0, x20, 2, 16
 	ldr	w1, [x25, x0]
 	add	x0, x22, :lo12:.LANCHOR137
 	str	w1, [x0, 4]
-	cbz	w1, .L1106
+	cbz	w1, .L1108
 	mov	w2, 1
 	mov	w1, w2
 	bl	FlashReadPages
-.L1107:
+.L1109:
 	add	x22, x22, :lo12:.LANCHOR137
 	mov	w1, w20
 	ldr	x2, [x22, 8]
-	b	.L1117
-.L1106:
+	b	.L1119
+.L1108:
 	adrp	x1, .LANCHOR22
 	ldr	x0, [x0, 8]
 	ldrh	w2, [x1, #:lo12:.LANCHOR22]
 	mov	w1, 255
 	bl	ftl_memset
-	b	.L1107
-.L1103:
+	b	.L1109
+.L1105:
 	ret
 	.size	FtlMapBlkWriteDump_data, .-FtlMapBlkWriteDump_data
 	.section	.text.FtlVpcTblFlush,"ax",@progbits
@@ -8020,7 +8034,7 @@ FtlVpcTblFlush:
 	add	x19, x1, :lo12:.LANCHOR38
 	str	wzr, [x27, 12]
 	str	w2, [x1, #:lo12:.LANCHOR38]
-	mov	w1, 86
+	mov	w1, 87
 	movk	w1, 0x5000, lsl 16
 	str	w1, [x19, 4]
 	ldrh	w1, [x28, 6]
@@ -8089,7 +8103,7 @@ FtlVpcTblFlush:
 	mov	w0, 65535
 	str	x24, [x29, 96]
 	str	w0, [x29, 108]
-.L1119:
+.L1121:
 	ldrh	w2, [x28, 2]
 	ldrh	w1, [x28]
 	ldr	x0, [x22, #:lo12:.LANCHOR105]
@@ -8101,7 +8115,7 @@ FtlVpcTblFlush:
 	ldrh	w0, [x24]
 	sub	w0, w0, #1
 	cmp	w2, w0
-	blt	.L1120
+	blt	.L1122
 	ldrh	w0, [x28, 4]
 	strh	wzr, [x28, 2]
 	strh	w1, [x28, 4]
@@ -8116,7 +8130,7 @@ FtlVpcTblFlush:
 	str	w2, [x19, 4]
 	strh	w0, [x27, 2]
 	str	w1, [x27, 4]
-.L1120:
+.L1122:
 	ldrh	w1, [x26, #:lo12:.LANCHOR22]
 	ldr	x0, [x22, #:lo12:.LANCHOR105]
 	bl	js_hash
@@ -8132,49 +8146,49 @@ FtlVpcTblFlush:
 	and	w0, w0, 65535
 	strh	w0, [x28, 2]
 	cmn	w1, #1
-	bne	.L1121
+	bne	.L1123
 	cmp	w0, 1
-	bne	.L1122
+	bne	.L1124
 	adrp	x1, .LANCHOR164
 	adrp	x0, .LC1
 	mov	w2, 1145
 	add	x1, x1, :lo12:.LANCHOR164
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L1122:
+.L1124:
 	ldrh	w0, [x28, 2]
 	cmp	w0, 1
-	bne	.L1123
+	bne	.L1125
 	ldr	x0, [x29, 96]
 	ldrh	w0, [x0]
 	sub	w0, w0, #1
 	strh	w0, [x28, 2]
-.L1123:
+.L1125:
 	add	w20, w20, 1
 	and	w20, w20, 65535
 	cmp	w20, 3
-	bls	.L1119
+	bls	.L1121
 	add	x21, x21, :lo12:.LANCHOR137
 	adrp	x0, .LC39
 	mov	w2, w20
 	add	x0, x0, :lo12:.LC39
 	ldr	w1, [x21, 4]
 	bl	printf
-.L1125:
-	b	.L1125
-.L1121:
+.L1127:
+	b	.L1127
+.L1123:
 	cmp	w0, 1
-	beq	.L1119
+	beq	.L1121
 	cmp	w1, 256
-	beq	.L1119
+	beq	.L1121
 	ldr	w1, [x29, 108]
 	mov	w0, 65535
 	cmp	w1, w0
-	beq	.L1126
+	beq	.L1128
 	ldrh	w0, [x29, 108]
 	mov	w1, 1
 	bl	FtlFreeSysBlkQueueIn
-.L1126:
+.L1128:
 	ldp	x19, x20, [sp, 16]
 	mov	w0, 0
 	ldp	x21, x22, [sp, 32]
@@ -8207,14 +8221,14 @@ sftl_deinit:
 	adrp	x0, .LANCHOR165
 	ldr	w0, [x0, #:lo12:.LANCHOR165]
 	cmp	w0, 1
-	bne	.L1139
+	bne	.L1141
 	stp	x29, x30, [sp, -16]!
 	add	x29, sp, 0
 	bl	FtlSysFlush
 	mov	w0, 0
 	ldp	x29, x30, [sp], 16
 	ret
-.L1139:
+.L1141:
 	mov	w0, 0
 	ret
 	.size	sftl_deinit, .-sftl_deinit
@@ -8232,61 +8246,61 @@ FtlDiscard:
 	str	x23, [sp, 48]
 	ldr	w1, [x1, #:lo12:.LANCHOR33]
 	cmp	w1, w0
-	bls	.L1152
+	bls	.L1154
 	cmp	w1, w19
-	bcc	.L1152
+	bcc	.L1154
 	add	w2, w0, w19
 	cmp	w1, w2
-	bcc	.L1152
+	bcc	.L1154
 	cmp	w19, 31
-	bhi	.L1144
-.L1160:
+	bhi	.L1146
+.L1162:
 	mov	w0, 0
-.L1142:
+.L1144:
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
 	ldr	x23, [sp, 48]
 	ldp	x29, x30, [sp], 80
 	ret
-.L1144:
+.L1146:
 	adrp	x21, .LANCHOR11
 	ldrh	w1, [x21, #:lo12:.LANCHOR11]
 	udiv	w20, w0, w1
 	msub	w0, w1, w20, w0
 	ands	w0, w0, 65535
-	beq	.L1145
+	beq	.L1147
 	sub	w0, w1, w0
 	add	w20, w20, 1
 	cmp	w0, w19
 	csel	w0, w0, w19, ls
 	sub	w19, w19, w0, uxth
-.L1145:
+.L1147:
 	adrp	x22, .LANCHOR166
 	adrp	x23, .LANCHOR85
 	add	x22, x22, :lo12:.LANCHOR166
 	add	x23, x23, :lo12:.LANCHOR85
 	mov	w0, -1
 	str	w0, [x29, 76]
-.L1146:
+.L1148:
 	ldrh	w0, [x21, #:lo12:.LANCHOR11]
 	cmp	w19, w0
-	bcs	.L1148
+	bcs	.L1150
 	adrp	x0, .LANCHOR166
 	ldr	w1, [x0, #:lo12:.LANCHOR166]
 	cmp	w1, 32
-	bls	.L1160
+	bls	.L1162
 	str	wzr, [x0, #:lo12:.LANCHOR166]
 	bl	l2p_flush
 	bl	FtlVpcTblFlush
-	b	.L1160
-.L1148:
+	b	.L1162
+.L1150:
 	mov	w2, 0
 	add	x1, x29, 72
 	mov	w0, w20
 	bl	log2phys
 	ldr	w0, [x29, 72]
 	cmn	w0, #1
-	beq	.L1147
+	beq	.L1149
 	ldr	w0, [x22]
 	mov	w2, 1
 	add	x1, x29, 76
@@ -8301,14 +8315,14 @@ FtlDiscard:
 	lsr	w0, w0, 10
 	bl	P2V_block_in_plane
 	bl	decrement_vpc_count
-.L1147:
+.L1149:
 	ldrh	w0, [x21, #:lo12:.LANCHOR11]
 	add	w20, w20, 1
 	sub	w19, w19, w0
-	b	.L1146
-.L1152:
+	b	.L1148
+.L1154:
 	mov	w0, -1
-	b	.L1142
+	b	.L1144
 	.size	FtlDiscard, .-FtlDiscard
 	.section	.text.allocate_new_data_superblock,"ax",@progbits
 	.align	2
@@ -8324,25 +8338,25 @@ allocate_new_data_superblock:
 	adrp	x0, .LANCHOR4
 	ldrh	w0, [x0, #:lo12:.LANCHOR4]
 	cmp	w0, w19
-	bcs	.L1162
+	bcs	.L1164
 	adrp	x1, .LANCHOR167
 	adrp	x0, .LC1
 	mov	w2, 2766
 	add	x1, x1, :lo12:.LANCHOR167
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L1162:
+.L1164:
 	mov	w0, 65535
 	cmp	w19, w0
-	beq	.L1163
+	beq	.L1165
 	adrp	x1, .LANCHOR41
 	ubfiz	x0, x19, 1, 16
 	ldr	x1, [x1, #:lo12:.LANCHOR41]
 	ldrh	w0, [x1, x0]
-	cbz	w0, .L1164
+	cbz	w0, .L1166
 	mov	w0, w19
 	bl	INSERT_DATA_LIST
-.L1163:
+.L1165:
 	adrp	x1, .LANCHOR130
 	mov	w0, 1
 	strb	w0, [x21, 8]
@@ -8350,20 +8364,20 @@ allocate_new_data_superblock:
 	ldrh	w0, [x1, #:lo12:.LANCHOR130]
 	mov	x20, x1
 	cmp	w0, w2
-	beq	.L1165
+	beq	.L1167
 	cmp	w19, w0
-	bne	.L1166
+	bne	.L1168
 	adrp	x2, .LANCHOR41
 	ubfiz	x1, x0, 1, 16
 	ldr	x2, [x2, #:lo12:.LANCHOR41]
 	ldrh	w1, [x2, x1]
-	cbz	w1, .L1167
-.L1166:
+	cbz	w1, .L1169
+.L1168:
 	bl	update_vpc_list
-.L1167:
+.L1169:
 	mov	w0, -1
 	strh	w0, [x20, #:lo12:.LANCHOR130]
-.L1165:
+.L1167:
 	mov	x0, x21
 	bl	allocate_data_superblock
 	bl	l2p_flush
@@ -8375,10 +8389,10 @@ allocate_new_data_superblock:
 	ldp	x19, x20, [sp, 16]
 	ldp	x29, x30, [sp], 48
 	ret
-.L1164:
+.L1166:
 	mov	w0, w19
 	bl	INSERT_FREE_LIST
-	b	.L1163
+	b	.L1165
 	.size	allocate_new_data_superblock, .-allocate_new_data_superblock
 	.section	.text.FtlProgPages,"ax",@progbits
 	.align	2
@@ -8404,12 +8418,12 @@ FtlProgPages:
 	add	x23, x23, :lo12:.LC40
 	add	x24, x24, :lo12:.LANCHOR2
 	bl	FlashProgPages
-.L1173:
+.L1175:
 	cmp	x21, x19
-	beq	.L1179
+	beq	.L1181
 	sub	x22, x19, #4
-	b	.L1180
-.L1175:
+	b	.L1182
+.L1177:
 	ldr	w1, [x19]
 	mov	x0, x23
 	bl	printf
@@ -8418,10 +8432,10 @@ FtlProgPages:
 	bl	P2V_block_in_plane
 	bl	decrement_vpc_count
 	ldrh	w0, [x20, 4]
-	cbnz	w0, .L1174
+	cbnz	w0, .L1176
 	mov	x0, x20
 	bl	allocate_new_data_superblock
-.L1174:
+.L1176:
 	mov	x0, x20
 	bl	get_new_active_ppa
 	str	w0, [x19]
@@ -8431,22 +8445,22 @@ FtlProgPages:
 	ldrb	w3, [x20, 9]
 	mov	x0, x22
 	bl	FlashProgPages
-.L1180:
+.L1182:
 	ldr	w2, [x19, -4]
 	cmp	w2, 256
 	ccmn	w2, #1, 4, ne
-	beq	.L1175
+	beq	.L1177
 	ldrb	w1, [x20, 6]
 	ldrh	w0, [x24]
 	cmp	w1, w0
-	bcc	.L1176
+	bcc	.L1178
 	adrp	x1, .LANCHOR168
 	adrp	x0, .LC1
 	mov	w2, 985
 	add	x1, x1, :lo12:.LANCHOR168
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L1176:
+.L1178:
 	add	x1, x29, 80
 	ldr	w0, [x22, 4]
 	mov	w2, 1
@@ -8460,35 +8474,35 @@ FtlProgPages:
 	and	w1, w0, 65535
 	mov	w22, w1
 	cmn	w3, #1
-	beq	.L1177
+	beq	.L1179
 	adrp	x2, .LANCHOR41
 	ubfiz	x0, x1, 1, 16
 	ldr	x2, [x2, #:lo12:.LANCHOR41]
 	ldrh	w0, [x2, x0]
-	cbnz	w0, .L1178
+	cbnz	w0, .L1180
 	adrp	x0, .LC41
 	mov	w2, 0
 	add	x0, x0, :lo12:.LC41
 	bl	printf
-.L1178:
+.L1180:
 	mov	w0, w22
 	bl	decrement_vpc_count
-.L1177:
-	add	x19, x19, 32
-	b	.L1173
 .L1179:
+	add	x19, x19, 32
+	b	.L1175
+.L1181:
 	adrp	x0, .LANCHOR2
 	ldrb	w1, [x20, 6]
 	ldrh	w0, [x0, #:lo12:.LANCHOR2]
 	cmp	w1, w0
-	bcc	.L1172
+	bcc	.L1174
 	adrp	x1, .LANCHOR168
 	adrp	x0, .LC1
 	mov	w2, 1000
 	add	x1, x1, :lo12:.LANCHOR168
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L1172:
+.L1174:
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
 	ldp	x23, x24, [sp, 48]
@@ -8511,20 +8525,20 @@ FtlGcFreeTempBlock:
 	stp	x25, x26, [sp, 64]
 	cmp	w2, w1
 	stp	x27, x28, [sp, 80]
-	beq	.L1187
+	beq	.L1189
 	adrp	x1, .LANCHOR18
 	add	x0, x19, :lo12:.LANCHOR52
 	ldrh	w1, [x1, #:lo12:.LANCHOR18]
 	bl	FtlGcScanTempBlk
 	str	w0, [x29, 108]
-.L1187:
+.L1189:
 	adrp	x0, .LANCHOR132
 	ldrh	w2, [x19, #:lo12:.LANCHOR52]
 	mov	w1, 65535
 	str	wzr, [x0, #:lo12:.LANCHOR132]
 	cmp	w2, w1
 	add	x0, x19, :lo12:.LANCHOR52
-	beq	.L1189
+	beq	.L1191
 	ldrb	w1, [x0, 7]
 	adrp	x0, .LANCHOR18
 	adrp	x20, .LANCHOR69
@@ -8533,14 +8547,14 @@ FtlGcFreeTempBlock:
 	ldrh	w2, [x20, #:lo12:.LANCHOR69]
 	mul	w1, w1, w3
 	cmp	w2, w1
-	beq	.L1190
+	beq	.L1192
 	adrp	x1, .LANCHOR169
 	adrp	x0, .LC1
 	mov	w2, 164
 	add	x1, x1, :lo12:.LANCHOR169
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L1190:
+.L1192:
 	add	x0, x19, :lo12:.LANCHOR52
 	adrp	x22, .LANCHOR41
 	ldrh	w3, [x21, #:lo12:.LANCHOR18]
@@ -8559,19 +8573,19 @@ FtlGcFreeTempBlock:
 	ldr	w2, [x1, #:lo12:.LANCHOR83]
 	add	w0, w0, w2
 	str	w0, [x1, #:lo12:.LANCHOR83]
-.L1191:
+.L1193:
 	ldrh	w0, [x26]
 	cmp	w0, w21
-	bhi	.L1195
+	bhi	.L1197
 	mov	w0, -1
 	bl	decrement_vpc_count
 	ldrh	w0, [x19, #:lo12:.LANCHOR52]
 	ldr	x2, [x22, #:lo12:.LANCHOR41]
 	ubfiz	x1, x0, 1, 16
 	ldrh	w1, [x2, x1]
-	cbz	w1, .L1196
+	cbz	w1, .L1198
 	bl	INSERT_DATA_LIST
-.L1197:
+.L1199:
 	adrp	x0, .LANCHOR67
 	mov	w21, -1
 	strh	wzr, [x20, #:lo12:.LANCHOR69]
@@ -8587,11 +8601,11 @@ FtlGcFreeTempBlock:
 	ldrh	w0, [x0, #:lo12:.LANCHOR170]
 	add	w0, w0, w0, lsl 1
 	cmp	w1, w0, lsr 2
-	ble	.L1189
+	ble	.L1191
 	adrp	x0, .LANCHOR99
 	mov	w1, 20
 	strh	w1, [x0, #:lo12:.LANCHOR99]
-.L1189:
+.L1191:
 	ldp	x19, x20, [sp, 16]
 	mov	w0, 0
 	ldp	x21, x22, [sp, 32]
@@ -8600,7 +8614,7 @@ FtlGcFreeTempBlock:
 	ldp	x27, x28, [sp, 80]
 	ldp	x29, x30, [sp], 112
 	ret
-.L1195:
+.L1197:
 	mov	w24, 12
 	ldr	x28, [x27, #:lo12:.LANCHOR70]
 	ldr	w1, [x25]
@@ -8608,18 +8622,18 @@ FtlGcFreeTempBlock:
 	add	x23, x28, x24
 	ldr	w0, [x23, 8]
 	cmp	w0, w1
-	bcc	.L1192
-.L1200:
+	bcc	.L1194
+.L1202:
 	ldrh	w0, [x19, #:lo12:.LANCHOR52]
-	b	.L1201
-.L1192:
+	b	.L1203
+.L1194:
 	add	x1, x29, 108
 	mov	w2, 0
 	bl	log2phys
 	ldr	w0, [x28, x24]
 	ldr	w1, [x29, 108]
 	cmp	w0, w1
-	bne	.L1194
+	bne	.L1196
 	lsr	w0, w0, 10
 	bl	P2V_block_in_plane
 	mov	w24, w0
@@ -8628,20 +8642,20 @@ FtlGcFreeTempBlock:
 	add	x1, x23, 4
 	bl	log2phys
 	mov	w0, w24
-.L1201:
+.L1203:
 	bl	decrement_vpc_count
-	b	.L1193
-.L1194:
+	b	.L1195
+.L1196:
 	ldr	w0, [x23, 4]
 	cmp	w1, w0
-	bne	.L1200
-.L1193:
+	bne	.L1202
+.L1195:
 	add	w21, w21, 1
 	and	w21, w21, 65535
-	b	.L1191
-.L1196:
+	b	.L1193
+.L1198:
 	bl	INSERT_FREE_LIST
-	b	.L1197
+	b	.L1199
 	.size	FtlGcFreeTempBlock, .-FtlGcFreeTempBlock
 	.section	.text.FtlGcPageRecovery,"ax",@progbits
 	.align	2
@@ -8660,7 +8674,7 @@ FtlGcPageRecovery:
 	ldrh	w1, [x19, 2]
 	ldrh	w0, [x20, #:lo12:.LANCHOR18]
 	cmp	w1, w0
-	bcc	.L1202
+	bcc	.L1204
 	adrp	x0, .LANCHOR128
 	add	x0, x0, :lo12:.LANCHOR128
 	bl	FtlMapBlkWriteDump_data
@@ -8668,7 +8682,7 @@ FtlGcPageRecovery:
 	bl	FtlGcFreeTempBlock
 	adrp	x0, .LANCHOR132
 	str	wzr, [x0, #:lo12:.LANCHOR132]
-.L1202:
+.L1204:
 	ldp	x19, x20, [sp, 16]
 	ldp	x29, x30, [sp], 32
 	ret
@@ -8720,44 +8734,44 @@ Ftl_gc_temp_data_write_back:
 	ldr	x0, [x20, #:lo12:.LANCHOR103]
 	bl	FlashProgPages
 	mov	w11, 0
-.L1208:
+.L1210:
 	ldr	w1, [x19]
 	cmp	w11, w1
-	bcc	.L1211
+	bcc	.L1213
 	ldr	x0, [x20, #:lo12:.LANCHOR103]
 	bl	FtlGcBufFree
 	str	wzr, [x19]
 	adrp	x0, .LANCHOR52+4
 	ldrh	w0, [x0, #:lo12:.LANCHOR52+4]
-	cbnz	w0, .L1213
+	cbnz	w0, .L1215
 	mov	w0, 1
 	bl	FtlGcFreeTempBlock
 	mov	w0, 1
-.L1207:
+.L1209:
 	ldp	x19, x20, [sp, 16]
 	ldp	x29, x30, [sp], 32
 	ret
-.L1211:
+.L1213:
 	ldr	x2, [x20, #:lo12:.LANCHOR103]
 	ubfiz	x0, x11, 5, 16
 	add	x1, x2, x0
 	ldr	w2, [x2, x0]
 	ldr	x3, [x1, 16]
 	cmn	w2, #1
-	bne	.L1209
-.L1215:
+	bne	.L1211
+.L1217:
 	ldr	w1, [x1, 4]
 	ldr	w0, [x3, 12]
 	bl	FtlGcUpdatePage
 	add	w11, w11, 1
 	and	w11, w11, 65535
-	b	.L1208
-.L1209:
+	b	.L1210
+.L1211:
 	ldr	w2, [x3, 8]
-	b	.L1215
-.L1213:
+	b	.L1217
+.L1215:
 	mov	w0, 0
-	b	.L1207
+	b	.L1209
 	.size	Ftl_gc_temp_data_write_back, .-Ftl_gc_temp_data_write_back
 	.section	.text.Ftl_get_new_temp_ppa,"ax",@progbits
 	.align	2
@@ -8772,11 +8786,11 @@ Ftl_get_new_temp_ppa:
 	mov	x19, x0
 	ldrh	w3, [x0, #:lo12:.LANCHOR52]
 	cmp	w3, w2
-	beq	.L1217
+	beq	.L1219
 	add	x1, x0, :lo12:.LANCHOR52
 	ldrh	w0, [x1, 4]
-	cbnz	w0, .L1218
-.L1217:
+	cbnz	w0, .L1220
+.L1219:
 	mov	w0, 0
 	bl	FtlGcFreeTempBlock
 	add	x0, x19, :lo12:.LANCHOR52
@@ -8790,7 +8804,7 @@ Ftl_get_new_temp_ppa:
 	mov	w0, 0
 	bl	FtlEctTblFlush
 	bl	FtlVpcTblFlush
-.L1218:
+.L1220:
 	add	x0, x19, :lo12:.LANCHOR52
 	ldr	x19, [sp, 16]
 	ldp	x29, x30, [sp], 32
@@ -8810,69 +8824,69 @@ rk_ftl_garbage_collect:
 	stp	x23, x24, [sp, 48]
 	stp	x25, x26, [sp, 64]
 	stp	x27, x28, [sp, 80]
-	cbnz	w1, .L1277
+	cbnz	w1, .L1279
 	adrp	x1, .LANCHOR43
 	ldrh	w1, [x1, #:lo12:.LANCHOR43]
 	cmp	w1, 47
-	bls	.L1277
+	bls	.L1279
 	adrp	x1, .LANCHOR72
 	mov	w4, 65535
 	ldrh	w3, [x1, #:lo12:.LANCHOR72]
 	cmp	w3, w4
-	beq	.L1222
+	beq	.L1224
 	adrp	x2, .LANCHOR71
 	ldrh	w5, [x2, #:lo12:.LANCHOR71]
 	cmp	w5, w4
-	bne	.L1222
+	bne	.L1224
 	strh	w3, [x2, #:lo12:.LANCHOR71]
 	mov	w2, -1
 	strh	w2, [x1, #:lo12:.LANCHOR72]
-.L1222:
-	cbnz	w0, .L1278
+.L1224:
+	cbnz	w0, .L1280
 	adrp	x1, .LANCHOR47
 	ldrh	w1, [x1, #:lo12:.LANCHOR47]
 	cmp	w1, 24
-	bhi	.L1279
+	bhi	.L1281
 	adrp	x2, .LANCHOR18
 	cmp	w1, 16
 	ldrh	w20, [x2, #:lo12:.LANCHOR18]
-	bls	.L1225
+	bls	.L1227
 	lsr	w20, w20, 5
-.L1224:
+.L1226:
 	adrp	x2, .LANCHOR99
 	ldrh	w3, [x2, #:lo12:.LANCHOR99]
 	cmp	w3, w1
 	mov	x3, x2
-	bcs	.L1228
+	bcs	.L1230
 	adrp	x1, .LANCHOR52
 	mov	w4, 65535
 	ldrh	w1, [x1, #:lo12:.LANCHOR52]
 	cmp	w1, w4
-	bne	.L1229
+	bne	.L1231
 	adrp	x4, .LANCHOR71
 	ldrh	w4, [x4, #:lo12:.LANCHOR71]
 	cmp	w4, w1
-	bne	.L1229
+	bne	.L1231
 	adrp	x0, .LANCHOR171
 	ldrh	w0, [x0, #:lo12:.LANCHOR171]
-	cbnz	w0, .L1230
+	cbnz	w0, .L1232
 	adrp	x1, .LANCHOR151
 	adrp	x4, .LANCHOR58
 	ldr	w1, [x1, #:lo12:.LANCHOR151]
 	ldr	w4, [x4, #:lo12:.LANCHOR58]
 	add	w1, w1, w1, lsl 1
 	cmp	w4, w1, lsr 2
-	bcs	.L1231
-.L1230:
+	bcs	.L1233
+.L1232:
 	adrp	x1, .LANCHOR170
 	ldrh	w1, [x1, #:lo12:.LANCHOR170]
 	add	w1, w1, w1, lsl 1
 	asr	w1, w1, 2
 	strh	w1, [x3, #:lo12:.LANCHOR99]
-.L1232:
+.L1234:
 	adrp	x1, .LANCHOR94
 	str	wzr, [x1, #:lo12:.LANCHOR94]
-.L1220:
+.L1222:
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
 	ldp	x23, x24, [sp, 48]
@@ -8880,75 +8894,75 @@ rk_ftl_garbage_collect:
 	ldp	x27, x28, [sp, 80]
 	ldp	x29, x30, [sp], 176
 	ret
-.L1225:
+.L1227:
 	cmp	w1, 12
-	bls	.L1226
+	bls	.L1228
 	lsr	w20, w20, 4
-	b	.L1224
-.L1226:
+	b	.L1226
+.L1228:
 	cmp	w1, 8
-	bls	.L1224
+	bls	.L1226
 	lsr	w20, w20, 2
-	b	.L1224
-.L1279:
+	b	.L1226
+.L1281:
 	mov	w20, 1
-	b	.L1224
-.L1231:
+	b	.L1226
+.L1233:
 	mov	w1, 18
 	strh	w1, [x2, #:lo12:.LANCHOR99]
-	b	.L1232
-.L1229:
+	b	.L1234
+.L1231:
 	adrp	x1, .LANCHOR170
 	ldrh	w1, [x1, #:lo12:.LANCHOR170]
 	add	w1, w1, w1, lsl 1
 	asr	w1, w1, 2
 	strh	w1, [x3, #:lo12:.LANCHOR99]
-.L1228:
+.L1230:
 	adrp	x1, .LANCHOR73
 	ldrh	w1, [x1, #:lo12:.LANCHOR73]
-	cbz	w1, .L1223
+	cbz	w1, .L1225
 	add	w20, w20, 32
 	and	w20, w20, 65535
-.L1223:
+.L1225:
 	adrp	x19, .LANCHOR144
 	str	w0, [x29, 152]
 	mov	w0, 65535
 	ldrh	w2, [x19, #:lo12:.LANCHOR144]
 	cmp	w2, w0
-	bne	.L1235
+	bne	.L1237
 	adrp	x0, .LANCHOR71
 	ldrh	w1, [x0, #:lo12:.LANCHOR71]
 	cmp	w1, w2
-	beq	.L1236
+	beq	.L1238
 	adrp	x2, .LANCHOR41
 	ubfiz	x1, x1, 1, 16
 	ldr	x2, [x2, #:lo12:.LANCHOR41]
 	ldrh	w1, [x2, x1]
-	cbnz	w1, .L1237
+	cbnz	w1, .L1239
 	mov	w1, -1
 	strh	w1, [x0, #:lo12:.LANCHOR71]
-.L1237:
+.L1239:
 	ldrh	w1, [x0, #:lo12:.LANCHOR71]
 	strh	w1, [x19, #:lo12:.LANCHOR144]
 	mov	w1, -1
 	strh	w1, [x0, #:lo12:.LANCHOR71]
-.L1236:
+.L1238:
 	add	x0, x19, :lo12:.LANCHOR144
 	mov	w1, 65535
 	strb	wzr, [x0, 8]
 	ldrh	w0, [x19, #:lo12:.LANCHOR144]
 	cmp	w0, w1
-	beq	.L1235
+	beq	.L1237
 	bl	IsBlkInGcList
-	cbz	w0, .L1239
+	cbz	w0, .L1241
 	mov	w0, -1
 	strh	w0, [x19, #:lo12:.LANCHOR144]
-.L1239:
+.L1241:
 	ldrh	w1, [x19, #:lo12:.LANCHOR144]
 	mov	w0, 65535
 	add	x22, x19, :lo12:.LANCHOR144
 	cmp	w1, w0
-	beq	.L1235
+	beq	.L1237
 	mov	x0, x22
 	bl	make_superblock
 	adrp	x0, .LANCHOR172
@@ -8961,37 +8975,37 @@ rk_ftl_garbage_collect:
 	ldrh	w1, [x0, x1, lsl 1]
 	adrp	x0, .LANCHOR173
 	strh	w1, [x0, #:lo12:.LANCHOR173]
-.L1235:
+.L1237:
 	adrp	x1, .LANCHOR50
 	ldrh	w0, [x19, #:lo12:.LANCHOR144]
 	str	x1, [x29, 128]
 	ldrh	w2, [x1, #:lo12:.LANCHOR50]
 	cmp	w2, w0
-	beq	.L1240
+	beq	.L1242
 	adrp	x1, .LANCHOR51
 	ldrh	w1, [x1, #:lo12:.LANCHOR51]
 	cmp	w1, w0
-	beq	.L1240
+	beq	.L1242
 	adrp	x1, .LANCHOR52
 	ldrh	w1, [x1, #:lo12:.LANCHOR52]
 	cmp	w1, w0
-	bne	.L1241
-.L1240:
+	bne	.L1243
+.L1242:
 	mov	w0, -1
 	strh	w0, [x19, #:lo12:.LANCHOR144]
-.L1241:
+.L1243:
 	adrp	x25, .LANCHOR101
 	add	x26, x25, :lo12:.LANCHOR101
-.L1275:
+.L1277:
 	ldrh	w1, [x19, #:lo12:.LANCHOR144]
 	mov	w0, 65535
 	cmp	w1, w0
-	bne	.L1242
+	bne	.L1244
 	adrp	x0, .LANCHOR94
 	adrp	x22, .LANCHOR18
 	add	x22, x22, :lo12:.LANCHOR18
 	str	wzr, [x0, #:lo12:.LANCHOR94]
-.L1243:
+.L1245:
 	ldrh	w5, [x25, #:lo12:.LANCHOR101]
 	add	x7, x25, :lo12:.LANCHOR101
 	mov	w0, w5
@@ -9000,21 +9014,21 @@ rk_ftl_garbage_collect:
 	strh	w6, [x19, #:lo12:.LANCHOR144]
 	mov	w0, 65535
 	cmp	w6, w0
-	bne	.L1244
+	bne	.L1246
 	strh	wzr, [x7]
 	mov	w0, 8
-	b	.L1220
-.L1278:
+	b	.L1222
+.L1280:
 	mov	w20, 1
-	b	.L1223
-.L1244:
+	b	.L1225
+.L1246:
 	mov	w0, w6
 	bl	IsBlkInGcList
 	add	w5, w5, 1
-	cbz	w0, .L1245
+	cbz	w0, .L1247
 	strh	w5, [x25, #:lo12:.LANCHOR101]
-	b	.L1243
-.L1245:
+	b	.L1245
+.L1247:
 	adrp	x23, .LANCHOR41
 	adrp	x4, .LANCHOR2
 	ldrh	w0, [x22]
@@ -9026,77 +9040,77 @@ rk_ftl_garbage_collect:
 	ldrh	w3, [x2, x1]
 	mul	w0, w0, w4
 	cmp	w3, w0, asr 1
-	bgt	.L1247
+	bgt	.L1249
 	cmp	w5, 48
-	bls	.L1248
+	bls	.L1250
 	cmp	w3, 8
-	bls	.L1248
+	bls	.L1250
 	adrp	x3, .LANCHOR67
 	ldrh	w3, [x3, #:lo12:.LANCHOR67]
 	cmp	w3, 35
-	bhi	.L1248
-.L1247:
+	bhi	.L1250
+.L1249:
 	strh	wzr, [x26]
-.L1248:
+.L1250:
 	ldrh	w1, [x2, x1]
 	cmp	w0, w1
-	bgt	.L1249
+	bgt	.L1251
 	ldrh	w0, [x26]
 	cmp	w0, 3
-	bhi	.L1249
+	bhi	.L1251
 	mov	w0, -1
 	strh	wzr, [x26]
 	strh	w0, [x19, #:lo12:.LANCHOR144]
-.L1308:
+.L1310:
 	adrp	x0, .LANCHOR171
 	ldrh	w0, [x0, #:lo12:.LANCHOR171]
-	b	.L1220
-.L1249:
-	cbnz	w1, .L1250
+	b	.L1222
+.L1251:
+	cbnz	w1, .L1252
 	mov	w0, -1
 	bl	decrement_vpc_count
 	ldrh	w0, [x26]
 	add	w0, w0, 1
 	strh	w0, [x26]
-	b	.L1243
-.L1250:
+	b	.L1245
+.L1252:
 	add	x0, x19, :lo12:.LANCHOR144
 	strb	wzr, [x0, 8]
 	ldr	x0, [x29, 128]
 	ldrh	w0, [x0, #:lo12:.LANCHOR50]
 	cmp	w0, w6
-	bne	.L1251
+	bne	.L1253
 	adrp	x1, .LANCHOR174
 	adrp	x0, .LC1
 	mov	w2, 717
 	add	x1, x1, :lo12:.LANCHOR174
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L1251:
+.L1253:
 	adrp	x0, .LANCHOR51
 	ldrh	w1, [x19, #:lo12:.LANCHOR144]
 	ldrh	w0, [x0, #:lo12:.LANCHOR51]
 	cmp	w1, w0
-	bne	.L1252
+	bne	.L1254
 	adrp	x1, .LANCHOR174
 	adrp	x0, .LC1
 	mov	w2, 718
 	add	x1, x1, :lo12:.LANCHOR174
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L1252:
+.L1254:
 	adrp	x0, .LANCHOR52
 	ldrh	w1, [x19, #:lo12:.LANCHOR144]
 	ldrh	w0, [x0, #:lo12:.LANCHOR52]
 	cmp	w1, w0
-	bne	.L1253
+	bne	.L1255
 	adrp	x1, .LANCHOR174
 	adrp	x0, .LC1
 	mov	w2, 719
 	add	x1, x1, :lo12:.LANCHOR174
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L1253:
+.L1255:
 	add	x22, x19, :lo12:.LANCHOR144
 	mov	x0, x22
 	bl	make_superblock
@@ -9109,7 +9123,7 @@ rk_ftl_garbage_collect:
 	strh	wzr, [x22, 2]
 	strh	w1, [x0, #:lo12:.LANCHOR173]
 	strb	wzr, [x22, 6]
-.L1242:
+.L1244:
 	mov	w0, 1
 	str	w0, [x21, #:lo12:.LANCHOR93]
 	adrp	x0, .LANCHOR18
@@ -9117,7 +9131,7 @@ rk_ftl_garbage_collect:
 	ldrh	w1, [x0, #:lo12:.LANCHOR18]
 	ldr	w0, [x29, 152]
 	str	w1, [x29, 156]
-	cbz	w0, .L1254
+	cbz	w0, .L1256
 	adrp	x0, .LANCHOR2
 	ldrh	w2, [x19, #:lo12:.LANCHOR144]
 	ldrh	w0, [x0, #:lo12:.LANCHOR2]
@@ -9130,23 +9144,23 @@ rk_ftl_garbage_collect:
 	sdiv	w0, w0, w1
 	add	w20, w20, w0
 	and	w20, w20, 65535
-.L1254:
+.L1256:
 	add	x0, x19, :lo12:.LANCHOR144
 	ldr	w2, [x29, 156]
 	ldrh	w0, [x0, 2]
 	add	w1, w0, w20
 	cmp	w1, w2
-	ble	.L1255
+	ble	.L1257
 	sub	w20, w2, w0
 	and	w20, w20, 65535
-.L1255:
+.L1257:
 	adrp	x0, .LANCHOR172
 	mov	w28, 0
 	add	x0, x0, :lo12:.LANCHOR172
 	str	x0, [x29, 144]
-.L1256:
+.L1258:
 	cmp	w20, w28, uxth
-	bls	.L1264
+	bls	.L1266
 	add	x1, x19, :lo12:.LANCHOR144
 	adrp	x0, .LANCHOR2
 	adrp	x23, .LANCHOR65
@@ -9158,24 +9172,24 @@ rk_ftl_garbage_collect:
 	ldr	x0, [x23, #:lo12:.LANCHOR65]
 	mov	w6, 65535
 	add	w4, w4, w28
-	b	.L1265
-.L1258:
+	b	.L1267
+.L1260:
 	ldrh	w3, [x1]
 	cmp	w3, w6
-	beq	.L1257
+	beq	.L1259
 	ubfiz	x5, x22, 5, 16
 	add	w22, w22, 1
 	add	x5, x0, x5
 	and	w22, w22, 65535
 	orr	w3, w4, w3, lsl 10
 	str	w3, [x5, 4]
-.L1257:
+.L1259:
 	add	w2, w2, 1
 	add	x1, x1, 2
 	and	w2, w2, 65535
-.L1265:
+.L1267:
 	cmp	w2, w7
-	bne	.L1258
+	bne	.L1260
 	add	x1, x19, :lo12:.LANCHOR144
 	adrp	x24, .LANCHOR61
 	add	x24, x24, :lo12:.LANCHOR61
@@ -9185,26 +9199,26 @@ rk_ftl_garbage_collect:
 	ubfiz	x0, x22, 5, 16
 	mov	x22, 0
 	str	x0, [x29, 136]
-.L1259:
+.L1261:
 	ldr	x0, [x29, 136]
 	cmp	x22, x0
-	bne	.L1263
+	bne	.L1265
 	add	w28, w28, 1
-	b	.L1256
-.L1263:
+	b	.L1258
+.L1265:
 	ldr	x0, [x23, #:lo12:.LANCHOR65]
 	add	x1, x0, x22
 	ldr	w0, [x0, x22]
 	cmn	w0, #1
-	beq	.L1260
+	beq	.L1262
 	ldr	x27, [x1, 16]
 	mov	w0, 61589
 	ldrh	w1, [x27]
 	cmp	w1, w0
-	bne	.L1260
+	bne	.L1262
 	ldr	w4, [x27, 8]
 	cmn	w4, #1
-	bne	.L1261
+	bne	.L1263
 	str	w4, [x29, 112]
 	mov	w2, 753
 	adrp	x1, .LANCHOR174
@@ -9213,7 +9227,7 @@ rk_ftl_garbage_collect:
 	add	x0, x0, :lo12:.LC1
 	bl	printf
 	ldr	w4, [x29, 112]
-.L1261:
+.L1263:
 	mov	w2, 0
 	add	x1, x29, 168
 	mov	w0, w4
@@ -9223,7 +9237,7 @@ rk_ftl_garbage_collect:
 	add	x0, x0, x22
 	ldr	w2, [x0, 4]
 	cmp	w2, w1
-	bne	.L1260
+	bne	.L1262
 	ldr	x1, [x29, 144]
 	adrp	x4, .LANCHOR103
 	ldr	x2, [x29, 144]
@@ -9265,22 +9279,22 @@ rk_ftl_garbage_collect:
 	ldrb	w1, [x11, 7]
 	ldr	w0, [x24]
 	cmp	w1, w0
-	beq	.L1262
+	beq	.L1264
 	ldrh	w0, [x11, 4]
-	cbnz	w0, .L1260
-.L1262:
+	cbnz	w0, .L1262
+.L1264:
 	bl	Ftl_gc_temp_data_write_back
-	cbz	w0, .L1260
+	cbz	w0, .L1262
 	add	x0, x19, :lo12:.LANCHOR144
 	mov	w1, -1
 	str	wzr, [x21, #:lo12:.LANCHOR93]
 	strh	w1, [x19, #:lo12:.LANCHOR144]
 	strh	wzr, [x0, 2]
-	b	.L1308
-.L1260:
+	b	.L1310
+.L1262:
 	add	x22, x22, 32
-	b	.L1259
-.L1264:
+	b	.L1261
+.L1266:
 	add	x1, x19, :lo12:.LANCHOR144
 	ldrh	w0, [x1, 2]
 	add	w20, w20, w0
@@ -9288,25 +9302,25 @@ rk_ftl_garbage_collect:
 	and	w20, w20, 65535
 	strh	w20, [x1, 2]
 	cmp	w0, w20
-	bhi	.L1266
+	bhi	.L1268
 	adrp	x0, .LANCHOR61
 	ldr	w0, [x0, #:lo12:.LANCHOR61]
-	cbz	w0, .L1267
+	cbz	w0, .L1269
 	bl	Ftl_gc_temp_data_write_back
-	cbz	w0, .L1267
+	cbz	w0, .L1269
 	str	wzr, [x21, #:lo12:.LANCHOR93]
-	b	.L1308
-.L1267:
+	b	.L1310
+.L1269:
 	adrp	x0, .LANCHOR172
 	ldrh	w0, [x0, #:lo12:.LANCHOR172]
-	cbnz	w0, .L1268
+	cbnz	w0, .L1270
 	ldrh	w1, [x19, #:lo12:.LANCHOR144]
 	adrp	x20, .LANCHOR41
 	add	x0, x19, :lo12:.LANCHOR144
 	ldr	x3, [x20, #:lo12:.LANCHOR41]
 	ubfiz	x2, x1, 1, 16
 	ldrh	w4, [x3, x2]
-	cbz	w4, .L1268
+	cbz	w4, .L1270
 	adrp	x2, .LANCHOR173
 	adrp	x22, .LANCHOR151
 	add	x23, x22, :lo12:.LANCHOR151
@@ -9317,31 +9331,31 @@ rk_ftl_garbage_collect:
 	adrp	x0, .LC42
 	add	x0, x0, :lo12:.LC42
 	bl	printf
-.L1269:
+.L1271:
 	ldr	w0, [x23]
 	cmp	w24, w0
-	bcs	.L1271
+	bcs	.L1273
 	mov	w2, 0
 	add	x1, x29, 172
 	mov	w0, w24
 	bl	log2phys
 	ldr	w3, [x29, 172]
 	cmn	w3, #1
-	beq	.L1270
+	beq	.L1272
 	lsr	w0, w3, 10
 	bl	P2V_block_in_plane
 	ldrh	w1, [x19, #:lo12:.LANCHOR144]
 	cmp	w1, w0, uxth
-	bne	.L1270
+	bne	.L1272
 	adrp	x0, .LC43
 	mov	w2, w3
 	mov	w1, w24
 	add	x0, x0, :lo12:.LC43
 	bl	printf
-.L1271:
+.L1273:
 	ldr	w0, [x22, #:lo12:.LANCHOR151]
 	cmp	w24, w0
-	bcc	.L1268
+	bcc	.L1270
 	ldrh	w1, [x19, #:lo12:.LANCHOR144]
 	ldr	x0, [x20, #:lo12:.LANCHOR41]
 	strh	wzr, [x0, x1, lsl 1]
@@ -9349,27 +9363,27 @@ rk_ftl_garbage_collect:
 	bl	update_vpc_list
 	bl	l2p_flush
 	bl	FtlVpcTblFlush
-.L1268:
+.L1270:
 	mov	w0, -1
 	strh	w0, [x19, #:lo12:.LANCHOR144]
-.L1266:
+.L1268:
 	adrp	x0, .LANCHOR47
 	str	wzr, [x21, #:lo12:.LANCHOR93]
 	ldrh	w0, [x0, #:lo12:.LANCHOR47]
 	cmp	w0, 2
-	bhi	.L1274
+	bhi	.L1276
 	ldr	x0, [x29, 120]
 	ldrh	w20, [x0, #:lo12:.LANCHOR18]
-	b	.L1275
-.L1270:
+	b	.L1277
+.L1272:
 	add	w24, w24, 1
-	b	.L1269
-.L1274:
+	b	.L1271
+.L1276:
 	add	w0, w0, 1
-	b	.L1220
-.L1277:
+	b	.L1222
+.L1279:
 	mov	w0, 0
-	b	.L1220
+	b	.L1222
 	.size	rk_ftl_garbage_collect, .-rk_ftl_garbage_collect
 	.section	.text.FtlRead,"ax",@progbits
 	.align	2
@@ -9388,13 +9402,13 @@ FtlRead:
 	mov	w27, w1
 	stp	x19, x20, [sp, 16]
 	stp	x25, x26, [sp, 64]
-	bne	.L1310
+	bne	.L1312
 	mov	x2, x3
 	mov	w1, w24
 	add	w0, w27, 256
 	bl	FtlVendorPartRead
 	mov	w19, w0
-.L1309:
+.L1311:
 	mov	w0, w19
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
@@ -9403,21 +9417,21 @@ FtlRead:
 	ldp	x27, x28, [sp, 80]
 	ldp	x29, x30, [sp], 176
 	ret
-.L1310:
+.L1312:
 	adrp	x0, .LANCHOR33
 	ldr	w0, [x0, #:lo12:.LANCHOR33]
 	cmp	w1, w0
-	bcs	.L1333
+	bcs	.L1335
 	cmp	w2, w0
-	bhi	.L1333
+	bhi	.L1335
 	add	w1, w1, w2
 	str	w1, [x29, 136]
 	cmp	w0, w1
-	bcc	.L1333
+	bcc	.L1335
 	adrp	x0, .LANCHOR165
 	ldr	w19, [x0, #:lo12:.LANCHOR165]
 	cmn	w19, #1
-	beq	.L1309
+	beq	.L1311
 	adrp	x21, .LANCHOR11
 	adrp	x25, .LANCHOR134
 	add	x25, x25, :lo12:.LANCHOR134
@@ -9445,47 +9459,47 @@ FtlRead:
 	ldr	w0, [x1, #:lo12:.LANCHOR88]
 	add	w0, w0, w2
 	str	w0, [x1, #:lo12:.LANCHOR88]
-.L1312:
+.L1314:
 	ldr	w0, [x29, 156]
-	cbnz	w0, .L1329
+	cbnz	w0, .L1331
 	adrp	x0, .LANCHOR73
 	ldrh	w0, [x0, #:lo12:.LANCHOR73]
-	cbnz	w0, .L1330
+	cbnz	w0, .L1332
 	adrp	x0, .LANCHOR47
 	ldrh	w0, [x0, #:lo12:.LANCHOR47]
 	cmp	w0, 31
-	bhi	.L1309
-.L1330:
+	bhi	.L1311
+.L1332:
 	mov	w1, 1
 	mov	w0, 0
 	bl	rk_ftl_garbage_collect
-	b	.L1309
-.L1329:
+	b	.L1311
+.L1331:
 	add	x1, x29, 172
 	mov	w2, 0
 	mov	w0, w20
 	bl	log2phys
 	ldr	w1, [x29, 172]
 	cmn	w1, #1
-	bne	.L1313
+	bne	.L1315
 	add	x6, x21, :lo12:.LANCHOR11
 	mov	w5, 0
-.L1314:
+.L1316:
 	ldrh	w0, [x6]
 	cmp	w5, w0
-	bcc	.L1316
-.L1317:
+	bcc	.L1318
+.L1319:
 	ldr	w0, [x29, 156]
 	add	w20, w20, 1
 	subs	w0, w0, #1
 	str	w0, [x29, 156]
-	beq	.L1321
+	beq	.L1323
 	adrp	x0, .LANCHOR2
 	ldrh	w0, [x0, #:lo12:.LANCHOR2]
 	cmp	w26, w0, lsl 2
-	bne	.L1312
-.L1321:
-	cbz	w26, .L1312
+	bne	.L1314
+.L1323:
+	cbz	w26, .L1314
 	ldr	x0, [x28, #:lo12:.LANCHOR102]
 	mov	w1, w26
 	mov	w2, 0
@@ -9504,57 +9518,57 @@ FtlRead:
 	str	x0, [x29, 104]
 	add	x0, x21, :lo12:.LANCHOR11
 	str	x0, [x29, 96]
-.L1328:
+.L1330:
 	ldr	x0, [x28, #:lo12:.LANCHOR102]
 	ldr	w2, [x29, 152]
 	add	x0, x0, x26
 	ldr	w1, [x0, 24]
 	cmp	w2, w1
-	bne	.L1323
+	bne	.L1325
 	ldr	x1, [x0, 8]
 	adrp	x0, .LANCHOR108
 	ldr	x0, [x0, #:lo12:.LANCHOR108]
 	cmp	x1, x0
-	bne	.L1324
+	bne	.L1326
 	ldr	x0, [x29, 128]
 	ldr	w2, [x29, 120]
 	add	x1, x1, x0
 	mov	x0, x22
-.L1344:
+.L1346:
 	bl	ftl_memcpy
-.L1324:
+.L1326:
 	ldr	x0, [x28, #:lo12:.LANCHOR102]
 	add	x0, x0, x26
 	ldr	x1, [x0, 16]
 	ldr	w2, [x0, 24]
 	ldr	w1, [x1, 8]
 	cmp	w2, w1
-	beq	.L1325
+	beq	.L1327
 	ldr	w1, [x25, 72]
 	add	w1, w1, 1
 	str	w1, [x25, 72]
-.L1325:
+.L1327:
 	ldr	w1, [x0]
 	cmn	w1, #1
-	bne	.L1326
+	bne	.L1328
 	ldr	w0, [x25, 72]
 	mov	w19, w1
 	add	w0, w0, 1
 	str	w0, [x25, 72]
-.L1327:
+.L1329:
 	ldr	x0, [x29, 104]
 	add	x26, x26, 32
 	cmp	x0, x26
-	bne	.L1328
+	bne	.L1330
 	mov	w26, 0
-	b	.L1312
-.L1316:
+	b	.L1314
+.L1318:
 	madd	w0, w20, w0, w5
 	cmp	w27, w0
-	bhi	.L1315
+	bhi	.L1317
 	ldr	w1, [x29, 136]
 	cmp	w1, w0
-	bls	.L1315
+	bls	.L1317
 	sub	w0, w0, w27
 	str	x6, [x29, 120]
 	lsl	w0, w0, 9
@@ -9565,17 +9579,17 @@ FtlRead:
 	bl	ftl_memset
 	ldr	w5, [x29, 128]
 	ldr	x6, [x29, 120]
-.L1315:
+.L1317:
 	add	w5, w5, 1
-	b	.L1314
-.L1313:
+	b	.L1316
+.L1315:
 	ldr	x2, [x28, #:lo12:.LANCHOR102]
 	ubfiz	x0, x26, 5, 32
 	add	x0, x2, x0
 	str	w1, [x0, 4]
 	ldr	w1, [x29, 152]
 	cmp	w20, w1
-	bne	.L1318
+	bne	.L1320
 	adrp	x1, .LANCHOR108
 	ldr	x1, [x1, #:lo12:.LANCHOR108]
 	str	x1, [x0, 8]
@@ -9588,9 +9602,9 @@ FtlRead:
 	csel	w2, w24, w2, ls
 	str	w2, [x29, 144]
 	cmp	w1, w2
-	bne	.L1319
+	bne	.L1321
 	str	x22, [x0, 8]
-.L1319:
+.L1321:
 	adrp	x1, .LANCHOR23
 	adrp	x2, .LANCHOR114
 	str	w20, [x0, 24]
@@ -9601,10 +9615,10 @@ FtlRead:
 	and	x1, x1, 4294967292
 	add	x1, x2, x1
 	str	x1, [x0, 16]
-	b	.L1317
-.L1318:
+	b	.L1319
+.L1320:
 	cmp	w20, w23
-	bne	.L1320
+	bne	.L1322
 	ldrh	w2, [x21, #:lo12:.LANCHOR11]
 	adrp	x1, .LANCHOR109
 	ldr	w3, [x29, 136]
@@ -9614,25 +9628,25 @@ FtlRead:
 	sub	w3, w3, w1
 	str	w3, [x29, 140]
 	cmp	w2, w3
-	bne	.L1319
-.L1343:
+	bne	.L1321
+.L1345:
 	sub	w1, w1, w27
 	lsl	w1, w1, 9
 	add	x1, x22, x1
 	str	x1, [x0, 8]
-	b	.L1319
-.L1320:
+	b	.L1321
+.L1322:
 	ldrh	w1, [x21, #:lo12:.LANCHOR11]
 	mul	w1, w1, w20
-	b	.L1343
-.L1323:
+	b	.L1345
+.L1325:
 	cmp	w23, w1
-	bne	.L1324
+	bne	.L1326
 	ldr	x1, [x0, 8]
 	adrp	x0, .LANCHOR109
 	ldr	x0, [x0, #:lo12:.LANCHOR109]
 	cmp	x1, x0
-	bne	.L1324
+	bne	.L1326
 	ldr	x0, [x29, 96]
 	ldr	w2, [x29, 116]
 	ldrh	w0, [x0]
@@ -9640,18 +9654,18 @@ FtlRead:
 	sub	w0, w0, w27
 	lsl	w0, w0, 9
 	add	x0, x22, x0
-	b	.L1344
-.L1326:
+	b	.L1346
+.L1328:
 	cmp	w1, 256
-	bne	.L1327
+	bne	.L1329
 	ldr	w0, [x0, 4]
 	lsr	w0, w0, 10
 	bl	P2V_block_in_plane
 	bl	FtlGcRefreshBlock
-	b	.L1327
-.L1333:
+	b	.L1329
+.L1335:
 	mov	w19, -1
-	b	.L1309
+	b	.L1311
 	.size	FtlRead, .-FtlRead
 	.section	.text.sftl_read,"ax",@progbits
 	.align	2
@@ -9681,12 +9695,12 @@ FtlWrite:
 	mov	x27, x3
 	stp	x19, x20, [sp, 16]
 	stp	x23, x24, [sp, 48]
-	bne	.L1347
+	bne	.L1349
 	mov	x2, x3
 	mov	w1, w26
 	add	w0, w22, 256
 	bl	FtlVendorPartWrite
-.L1346:
+.L1348:
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
 	ldp	x23, x24, [sp, 48]
@@ -9694,21 +9708,21 @@ FtlWrite:
 	ldp	x27, x28, [sp, 80]
 	ldp	x29, x30, [sp], 224
 	ret
-.L1347:
+.L1349:
 	adrp	x0, .LANCHOR33
 	ldr	w0, [x0, #:lo12:.LANCHOR33]
 	cmp	w1, w0
-	bcs	.L1381
+	bcs	.L1383
 	cmp	w2, w0
-	bhi	.L1381
+	bhi	.L1383
 	add	w1, w1, w2
 	str	w1, [x29, 136]
 	cmp	w0, w1
-	bcc	.L1381
+	bcc	.L1383
 	adrp	x0, .LANCHOR165
 	ldr	w0, [x0, #:lo12:.LANCHOR165]
 	cmn	w0, #1
-	beq	.L1346
+	beq	.L1348
 	adrp	x0, .LANCHOR175
 	mov	w1, 2048
 	add	w2, w22, w2
@@ -9734,8 +9748,8 @@ FtlWrite:
 	str	w0, [x2, #:lo12:.LANCHOR84]
 	adrp	x0, .LANCHOR50
 	add	x20, x0, :lo12:.LANCHOR50
-.L1349:
-	cbnz	w24, .L1374
+.L1351:
+	cbnz	w24, .L1376
 	ldr	w1, [x29, 140]
 	mov	w0, 0
 	bl	rk_ftl_garbage_collect
@@ -9743,11 +9757,11 @@ FtlWrite:
 	mov	x22, x0
 	ldrh	w1, [x0, #:lo12:.LANCHOR47]
 	cmp	w1, 5
-	bls	.L1375
-.L1377:
+	bls	.L1377
+.L1379:
 	mov	w0, 0
-	b	.L1346
-.L1374:
+	b	.L1348
+.L1376:
 	adrp	x0, .LANCHOR50
 	add	x0, x0, :lo12:.LANCHOR50
 	adrp	x1, .LANCHOR2
@@ -9755,19 +9769,19 @@ FtlWrite:
 	ldrb	w2, [x0, 6]
 	ldrh	w0, [x1, #:lo12:.LANCHOR2]
 	cmp	w2, w0
-	bcc	.L1350
+	bcc	.L1352
 	adrp	x1, .LANCHOR176
 	adrp	x0, .LC1
 	mov	w2, 1041
 	add	x1, x1, :lo12:.LANCHOR176
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L1350:
+.L1352:
 	ldrh	w0, [x20, 4]
-	cbnz	w0, .L1351
+	cbnz	w0, .L1353
 	mov	x0, x20
 	bl	allocate_new_data_superblock
-.L1351:
+.L1353:
 	ldrb	w0, [x20, 7]
 	ldrh	w1, [x20, 4]
 	lsl	w0, w0, 2
@@ -9780,14 +9794,14 @@ FtlWrite:
 	ldr	x0, [x29, 112]
 	ldrh	w0, [x0, #:lo12:.LANCHOR2]
 	cmp	w1, w0
-	bcc	.L1352
+	bcc	.L1354
 	adrp	x1, .LANCHOR176
 	adrp	x0, .LC1
 	mov	w2, 1074
 	add	x1, x1, :lo12:.LANCHOR176
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L1352:
+.L1354:
 	adrp	x0, .LANCHOR23
 	add	x0, x0, :lo12:.LANCHOR23
 	str	xzr, [x29, 168]
@@ -9795,33 +9809,33 @@ FtlWrite:
 	adrp	x0, .LANCHOR22
 	add	x0, x0, :lo12:.LANCHOR22
 	str	x0, [x29, 96]
-.L1353:
+.L1355:
 	ldr	w1, [x29, 148]
 	adrp	x28, .LANCHOR104
 	ldr	w23, [x29, 168]
 	cmp	w23, w1
-	bcc	.L1372
+	bcc	.L1374
 	mov	x23, x1
-.L1354:
+.L1356:
 	ldr	x0, [x28, #:lo12:.LANCHOR104]
 	mov	x3, x20
 	mov	w2, 0
 	mov	w1, w23
 	bl	FtlProgPages
 	cmp	w24, w23
-	bcs	.L1373
+	bcs	.L1375
 	adrp	x1, .LANCHOR176
 	adrp	x0, .LC1
 	mov	w2, 1152
 	add	x1, x1, :lo12:.LANCHOR176
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L1373:
+.L1375:
 	sub	w24, w24, w23
-	b	.L1349
-.L1372:
+	b	.L1351
+.L1374:
 	ldrh	w0, [x20, 4]
-	cbz	w0, .L1354
+	cbz	w0, .L1356
 	add	x1, x29, 188
 	mov	w2, 0
 	mov	w0, w19
@@ -9851,10 +9865,10 @@ FtlWrite:
 	ldr	w0, [x29, 144]
 	cmp	w19, w25
 	ccmp	w19, w0, 4, ne
-	bne	.L1355
+	bne	.L1357
 	cmp	w19, w25
 	ldr	x0, [x29, 160]
-	bne	.L1356
+	bne	.L1358
 	ldrh	w2, [x0, #:lo12:.LANCHOR11]
 	udiv	w0, w22, w2
 	msub	w0, w0, w2, w22
@@ -9863,30 +9877,30 @@ FtlWrite:
 	cmp	w2, w26
 	csel	w0, w2, w26, ls
 	str	w0, [x29, 156]
-.L1357:
+.L1359:
 	ldr	x0, [x29, 160]
 	ldr	w1, [x29, 156]
 	ldrh	w0, [x0, #:lo12:.LANCHOR11]
 	cmp	w1, w0
 	ldr	x0, [x28, #:lo12:.LANCHOR104]
-	bne	.L1358
+	bne	.L1360
 	add	x21, x0, x21
 	cmp	w19, w25
-	bne	.L1359
+	bne	.L1361
 	str	x27, [x21, 8]
-.L1360:
+.L1362:
 	ldr	x0, [x29, 112]
 	ldrb	w1, [x20, 6]
 	ldrh	w0, [x0, #:lo12:.LANCHOR2]
 	cmp	w1, w0
-	bcc	.L1369
+	bcc	.L1371
 	adrp	x1, .LANCHOR176
 	adrp	x0, .LC1
 	mov	w2, 1143
 	add	x1, x1, :lo12:.LANCHOR176
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L1369:
+.L1371:
 	ldp	x1, x2, [x29, 120]
 	mov	w0, -3947
 	strh	w0, [x1, x2]
@@ -9905,34 +9919,34 @@ FtlWrite:
 	ldr	x0, [x29, 168]
 	add	x0, x0, 1
 	str	x0, [x29, 168]
-	b	.L1353
-.L1356:
+	b	.L1355
+.L1358:
 	ldrh	w2, [x0, #:lo12:.LANCHOR11]
 	ldr	w0, [x29, 136]
 	msub	w2, w19, w2, w0
 	and	w0, w2, 65535
 	stp	wzr, w0, [x29, 152]
-	b	.L1357
-.L1359:
+	b	.L1359
+.L1361:
 	ldr	w0, [x29, 156]
-.L1389:
+.L1391:
 	mul	w0, w0, w19
 	sub	w0, w0, w22
 	lsl	w0, w0, 9
 	add	x0, x27, x0
 	str	x0, [x21, 8]
-	b	.L1360
-.L1358:
+	b	.L1362
+.L1360:
 	add	x0, x0, x21
 	cmp	w19, w25
-	bne	.L1361
+	bne	.L1363
 	adrp	x1, .LANCHOR108
 	ldr	x1, [x1, #:lo12:.LANCHOR108]
-.L1388:
+.L1390:
 	str	x1, [x0, 8]
 	ldr	w0, [x29, 188]
 	cmn	w0, #1
-	beq	.L1363
+	beq	.L1365
 	str	w0, [x29, 196]
 	mov	w2, 0
 	ldr	x0, [x28, #:lo12:.LANCHOR104]
@@ -9945,7 +9959,7 @@ FtlWrite:
 	bl	FlashReadPages
 	ldr	w3, [x29, 192]
 	cmn	w3, #1
-	bne	.L1364
+	bne	.L1366
 	adrp	x0, .LANCHOR134
 	add	x0, x0, :lo12:.LANCHOR134
 	mov	w2, w19
@@ -9956,11 +9970,11 @@ FtlWrite:
 	adrp	x0, .LC44
 	add	x0, x0, :lo12:.LC44
 	bl	printf
-.L1367:
+.L1369:
 	ldr	w0, [x29, 156]
 	cmp	w19, w25
 	lsl	w2, w0, 9
-	bne	.L1368
+	bne	.L1370
 	ldr	x0, [x28, #:lo12:.LANCHOR104]
 	mov	x1, x27
 	add	x21, x0, x21
@@ -9968,17 +9982,17 @@ FtlWrite:
 	ldr	x3, [x21, 8]
 	lsl	w0, w0, 9
 	add	x0, x3, x0
-.L1390:
+.L1392:
 	bl	ftl_memcpy
-	b	.L1360
-.L1361:
+	b	.L1362
+.L1363:
 	adrp	x1, .LANCHOR109
 	ldr	x1, [x1, #:lo12:.LANCHOR109]
-	b	.L1388
-.L1364:
+	b	.L1390
+.L1366:
 	ldr	w1, [x23, 8]
 	cmp	w19, w1
-	beq	.L1366
+	beq	.L1368
 	adrp	x0, .LANCHOR134
 	add	x0, x0, :lo12:.LANCHOR134
 	ldr	w2, [x0, 72]
@@ -9988,18 +10002,18 @@ FtlWrite:
 	mov	w2, w19
 	add	x0, x0, :lo12:.LC45
 	bl	printf
-.L1366:
+.L1368:
 	ldr	w0, [x23, 8]
 	cmp	w19, w0
-	beq	.L1367
+	beq	.L1369
 	mov	w2, 1128
 	adrp	x1, .LANCHOR176
 	adrp	x0, .LC1
 	add	x1, x1, :lo12:.LANCHOR176
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-	b	.L1367
-.L1363:
+	b	.L1369
+.L1365:
 	ldr	x0, [x28, #:lo12:.LANCHOR104]
 	ldr	x1, [x29, 96]
 	add	x0, x0, x21
@@ -10007,8 +10021,8 @@ FtlWrite:
 	mov	w1, 0
 	ldr	x0, [x0, 8]
 	bl	ftl_memset
-	b	.L1367
-.L1368:
+	b	.L1369
+.L1370:
 	ldr	x0, [x29, 160]
 	ldrh	w1, [x0, #:lo12:.LANCHOR11]
 	ldr	x0, [x28, #:lo12:.LANCHOR104]
@@ -10018,14 +10032,14 @@ FtlWrite:
 	ldr	x0, [x21, 8]
 	lsl	w1, w1, 9
 	add	x1, x27, x1
-	b	.L1390
-.L1355:
+	b	.L1392
+.L1357:
 	ldr	x0, [x28, #:lo12:.LANCHOR104]
 	add	x21, x0, x21
 	ldr	x0, [x29, 160]
 	ldrh	w0, [x0, #:lo12:.LANCHOR11]
-	b	.L1389
-.L1375:
+	b	.L1391
+.L1377:
 	adrp	x23, .LANCHOR71
 	adrp	x20, .LANCHOR100
 	adrp	x21, .LANCHOR99
@@ -10033,19 +10047,19 @@ FtlWrite:
 	add	x20, x20, :lo12:.LANCHOR100
 	add	x21, x21, :lo12:.LANCHOR99
 	mov	w19, 256
-.L1378:
+.L1380:
 	adrp	x0, .LANCHOR144
 	mov	w1, 65535
 	ldrh	w0, [x0, #:lo12:.LANCHOR144]
 	cmp	w0, w1
-	bne	.L1376
+	bne	.L1378
 	ldrh	w1, [x23]
 	cmp	w1, w0
-	bne	.L1376
+	bne	.L1378
 	mov	w0, 0
 	bl	List_get_gc_head_node
 	bl	FtlGcRefreshBlock
-.L1376:
+.L1378:
 	mov	w0, 128
 	mov	w1, 1
 	strh	w0, [x20]
@@ -10057,13 +10071,13 @@ FtlWrite:
 	bl	rk_ftl_garbage_collect
 	ldrh	w0, [x22, #:lo12:.LANCHOR47]
 	cmp	w0, 2
-	bhi	.L1377
+	bhi	.L1379
 	subs	w19, w19, #1
-	bne	.L1378
-	b	.L1377
-.L1381:
+	bne	.L1380
+	b	.L1379
+.L1383:
 	mov	w0, -1
-	b	.L1346
+	b	.L1348
 	.size	FtlWrite, .-FtlWrite
 	.section	.text.sftl_gc,"ax",@progbits
 	.align	2
@@ -10105,10 +10119,10 @@ FtlLoadSysInfo:
 	ldrh	w0, [x20, #:lo12:.LANCHOR138]
 	mov	w1, 65535
 	cmp	w0, w1
-	bne	.L1393
-.L1404:
+	bne	.L1395
+.L1406:
 	mov	w0, -1
-.L1392:
+.L1394:
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
 	ldp	x23, x24, [sp, 48]
@@ -10116,7 +10130,7 @@ FtlLoadSysInfo:
 	ldp	x27, x28, [sp, 80]
 	ldp	x29, x30, [sp], 112
 	ret
-.L1393:
+.L1395:
 	add	x24, x20, :lo12:.LANCHOR138
 	mov	w1, 1
 	bl	FtlGetLastWrittenPage
@@ -10128,28 +10142,28 @@ FtlLoadSysInfo:
 	ldrsh	w24, [x20, #:lo12:.LANCHOR138]
 	add	x26, x26, :lo12:.LANCHOR22
 	add	x27, x27, :lo12:.LANCHOR177
-.L1395:
-	tbz	w28, #31, .L1401
+.L1397:
+	tbz	w28, #31, .L1403
 	adrp	x1, .LANCHOR177
 	adrp	x0, .LC1
 	mov	w2, 1474
 	add	x1, x1, :lo12:.LANCHOR177
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L1400:
+.L1402:
 	adrp	x1, .LANCHOR22
 	ldrh	w0, [x21, #:lo12:.LANCHOR4]
 	ldrh	w1, [x1, #:lo12:.LANCHOR22]
 	add	x0, x0, 24
 	cmp	x1, x0, lsl 1
-	bcs	.L1403
+	bcs	.L1405
 	adrp	x1, .LANCHOR177
 	adrp	x0, .LC1
 	mov	w2, 1476
 	add	x1, x1, :lo12:.LANCHOR177
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L1403:
+.L1405:
 	add	x24, x19, :lo12:.LANCHOR137
 	adrp	x19, .LANCHOR38
 	add	x22, x19, :lo12:.LANCHOR38
@@ -10167,7 +10181,7 @@ FtlLoadSysInfo:
 	mov	w0, 19539
 	movk	w0, 0x4654, lsl 16
 	cmp	w1, w0
-	bne	.L1404
+	bne	.L1406
 	add	x20, x20, :lo12:.LANCHOR138
 	adrp	x0, .LANCHOR9
 	ldrh	w1, [x22, 8]
@@ -10175,7 +10189,7 @@ FtlLoadSysInfo:
 	ldrh	w0, [x0, #:lo12:.LANCHOR9]
 	strh	w1, [x20, 6]
 	cmp	w2, w0
-	bne	.L1404
+	bne	.L1406
 	adrp	x0, .LANCHOR178
 	adrp	x2, .LANCHOR151
 	adrp	x3, .LANCHOR2
@@ -10200,14 +10214,14 @@ FtlLoadSysInfo:
 	udiv	w0, w0, w3
 	adrp	x3, .LANCHOR170
 	strh	w0, [x3, #:lo12:.LANCHOR170]
-	bls	.L1405
+	bls	.L1407
 	adrp	x1, .LANCHOR177
 	adrp	x0, .LC1
 	mov	w2, 1498
 	add	x1, x1, :lo12:.LANCHOR177
 	add	x0, x0, :lo12:.LC1
 	bl	printf
-.L1405:
+.L1407:
 	add	x4, x19, :lo12:.LANCHOR38
 	adrp	x0, .LANCHOR50
 	add	x2, x0, :lo12:.LANCHOR50
@@ -10272,47 +10286,47 @@ FtlLoadSysInfo:
 	adrp	x1, .LANCHOR81
 	ldr	w4, [x1, #:lo12:.LANCHOR81]
 	cmp	w3, w4
-	bls	.L1406
+	bls	.L1408
 	str	w3, [x1, #:lo12:.LANCHOR81]
-.L1406:
+.L1408:
 	add	x19, x19, :lo12:.LANCHOR38
 	adrp	x1, .LANCHOR82
 	ldr	w3, [x1, #:lo12:.LANCHOR82]
 	ldr	w2, [x19, 36]
 	cmp	w2, w3
-	bls	.L1407
+	bls	.L1409
 	str	w2, [x1, #:lo12:.LANCHOR82]
-.L1407:
+.L1409:
 	mov	w1, 65535
 	cmp	w6, w1
-	beq	.L1408
+	beq	.L1410
 	add	x0, x0, :lo12:.LANCHOR50
 	bl	make_superblock
-.L1408:
+.L1410:
 	ldrh	w2, [x20, #:lo12:.LANCHOR51]
 	mov	w1, 65535
 	add	x0, x20, :lo12:.LANCHOR51
 	cmp	w2, w1
-	beq	.L1409
+	beq	.L1411
 	bl	make_superblock
-.L1409:
+.L1411:
 	ldrh	w2, [x21, #:lo12:.LANCHOR52]
 	mov	w1, 65535
 	add	x0, x21, :lo12:.LANCHOR52
 	cmp	w2, w1
-	beq	.L1410
+	beq	.L1412
 	bl	make_superblock
-.L1410:
+.L1412:
 	ldrh	w2, [x22, #:lo12:.LANCHOR144]
 	mov	w1, 65535
 	add	x0, x22, :lo12:.LANCHOR144
 	cmp	w2, w1
-	beq	.L1411
+	beq	.L1413
 	bl	make_superblock
-.L1411:
+.L1413:
 	mov	w0, 0
-	b	.L1392
-.L1401:
+	b	.L1394
+.L1403:
 	add	x3, x19, :lo12:.LANCHOR137
 	orr	w0, w28, w24, lsl 10
 	mov	w2, 1
@@ -10326,15 +10340,15 @@ FtlLoadSysInfo:
 	ldr	x3, [x29, 104]
 	ldr	x0, [x3, 16]
 	ldr	w8, [x0, 12]
-	cbz	w8, .L1396
+	cbz	w8, .L1398
 	ldr	w0, [x19, #:lo12:.LANCHOR137]
 	cmn	w0, #1
-	beq	.L1396
+	beq	.L1398
 	ldrh	w1, [x26]
 	ldr	x0, [x3, 8]
 	bl	js_hash
 	cmp	w8, w0
-	beq	.L1396
+	beq	.L1398
 	add	x10, x20, :lo12:.LANCHOR138
 	mov	w6, w0
 	mov	w5, w8
@@ -10346,39 +10360,39 @@ FtlLoadSysInfo:
 	add	x0, x0, :lo12:.LC46
 	str	x10, [x29, 104]
 	bl	printf
-	cbnz	w28, .L1397
+	cbnz	w28, .L1399
 	ldr	x10, [x29, 104]
 	ldrh	w0, [x10, 4]
 	cmp	w24, w0
-	beq	.L1397
+	beq	.L1399
 	sxth	w24, w0
 	adrp	x0, .LANCHOR19
 	ldrh	w7, [x0, #:lo12:.LANCHOR19]
 	sub	w7, w7, #1
-.L1423:
+.L1425:
 	sxth	w28, w7
-	b	.L1395
-.L1397:
+	b	.L1397
+.L1399:
 	mov	w0, -1
 	str	w0, [x19, #:lo12:.LANCHOR137]
-.L1396:
+.L1398:
 	ldr	w0, [x19, #:lo12:.LANCHOR137]
 	cmn	w0, #1
-	beq	.L1399
+	beq	.L1401
 	ldr	x0, [x22, #:lo12:.LANCHOR105]
 	mov	w1, 19539
 	movk	w1, 0x4654, lsl 16
 	ldr	w0, [x0]
 	cmp	w0, w1
-	bne	.L1399
+	bne	.L1401
 	ldr	x0, [x25, #:lo12:.LANCHOR113]
 	ldrh	w1, [x0]
 	mov	w0, 61604
 	cmp	w1, w0
-	beq	.L1400
-.L1399:
+	beq	.L1402
+.L1401:
 	sub	w7, w28, #1
-	b	.L1423
+	b	.L1425
 	.size	FtlLoadSysInfo, .-FtlLoadSysInfo
 	.section	.text.FtlMapTblRecovery,"ax",@progbits
 	.align	2
@@ -10427,14 +10441,14 @@ FtlMapTblRecovery:
 	add	x0, x26, :lo12:.LANCHOR19
 	str	w1, [x19, 56]
 	str	x0, [x29, 96]
-.L1425:
+.L1427:
 	ldr	w0, [x29, 152]
 	cmp	w20, w0
-	bge	.L1444
+	bge	.L1446
 	ldr	w0, [x29, 108]
 	sxtw	x28, w20
 	cmp	w20, w0
-	bne	.L1426
+	bne	.L1428
 	lsl	x0, x28, 1
 	mov	w1, 1
 	add	x26, x24, x0
@@ -10455,21 +10469,21 @@ FtlMapTblRecovery:
 	add	x28, x28, :lo12:.LANCHOR179
 	ldr	x0, [x29, 128]
 	add	x22, x0, :lo12:.LANCHOR137
-.L1427:
+.L1429:
 	ldr	w0, [x29, 152]
 	cmp	w24, w0
-	ble	.L1430
-.L1444:
+	ble	.L1432
+.L1446:
 	mov	x0, x19
 	bl	ftl_free_no_use_map_blk
 	adrp	x0, .LANCHOR19
 	ldrh	w1, [x19, 2]
 	ldrh	w0, [x0, #:lo12:.LANCHOR19]
 	cmp	w1, w0
-	bne	.L1432
+	bne	.L1434
 	mov	x0, x19
 	bl	ftl_map_blk_alloc_new_blk
-.L1432:
+.L1434:
 	mov	x0, x19
 	bl	ftl_map_blk_gc
 	mov	x0, x19
@@ -10482,7 +10496,7 @@ FtlMapTblRecovery:
 	ldp	x27, x28, [sp, 80]
 	ldp	x29, x30, [sp], 160
 	ret
-.L1430:
+.L1432:
 	ldrh	w0, [x26]
 	mov	w2, 1
 	mov	w1, w2
@@ -10494,16 +10508,16 @@ FtlMapTblRecovery:
 	ldr	w0, [x0, 12]
 	str	w0, [x29, 156]
 	uxtw	x0, w0
-	cbz	w0, .L1428
+	cbz	w0, .L1430
 	ldr	w0, [x22]
 	cmn	w0, #1
-	beq	.L1428
+	beq	.L1430
 	ldrh	w1, [x27]
 	ldr	x0, [x22, 8]
 	bl	js_hash
 	ldr	w1, [x29, 156]
 	cmp	w1, w0
-	beq	.L1428
+	beq	.L1430
 	mov	w5, w0
 	mov	x4, x1
 	mov	w3, w24
@@ -10514,25 +10528,25 @@ FtlMapTblRecovery:
 	bl	printf
 	mov	w0, -1
 	str	w0, [x22]
-.L1428:
+.L1430:
 	ldr	w0, [x22]
 	cmn	w0, #1
-	beq	.L1429
+	beq	.L1431
 	ldrh	w0, [x21, 8]
 	cmp	w25, w0
-	bls	.L1429
+	bls	.L1431
 	ldrh	w2, [x21]
 	ldrh	w1, [x19, 4]
 	cmp	w2, w1
-	bne	.L1429
+	bne	.L1431
 	ubfiz	x0, x0, 2, 16
 	ldr	w1, [x22, 4]
 	str	w1, [x23, x0]
-.L1429:
+.L1431:
 	add	w6, w24, 1
 	sxth	w24, w6
-	b	.L1427
-.L1426:
+	b	.L1429
+.L1428:
 	lsl	x2, x28, 1
 	ldr	x0, [x22, #:lo12:.LANCHOR105]
 	str	x0, [x27, 8]
@@ -10549,16 +10563,16 @@ FtlMapTblRecovery:
 	bl	FlashReadPages
 	ldr	w0, [x27]
 	cmn	w0, #1
-	beq	.L1446
+	beq	.L1448
 	ldrh	w1, [x21]
 	ldrh	w0, [x19, 4]
 	cmp	w1, w0
-	bne	.L1446
+	bne	.L1448
 	ldrh	w1, [x21, 8]
 	mov	w0, 64245
 	cmp	w1, w0
-	beq	.L1434
-.L1446:
+	beq	.L1436
+.L1448:
 	adrp	x0, .LANCHOR22
 	add	x0, x0, :lo12:.LANCHOR22
 	mov	w28, 0
@@ -10566,11 +10580,11 @@ FtlMapTblRecovery:
 	adrp	x0, .LANCHOR179
 	add	x0, x0, :lo12:.LANCHOR179
 	str	x0, [x29, 112]
-.L1435:
+.L1437:
 	ldr	x0, [x29, 96]
 	ldrh	w0, [x0]
 	cmp	w28, w0
-	bge	.L1442
+	bge	.L1444
 	ldr	x0, [x29, 136]
 	mov	w2, 1
 	mov	w1, w2
@@ -10583,17 +10597,17 @@ FtlMapTblRecovery:
 	ldr	w0, [x0, 12]
 	str	w0, [x29, 156]
 	uxtw	x0, w0
-	cbz	w0, .L1439
+	cbz	w0, .L1441
 	ldr	w0, [x27]
 	cmn	w0, #1
-	beq	.L1439
+	beq	.L1441
 	ldr	x0, [x29, 120]
 	ldrh	w1, [x0]
 	ldr	x0, [x27, 8]
 	bl	js_hash
 	ldr	w1, [x29, 156]
 	cmp	w1, w0
-	beq	.L1439
+	beq	.L1441
 	mov	x4, x1
 	ldr	x1, [x29, 112]
 	mov	w5, w0
@@ -10604,51 +10618,51 @@ FtlMapTblRecovery:
 	bl	printf
 	mov	w0, -1
 	str	w0, [x27]
-.L1439:
+.L1441:
 	ldr	w0, [x27]
 	cmn	w0, #1
-	beq	.L1440
+	beq	.L1442
 	ldrh	w0, [x21, 8]
 	cmp	w25, w0
-	bls	.L1440
+	bls	.L1442
 	ldrh	w2, [x21]
 	ldrh	w1, [x19, 4]
 	cmp	w2, w1
-	bne	.L1440
+	bne	.L1442
 	ubfiz	x0, x0, 2, 16
 	ldr	w1, [x27, 4]
 	str	w1, [x23, x0]
-.L1440:
+.L1442:
 	add	w7, w28, 1
 	sxth	w28, w7
-	b	.L1435
-.L1434:
+	b	.L1437
+.L1436:
 	ldrh	w3, [x26, #:lo12:.LANCHOR19]
 	mov	w0, 0
 	ldr	x4, [x22, #:lo12:.LANCHOR105]
 	sub	w3, w3, #1
-.L1436:
+.L1438:
 	cmp	w0, w3
-	blt	.L1438
-.L1442:
+	blt	.L1440
+.L1444:
 	add	w20, w20, 1
 	sxth	w20, w20
-	b	.L1425
-.L1438:
+	b	.L1427
+.L1440:
 	lsl	w2, w0, 1
 	sxtw	x2, w2
 	lsl	x1, x2, 2
 	ldrh	w1, [x4, x1]
 	cmp	w25, w1
-	bls	.L1437
+	bls	.L1439
 	add	x2, x2, 1
 	ubfiz	x1, x1, 2, 16
 	ldr	w2, [x4, x2, lsl 2]
 	str	w2, [x23, x1]
-.L1437:
+.L1439:
 	add	w0, w0, 1
 	sxth	w0, w0
-	b	.L1436
+	b	.L1438
 	.size	FtlMapTblRecovery, .-FtlMapTblRecovery
 	.section	.text.FtlLoadVonderInfo,"ax",@progbits
 	.align	2
@@ -10722,20 +10736,20 @@ FtlSysBlkInit:
 	ldrh	w1, [x0, #:lo12:.LANCHOR138]
 	mov	w0, 65535
 	cmp	w1, w0
-	bne	.L1471
-.L1473:
+	bne	.L1473
+.L1475:
 	mov	w21, -1
-.L1470:
+.L1472:
 	mov	w0, w21
 	ldr	x23, [sp, 48]
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
 	ldp	x29, x30, [sp], 64
 	ret
-.L1471:
+.L1473:
 	bl	FtlLoadSysInfo
 	mov	w21, w0
-	cbnz	w0, .L1473
+	cbnz	w0, .L1475
 	bl	FtlLoadMapInfo
 	bl	FtlLoadVonderInfo
 	bl	Ftl_load_ext_data
@@ -10751,19 +10765,19 @@ FtlSysBlkInit:
 	ldr	x1, [x0, #:lo12:.LANCHOR54]
 	mov	w0, 0
 	add	x1, x1, 4
-.L1474:
+.L1476:
 	cmp	w0, w2
-	bge	.L1479
+	bge	.L1481
 	ldr	w3, [x1], 16
-	tbz	w3, #31, .L1475
-.L1479:
+	tbz	w3, #31, .L1477
+.L1481:
 	adrp	x3, .LANCHOR82
 	cmp	w0, w2
 	ldr	w1, [x3, #:lo12:.LANCHOR82]
 	add	w1, w1, 32
 	str	w1, [x3, #:lo12:.LANCHOR82]
-	bge	.L1481
-.L1476:
+	bge	.L1483
+.L1478:
 	adrp	x23, .LANCHOR50
 	add	x20, x23, :lo12:.LANCHOR50
 	mov	x0, x20
@@ -10802,17 +10816,17 @@ FtlSysBlkInit:
 	strh	w1, [x0, 30]
 	bl	l2p_flush
 	bl	FtlVpcTblFlush
-.L1483:
+.L1485:
 	bl	FtlVpcTblFlush
-	b	.L1470
-.L1475:
+	b	.L1472
+.L1477:
 	add	w0, w0, 1
-	b	.L1474
-.L1481:
+	b	.L1476
+.L1483:
 	ldrh	w0, [x19, #:lo12:.LANCHOR155]
-	cbnz	w0, .L1476
+	cbnz	w0, .L1478
 	bl	l2p_flush
-	b	.L1483
+	b	.L1485
 	.size	FtlSysBlkInit, .-FtlSysBlkInit
 	.section	.text.ftl_low_format,"ax",@progbits
 	.align	2
@@ -10835,9 +10849,9 @@ ftl_low_format:
 	str	wzr, [x20, #:lo12:.LANCHOR81]
 	bl	FtlFreeSysBlkQueueInit
 	bl	FtlLoadBbt
-	cbz	w0, .L1485
+	cbz	w0, .L1487
 	bl	FtlMakeBbt
-.L1485:
+.L1487:
 	adrp	x22, .LANCHOR11
 	adrp	x0, .LANCHOR108
 	mov	w6, 23752
@@ -10848,31 +10862,31 @@ ftl_low_format:
 	lsl	w1, w1, 7
 	ldr	x5, [x0, #:lo12:.LANCHOR109]
 	mov	w0, 0
-.L1486:
+.L1488:
 	cmp	w0, w1
-	blt	.L1487
+	blt	.L1489
 	adrp	x24, .LANCHOR4
 	adrp	x21, .LANCHOR5
 	add	x26, x21, :lo12:.LANCHOR5
 	mov	w19, 0
 	ldrh	w25, [x24, #:lo12:.LANCHOR4]
-.L1488:
+.L1490:
 	ldrh	w0, [x26]
 	cmp	w0, w25
-	bhi	.L1489
+	bhi	.L1491
 	adrp	x25, .LANCHOR2
 	sub	w1, w19, #2
 	ldrh	w0, [x25, #:lo12:.LANCHOR2]
 	cmp	w1, w0, lsl 1
-	bgt	.L1490
-.L1494:
+	bgt	.L1492
+.L1496:
 	add	x24, x24, :lo12:.LANCHOR4
 	mov	w19, 0
 	mov	w23, 0
-.L1491:
+.L1493:
 	ldrh	w0, [x24]
 	cmp	w0, w23
-	bhi	.L1495
+	bhi	.L1497
 	adrp	x0, .LANCHOR98
 	ldrh	w1, [x21, #:lo12:.LANCHOR5]
 	ldrh	w4, [x25, #:lo12:.LANCHOR2]
@@ -10889,28 +10903,28 @@ ftl_low_format:
 	mov	w6, 24
 	mul	w6, w4, w6
 	cmp	w19, w6
-	ble	.L1496
+	ble	.L1498
 	sub	w1, w1, w19
 	udiv	w1, w1, w4
 	str	w1, [x3, #:lo12:.LANCHOR151]
 	lsr	w1, w1, 5
 	add	w1, w1, 24
 	strh	w1, [x2, #:lo12:.LANCHOR170]
-.L1496:
+.L1498:
 	adrp	x1, .LANCHOR14
 	ldrh	w1, [x1, #:lo12:.LANCHOR14]
-	cbz	w1, .L1498
+	cbz	w1, .L1500
 	ldrh	w6, [x2, #:lo12:.LANCHOR170]
 	add	w6, w6, w1, lsr 1
 	strh	w6, [x2, #:lo12:.LANCHOR170]
 	mul	w6, w1, w4
 	cmp	w19, w6
-	bge	.L1498
+	bge	.L1500
 	add	w1, w1, 32
 	str	w5, [x3, #:lo12:.LANCHOR151]
 	add	w1, w0, w1
 	strh	w1, [x2, #:lo12:.LANCHOR170]
-.L1498:
+.L1500:
 	ldrh	w1, [x2, #:lo12:.LANCHOR170]
 	adrp	x23, .LANCHOR178
 	ldr	w0, [x3, #:lo12:.LANCHOR151]
@@ -10950,20 +10964,20 @@ ftl_low_format:
 	strh	wzr, [x19, 2]
 	strb	wzr, [x19, 6]
 	strb	w1, [x19, 8]
-.L1500:
+.L1502:
 	mov	x0, x19
 	bl	make_superblock
 	ldrb	w1, [x19, 7]
 	ldrh	w0, [x19]
-	cbnz	w1, .L1501
+	cbnz	w1, .L1503
 	ldr	x1, [x21, #:lo12:.LANCHOR41]
 	ubfiz	x0, x0, 1, 16
 	strh	w23, [x1, x0]
 	ldrh	w0, [x19]
 	add	w0, w0, 1
 	strh	w0, [x19]
-	b	.L1500
-.L1487:
+	b	.L1502
+.L1489:
 	ubfiz	x3, x0, 2, 16
 	mvn	w2, w0
 	orr	w2, w0, w2, lsl 16
@@ -10971,8 +10985,8 @@ ftl_low_format:
 	and	w0, w0, 65535
 	str	w2, [x4, x3]
 	str	w6, [x5, x3]
-	b	.L1486
-.L1489:
+	b	.L1488
+.L1491:
 	mov	w0, w25
 	mov	w1, 1
 	add	w25, w25, 1
@@ -10980,8 +10994,8 @@ ftl_low_format:
 	add	w19, w19, w0
 	and	w25, w25, 65535
 	and	w19, w19, 65535
-	b	.L1488
-.L1490:
+	b	.L1490
+.L1492:
 	udiv	w0, w19, w0
 	adrp	x1, .LANCHOR30
 	ldr	w19, [x1, #:lo12:.LANCHOR30]
@@ -10991,17 +11005,17 @@ ftl_low_format:
 	add	x23, x21, :lo12:.LANCHOR5
 	bl	FtlFreeSysBlkQueueInit
 	ldrh	w19, [x24, #:lo12:.LANCHOR4]
-.L1492:
+.L1494:
 	ldrh	w0, [x23]
 	cmp	w0, w19
-	bls	.L1494
+	bls	.L1496
 	mov	w0, w19
 	add	w19, w19, 1
 	mov	w1, 1
 	and	w19, w19, 65535
 	bl	FtlLowFormatEraseBlock
-	b	.L1492
-.L1495:
+	b	.L1494
+.L1497:
 	mov	w0, w23
 	mov	w1, 0
 	add	w23, w23, 1
@@ -11009,8 +11023,8 @@ ftl_low_format:
 	add	w19, w19, w0
 	and	w23, w23, 65535
 	and	w19, w19, 65535
-	b	.L1491
-.L1501:
+	b	.L1493
+.L1503:
 	ldr	w1, [x20, #:lo12:.LANCHOR81]
 	ubfiz	x0, x0, 1, 16
 	str	w1, [x19, 12]
@@ -11030,20 +11044,20 @@ ftl_low_format:
 	mov	w1, 1
 	strb	wzr, [x0, 6]
 	strb	w1, [x0, 8]
-.L1502:
+.L1504:
 	mov	x0, x19
 	bl	make_superblock
 	ldrb	w1, [x19, 7]
 	ldrh	w0, [x19]
-	cbnz	w1, .L1503
+	cbnz	w1, .L1505
 	ldr	x1, [x21, #:lo12:.LANCHOR41]
 	ubfiz	x0, x0, 1, 16
 	strh	w23, [x1, x0]
 	ldrh	w0, [x19]
 	add	w0, w0, 1
 	strh	w0, [x19]
-	b	.L1502
-.L1503:
+	b	.L1504
+.L1505:
 	ldr	w1, [x20, #:lo12:.LANCHOR81]
 	ubfiz	x0, x0, 1, 16
 	str	w1, [x19, 12]
@@ -11069,11 +11083,11 @@ ftl_low_format:
 	str	w0, [x20, #:lo12:.LANCHOR81]
 	bl	FtlVpcTblFlush
 	bl	FtlSysBlkInit
-	cbnz	w0, .L1504
+	cbnz	w0, .L1506
 	adrp	x0, .LANCHOR165
 	mov	w1, 1
 	str	w1, [x0, #:lo12:.LANCHOR165]
-.L1504:
+.L1506:
 	mov	w0, 0
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
@@ -11108,19 +11122,19 @@ sftl_init:
 	adrp	x0, .LANCHOR3
 	ldrh	w0, [x0, #:lo12:.LANCHOR3]
 	bl	FtlFreeSysBlkQueueInit
-.L1510:
+.L1512:
 	bl	FtlLoadBbt
-	cbz	w0, .L1511
-.L1521:
+	cbz	w0, .L1513
+.L1523:
 	ldr	w0, [x19]
 	cmp	w0, 1
-	bne	.L1510
+	bne	.L1512
 	str	wzr, [x19]
 	bl	ftl_low_format
-	b	.L1510
-.L1511:
+	b	.L1512
+.L1513:
 	bl	FtlSysBlkInit
-	cbnz	w0, .L1521
+	cbnz	w0, .L1523
 	mov	w1, 1
 	str	w1, [x20, #:lo12:.LANCHOR165]
 	ldp	x19, x20, [sp, 16]
@@ -11143,17 +11157,17 @@ FtlWriteToIDB:
 	stp	x19, x20, [sp, 16]
 	adrp	x27, .LANCHOR181
 	stp	x25, x26, [sp, 64]
-	bls	.L1523
+	bls	.L1525
 	mov	w19, w0
 	cmp	w0, 575
-	bls	.L1524
-.L1523:
+	bls	.L1526
+.L1525:
 	ldr	w0, [x27, #:lo12:.LANCHOR181]
-	cbnz	w0, .L1525
-.L1589:
+	cbnz	w0, .L1527
+.L1591:
 	mov	w19, 0
-	b	.L1522
-.L1525:
+	b	.L1524
+.L1527:
 	adrp	x0, .LANCHOR182
 	str	x0, [x29, 112]
 	mov	w1, 35899
@@ -11161,7 +11175,7 @@ FtlWriteToIDB:
 	movk	w1, 0xfcdc, lsl 16
 	ldr	w2, [x26]
 	cmp	w2, w1
-	bne	.L1527
+	bne	.L1529
 	adrp	x22, .LANCHOR0
 	add	x0, x22, :lo12:.LANCHOR0
 	add	x1, x26, 258048
@@ -11170,9 +11184,9 @@ FtlWriteToIDB:
 	mov	w3, 4097
 	ldrh	w2, [x0, 10]
 	mov	w0, 0
-.L1531:
+.L1533:
 	ldr	w4, [x1]
-	cbnz	w4, .L1528
+	cbnz	w4, .L1530
 	ldr	w4, [x26, w0, uxtw 2]
 	add	w0, w0, 1
 	str	w4, [x1, 2048]
@@ -11181,13 +11195,13 @@ FtlWriteToIDB:
 	csel	w0, w0, wzr, cc
 	sub	x1, x1, #4
 	cmp	w19, 4096
-	bne	.L1531
+	bne	.L1533
 	mov	w19, 512
-	b	.L1530
-.L1528:
+	b	.L1532
+.L1530:
 	add	w19, w19, 127
 	lsr	w19, w19, 7
-.L1530:
+.L1532:
 	ubfiz	w0, w2, 2, 14
 	add	w21, w19, 4
 	mov	w1, w19
@@ -11203,16 +11217,16 @@ FtlWriteToIDB:
 	adrp	x0, .LANCHOR77
 	add	x20, x0, :lo12:.LANCHOR77
 	str	wzr, [x29, 156]
-.L1532:
+.L1534:
 	add	w0, w21, w24
 	str	w0, [x29, 140]
 	cmp	w0, 8
-	bls	.L1554
+	bls	.L1556
 	ldr	w0, [x29, 156]
-	cbnz	w0, .L1555
-.L1527:
+	cbnz	w0, .L1557
+.L1529:
 	mov	w19, -1
-.L1555:
+.L1557:
 	ldr	x0, [x29, 112]
 	str	wzr, [x27, #:lo12:.LANCHOR181]
 	ldr	x0, [x0, #:lo12:.LANCHOR182]
@@ -11220,7 +11234,7 @@ FtlWriteToIDB:
 	adrp	x0, .LANCHOR183
 	ldr	x0, [x0, #:lo12:.LANCHOR183]
 	bl	free
-.L1522:
+.L1524:
 	mov	w0, w19
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
@@ -11229,7 +11243,7 @@ FtlWriteToIDB:
 	ldp	x27, x28, [sp, 80]
 	ldp	x29, x30, [sp], 224
 	ret
-.L1554:
+.L1556:
 	adrp	x23, .LANCHOR183
 	mov	w1, 0
 	mov	x2, 512
@@ -11242,16 +11256,16 @@ FtlWriteToIDB:
 	adrp	x0, .LANCHOR77
 	add	x0, x0, :lo12:.LANCHOR77
 	ldr	x1, [x0, 32]
-	cbz	x1, .L1562
+	cbz	x1, .L1564
 	ldr	x0, [x0, 40]
 	mov	w25, 6
 	cmp	x0, 0
 	mov	w0, 9
 	csel	w25, w25, w0, eq
-.L1533:
+.L1535:
 	mul	w4, w24, w3
 	mov	w28, 0
-.L1534:
+.L1536:
 	ldr	x5, [x20, 8]
 	mov	w1, w4
 	str	w3, [x29, 128]
@@ -11263,9 +11277,9 @@ FtlWriteToIDB:
 	cmp	w21, w28
 	ldr	w4, [x29, 152]
 	add	w4, w4, w3
-	bhi	.L1534
+	bhi	.L1536
 	cmp	w25, 9
-	bne	.L1564
+	bne	.L1566
 	ldr	x28, [x23, #:lo12:.LANCHOR183]
 	mov	w2, 1024
 	str	w3, [x29, 152]
@@ -11291,28 +11305,28 @@ FtlWriteToIDB:
 	bl	js_hash
 	str	w0, [x28, 8]
 	ldr	w3, [x29, 152]
-.L1535:
+.L1537:
 	mul	w0, w21, w3
 	mov	x6, x26
 	str	w0, [x29, 152]
 	mov	x5, 0
 	add	x0, x22, :lo12:.LANCHOR0
 	str	x0, [x29, 128]
-.L1536:
+.L1538:
 	ldr	w0, [x29, 152]
 	mov	w1, w5
 	cmp	w5, w0
-	bcs	.L1543
+	bcs	.L1545
 	cmp	w25, 9
-	bne	.L1537
+	bne	.L1539
 	add	w0, w1, 1
-.L1587:
+.L1589:
 	str	w0, [x29, 160]
 	mov	w0, 61424
 	str	w0, [x29, 164]
 	cmp	w1, 0
 	ccmp	w25, 9, 0, eq
-	bne	.L1539
+	bne	.L1541
 	ldr	x1, [x20, 32]
 	mov	w0, 70
 	stp	x6, x5, [x29, 96]
@@ -11332,8 +11346,8 @@ FtlWriteToIDB:
 	ldr	w1, [x29, 120]
 	ldp	x6, x5, [x29, 96]
 	cmn	w1, #1
-	bne	.L1540
-.L1543:
+	bne	.L1542
+.L1545:
 	add	x0, x22, :lo12:.LANCHOR0
 	ldr	x25, [x23, #:lo12:.LANCHOR183]
 	ldrb	w1, [x0, 14]
@@ -11342,22 +11356,22 @@ FtlWriteToIDB:
 	mul	w1, w24, w0
 	str	w1, [x29, 144]
 	ldr	x1, [x20, 32]
-	cbnz	x1, .L1541
+	cbnz	x1, .L1543
 	mov	w1, 6
-.L1588:
+.L1590:
 	mul	w0, w21, w0
 	mov	x28, 0
 	str	w0, [x29, 120]
 	str	w1, [x29, 152]
-.L1545:
+.L1547:
 	ldr	w0, [x29, 120]
 	mov	w1, w28
 	cmp	w0, w28
-	bls	.L1549
+	bls	.L1551
 	ldr	w0, [x29, 152]
 	cmp	w28, 0
 	ccmp	w0, 9, 0, eq
-	bne	.L1546
+	bne	.L1548
 	ldr	x1, [x20, 32]
 	mov	w0, 70
 	blr	x1
@@ -11381,32 +11395,32 @@ FtlWriteToIDB:
 	mov	w1, 18766
 	movk	w1, 0x464e, lsl 16
 	cmp	w0, w1
-	beq	.L1547
-.L1549:
+	beq	.L1549
+.L1551:
 	ldr	x0, [x23, #:lo12:.LANCHOR183]
 	mov	x2, x26
 	mov	x1, 0
-.L1548:
+.L1550:
 	ldr	w3, [x29, 136]
 	mov	w28, w1
 	cmp	w1, w3
-	bcc	.L1552
+	bcc	.L1554
 	ldr	w0, [x29, 156]
 	add	w0, w0, 1
 	str	w0, [x29, 156]
 	cmp	w0, 5
-	bls	.L1551
-	b	.L1555
-.L1562:
-	mov	w25, 6
-	b	.L1533
+	bls	.L1553
+	b	.L1557
 .L1564:
-	mov	x28, 0
+	mov	w25, 6
 	b	.L1535
-.L1537:
-	lsl	w0, w1, 2
-	b	.L1587
+.L1566:
+	mov	x28, 0
+	b	.L1537
 .L1539:
+	lsl	w0, w1, 2
+	b	.L1589
+.L1541:
 	ldr	x7, [x20, 16]
 	add	x3, x29, 160
 	ldr	w0, [x29, 144]
@@ -11417,21 +11431,21 @@ FtlWriteToIDB:
 	mov	w0, 0
 	blr	x7
 	cmn	w0, #1
-	beq	.L1543
+	beq	.L1545
 	ldr	x6, [x29, 120]
 	ldr	x5, [x29, 104]
 	add	x6, x6, 2048
-.L1540:
+.L1542:
 	add	x5, x5, 1
-	b	.L1536
-.L1541:
+	b	.L1538
+.L1543:
 	ldr	x1, [x20, 40]
 	mov	w2, 6
 	cmp	x1, 0
 	mov	w1, 9
 	csel	w1, w2, w1, eq
-	b	.L1588
-.L1546:
+	b	.L1590
+.L1548:
 	ldr	x6, [x20, 24]
 	add	x3, x29, 160
 	ldr	w0, [x29, 144]
@@ -11440,16 +11454,16 @@ FtlWriteToIDB:
 	mov	w0, 0
 	blr	x6
 	cmn	w0, #1
-	beq	.L1549
+	beq	.L1551
 	ldr	w0, [x29, 164]
 	mov	w1, 61424
 	cmp	w0, w1
-	bne	.L1549
+	bne	.L1551
 	add	x25, x25, 2048
-.L1547:
+.L1549:
 	add	x28, x28, 1
-	b	.L1545
-.L1552:
+	b	.L1547
+.L1554:
 	mov	x25, x2
 	ldr	w4, [x0, x1, lsl 2]
 	lsl	x5, x1, 2
@@ -11457,7 +11471,7 @@ FtlWriteToIDB:
 	add	x1, x1, 1
 	ldr	w3, [x25]
 	cmp	w4, w3
-	beq	.L1548
+	beq	.L1550
 	mov	x2, 512
 	mov	w1, 0
 	str	x5, [x29, 144]
@@ -11477,14 +11491,14 @@ FtlWriteToIDB:
 	mov	w0, 0
 	mul	w1, w1, w24
 	blr	x2
-.L1551:
+.L1553:
 	ldr	w24, [x29, 140]
-	b	.L1532
-.L1524:
+	b	.L1534
+.L1526:
 	mov	w20, w1
 	mov	x21, x2
 	cmp	w0, 64
-	bne	.L1556
+	bne	.L1558
 	adrp	x24, .LANCHOR182
 	mov	w0, 262144
 	bl	ftl_malloc
@@ -11495,47 +11509,47 @@ FtlWriteToIDB:
 	adrp	x0, .LANCHOR183
 	str	x1, [x0, #:lo12:.LANCHOR183]
 	ldr	x0, [x24, #:lo12:.LANCHOR182]
-	cbz	x0, .L1557
-	cbz	x1, .L1557
+	cbz	x0, .L1559
+	cbz	x1, .L1559
 	mov	w1, 1
 	mov	w2, 262144
 	str	w1, [x27, #:lo12:.LANCHOR181]
 	mov	w1, 0
 	bl	ftl_memset
-.L1556:
+.L1558:
 	ldr	w0, [x27, #:lo12:.LANCHOR181]
-	cbz	w0, .L1589
+	cbz	w0, .L1591
 	adrp	x0, .LANCHOR182
 	cmp	w19, 63
 	ldr	x0, [x0, #:lo12:.LANCHOR182]
-	bhi	.L1559
+	bhi	.L1561
 	mov	w1, 64
 	sub	w19, w1, w19
 	sub	w20, w20, w19
 	ubfiz	x19, x19, 9, 25
 	add	x1, x21, x19
-.L1560:
+.L1562:
 	cmp	w23, 575
-	bls	.L1561
+	bls	.L1563
 	sub	w20, w20, w22
 	sub	w20, w20, #446
-.L1561:
+.L1563:
 	lsl	w2, w20, 9
 	bl	ftl_memcpy
-	b	.L1589
-.L1557:
+	b	.L1591
+.L1559:
 	adrp	x1, .LANCHOR184
 	adrp	x0, .LC52
 	add	x1, x1, :lo12:.LANCHOR184
 	add	x0, x0, :lo12:.LC52
 	bl	printf
-	b	.L1556
-.L1559:
+	b	.L1558
+.L1561:
 	lsl	w2, w19, 7
 	mov	x1, x21
 	sub	w2, w2, #8192
 	add	x0, x0, x2, lsl 2
-	b	.L1560
+	b	.L1562
 	.size	FtlWriteToIDB, .-FtlWriteToIDB
 	.section	.text.sftl_write,"ax",@progbits
 	.align	2
@@ -11551,26 +11565,26 @@ sftl_write:
 	add	w21, w19, w21
 	mov	x20, x2
 	bl	FtlWriteToIDB
-.L1591:
+.L1593:
 	sub	w1, w21, w19
 	mov	x3, x20
 	cmp	w19, 256
-	bhi	.L1593
+	bhi	.L1595
 	mov	w2, w19
 	ldr	x21, [sp, 32]
 	ldp	x19, x20, [sp, 16]
 	mov	w0, 0
 	ldp	x29, x30, [sp], 48
 	b	FtlWrite
-.L1593:
+.L1595:
 	mov	w2, 256
 	mov	w0, 0
 	bl	FtlWrite
-	cbnz	w0, .L1590
+	cbnz	w0, .L1592
 	add	x20, x20, 131072
 	sub	w19, w19, #256
-	b	.L1591
-.L1590:
+	b	.L1593
+.L1592:
 	ldp	x19, x20, [sp, 16]
 	ldr	x21, [sp, 32]
 	ldp	x29, x30, [sp], 48
@@ -12812,9 +12826,9 @@ power_up_flag:
 .LC15:
 	.string	"prog read REFRESH: = %x\n"
 .LC16:
-	.string	"prog read s error: = %x %x %x\n"
+	.string	"prog read s error: = %x %x %x %x %x\n"
 .LC17:
-	.string	"prog read d error: = %x %x %x\n"
+	.string	"prog read d error: = %x %x %x %x %x\n"
 	.section	.rodata.FlashReadPages.str1.1,"aMS",@progbits,1
 .LC11:
 	.string	"FlashReadPages %x %x error_ecc_bits %d\n"
@@ -12887,250 +12901,250 @@ power_up_flag:
 	.section	.rodata.INSERT_DATA_LIST.str1.1,"aMS",@progbits,1
 .LC1:
 	.string	"\n!!!!! error @ func:%s - line:%d\n"
-	.section	.rodata.__func__.6364,"a",@progbits
+	.section	.rodata.__func__.6436,"a",@progbits
 	.align	3
 	.set	.LANCHOR168,. + 0
-	.type	__func__.6364, %object
-	.size	__func__.6364, 13
-__func__.6364:
+	.type	__func__.6436, %object
+	.size	__func__.6436, 13
+__func__.6436:
 	.string	"FtlProgPages"
-	.section	.rodata.__func__.6392,"a",@progbits
+	.section	.rodata.__func__.6464,"a",@progbits
 	.align	3
 	.set	.LANCHOR176,. + 0
-	.type	__func__.6392, %object
-	.size	__func__.6392, 9
-__func__.6392:
+	.type	__func__.6464, %object
+	.size	__func__.6464, 9
+__func__.6464:
 	.string	"FtlWrite"
-	.section	.rodata.__func__.6474,"a",@progbits
+	.section	.rodata.__func__.6546,"a",@progbits
 	.align	3
 	.set	.LANCHOR127,. + 0
-	.type	__func__.6474, %object
-	.size	__func__.6474, 14
-__func__.6474:
+	.type	__func__.6546, %object
+	.size	__func__.6546, 14
+__func__.6546:
 	.string	"FtlBbt2Bitmap"
-	.section	.rodata.__func__.6509,"a",@progbits
+	.section	.rodata.__func__.6581,"a",@progbits
 	.align	3
 	.set	.LANCHOR140,. + 0
-	.type	__func__.6509, %object
-	.size	__func__.6509, 11
-__func__.6509:
+	.type	__func__.6581, %object
+	.size	__func__.6581, 11
+__func__.6581:
 	.string	"FtlLoadBbt"
-	.section	.rodata.__func__.6624,"a",@progbits
+	.section	.rodata.__func__.6696,"a",@progbits
 	.align	3
 	.set	.LANCHOR48,. + 0
-	.type	__func__.6624, %object
-	.size	__func__.6624, 17
-__func__.6624:
+	.type	__func__.6696, %object
+	.size	__func__.6696, 17
+__func__.6696:
 	.string	"INSERT_FREE_LIST"
-	.section	.rodata.__func__.6629,"a",@progbits
+	.section	.rodata.__func__.6701,"a",@progbits
 	.align	3
 	.set	.LANCHOR44,. + 0
-	.type	__func__.6629, %object
-	.size	__func__.6629, 17
-__func__.6629:
+	.type	__func__.6701, %object
+	.size	__func__.6701, 17
+__func__.6701:
 	.string	"INSERT_DATA_LIST"
-	.section	.rodata.__func__.6660,"a",@progbits
+	.section	.rodata.__func__.6732,"a",@progbits
 	.align	3
 	.set	.LANCHOR49,. + 0
-	.type	__func__.6660, %object
-	.size	__func__.6660, 17
-__func__.6660:
+	.type	__func__.6732, %object
+	.size	__func__.6732, 17
+__func__.6732:
 	.string	"List_remove_node"
-	.section	.rodata.__func__.6692,"a",@progbits
+	.section	.rodata.__func__.6764,"a",@progbits
 	.align	3
 	.set	.LANCHOR53,. + 0
-	.type	__func__.6692, %object
-	.size	__func__.6692, 22
-__func__.6692:
+	.type	__func__.6764, %object
+	.size	__func__.6764, 22
+__func__.6764:
 	.string	"List_update_data_list"
-	.section	.rodata.__func__.6701,"a",@progbits
+	.section	.rodata.__func__.6773,"a",@progbits
 	.align	3
 	.set	.LANCHOR149,. + 0
-	.type	__func__.6701, %object
-	.size	__func__.6701, 16
-__func__.6701:
+	.type	__func__.6773, %object
+	.size	__func__.6773, 16
+__func__.6773:
 	.string	"load_l2p_region"
-	.section	.rodata.__func__.6734,"a",@progbits
+	.section	.rodata.__func__.6806,"a",@progbits
 	.align	3
 	.set	.LANCHOR80,. + 0
-	.type	__func__.6734, %object
-	.size	__func__.6734, 26
-__func__.6734:
+	.type	__func__.6806, %object
+	.size	__func__.6806, 26
+__func__.6806:
 	.string	"ftl_map_blk_alloc_new_blk"
-	.section	.rodata.__func__.6745,"a",@progbits
+	.section	.rodata.__func__.6817,"a",@progbits
 	.align	3
 	.set	.LANCHOR150,. + 0
-	.type	__func__.6745, %object
-	.size	__func__.6745, 15
-__func__.6745:
+	.type	__func__.6817, %object
+	.size	__func__.6817, 15
+__func__.6817:
 	.string	"ftl_map_blk_gc"
-	.section	.rodata.__func__.6760,"a",@progbits
+	.section	.rodata.__func__.6832,"a",@progbits
 	.align	3
 	.set	.LANCHOR147,. + 0
-	.type	__func__.6760, %object
-	.size	__func__.6760, 31
-__func__.6760:
+	.type	__func__.6832, %object
+	.size	__func__.6832, 31
+__func__.6832:
 	.string	"Ftl_write_map_blk_to_last_page"
-	.section	.rodata.__func__.6774,"a",@progbits
+	.section	.rodata.__func__.6846,"a",@progbits
 	.align	3
 	.set	.LANCHOR148,. + 0
-	.type	__func__.6774, %object
-	.size	__func__.6774, 16
-__func__.6774:
+	.type	__func__.6846, %object
+	.size	__func__.6846, 16
+__func__.6846:
 	.string	"FtlMapWritePage"
-	.section	.rodata.__func__.6799,"a",@progbits
+	.section	.rodata.__func__.6871,"a",@progbits
 	.align	3
 	.set	.LANCHOR56,. + 0
-	.type	__func__.6799, %object
-	.size	__func__.6799, 22
-__func__.6799:
+	.type	__func__.6871, %object
+	.size	__func__.6871, 22
+__func__.6871:
 	.string	"select_l2p_ram_region"
-	.section	.rodata.__func__.6816,"a",@progbits
+	.section	.rodata.__func__.6888,"a",@progbits
 	.align	3
 	.set	.LANCHOR152,. + 0
-	.type	__func__.6816, %object
-	.size	__func__.6816, 9
-__func__.6816:
+	.type	__func__.6888, %object
+	.size	__func__.6888, 9
+__func__.6888:
 	.string	"log2phys"
-	.section	.rodata.__func__.6880,"a",@progbits
+	.section	.rodata.__func__.6952,"a",@progbits
 	.align	3
 	.set	.LANCHOR164,. + 0
-	.type	__func__.6880, %object
-	.size	__func__.6880, 15
-__func__.6880:
+	.type	__func__.6952, %object
+	.size	__func__.6952, 15
+__func__.6952:
 	.string	"FtlVpcTblFlush"
-	.section	.rodata.__func__.6902,"a",@progbits
+	.section	.rodata.__func__.6974,"a",@progbits
 	.align	3
 	.set	.LANCHOR139,. + 0
-	.type	__func__.6902, %object
-	.size	__func__.6902, 14
-__func__.6902:
+	.type	__func__.6974, %object
+	.size	__func__.6974, 14
+__func__.6974:
 	.string	"FtlScanSysBlk"
-	.section	.rodata.__func__.6951,"a",@progbits
+	.section	.rodata.__func__.7023,"a",@progbits
 	.align	3
 	.set	.LANCHOR177,. + 0
-	.type	__func__.6951, %object
-	.size	__func__.6951, 15
-__func__.6951:
+	.type	__func__.7023, %object
+	.size	__func__.7023, 15
+__func__.7023:
 	.string	"FtlLoadSysInfo"
-	.section	.rodata.__func__.6973,"a",@progbits
+	.section	.rodata.__func__.7045,"a",@progbits
 	.align	3
 	.set	.LANCHOR179,. + 0
-	.type	__func__.6973, %object
-	.size	__func__.6973, 18
-__func__.6973:
+	.type	__func__.7045, %object
+	.size	__func__.7045, 18
+__func__.7045:
 	.string	"FtlMapTblRecovery"
-	.section	.rodata.__func__.7019,"a",@progbits
+	.section	.rodata.__func__.7091,"a",@progbits
 	.align	3
 	.set	.LANCHOR153,. + 0
-	.type	__func__.7019, %object
-	.size	__func__.7019, 16
-__func__.7019:
+	.type	__func__.7091, %object
+	.size	__func__.7091, 16
+__func__.7091:
 	.string	"FtlReUsePrevPpa"
-	.section	.rodata.__func__.7053,"a",@progbits
+	.section	.rodata.__func__.7125,"a",@progbits
 	.align	3
 	.set	.LANCHOR154,. + 0
-	.type	__func__.7053, %object
-	.size	__func__.7053, 22
-__func__.7053:
+	.type	__func__.7125, %object
+	.size	__func__.7125, 22
+__func__.7125:
 	.string	"FtlRecoverySuperblock"
-	.section	.rodata.__func__.7110,"a",@progbits
+	.section	.rodata.__func__.7182,"a",@progbits
 	.align	3
 	.set	.LANCHOR59,. + 0
-	.type	__func__.7110, %object
-	.size	__func__.7110, 16
-__func__.7110:
+	.type	__func__.7182, %object
+	.size	__func__.7182, 16
+__func__.7182:
 	.string	"make_superblock"
-	.section	.rodata.__func__.7131,"a",@progbits
+	.section	.rodata.__func__.7203,"a",@progbits
 	.align	3
 	.set	.LANCHOR135,. + 0
-	.type	__func__.7131, %object
-	.size	__func__.7131, 18
-__func__.7131:
+	.type	__func__.7203, %object
+	.size	__func__.7203, 18
+__func__.7203:
 	.string	"SupperBlkListInit"
-	.section	.rodata.__func__.7158,"a",@progbits
+	.section	.rodata.__func__.7230,"a",@progbits
 	.align	3
 	.set	.LANCHOR158,. + 0
-	.type	__func__.7158, %object
-	.size	__func__.7158, 14
-__func__.7158:
+	.type	__func__.7230, %object
+	.size	__func__.7230, 14
+__func__.7230:
 	.string	"ftl_check_vpc"
-	.section	.rodata.__func__.7223,"a",@progbits
+	.section	.rodata.__func__.7295,"a",@progbits
 	.align	3
 	.set	.LANCHOR143,. + 0
-	.type	__func__.7223, %object
-	.size	__func__.7223, 25
-__func__.7223:
+	.type	__func__.7295, %object
+	.size	__func__.7295, 25
+__func__.7295:
 	.string	"allocate_data_superblock"
-	.section	.rodata.__func__.7244,"a",@progbits
+	.section	.rodata.__func__.7316,"a",@progbits
 	.align	3
 	.set	.LANCHOR167,. + 0
-	.type	__func__.7244, %object
-	.size	__func__.7244, 29
-__func__.7244:
+	.type	__func__.7316, %object
+	.size	__func__.7316, 29
+__func__.7316:
 	.string	"allocate_new_data_superblock"
-	.section	.rodata.__func__.7251,"a",@progbits
+	.section	.rodata.__func__.7323,"a",@progbits
 	.align	3
 	.set	.LANCHOR60,. + 0
-	.type	__func__.7251, %object
-	.size	__func__.7251, 19
-__func__.7251:
+	.type	__func__.7323, %object
+	.size	__func__.7323, 19
+__func__.7323:
 	.string	"get_new_active_ppa"
-	.section	.rodata.__func__.7264,"a",@progbits
+	.section	.rodata.__func__.7336,"a",@progbits
 	.align	3
 	.set	.LANCHOR145,. + 0
-	.type	__func__.7264, %object
-	.size	__func__.7264, 16
-__func__.7264:
+	.type	__func__.7336, %object
+	.size	__func__.7336, 16
+__func__.7336:
 	.string	"update_vpc_list"
-	.section	.rodata.__func__.7271,"a",@progbits
+	.section	.rodata.__func__.7343,"a",@progbits
 	.align	3
 	.set	.LANCHOR146,. + 0
-	.type	__func__.7271, %object
-	.size	__func__.7271, 20
-__func__.7271:
+	.type	__func__.7343, %object
+	.size	__func__.7343, 20
+__func__.7343:
 	.string	"decrement_vpc_count"
-	.section	.rodata.__func__.7341,"a",@progbits
+	.section	.rodata.__func__.7413,"a",@progbits
 	.align	3
 	.set	.LANCHOR169,. + 0
-	.type	__func__.7341, %object
-	.size	__func__.7341, 19
-__func__.7341:
+	.type	__func__.7413, %object
+	.size	__func__.7413, 19
+__func__.7413:
 	.string	"FtlGcFreeTempBlock"
-	.section	.rodata.__func__.7440,"a",@progbits
+	.section	.rodata.__func__.7512,"a",@progbits
 	.align	3
 	.set	.LANCHOR174,. + 0
-	.type	__func__.7440, %object
-	.size	__func__.7440, 23
-__func__.7440:
+	.type	__func__.7512, %object
+	.size	__func__.7512, 23
+__func__.7512:
 	.string	"rk_ftl_garbage_collect"
-	.section	.rodata.__func__.7708,"a",@progbits
+	.section	.rodata.__func__.7780,"a",@progbits
 	.align	3
 	.set	.LANCHOR136,. + 0
-	.type	__func__.7708, %object
-	.size	__func__.7708, 15
-__func__.7708:
+	.type	__func__.7780, %object
+	.size	__func__.7780, 15
+__func__.7780:
 	.string	"FlashReadPages"
-	.section	.rodata.__func__.7727,"a",@progbits
+	.section	.rodata.__func__.7799,"a",@progbits
 	.align	3
 	.set	.LANCHOR141,. + 0
-	.type	__func__.7727, %object
-	.size	__func__.7727, 15
-__func__.7727:
+	.type	__func__.7799, %object
+	.size	__func__.7799, 15
+__func__.7799:
 	.string	"FlashProgPages"
-	.section	.rodata.__func__.7751,"a",@progbits
+	.section	.rodata.__func__.7823,"a",@progbits
 	.align	3
 	.set	.LANCHOR76,. + 0
-	.type	__func__.7751, %object
-	.size	__func__.7751, 17
-__func__.7751:
+	.type	__func__.7823, %object
+	.size	__func__.7823, 17
+__func__.7823:
 	.string	"FlashEraseBlocks"
-	.section	.rodata.__func__.7870,"a",@progbits
+	.section	.rodata.__func__.7942,"a",@progbits
 	.align	3
 	.set	.LANCHOR184,. + 0
-	.type	__func__.7870, %object
-	.size	__func__.7870, 14
-__func__.7870:
+	.type	__func__.7942, %object
+	.size	__func__.7942, 14
+__func__.7942:
 	.string	"FtlWriteToIDB"
 	.section	.rodata.decrement_vpc_count.str1.1,"aMS",@progbits,1
 .LC21:
@@ -13175,5 +13189,5 @@ __func__.7870:
 	.string	"\n"
 	.section	.rodata.sftl_init.str1.1,"aMS",@progbits,1
 .LC49:
-	.string	"SFTL version: 5.0.56 20210329"
+	.string	"SFTL version: 5.0.58 20220814"
 	.hidden	free
diff --git a/drivers/rkflash/sfc_nand.c b/drivers/rkflash/sfc_nand.c
index a6c223d..82a5f52 100644
--- a/drivers/rkflash/sfc_nand.c
+++ b/drivers/rkflash/sfc_nand.c
@@ -23,6 +23,7 @@ static u32 sfc_nand_get_ecc_status5(void);
 static u32 sfc_nand_get_ecc_status6(void);
 static u32 sfc_nand_get_ecc_status7(void);
 static u32 sfc_nand_get_ecc_status8(void);
+static u32 sfc_nand_get_ecc_status9(void);
 
 static struct nand_info spi_nand_tbl[] = {
 	/* TC58CVG0S0HxAIx */
@@ -62,9 +63,9 @@ static struct nand_info spi_nand_tbl[] = {
 	/* GD5F1GQ4R */
 	{ 0xC8, 0xC1, 0x00, 4, 0x40, 1, 1024, 0x0C, 18, 0x8, 1, { 0x04, 0x08, 0xFF, 0xFF }, &sfc_nand_get_ecc_status3 },
 	/* GD5F4GQ6RExxG 1*4096 */
-	{ 0xC8, 0x45, 0x00, 4, 0x40, 2, 2048, 0x4C, 20, 0x4, 1, { 0x04, 0x08, 0X14, 0x18 }, &sfc_nand_get_ecc_status2 },
+	{ 0xC8, 0x45, 0x00, 4, 0x40, 2, 2048, 0x4C, 20, 0x4, 1, { 0x04, 0x08, 0x14, 0x18 }, &sfc_nand_get_ecc_status2 },
 	/* GD5F4GQ6UExxG 1*4096 */
-	{ 0xC8, 0x55, 0x00, 4, 0x40, 2, 2048, 0x4C, 20, 0x4, 1, { 0x04, 0x08, 0X14, 0x18 }, &sfc_nand_get_ecc_status2 },
+	{ 0xC8, 0x55, 0x00, 4, 0x40, 2, 2048, 0x4C, 20, 0x4, 1, { 0x04, 0x08, 0x14, 0x18 }, &sfc_nand_get_ecc_status2 },
 	/* GD5F1GQ4UExxH */
 	{ 0xC8, 0xD9, 0x00, 4, 0x40, 1, 1024, 0x0C, 18, 0x8, 1, { 0x04, 0x08, 0xFF, 0xFF }, &sfc_nand_get_ecc_status3 },
 	/* GD5F1GQ5REYIG */
@@ -77,6 +78,8 @@ static struct nand_info spi_nand_tbl[] = {
 	{ 0xC8, 0x92, 0x00, 4, 0x40, 1, 2048, 0x0C, 19, 0x8, 1, { 0x04, 0x14, 0xFF, 0xFF }, &sfc_nand_get_ecc_status2 },
 	/* GD5F1GM7UxG */
 	{ 0xC8, 0x91, 0x00, 4, 0x40, 1, 1024, 0x0C, 18, 0x8, 1, { 0x04, 0x14, 0xFF, 0xFF }, &sfc_nand_get_ecc_status2 },
+	/* GD5F4GQ4UAYIG 1*4096 */
+	{ 0xC8, 0xF4, 0x00, 4, 0x40, 2, 2048, 0x0C, 20, 0x8, 1, { 0x04, 0x08, 0x14, 0x18 }, &sfc_nand_get_ecc_status0 },
 
 	/* W25N01GV */
 	{ 0xEF, 0xAA, 0x21, 4, 0x40, 1, 1024, 0x4C, 18, 0x1, 0, { 0x04, 0x14, 0x24, 0xFF }, &sfc_nand_get_ecc_status1 },
@@ -118,6 +121,10 @@ static struct nand_info spi_nand_tbl[] = {
 	{ 0xCD, 0x71, 0x00, 4, 0x40, 1, 1024, 0x4C, 18, 0x1, 1, { 0x04, 0x08, 0xFF, 0xFF }, &sfc_nand_get_ecc_status1 },
 	/* F35SQA002G */
 	{ 0xCD, 0x72, 0x00, 4, 0x40, 1, 2048, 0x4C, 19, 0x1, 1, { 0x04, 0x08, 0xFF, 0xFF }, &sfc_nand_get_ecc_status1 },
+	/* F35SQA512M */
+	{ 0xCD, 0x70, 0x00, 4, 0x40, 1, 512, 0x4C, 17, 0x1, 1, { 0x04, 0x08, 0xFF, 0xFF }, &sfc_nand_get_ecc_status1 },
+	/* F35UQA512M */
+	{ 0xCD, 0x70, 0x00, 4, 0x40, 1, 512, 0x4C, 17, 0x1, 1, { 0x04, 0x08, 0xFF, 0xFF }, &sfc_nand_get_ecc_status1 },
 
 	/* DS35Q1GA-IB */
 	{ 0xE5, 0x71, 0x00, 4, 0x40, 1, 1024, 0x0C, 18, 0x4, 1, { 0x04, 0x14, 0xFF, 0xFF }, &sfc_nand_get_ecc_status1 },
@@ -127,8 +134,12 @@ static struct nand_info spi_nand_tbl[] = {
 	{ 0xE5, 0x21, 0x00, 4, 0x40, 1, 1024, 0x0C, 18, 0x4, 1, { 0x04, 0x14, 0xFF, 0xFF }, &sfc_nand_get_ecc_status1 },
 	/* DS35M2GA-IB */
 	{ 0xE5, 0x22, 0x00, 4, 0x40, 2, 1024, 0x0C, 19, 0x4, 1, { 0x04, 0x14, 0xFF, 0xFF }, &sfc_nand_get_ecc_status1 },
+	/* DS35Q1GB-IB */
+	{ 0xE5, 0xF1, 0x00, 4, 0x40, 1, 1024, 0x0C, 18, 0x8, 1, { 0x04, 0x14, 0xFF, 0xFF }, &sfc_nand_get_ecc_status6 },
 	/* DS35Q2GB-IB */
 	{ 0xE5, 0xF2, 0x00, 4, 0x40, 2, 1024, 0x0C, 19, 0x8, 1, { 0x04, 0x14, 0xFF, 0xFF }, &sfc_nand_get_ecc_status6 },
+	/* DS35Q4GM */
+	{ 0xE5, 0xF4, 0x00, 4, 0x40, 2, 2048, 0x0C, 20, 0x8, 1, { 0x04, 0x14, 0xFF, 0xFF }, &sfc_nand_get_ecc_status6 },
 	/* DS35M1GB-IB */
 	{ 0xE5, 0xA1, 0x00, 4, 0x40, 1, 1024, 0x0C, 18, 0x8, 1, { 0x04, 0x14, 0xFF, 0xFF }, &sfc_nand_get_ecc_status6 },
 
@@ -188,6 +199,8 @@ static struct nand_info spi_nand_tbl[] = {
 	{ 0xEA, 0xC1, 0x00, 4, 0x40, 1, 1024, 0x0C, 18, 0x4, 1, { 0x04, 0x08, 0xFF, 0xFF }, &sfc_nand_get_ecc_status1 },
 	/* TX25G01 */
 	{ 0xA1, 0xF1, 0x00, 4, 0x40, 1, 1024, 0x0C, 18, 0x4, 1, { 0x04, 0x14, 0xFF, 0xFF }, &sfc_nand_get_ecc_status8 },
+	/* S35ML04G3 */
+	{ 0x01, 0x35, 0x00, 4, 0x40, 2, 2048, 0x4C, 20, 0x4, 1, { 0x04, 0x08, 0x0C, 0x10 }, &sfc_nand_get_ecc_status9 },
 };
 
 static struct nand_info *p_nand_info;
@@ -712,6 +725,46 @@ static u32 sfc_nand_get_ecc_status8(void)
 	return ret;
 }
 
+/*
+ * ecc spectial type9:
+ * ecc bits: 0xC0[4,5]
+ * 0b00, No bit errors were detected
+ * 0b01, 1-2Bit errors were detected and corrected.
+ * 0b10, 3-4Bit errors were detected and corrected.
+ * 0b11, 11 can be used as uncorrectable
+ */
+static u32 sfc_nand_get_ecc_status9(void)
+{
+	u32 ret;
+	u32 i;
+	u8 ecc;
+	u8 status;
+	u32 timeout = 1000 * 1000;
+
+	for (i = 0; i < timeout; i++) {
+		ret = sfc_nand_read_feature(0xC0, &status);
+
+		if (ret != SFC_OK)
+			return SFC_NAND_ECC_ERROR;
+
+		if (!(status & (1 << 0)))
+			break;
+
+		sfc_delay(1);
+	}
+
+	ecc = (status >> 4) & 0x03;
+
+	if (ecc <= 1)
+		ret = SFC_NAND_ECC_OK;
+	else if (ecc == 2)
+		ret = SFC_NAND_ECC_REFRESH;
+	else
+		ret = (u32)SFC_NAND_ECC_ERROR;
+
+	return ret;
+}
+
 u32 sfc_nand_erase_block(u8 cs, u32 addr)
 {
 	int ret;
diff --git a/drivers/rkflash/sfc_nor.c b/drivers/rkflash/sfc_nor.c
index 99b389e..afbcbd7 100644
--- a/drivers/rkflash/sfc_nor.c
+++ b/drivers/rkflash/sfc_nor.c
@@ -12,6 +12,8 @@
 #include "sfc_nor.h"
 
 static struct flash_info spi_flash_tbl[] = {
+	/* GD25Q40B */
+	{ 0xc84013, 128, 8, 0x03, 0x02, 0x6B, 0x32, 0x20, 0xD8, 0x05, 10, 9, 0 },
 	/* GD25Q32B */
 	{ 0xc84016, 128, 8, 0x03, 0x02, 0x6B, 0x32, 0x20, 0xD8, 0x0D, 13, 9, 0 },
 	/* GD25Q64B/C/E */
@@ -24,6 +26,8 @@ static struct flash_info spi_flash_tbl[] = {
 	{ 0xc84020, 128, 8, 0x13, 0x12, 0x6C, 0x3E, 0x21, 0xDC, 0x1C, 17, 6, 0 },
 	/* GD25LQ64C */
 	{ 0xc86017, 128, 8, 0x03, 0x02, 0x6B, 0x32, 0x20, 0xD8, 0x0D, 14, 9, 0 },
+	/* GD25LQ128 */
+	{ 0xc86018, 128, 8, 0x03, 0x02, 0x6B, 0x32, 0x20, 0xD8, 0x0D, 15, 9, 0 },
 	/* GD25LQ32E */
 	{ 0xc86016, 128, 8, 0x03, 0x02, 0x6B, 0x32, 0x20, 0xD8, 0x0D, 13, 9, 0 },
 	/* GD25B512MEYIG */
@@ -104,7 +108,7 @@ static struct flash_info spi_flash_tbl[] = {
 	{ 0x0b4018, 128, 8, 0x03, 0x02, 0x6B, 0x32, 0x20, 0xD8, 0x0D, 15, 9, 0 },
 	/* XT25F256BSFIGU */
 	{ 0x0b4019, 128, 8, 0x13, 0x12, 0x6C, 0x34, 0x21, 0xDC, 0x1C, 16, 9, 0 },
-	/* XT25F32BS */
+	/* XT25F32BS XT25F32F */
 	{ 0x0b4016, 128, 8, 0x03, 0x02, 0x6B, 0x32, 0x20, 0xD8, 0x0D, 13, 9, 0 },
 	/* XT25F16BS */
 	{ 0x0b4015, 128, 8, 0x03, 0x02, 0x6B, 0x32, 0x20, 0xD8, 0x0D, 12, 9, 0 },
@@ -167,6 +171,9 @@ static struct flash_info spi_flash_tbl[] = {
 	{ 0x9D601A, 128, 8, 0x13, 0x12, 0x6C, 0x34, 0x21, 0xDC, 0x3C, 17, 6, 0 },
 	/* IS25WP512M */
 	{ 0x9D701A, 128, 8, 0x13, 0x12, 0x6C, 0x34, 0x21, 0xDC, 0x3C, 17, 6, 0 },
+
+	/* BY25Q256FSEIG */
+	{ 0x684919, 128, 8, 0x13, 0x12, 0x6C, 0x34, 0x21, 0xDC, 0x1C, 16, 9, 0 },
 };
 
 static int snor_write_en(void)
diff --git a/drivers/spi/rk_spi.c b/drivers/spi/rk_spi.c
index 860f7b1..7eb3269 100644
--- a/drivers/spi/rk_spi.c
+++ b/drivers/spi/rk_spi.c
@@ -27,6 +27,10 @@ DECLARE_GLOBAL_DATA_PTR;
 /* Change to 1 to output registers at the start of each transaction */
 #define DEBUG_RK_SPI	0
 
+struct rockchip_spi_quirks {
+	u32 max_baud_div_in_cpha;
+};
+
 struct rockchip_spi_platdata {
 #if CONFIG_IS_ENABLED(OF_PLATDATA)
 	struct dtd_rockchip_rk3288_spi of_plat;
@@ -50,6 +54,9 @@ struct rockchip_spi_priv {
 	uint input_rate;
 	uint cr0;
 	u32 rsd;			/* Rx sample delay cycles */
+
+	/* quirks */
+	u32 max_baud_div_in_cpha;
 };
 
 #define SPI_FIFO_DEPTH		32
@@ -105,6 +112,12 @@ static void rkspi_set_clk(struct rockchip_spi_priv *priv, uint speed)
 
 	debug("spi speed %u, div %u\n", speed, clk_div);
 
+	/* the maxmum divisor is 4 for mode1/3 spi master case for quirks */
+	if (priv->max_baud_div_in_cpha && clk_div > priv->max_baud_div_in_cpha && priv->mode & SPI_CPHA) {
+		clk_div = priv->max_baud_div_in_cpha;
+		clk_set_rate(&priv->clk, 4 * speed);
+		speed = clk_get_rate(&priv->clk);
+	}
 	clrsetbits_le32(&priv->regs->baudr, 0xffff, clk_div);
 	priv->last_speed_hz = speed;
 }
@@ -260,6 +273,7 @@ static int rockchip_spi_probe(struct udevice *bus)
 {
 	struct rockchip_spi_platdata *plat = dev_get_platdata(bus);
 	struct rockchip_spi_priv *priv = dev_get_priv(bus);
+	struct rockchip_spi_quirks *quirks_cfg;
 	int ret;
 
 	debug("%s: probe\n", __func__);
@@ -287,6 +301,9 @@ static int rockchip_spi_probe(struct udevice *bus)
 	priv->input_rate = ret;
 	debug("%s: rate = %u\n", __func__, priv->input_rate);
 	priv->bits_per_word = 8;
+	quirks_cfg = (struct rockchip_spi_quirks *)dev_get_driver_data(bus);
+	if (quirks_cfg)
+		priv->max_baud_div_in_cpha = quirks_cfg->max_baud_div_in_cpha;
 
 	return 0;
 }
@@ -427,7 +444,8 @@ static int rockchip_spi_xfer(struct udevice *dev, unsigned int bitlen,
 			u32 status = readl(&regs->sr);
 
 			if (towrite && !(status & SR_TF_FULL)) {
-				writel(out ? *out++ : 0, regs->txdr);
+				if (out)
+					writel(out ? *out++ : 0, regs->txdr);
 				towrite--;
 			}
 			if (toread && !(status & SR_RF_EMPT)) {
diff --git a/drivers/spi/rockchip_sfc.c b/drivers/spi/rockchip_sfc.c
index b0e1d03..63ca2c0 100644
--- a/drivers/spi/rockchip_sfc.c
+++ b/drivers/spi/rockchip_sfc.c
@@ -577,16 +577,16 @@ static int rockchip_sfc_xfer_data_dma_async(struct rockchip_sfc *sfc,
 {
 	void *dma_buf;
 
-	if (op->data.dir == SPI_MEM_DATA_OUT)
+	if (op->data.dir == SPI_MEM_DATA_OUT) {
 		dma_buf = (void *)op->data.buf.out;
-	else
+		flush_dcache_range((unsigned long)dma_buf,
+				   (unsigned long)dma_buf + len);
+	} else {
 		dma_buf = (void *)op->data.buf.in;
+	}
 
 	dev_dbg(sfc->dev, "xfer_dma_async len=%x %p\n", len, dma_buf);
 
-	flush_dcache_range((unsigned long)dma_buf,
-			   (unsigned long)dma_buf + len);
-
 	rockchip_sfc_fifo_transfer_dma(sfc, (dma_addr_t)dma_buf, len);
 	sfc->last_async_size = len;
 
diff --git a/drivers/thermal/rockchip_thermal.c b/drivers/thermal/rockchip_thermal.c
index c8f88c8..1bd6e31 100644
--- a/drivers/thermal/rockchip_thermal.c
+++ b/drivers/thermal/rockchip_thermal.c
@@ -1122,7 +1122,7 @@ static int rockchip_thermal_probe(struct udevice *dev)
 
 	if (priv->tshut_mode == TSHUT_MODE_GPIO)
 		pinctrl_select_state(dev, "otpout");
-	else
+	else if (soc_is_rk3308())
 		pinctrl_select_state(dev, "gpio");
 
 	tsadc->tsadc_init(dev);
diff --git a/drivers/usb/gadget/f_mass_storage.c b/drivers/usb/gadget/f_mass_storage.c
index b30dfa1..8f6d055 100644
--- a/drivers/usb/gadget/f_mass_storage.c
+++ b/drivers/usb/gadget/f_mass_storage.c
@@ -821,6 +821,7 @@ static int do_write(struct fsg_common *common)
 	unsigned int		partial_page;
 	ssize_t			nwritten;
 	int			rc;
+	const char		*cdev_name __maybe_unused;
 
 	if (curlun->ro) {
 		curlun->sense_data = SS_WRITE_PROTECTED;
@@ -979,6 +980,10 @@ static int do_write(struct fsg_common *common)
 			return rc;
 	}
 
+	cdev_name = common->fsg->function.config->cdev->driver->name;
+	if (IS_RKUSB_UMS_DNL(cdev_name))
+		rkusb_do_check_parity(common);
+
 	return -EIO;		/* No default reply */
 }
 
@@ -1996,9 +2001,17 @@ static int do_scsi_command(struct fsg_common *common)
 	case SC_WRITE_10:
 		common->data_size_from_cmnd =
 				get_unaligned_be16(&common->cmnd[7]) << 9;
-		reply = check_command(common, 10, DATA_DIR_FROM_HOST,
-				      (1<<1) | (0xf<<2) | (3<<7), 1,
-				      "WRITE(10)");
+
+		if (IS_RKUSB_UMS_DNL(cdev_name)) {
+			reply = check_command(common, common->cmnd_size, DATA_DIR_FROM_HOST,
+					      (1 << 1) | (0xf << 2) | (3 << 7) | (0xf << 9), 1,
+					      "WRITE(10)");
+		} else {
+			reply = check_command(common, 10, DATA_DIR_FROM_HOST,
+					      (1 << 1) | (0xf << 2) | (3 << 7), 1,
+					      "WRITE(10)");
+		}
+
 		if (reply == 0)
 			reply = do_write(common);
 		break;
@@ -2729,9 +2742,11 @@ static int fsg_bind(struct usb_configuration *c, struct usb_function *f)
 		fsg_ss_bulk_out_desc.bEndpointAddress =
 			fsg_fs_bulk_out_desc.bEndpointAddress;
 
+#ifdef CONFIG_CMD_ROCKUSB
 		if (IS_RKUSB_UMS_DNL(c->cdev->driver->name))
 			f->ss_descriptors =
 				usb_copy_descriptors(rkusb_ss_function);
+#endif
 
 		if (unlikely(!f->ss_descriptors)) {
 			free(f->descriptors);
diff --git a/drivers/usb/gadget/f_rockusb.c b/drivers/usb/gadget/f_rockusb.c
index fdbb663..7547c7c 100644
--- a/drivers/usb/gadget/f_rockusb.c
+++ b/drivers/usb/gadget/f_rockusb.c
@@ -177,7 +177,14 @@ static int rkusb_do_reset(struct fsg_common *common,
 static int rkusb_do_test_unit_ready(struct fsg_common *common,
 				    struct fsg_buffhd *bh)
 {
-	common->residue = 0x06 << 24; /* Max block xfer support from host */
+	struct blk_desc *desc = &ums[common->lun].block_dev;
+
+	if ((desc->if_type == IF_TYPE_MTD && desc->devnum == BLK_MTD_SPI_NOR) ||
+	    desc->if_type == IF_TYPE_SPINOR)
+		common->residue = 0x03 << 24; /* 128KB Max block xfer for SPI Nor */
+	else
+		common->residue = 0x06 << 24; /* Max block xfer support from host */
+
 	common->data_dir = DATA_DIR_NONE;
 	bh->state = BUF_STATE_EMPTY;
 
@@ -190,13 +197,30 @@ static int rkusb_do_read_flash_id(struct fsg_common *common,
 	u8 *buf = (u8 *)bh->buf;
 	u32 len = 5;
 	enum if_type type = ums[common->lun].block_dev.if_type;
+	u32 devnum = ums[common->lun].block_dev.devnum;
+	const char *str;
 
-	if (type == IF_TYPE_MMC)
-		memcpy((void *)&buf[0], "EMMC ", 5);
-	else if (type == IF_TYPE_RKNAND)
-		memcpy((void *)&buf[0], "NAND ", 5);
-	else
-		memcpy((void *)&buf[0], "UNKN ", 5); /* unknown */
+	switch (type) {
+	case IF_TYPE_MMC:
+		str = "EMMC ";
+		break;
+	case IF_TYPE_RKNAND:
+		str = "NAND ";
+		break;
+	case IF_TYPE_MTD:
+		if (devnum == BLK_MTD_SPI_NAND)
+			str ="SNAND";
+		else if (devnum == BLK_MTD_NAND)
+			str = "NAND ";
+		else
+			str = "NOR  ";
+		break;
+	default:
+		str = "UNKN "; /* unknown */
+		break;
+	}
+
+	memcpy((void *)&buf[0], str, len);
 
 	/* Set data xfer size */
 	common->residue = common->data_size_from_cmnd = len;
@@ -723,7 +747,8 @@ static int rkusb_do_read_capacity(struct fsg_common *common,
 #if defined(CONFIG_ROCKCHIP_NEW_IDB)
 	buf[1] = BIT(0);
 #endif
-	buf[1] |= BIT(1);
+	buf[1] |= BIT(1); /* Switch Storage */
+	buf[1] |= BIT(2); /* LBAwrite Parity */
 
 	/* Set data xfer size */
 	common->residue = len;
@@ -873,4 +898,27 @@ static int rkusb_cmd_process(struct fsg_common *common,
 	return rc;
 }
 
+int rkusb_do_check_parity(struct fsg_common *common)
+{
+	int ret = 0, rc;
+	u32 parity, i, usb_parity, lba, len;
+	static u32 usb_check_buffer[1024 * 256];
+
+	usb_parity = common->cmnd[9] | (common->cmnd[10] << 8) |
+			(common->cmnd[11] << 16) | (common->cmnd[12] << 24);
+
+	if (common->cmnd[0] == SC_WRITE_10 && (usb_parity)) {
+		lba = get_unaligned_be32(&common->cmnd[2]);
+		len = common->data_size_from_cmnd >> 9;
+		rc = blk_dread(&ums[common->lun].block_dev, lba, len, usb_check_buffer);
+		parity = 0x000055aa;
+		for (i = 0; i < len * 128; i++)
+			parity += usb_check_buffer[i];
+		if (!rc || parity != usb_parity)
+			common->phase_error = 1;
+	}
+
+	return ret;
+}
+
 DECLARE_GADGET_BIND_CALLBACK(rkusb_ums_dnl, fsg_add);
diff --git a/drivers/video/drm/Kconfig b/drivers/video/drm/Kconfig
index 6c94d34..cb070f1 100644
--- a/drivers/video/drm/Kconfig
+++ b/drivers/video/drm/Kconfig
@@ -41,14 +41,27 @@ config DRM_MAXIM_MAX96755F
 	bool "Maxim max96755F GMSL2 Serializer"
 	depends on DRM_ROCKCHIP
 	select I2C_MUX_MAX96755F
+	select PINCTRL_MAX96755F
 	help
 	  Driver for Maxim MAX96755F GMSL2 Serializer with MIPI-DSI Input.
 
+config DRM_PANEL_MAXIM_DESERIALIZER
+	bool "Maxim deserializer panel driver"
+	depends on DRM_ROCKCHIP
+	help
+	  Driver for Maxim deserializer panels.
+
 config DRM_ROCKCHIP_PANEL
 	bool "Rockchip Panel Support"
 	depends on DRM_ROCKCHIP
 	select DRM_MIPI_DSI
 
+config DRM_ROHM_BU18XL82
+	bool "ROHM clockless serializer BU18TL82 and  deserializer BU18RL82"
+	depends on DRM_ROCKCHIP && I2C_MUX
+	help
+	  Driver for ROHM clockless serdes with MIPI or LVDS Input.
+
 config DRM_ROCKCHIP_DW_HDMI
 	bool "Rockchip specific extensions for Synopsys DW HDMI"
 	depends on DRM_ROCKCHIP
diff --git a/drivers/video/drm/Makefile b/drivers/video/drm/Makefile
index 36263e5..d5ceeb3 100644
--- a/drivers/video/drm/Makefile
+++ b/drivers/video/drm/Makefile
@@ -4,8 +4,11 @@
 # SPDX-License-Identifier:	GPL-2.0+
 #
 
+obj-y += drm_modes.o
+
 obj-y += rockchip_display.o rockchip_crtc.o rockchip_phy.o rockchip_bridge.o \
-		rockchip_vop.o rockchip_vop_reg.o rockchip_vop2.o bmp_helper.o
+		rockchip_vop.o rockchip_vop_reg.o rockchip_vop2.o bmp_helper.o \
+		rockchip_connector.o
 
 obj-$(CONFIG_DRM_MIPI_DSI) += drm_mipi_dsi.o
 obj-$(CONFIG_DRM_DP_HELPER) += drm_dp_helper.o
@@ -13,6 +16,7 @@ obj-$(CONFIG_DRM_DSC) += drm_dsc.o
 obj-$(CONFIG_DRM_MAXIM_MAX96745) += max96745.o
 obj-$(CONFIG_DRM_MAXIM_MAX96752F) += max96752f.o
 obj-$(CONFIG_DRM_MAXIM_MAX96755F) += max96755f.o
+obj-$(CONFIG_DRM_PANEL_MAXIM_DESERIALIZER) += panel-maxim-deserializer.o
 obj-$(CONFIG_DRM_ROCKCHIP_DW_MIPI_DSI) += dw_mipi_dsi.o
 obj-$(CONFIG_DRM_ROCKCHIP_DW_MIPI_DSI2) += dw_mipi_dsi2.o
 obj-$(CONFIG_DRM_ROCKCHIP_DW_HDMI) += rockchip_dw_hdmi.o dw_hdmi.o
@@ -29,6 +33,7 @@ obj-$(CONFIG_DRM_ROCKCHIP_DW_DP) += dw-dp.o
 obj-$(CONFIG_DRM_ROCKCHIP_LVDS) += rockchip_lvds.o
 obj-$(CONFIG_DRM_ROCKCHIP_RGB) += rockchip_rgb.o
 obj-$(CONFIG_DRM_ROCKCHIP_PANEL) += rockchip_panel.o
+obj-$(CONFIG_DRM_ROHM_BU18XL82) += rohm-bu18tl82.o rohm-bu18rl82.o
 obj-$(CONFIG_DRM_ROCKCHIP_RK618) += rk618.o rk618_lvds.o rk618_dsi.o
 obj-$(CONFIG_DRM_ROCKCHIP_RK1000) += rk1000.o rk1000_tve.o
 obj-$(CONFIG_DRM_ROCKCHIP_SAMSUNG_MIPI_DCPHY) += samsung_mipi_dcphy.o
diff --git a/drivers/video/drm/analogix_dp.c b/drivers/video/drm/analogix_dp.c
index 524cc6b..52d5bf1 100644
--- a/drivers/video/drm/analogix_dp.c
+++ b/drivers/video/drm/analogix_dp.c
@@ -22,7 +22,6 @@
 #include "rockchip_display.h"
 #include "rockchip_crtc.h"
 #include "rockchip_connector.h"
-#include "rockchip_panel.h"
 #include "analogix_dp.h"
 
 #define RK3588_GRF_VO1_CON0	0x0000
@@ -447,23 +446,11 @@ static int analogix_dp_init_training(struct analogix_dp_device *dp,
 	analogix_dp_get_max_rx_bandwidth(dp, &dp->link_train.link_rate);
 	analogix_dp_get_max_rx_lane_count(dp, &dp->link_train.lane_count);
 
-	if ((dp->link_train.link_rate != DP_LINK_BW_1_62) &&
-	    (dp->link_train.link_rate != DP_LINK_BW_2_7) &&
-	    (dp->link_train.link_rate != DP_LINK_BW_5_4)) {
-		dev_err(dp->dev, "failed to get Rx Max Link Rate\n");
-		return -ENODEV;
-	}
-
-	if (dp->link_train.lane_count == 0) {
-		dev_err(dp->dev, "failed to get Rx Max Lane Count\n");
-		return -ENODEV;
-	}
-
 	/* Setup TX lane count & rate */
-	if (dp->link_train.lane_count > max_lane)
-		dp->link_train.lane_count = max_lane;
-	if (dp->link_train.link_rate > max_rate)
-		dp->link_train.link_rate = max_rate;
+	dp->link_train.lane_count = min_t(u8, dp->link_train.lane_count,
+					  max_lane);
+	dp->link_train.link_rate = min_t(u32, dp->link_train.link_rate,
+					 max_rate);
 
 	analogix_dp_read_byte_from_dpcd(dp, DP_MAX_DOWNSPREAD, &dpcd);
 	dp->link_train.ssc = !!(dpcd & DP_MAX_DOWNSPREAD_0_5);
@@ -559,7 +546,7 @@ static int analogix_dp_config_video(struct analogix_dp_device *dp)
 	analogix_dp_set_video_cr_mn(dp, CALCULATED_M, 0, 0);
 
 	/* For video bist, Video timing must be generated by register */
-	analogix_dp_set_video_timing_mode(dp, VIDEO_TIMING_FROM_CAPTURE);
+	analogix_dp_set_video_timing_mode(dp, VIDEO_TIMING_FROM_REGISTER);
 
 	/* Disable video mute */
 	analogix_dp_enable_video_mute(dp, 0);
@@ -758,19 +745,10 @@ retry:
 	return retval;
 }
 
-static int analogix_dp_connector_pre_init(struct display_state *state)
-{
-	struct connector_state *conn_state = &state->conn_state;
-
-	conn_state->type = DRM_MODE_CONNECTOR_eDP;
-
-	return 0;
-}
-
-static int analogix_dp_connector_init(struct display_state *state)
+static int analogix_dp_connector_init(struct rockchip_connector *conn, struct display_state *state)
 {
 	struct connector_state *conn_state = &state->conn_state;
-	struct analogix_dp_device *dp = dev_get_priv(conn_state->dev);
+	struct analogix_dp_device *dp = dev_get_priv(conn->dev);
 
 	conn_state->output_if |= dp->id ? VOP_OUTPUT_IF_eDP1 : VOP_OUTPUT_IF_eDP0;
 	conn_state->output_mode = ROCKCHIP_OUT_MODE_AAAA;
@@ -788,10 +766,11 @@ static int analogix_dp_connector_init(struct display_state *state)
 	return 0;
 }
 
-static int analogix_dp_connector_get_edid(struct display_state *state)
+static int analogix_dp_connector_get_edid(struct rockchip_connector *conn,
+					  struct display_state *state)
 {
 	struct connector_state *conn_state = &state->conn_state;
-	struct analogix_dp_device *dp = dev_get_priv(conn_state->dev);
+	struct analogix_dp_device *dp = dev_get_priv(conn->dev);
 	int ret;
 
 	ret = analogix_dp_handle_edid(dp);
@@ -851,13 +830,14 @@ static int analogix_dp_link_power_down(struct analogix_dp_device *dp)
 	return 0;
 }
 
-static int analogix_dp_connector_enable(struct display_state *state)
+static int analogix_dp_connector_enable(struct rockchip_connector *conn,
+					struct display_state *state)
 {
 	struct connector_state *conn_state = &state->conn_state;
 	struct crtc_state *crtc_state = &state->crtc_state;
-	const struct rockchip_connector *connector = conn_state->connector;
-	const struct rockchip_dp_chip_data *pdata = connector->data;
-	struct analogix_dp_device *dp = dev_get_priv(conn_state->dev);
+	const struct rockchip_dp_chip_data *pdata =
+		(const struct rockchip_dp_chip_data *)dev_get_driver_data(conn->dev);
+	struct analogix_dp_device *dp = dev_get_priv(conn->dev);
 	struct video_info *video = &dp->video_info;
 	u32 val;
 	int ret;
@@ -930,12 +910,12 @@ static int analogix_dp_connector_enable(struct display_state *state)
 	return 0;
 }
 
-static int analogix_dp_connector_disable(struct display_state *state)
+static int analogix_dp_connector_disable(struct rockchip_connector *conn,
+					 struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
-	const struct rockchip_connector *connector = conn_state->connector;
-	const struct rockchip_dp_chip_data *pdata = connector->data;
-	struct analogix_dp_device *dp = dev_get_priv(conn_state->dev);
+	const struct rockchip_dp_chip_data *pdata =
+		(const struct rockchip_dp_chip_data *)dev_get_driver_data(conn->dev);
+	struct analogix_dp_device *dp = dev_get_priv(conn->dev);
 
 	if (!analogix_dp_get_plug_in_status(dp))
 		analogix_dp_link_power_down(dp);
@@ -947,43 +927,15 @@ static int analogix_dp_connector_disable(struct display_state *state)
 	return 0;
 }
 
-static int analogix_dp_connector_detect(struct display_state *state)
+static int analogix_dp_connector_detect(struct rockchip_connector *conn,
+					struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
-	struct panel_state *panel_state = &state->panel_state;
-	struct analogix_dp_device *dp = dev_get_priv(conn_state->dev);
-	int ret;
-
-	if (panel_state->panel)
-		rockchip_panel_prepare(panel_state->panel);
-
-	if (!analogix_dp_detect(dp))
-		goto unprepare_panel;
+	struct analogix_dp_device *dp = dev_get_priv(conn->dev);
 
-	ret = analogix_dp_read_byte_from_dpcd(dp, DP_MAX_LINK_RATE,
-					      &dp->link_train.link_rate);
-	if (ret < 0) {
-		dev_err(dp->dev, "failed to read link rate: %d\n", ret);
-		goto unprepare_panel;
-	}
-
-	ret = analogix_dp_read_byte_from_dpcd(dp, DP_MAX_LANE_COUNT,
-					      &dp->link_train.lane_count);
-	if (ret < 0) {
-		dev_err(dp->dev, "failed to read lane count: %d\n", ret);
-		goto unprepare_panel;
-	}
-
-	return true;
-
-unprepare_panel:
-	if (panel_state->panel)
-		rockchip_panel_unprepare(panel_state->panel);
-	return false;
+	return analogix_dp_detect(dp);
 }
 
 static const struct rockchip_connector_funcs analogix_dp_connector_funcs = {
-	.pre_init = analogix_dp_connector_pre_init,
 	.init = analogix_dp_connector_init,
 	.get_edid = analogix_dp_connector_get_edid,
 	.enable = analogix_dp_connector_enable,
@@ -991,12 +943,63 @@ static const struct rockchip_connector_funcs analogix_dp_connector_funcs = {
 	.detect = analogix_dp_connector_detect,
 };
 
+static int analogix_dp_parse_dt(struct analogix_dp_device *dp)
+{
+	struct udevice *dev = dp->dev;
+	int len;
+	u32 num_lanes;
+	u32 max_link_rate;
+	int ret;
+
+	dp->force_hpd = dev_read_bool(dev, "force-hpd");
+	dp->video_bist_enable = dev_read_bool(dev, "analogix,video-bist-enable");
+	dp->video_info.force_stream_valid =
+		dev_read_bool(dev, "analogix,force-stream-valid");
+
+	max_link_rate = dev_read_u32_default(dev, "max-link-rate", 0);
+	if (max_link_rate) {
+		switch (max_link_rate) {
+		case 1620:
+		case 2700:
+		case 5400:
+			dp->video_info.max_link_rate =
+				min_t(u8, dp->video_info.max_link_rate,
+				      drm_dp_link_rate_to_bw_code(max_link_rate * 100));
+			break;
+		default:
+			dev_err(dev, "invalid max-link-rate %d\n", max_link_rate);
+			break;
+		}
+	}
+
+	if (dev_read_prop(dev, "data-lanes", &len)) {
+		num_lanes = len / sizeof(u32);
+		if (num_lanes < 1 || num_lanes > 4 || num_lanes == 3) {
+			dev_err(dev, "bad number of data lanes\n");
+			return -EINVAL;
+		}
+
+		ret = dev_read_u32_array(dev, "data-lanes", dp->lane_map,
+					 num_lanes);
+		if (ret)
+			return ret;
+
+		dp->video_info.max_lane_count = num_lanes;
+	} else {
+		dp->lane_map[0] = 0;
+		dp->lane_map[1] = 1;
+		dp->lane_map[2] = 2;
+		dp->lane_map[3] = 3;
+	}
+
+	return 0;
+}
+
 static int analogix_dp_probe(struct udevice *dev)
 {
 	struct analogix_dp_device *dp = dev_get_priv(dev);
-	const struct rockchip_connector *connector =
-		(const struct rockchip_connector *)dev_get_driver_data(dev);
-	const struct rockchip_dp_chip_data *pdata = connector->data;
+	const struct rockchip_dp_chip_data *pdata =
+		(const struct rockchip_dp_chip_data *)dev_get_driver_data(dev);
 	struct udevice *syscon;
 	int ret;
 
@@ -1029,9 +1032,6 @@ static int analogix_dp_probe(struct udevice *dev)
 
 	generic_phy_get_by_name(dev, "dp", &dp->phy);
 
-	dp->force_hpd = dev_read_bool(dev, "force-hpd");
-	dp->video_bist_enable = dev_read_bool(dev, "analogix,video-bist-enable");
-
 	dp->plat_data.dev_type = ROCKCHIP_DP;
 	dp->plat_data.subdev_type = pdata->chip_type;
 	dp->plat_data.ssc = pdata->ssc;
@@ -1041,6 +1041,15 @@ static int analogix_dp_probe(struct udevice *dev)
 
 	dp->dev = dev;
 
+	ret = analogix_dp_parse_dt(dp);
+	if (ret) {
+		dev_err(dev, "failed to parse DT: %d\n", ret);
+		return ret;
+	}
+
+	rockchip_connector_bind(&dp->connector, dev, dp->id, &analogix_dp_connector_funcs,
+				NULL, DRM_MODE_CONNECTOR_eDP);
+
 	return 0;
 }
 
@@ -1054,11 +1063,6 @@ static const struct rockchip_dp_chip_data rk3288_edp_platform_data = {
 	.max_lane_count = 4,
 };
 
-static const struct rockchip_connector rk3288_edp_driver_data = {
-	 .funcs = &analogix_dp_connector_funcs,
-	 .data = &rk3288_edp_platform_data,
-};
-
 static const struct rockchip_dp_chip_data rk3368_edp_platform_data = {
 	.chip_type = RK3368_EDP,
 
@@ -1066,11 +1070,6 @@ static const struct rockchip_dp_chip_data rk3368_edp_platform_data = {
 	.max_lane_count = 4,
 };
 
-static const struct rockchip_connector rk3368_edp_driver_data = {
-	 .funcs = &analogix_dp_connector_funcs,
-	 .data = &rk3368_edp_platform_data,
-};
-
 static const struct rockchip_dp_chip_data rk3399_edp_platform_data = {
 	.lcdsel_grf_reg = 0x6250,
 	.lcdsel_big = 0 | BIT(21),
@@ -1081,11 +1080,6 @@ static const struct rockchip_dp_chip_data rk3399_edp_platform_data = {
 	.max_lane_count = 4,
 };
 
-static const struct rockchip_connector rk3399_edp_driver_data = {
-	 .funcs = &analogix_dp_connector_funcs,
-	 .data = &rk3399_edp_platform_data,
-};
-
 static const struct rockchip_dp_chip_data rk3568_edp_platform_data = {
 	.chip_type = RK3568_EDP,
 	.ssc = true,
@@ -1094,11 +1088,6 @@ static const struct rockchip_dp_chip_data rk3568_edp_platform_data = {
 	.max_lane_count = 4,
 };
 
-static const struct rockchip_connector rk3568_edp_driver_data = {
-	 .funcs = &analogix_dp_connector_funcs,
-	 .data = &rk3568_edp_platform_data,
-};
-
 static const struct rockchip_dp_chip_data rk3588_edp_platform_data = {
 	.chip_type = RK3588_EDP,
 	.ssc = true,
@@ -1107,27 +1096,22 @@ static const struct rockchip_dp_chip_data rk3588_edp_platform_data = {
 	.max_lane_count = 4,
 };
 
-static const struct rockchip_connector rk3588_edp_driver_data = {
-	 .funcs = &analogix_dp_connector_funcs,
-	 .data = &rk3588_edp_platform_data,
-};
-
 static const struct udevice_id analogix_dp_ids[] = {
 	{
 		.compatible = "rockchip,rk3288-dp",
-		.data = (ulong)&rk3288_edp_driver_data,
+		.data = (ulong)&rk3288_edp_platform_data,
 	}, {
 		.compatible = "rockchip,rk3368-edp",
-		.data = (ulong)&rk3368_edp_driver_data,
+		.data = (ulong)&rk3368_edp_platform_data,
 	}, {
 		.compatible = "rockchip,rk3399-edp",
-		.data = (ulong)&rk3399_edp_driver_data,
+		.data = (ulong)&rk3399_edp_platform_data,
 	}, {
 		.compatible = "rockchip,rk3568-edp",
-		.data = (ulong)&rk3568_edp_driver_data,
+		.data = (ulong)&rk3568_edp_platform_data,
 	}, {
 		.compatible = "rockchip,rk3588-edp",
-		.data = (ulong)&rk3588_edp_driver_data,
+		.data = (ulong)&rk3588_edp_platform_data,
 	},
 	{}
 };
diff --git a/drivers/video/drm/analogix_dp.h b/drivers/video/drm/analogix_dp.h
index 33024bb..dc9466c 100644
--- a/drivers/video/drm/analogix_dp.h
+++ b/drivers/video/drm/analogix_dp.h
@@ -13,6 +13,8 @@
 
 #include <drm/drm_dp_helper.h>
 
+#include "rockchip_connector.h"
+
 #define ANALOGIX_DP_TX_SW_RESET			0x14
 #define ANALOGIX_DP_FUNC_EN_1			0x18
 #define ANALOGIX_DP_FUNC_EN_2			0x1C
@@ -585,6 +587,8 @@ struct video_info {
 
 	int max_link_rate;
 	enum link_lane_count_type max_lane_count;
+
+	bool force_stream_valid;
 };
 
 struct link_train {
@@ -619,6 +623,7 @@ struct analogix_dp_plat_data {
 };
 
 struct analogix_dp_device {
+	struct rockchip_connector connector;
 	int id;
 	struct udevice *dev;
 	void *reg_base;
@@ -634,12 +639,12 @@ struct analogix_dp_device {
 	unsigned char edid[EDID_BLOCK_LENGTH * 2];
 	u8 dpcd[DP_RECEIVER_CAP_SIZE];
 	bool video_bist_enable;
+	u32 lane_map[4];
 };
 
 /* analogix_dp_reg.c */
 void analogix_dp_enable_video_mute(struct analogix_dp_device *dp, bool enable);
 void analogix_dp_stop_video(struct analogix_dp_device *dp);
-void analogix_dp_lane_swap(struct analogix_dp_device *dp, bool enable);
 void analogix_dp_init_analog_param(struct analogix_dp_device *dp);
 void analogix_dp_init_interrupt(struct analogix_dp_device *dp);
 void analogix_dp_reset(struct analogix_dp_device *dp);
diff --git a/drivers/video/drm/analogix_dp_reg.c b/drivers/video/drm/analogix_dp_reg.c
index 59da7c0..3bd1cd5 100644
--- a/drivers/video/drm/analogix_dp_reg.c
+++ b/drivers/video/drm/analogix_dp_reg.c
@@ -72,16 +72,12 @@ void analogix_dp_stop_video(struct analogix_dp_device *dp)
 	analogix_dp_write(dp, ANALOGIX_DP_VIDEO_CTL_1, reg);
 }
 
-void analogix_dp_lane_swap(struct analogix_dp_device *dp, bool enable)
+static void analogix_dp_set_lane_map(struct analogix_dp_device *dp)
 {
-	u32 reg;
+	u32 i, reg = 0;
 
-	if (enable)
-		reg = LANE3_MAP_LOGIC_LANE_0 | LANE2_MAP_LOGIC_LANE_1 |
-		      LANE1_MAP_LOGIC_LANE_2 | LANE0_MAP_LOGIC_LANE_3;
-	else
-		reg = LANE3_MAP_LOGIC_LANE_3 | LANE2_MAP_LOGIC_LANE_2 |
-		      LANE1_MAP_LOGIC_LANE_1 | LANE0_MAP_LOGIC_LANE_0;
+	for (i = 0; i < dp->video_info.max_lane_count; i++)
+		reg |= dp->lane_map[i] << (2 * i);
 
 	analogix_dp_write(dp, ANALOGIX_DP_LANE_MAP, reg);
 }
@@ -161,7 +157,7 @@ void analogix_dp_reset(struct analogix_dp_device *dp)
 
 	udelay(30);
 
-	analogix_dp_lane_swap(dp, 0);
+	analogix_dp_set_lane_map(dp);
 
 	analogix_dp_write(dp, ANALOGIX_DP_SYS_CTL_1, 0x0);
 	analogix_dp_write(dp, ANALOGIX_DP_SYS_CTL_2, 0x40);
@@ -1115,8 +1111,11 @@ void analogix_dp_init_video(struct analogix_dp_device *dp)
 	reg = CHA_CRI(4) | CHA_CTRL;
 	analogix_dp_write(dp, ANALOGIX_DP_SYS_CTL_2, reg);
 
-	reg = 0x0;
-	analogix_dp_write(dp, ANALOGIX_DP_SYS_CTL_3, reg);
+	if (dp->video_info.force_stream_valid) {
+		reg = analogix_dp_read(dp, ANALOGIX_DP_SYS_CTL_3);
+		reg |= VALID_CTRL | F_VALID;
+		analogix_dp_write(dp, ANALOGIX_DP_SYS_CTL_3, reg);
+	}
 
 	reg = VID_HRES_TH(2) | VID_VRES_TH(0);
 	analogix_dp_write(dp, ANALOGIX_DP_VIDEO_CTL_8, reg);
@@ -1305,6 +1304,16 @@ void analogix_dp_set_video_format(struct analogix_dp_device *dp,
 {
 	unsigned int hsw, hfp, hbp, vsw, vfp, vbp;
 
+	dp->video_info.interlaced = !!(mode->flags & DRM_MODE_FLAG_INTERLACE);
+
+	if (dp->plat_data.subdev_type == RK3588_EDP) {
+		dp->video_info.v_sync_polarity = true;
+		dp->video_info.h_sync_polarity = true;
+	} else {
+		dp->video_info.v_sync_polarity = !!(mode->flags & DRM_MODE_FLAG_NVSYNC);
+		dp->video_info.h_sync_polarity = !!(mode->flags & DRM_MODE_FLAG_NHSYNC);
+	}
+
 	hsw = mode->hsync_end - mode->hsync_start;
 	hfp = mode->hsync_start - mode->hdisplay;
 	hbp = mode->htotal - mode->hsync_end;
diff --git a/drivers/video/drm/drm_dp_helper.c b/drivers/video/drm/drm_dp_helper.c
index 0cea785..e8d7219 100644
--- a/drivers/video/drm/drm_dp_helper.c
+++ b/drivers/video/drm/drm_dp_helper.c
@@ -290,7 +290,7 @@ static int drm_dp_read_extended_dpcd_caps(struct drm_dp_aux *aux,
 	if (!memcmp(dpcd, dpcd_ext, sizeof(dpcd_ext)))
 		return 0;
 
-	printf("%s: Base DPCD: %*ph\n",
+	debug("%s: Base DPCD: %*ph\n",
 	       aux->name, DP_RECEIVER_CAP_SIZE, dpcd);
 
 	memcpy(dpcd, dpcd_ext, sizeof(dpcd_ext));
@@ -313,7 +313,7 @@ int drm_dp_read_dpcd_caps(struct drm_dp_aux *aux,
 	if (ret < 0)
 		return ret;
 
-	printf("%s: DPCD: %*ph\n",
+	debug("%s: DPCD: %*ph\n",
 	       aux->name, DP_RECEIVER_CAP_SIZE, dpcd);
 
 	return ret;
diff --git a/drivers/video/drm/drm_modes.c b/drivers/video/drm/drm_modes.c
new file mode 100644
index 0000000..fabae87b
--- /dev/null
+++ b/drivers/video/drm/drm_modes.c
@@ -0,0 +1,224 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright © 1997-2003 by The XFree86 Project, Inc.
+ * Copyright © 2007 Dave Airlie
+ * Copyright © 2007-2008 Intel Corporation
+ *   Jesse Barnes <jesse.barnes@intel.com>
+ * Copyright 2005-2006 Luc Verhaegen
+ * Copyright (c) 2001, Andy Ritger  aritger@nvidia.com
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+ * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
+ * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+ * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+ * OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * Except as contained in this notice, the name of the copyright holder(s)
+ * and author(s) shall not be used in advertising or otherwise to promote
+ * the sale, use or other dealings in this Software without prior written
+ * authorization from the copyright holder(s) and author(s).
+ */
+
+#include <common.h>
+#include <drm_modes.h>
+#include <linux/compat.h>
+#include <malloc.h>
+
+#define PICOS2KHZ(a)	(1000000000UL / (a))
+#define KHZ2PICOS(a)	(1000000000UL / (a))
+
+/**
+ * drm_mode_create - create a new display mode
+ *
+ * Create a new, cleared drm_display_mode.
+ *
+ * Returns:
+ * Pointer to new mode on success, NULL on error.
+ */
+struct drm_display_mode *drm_mode_create(void)
+{
+	struct drm_display_mode *nmode;
+
+	nmode = malloc(sizeof(struct drm_display_mode));
+	memset(nmode, 0, sizeof(struct drm_display_mode));
+	if (!nmode)
+		return NULL;
+
+	return nmode;
+}
+
+/**
+ * drm_mode_destroy - remove a mode
+ * @mode: mode to remove
+ */
+void drm_mode_destroy(struct drm_display_mode *mode)
+{
+	if (!mode)
+		return;
+
+	kfree(mode);
+}
+
+static bool drm_mode_match_timings(const struct drm_display_mode *mode1,
+				   const struct drm_display_mode *mode2)
+{
+	return mode1->hdisplay == mode2->hdisplay &&
+	       mode1->hsync_start == mode2->hsync_start &&
+	       mode1->hsync_end == mode2->hsync_end &&
+	       mode1->htotal == mode2->htotal &&
+	       mode1->hskew == mode2->hskew &&
+	       mode1->vdisplay == mode2->vdisplay &&
+	       mode1->vsync_start == mode2->vsync_start &&
+	       mode1->vsync_end == mode2->vsync_end &&
+	       mode1->vtotal == mode2->vtotal &&
+	       mode1->vscan == mode2->vscan;
+}
+
+static bool drm_mode_match_clock(const struct drm_display_mode *mode1,
+				 const struct drm_display_mode *mode2)
+{
+	/*
+	 * do clock check convert to PICOS
+	 * so fb modes get matched the same
+	 */
+	if (mode1->clock && mode2->clock)
+		return KHZ2PICOS(mode1->clock) == KHZ2PICOS(mode2->clock);
+	else
+		return mode1->clock == mode2->clock;
+}
+
+static bool drm_mode_match_flags(const struct drm_display_mode *mode1,
+				 const struct drm_display_mode *mode2)
+{
+	return (mode1->flags & ~DRM_MODE_FLAG_3D_MASK) ==
+	       (mode2->flags & ~DRM_MODE_FLAG_3D_MASK);
+}
+
+static bool drm_mode_match_3d_flags(const struct drm_display_mode *mode1,
+				    const struct drm_display_mode *mode2)
+{
+	return (mode1->flags & DRM_MODE_FLAG_3D_MASK) ==
+	       (mode2->flags & DRM_MODE_FLAG_3D_MASK);
+}
+
+static bool drm_mode_match_aspect_ratio(const struct drm_display_mode *mode1,
+					const struct drm_display_mode *mode2)
+{
+	return mode1->picture_aspect_ratio == mode2->picture_aspect_ratio;
+}
+
+/**
+ * drm_mode_match - test modes for (partial) equality
+ * @mode1: first mode
+ * @mode2: second mode
+ * @match_flags: which parts need to match (DRM_MODE_MATCH_*)
+ *
+ * Check to see if @mode1 and @mode2 are equivalent.
+ *
+ * Returns:
+ * True if the modes are (partially) equal, false otherwise.
+ */
+bool drm_mode_match(const struct drm_display_mode *mode1,
+		    const struct drm_display_mode *mode2,
+		    unsigned int match_flags)
+{
+	if (!mode1 && !mode2)
+		return true;
+
+	if (!mode1 || !mode2)
+		return false;
+
+	if (match_flags & DRM_MODE_MATCH_TIMINGS &&
+	    !drm_mode_match_timings(mode1, mode2))
+		return false;
+
+	if (match_flags & DRM_MODE_MATCH_CLOCK &&
+	    !drm_mode_match_clock(mode1, mode2))
+		return false;
+
+	if (match_flags & DRM_MODE_MATCH_FLAGS &&
+	    !drm_mode_match_flags(mode1, mode2))
+		return false;
+
+	if (match_flags & DRM_MODE_MATCH_3D_FLAGS &&
+	    !drm_mode_match_3d_flags(mode1, mode2))
+		return false;
+
+	if (match_flags & DRM_MODE_MATCH_ASPECT_RATIO &&
+	    !drm_mode_match_aspect_ratio(mode1, mode2))
+		return false;
+
+	return true;
+}
+
+/**
+ * drm_mode_equal - test modes for equality
+ * @mode1: first mode
+ * @mode2: second mode
+ *
+ * Check to see if @mode1 and @mode2 are equivalent.
+ *
+ * Returns:
+ * True if the modes are equal, false otherwise.
+ */
+bool drm_mode_equal(const struct drm_display_mode *mode1,
+		    const struct drm_display_mode *mode2)
+{
+	return drm_mode_match(mode1, mode2,
+			      DRM_MODE_MATCH_TIMINGS |
+			      DRM_MODE_MATCH_CLOCK |
+			      DRM_MODE_MATCH_FLAGS |
+			      DRM_MODE_MATCH_3D_FLAGS |
+			      DRM_MODE_MATCH_ASPECT_RATIO);
+}
+
+/**
+ * drm_display_mode_to_videomode - fill in @vm using @dmode,
+ * @dmode: drm_display_mode structure to use as source
+ * @vm: videomode structure to use as destination
+ *
+ * Fills out @vm using the display mode specified in @dmode.
+ */
+void drm_display_mode_to_videomode(const struct drm_display_mode *dmode,
+				   struct videomode *vm)
+{
+	vm->hactive = dmode->hdisplay;
+	vm->hfront_porch = dmode->hsync_start - dmode->hdisplay;
+	vm->hsync_len = dmode->hsync_end - dmode->hsync_start;
+	vm->hback_porch = dmode->htotal - dmode->hsync_end;
+
+	vm->vactive = dmode->vdisplay;
+	vm->vfront_porch = dmode->vsync_start - dmode->vdisplay;
+	vm->vsync_len = dmode->vsync_end - dmode->vsync_start;
+	vm->vback_porch = dmode->vtotal - dmode->vsync_end;
+
+	vm->pixelclock = dmode->clock * 1000;
+
+	vm->flags = 0;
+	if (dmode->flags & DRM_MODE_FLAG_PHSYNC)
+		vm->flags |= DISPLAY_FLAGS_HSYNC_HIGH;
+	else if (dmode->flags & DRM_MODE_FLAG_NHSYNC)
+		vm->flags |= DISPLAY_FLAGS_HSYNC_LOW;
+	if (dmode->flags & DRM_MODE_FLAG_PVSYNC)
+		vm->flags |= DISPLAY_FLAGS_VSYNC_HIGH;
+	else if (dmode->flags & DRM_MODE_FLAG_NVSYNC)
+		vm->flags |= DISPLAY_FLAGS_VSYNC_LOW;
+	if (dmode->flags & DRM_MODE_FLAG_INTERLACE)
+		vm->flags |= DISPLAY_FLAGS_INTERLACED;
+	if (dmode->flags & DRM_MODE_FLAG_DBLSCAN)
+		vm->flags |= DISPLAY_FLAGS_DOUBLESCAN;
+	if (dmode->flags & DRM_MODE_FLAG_DBLCLK)
+		vm->flags |= DISPLAY_FLAGS_DOUBLECLK;
+}
diff --git a/drivers/video/drm/dw-dp.c b/drivers/video/drm/dw-dp.c
index 30ef922..e6e5b0b 100644
--- a/drivers/video/drm/dw-dp.c
+++ b/drivers/video/drm/dw-dp.c
@@ -217,6 +217,7 @@ struct dw_dp_sdp {
 };
 
 struct dw_dp {
+	struct rockchip_connector connector;
 	struct udevice *dev;
 	struct regmap *regmap;
 	struct phy phy;
@@ -228,6 +229,7 @@ struct dw_dp {
 	struct dw_dp_link link;
 	struct dw_dp_video video;
 
+	bool force_hpd;
 	bool force_output;
 };
 
@@ -439,7 +441,7 @@ static bool dw_dp_bandwidth_ok(struct dw_dp *dp,
 
 static void dw_dp_hpd_init(struct dw_dp *dp)
 {
-	if (dm_gpio_is_valid(&dp->hpd_gpio)) {
+	if (dm_gpio_is_valid(&dp->hpd_gpio) || dp->force_hpd) {
 		regmap_update_bits(dp->regmap, DPTX_CCTL, FORCE_HPD,
 				   FIELD_PREP(FORCE_HPD, 1));
 		return;
@@ -560,7 +562,8 @@ static int dw_dp_link_probe(struct dw_dp *dp)
 		!!(dpcd & DP_VSC_SDP_EXT_FOR_COLORIMETRY_SUPPORTED);
 
 	link->revision = link->dpcd[DP_DPCD_REV];
-	link->rate = drm_dp_max_link_rate(link->dpcd);
+	link->rate = min_t(u32, dp->phy.attrs.max_link_rate * 100,
+			   drm_dp_max_link_rate(link->dpcd));
 	link->lanes = min_t(u8, dp->phy.attrs.bus_width,
 			    drm_dp_max_lane_count(link->dpcd));
 
@@ -1394,32 +1397,19 @@ static bool dw_dp_detect(struct dw_dp *dp)
 	if (dm_gpio_is_valid(&dp->hpd_gpio))
 		return dm_gpio_get_value(&dp->hpd_gpio);
 
-	regmap_read(dp->regmap, DPTX_GENERAL_INTERRUPT, &value);
-	if (value & HPD_EVENT) {
-		regmap_read(dp->regmap, DPTX_HPD_STATUS, &value);
-		if ((value & HPD_HOT_PLUG) &&
-		    (FIELD_GET(HPD_STATE, value) == SOURCE_STATE_PLUG)) {
-			regmap_write(dp->regmap, DPTX_HPD_STATUS, HPD_HOT_PLUG);
-			return true;
-		}
+	regmap_read(dp->regmap, DPTX_HPD_STATUS, &value);
+	if (FIELD_GET(HPD_STATE, value) == SOURCE_STATE_PLUG) {
+		regmap_write(dp->regmap, DPTX_HPD_STATUS, HPD_HOT_PLUG);
+		return true;
 	}
 
 	return false;
 }
 
-static int dw_dp_connector_pre_init(struct display_state *state)
-{
-	struct connector_state *conn_state = &state->conn_state;
-
-	conn_state->type = DRM_MODE_CONNECTOR_DisplayPort;
-
-	return 0;
-}
-
-static int dw_dp_connector_init(struct display_state *state)
+static int dw_dp_connector_init(struct rockchip_connector *conn, struct display_state *state)
 {
 	struct connector_state *conn_state = &state->conn_state;
-	struct dw_dp *dp = dev_get_priv(conn_state->dev);
+	struct dw_dp *dp = dev_get_priv(conn->dev);
 	int ret;
 
 	conn_state->output_if |= dp->id ? VOP_OUTPUT_IF_DP1 : VOP_OUTPUT_IF_DP0;
@@ -1440,22 +1430,56 @@ static int dw_dp_connector_init(struct display_state *state)
 	return ret;
 }
 
-static int dw_dp_connector_get_edid(struct display_state *state)
+static int dw_dp_connector_get_edid(struct rockchip_connector *conn, struct display_state *state)
 {
 	int ret;
 	struct connector_state *conn_state = &state->conn_state;
-	struct dw_dp *dp = dev_get_priv(conn_state->dev);
+	struct dw_dp *dp = dev_get_priv(conn->dev);
 
 	ret = drm_do_get_edid(&dp->aux.ddc, conn_state->edid);
 
 	return ret;
 }
 
-static int dw_dp_connector_enable(struct display_state *state)
+static int dw_dp_get_output_fmts_index(u32 bus_format)
+{
+	int i;
+
+	for (i = 0; i < ARRAY_SIZE(possible_output_fmts); i++) {
+		const struct dw_dp_output_format *fmt = &possible_output_fmts[i];
+
+		if (fmt->bus_format == bus_format)
+			break;
+	}
+
+	if (i == ARRAY_SIZE(possible_output_fmts))
+		return 1;
+
+	return i;
+}
+
+static int dw_dp_connector_prepare(struct rockchip_connector *conn, struct display_state *state)
+{
+	struct connector_state *conn_state = &state->conn_state;
+	struct dw_dp *dp = dev_get_priv(conn->dev);
+	struct dw_dp_video *video = &dp->video;
+	int bus_fmt;
+
+	bus_fmt = dw_dp_get_output_fmts_index(conn_state->bus_format);
+	video->video_mapping = possible_output_fmts[bus_fmt].video_mapping;
+	video->color_format = possible_output_fmts[bus_fmt].color_format;
+	video->bus_format = possible_output_fmts[bus_fmt].bus_format;
+	video->bpc = possible_output_fmts[bus_fmt].bpc;
+	video->bpp = possible_output_fmts[bus_fmt].bpp;
+
+	return 0;
+}
+
+static int dw_dp_connector_enable(struct rockchip_connector *conn, struct display_state *state)
 {
 	struct connector_state *conn_state = &state->conn_state;
 	struct drm_display_mode *mode = &conn_state->mode;
-	struct dw_dp *dp = dev_get_priv(conn_state->dev);
+	struct dw_dp *dp = dev_get_priv(conn->dev);
 	struct dw_dp_video *video = &dp->video;
 	int ret;
 
@@ -1483,20 +1507,19 @@ static int dw_dp_connector_enable(struct display_state *state)
 	return 0;
 }
 
-static int dw_dp_connector_disable(struct display_state *state)
+static int dw_dp_connector_disable(struct rockchip_connector *conn, struct display_state *state)
 {
 	/* TODO */
 
 	return 0;
 }
 
-static int dw_dp_connector_detect(struct display_state *state)
+static int dw_dp_connector_detect(struct rockchip_connector *conn, struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
-	struct dw_dp *dp = dev_get_priv(conn_state->dev);
-	int status, tries;
+	struct dw_dp *dp = dev_get_priv(conn->dev);
+	int status, tries, ret;
 
-	for (tries = 0; tries < 100; tries++) {
+	for (tries = 0; tries < 200; tries++) {
 		status = dw_dp_detect(dp);
 		if (status)
 			break;
@@ -1509,6 +1532,12 @@ static int dw_dp_connector_detect(struct display_state *state)
 	if (!status && !dp->force_output)
 		generic_phy_power_off(&dp->phy);
 
+	if (status && !dp->force_output) {
+		ret = dw_dp_link_probe(dp);
+		if (ret)
+			printf("failed to probe DP link: %d\n", ret);
+	}
+
 	return status;
 }
 
@@ -1573,32 +1602,15 @@ static u32 dw_dp_get_output_bus_fmts(struct dw_dp *dp, struct hdmi_edid_data *ed
 	return i;
 }
 
-static int dw_dp_get_force_output_fmts(struct display_state *state)
-{
-	int i;
-
-	for (i = 0; i < ARRAY_SIZE(possible_output_fmts); i++) {
-		const struct dw_dp_output_format *fmt = &possible_output_fmts[i];
-
-		if (fmt->bus_format == state->force_bus_format)
-			break;
-	}
-
-	if (i == ARRAY_SIZE(possible_output_fmts))
-		return 1;
-
-	return i;
-}
-
-static int dw_dp_connector_get_timing(struct display_state *state)
+static int dw_dp_connector_get_timing(struct rockchip_connector *conn, struct display_state *state)
 {
 	int ret, i;
 	struct connector_state *conn_state = &state->conn_state;
-	struct dw_dp *dp = dev_get_priv(conn_state->dev);
-	struct dw_dp_video *video = &dp->video;
+	struct dw_dp *dp = dev_get_priv(conn->dev);
 	struct drm_display_mode *mode = &conn_state->mode;
 	struct hdmi_edid_data edid_data;
 	struct drm_display_mode *mode_buf;
+	struct vop_rect rect;
 	u32 bus_fmt;
 
 	mode_buf = malloc(MODE_LEN * sizeof(struct drm_display_mode));
@@ -1619,16 +1631,16 @@ static int dw_dp_connector_get_timing(struct display_state *state)
 			goto err;
 		}
 
-		ret = dw_dp_link_probe(dp);
-		if (ret) {
-			printf("failed to probe DP link: %d\n", ret);
-			ret = -EINVAL;
-			goto err;
+		drm_rk_filter_whitelist(&edid_data);
+		if (state->conn_state.secondary) {
+			rect.width = state->crtc_state.max_output.width / 2;
+			rect.height = state->crtc_state.max_output.height / 2;
+		} else {
+			rect.width = state->crtc_state.max_output.width;
+			rect.height = state->crtc_state.max_output.height;
 		}
 
-		drm_rk_filter_whitelist(&edid_data);
-		drm_mode_max_resolution_filter(&edid_data,
-					       &state->crtc_state.max_output);
+		drm_mode_max_resolution_filter(&edid_data, &rect);
 		dw_dp_mode_valid(dp, &edid_data);
 
 		if (!drm_mode_prune_invalid(&edid_data)) {
@@ -1646,17 +1658,13 @@ static int dw_dp_connector_get_timing(struct display_state *state)
 	}
 
 	if (state->force_output)
-		bus_fmt = dw_dp_get_force_output_fmts(state);
+		bus_fmt = dw_dp_get_output_fmts_index(state->force_bus_format);
 	else
 		bus_fmt = dw_dp_get_output_bus_fmts(dp, &edid_data);
 
-	video->video_mapping = possible_output_fmts[bus_fmt].video_mapping;
-	video->color_format = possible_output_fmts[bus_fmt].color_format;
-	video->bus_format = possible_output_fmts[bus_fmt].bus_format;
-	video->bpc = possible_output_fmts[bus_fmt].bpc;
-	video->bpp = possible_output_fmts[bus_fmt].bpp;
+	conn_state->bus_format = possible_output_fmts[bus_fmt].bus_format;
 
-	switch (video->color_format) {
+	switch (possible_output_fmts[bus_fmt].color_format) {
 	case DRM_COLOR_FORMAT_YCRCB420:
 		conn_state->output_mode = ROCKCHIP_OUT_MODE_YUV420;
 		break;
@@ -1670,7 +1678,6 @@ static int dw_dp_connector_get_timing(struct display_state *state)
 		break;
 	}
 
-	conn_state->bus_format = video->bus_format;
 err:
 	free(mode_buf);
 
@@ -1678,9 +1685,9 @@ err:
 }
 
 static const struct rockchip_connector_funcs dw_dp_connector_funcs = {
-	.pre_init = dw_dp_connector_pre_init,
 	.init = dw_dp_connector_init,
 	.get_edid = dw_dp_connector_get_edid,
+	.prepare = dw_dp_connector_prepare,
 	.enable = dw_dp_connector_enable,
 	.disable = dw_dp_connector_disable,
 	.detect = dw_dp_connector_detect,
@@ -1716,6 +1723,8 @@ static int dw_dp_probe(struct udevice *dev)
 		return ret;
 	}
 
+	dp->force_hpd = dev_read_bool(dev, "force-hpd");
+
 	ret = gpio_request_by_name(dev, "hpd-gpios", 0, &dp->hpd_gpio,
 				   GPIOD_IS_IN);
 	if (ret && ret != -ENOENT) {
@@ -1729,17 +1738,15 @@ static int dw_dp_probe(struct udevice *dev)
 
 	dw_dp_ddc_init(dp);
 
+	rockchip_connector_bind(&dp->connector, dev, dp->id, &dw_dp_connector_funcs, NULL,
+				DRM_MODE_CONNECTOR_DisplayPort);
+
 	return 0;
 }
 
-static const struct rockchip_connector rk3588_dp_driver_data = {
-	.funcs = &dw_dp_connector_funcs,
-};
-
 static const struct udevice_id dw_dp_ids[] = {
 	{
 		.compatible = "rockchip,rk3588-dp",
-		.data = (ulong)&rk3588_dp_driver_data
 	},
 	{}
 };
diff --git a/drivers/video/drm/dw_hdmi.c b/drivers/video/drm/dw_hdmi.c
index 10a5938..f993a21 100644
--- a/drivers/video/drm/dw_hdmi.c
+++ b/drivers/video/drm/dw_hdmi.c
@@ -911,7 +911,7 @@ static int hdmi_phy_configure(struct dw_hdmi *hdmi)
 	return dw_hdmi_phy_power_on(hdmi);
 }
 
-static int dw_hdmi_phy_init(struct dw_hdmi *hdmi,
+static int dw_hdmi_phy_init(struct rockchip_connector *conn, struct dw_hdmi *hdmi,
 			    void *data)
 {
 	int i, ret;
@@ -928,7 +928,7 @@ static int dw_hdmi_phy_init(struct dw_hdmi *hdmi,
 	return 0;
 }
 
-static void dw_hdmi_phy_disable(struct dw_hdmi *hdmi,
+static void dw_hdmi_phy_disable(struct rockchip_connector *conn, struct dw_hdmi *hdmi,
 				void *data)
 {
 	dw_hdmi_phy_power_off(hdmi);
@@ -1525,10 +1525,11 @@ static void hdmi_video_sample(struct dw_hdmi *hdmi)
 	hdmi_writeb(hdmi, 0x0, HDMI_TX_BCBDATA1);
 }
 
-static void dw_hdmi_disable(struct dw_hdmi *hdmi, struct display_state *state)
+static void dw_hdmi_disable(struct rockchip_connector *conn, struct dw_hdmi *hdmi,
+			    struct display_state *state)
 {
 	if (hdmi->phy.enabled) {
-		hdmi->phy.ops->disable(hdmi, state);
+		hdmi->phy.ops->disable(conn, hdmi, state);
 		hdmi->phy.enabled = false;
 	}
 }
@@ -2027,6 +2028,7 @@ static void hdmi_tx_hdcp_config(struct dw_hdmi *hdmi,
 }
 
 static int dw_hdmi_setup(struct dw_hdmi *hdmi,
+			 struct rockchip_connector *conn,
 			 struct drm_display_mode *mode,
 			 struct display_state *state)
 {
@@ -2088,7 +2090,7 @@ static int dw_hdmi_setup(struct dw_hdmi *hdmi,
 	hdmi_av_composer(hdmi, mode);
 
 	/* HDMI Initialization Step B.2 */
-	ret = hdmi->phy.ops->init(hdmi, state);
+	ret = hdmi->phy.ops->init(conn, hdmi, state);
 	if (ret)
 		return ret;
 	hdmi->phy.enabled = true;
@@ -2263,24 +2265,15 @@ void dw_hdmi_audio_disable(struct dw_hdmi *hdmi)
 	hdmi_set_cts_n(hdmi, hdmi->audio_cts, 0);
 }
 
-int rockchip_dw_hdmi_pre_init(struct display_state *state)
+int rockchip_dw_hdmi_init(struct rockchip_connector *conn, struct display_state *state)
 {
 	struct connector_state *conn_state = &state->conn_state;
-
-	conn_state->type = DRM_MODE_CONNECTOR_HDMIA;
-
-	return 0;
-}
-
-int rockchip_dw_hdmi_init(struct display_state *state)
-{
-	struct connector_state *conn_state = &state->conn_state;
-	const struct rockchip_connector *connector = conn_state->connector;
-	const struct dw_hdmi_plat_data *pdata = connector->data;
+	const struct dw_hdmi_plat_data *pdata =
+		(const struct dw_hdmi_plat_data *)dev_get_driver_data(conn->dev);
 	struct crtc_state *crtc_state = &state->crtc_state;
 	struct dw_hdmi *hdmi;
 	struct drm_display_mode *mode_buf;
-	ofnode hdmi_node = conn_state->node;
+	ofnode hdmi_node = conn->dev->node;
 	u32 val;
 	struct device_node *ddc_node;
 
@@ -2299,7 +2292,7 @@ int rockchip_dw_hdmi_init(struct display_state *state)
 
 	memset(mode_buf, 0, MODE_LEN * sizeof(struct drm_display_mode));
 
-	hdmi->regs = dev_read_addr_ptr(conn_state->dev);
+	hdmi->regs = dev_read_addr_ptr(conn->dev);
 	hdmi->io_width = ofnode_read_s32_default(hdmi_node, "reg-io-width", -1);
 
 	if (ofnode_read_bool(hdmi_node, "scramble-low-rates"))
@@ -2368,7 +2361,7 @@ int rockchip_dw_hdmi_init(struct display_state *state)
 	hdmi->edid_data.mode_buf = mode_buf;
 	hdmi->sample_rate = 48000;
 
-	conn_state->private = hdmi;
+	conn->data = hdmi;
 	dw_hdmi_set_iomux(hdmi->grf, hdmi->dev_type);
 	dw_hdmi_detect_phy(hdmi);
 	dw_hdmi_dev_init(hdmi);
@@ -2376,10 +2369,9 @@ int rockchip_dw_hdmi_init(struct display_state *state)
 	return 0;
 }
 
-void rockchip_dw_hdmi_deinit(struct display_state *state)
+void rockchip_dw_hdmi_deinit(struct rockchip_connector *conn, struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
-	struct dw_hdmi *hdmi = conn_state->private;
+	struct dw_hdmi *hdmi = conn->data;
 
 	if (hdmi->i2c)
 		free(hdmi->i2c);
@@ -2389,16 +2381,16 @@ void rockchip_dw_hdmi_deinit(struct display_state *state)
 		free(hdmi);
 }
 
-int rockchip_dw_hdmi_prepare(struct display_state *state)
+int rockchip_dw_hdmi_prepare(struct rockchip_connector *conn, struct display_state *state)
 {
 	return 0;
 }
 
-int rockchip_dw_hdmi_enable(struct display_state *state)
+int rockchip_dw_hdmi_enable(struct rockchip_connector *conn, struct display_state *state)
 {
 	struct connector_state *conn_state = &state->conn_state;
 	struct drm_display_mode *mode = &conn_state->mode;
-	struct dw_hdmi *hdmi = conn_state->private;
+	struct dw_hdmi *hdmi = conn->data;
 
 	if (!hdmi)
 		return -EFAULT;
@@ -2406,26 +2398,25 @@ int rockchip_dw_hdmi_enable(struct display_state *state)
 	/* Store the display mode for plugin/DKMS poweron events */
 	memcpy(&hdmi->previous_mode, mode, sizeof(hdmi->previous_mode));
 
-	dw_hdmi_setup(hdmi, mode, state);
+	dw_hdmi_setup(hdmi, conn, mode, state);
 
 	return 0;
 }
 
-int rockchip_dw_hdmi_disable(struct display_state *state)
+int rockchip_dw_hdmi_disable(struct rockchip_connector *conn, struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
-	struct dw_hdmi *hdmi = conn_state->private;
+	struct dw_hdmi *hdmi = conn->data;
 
-	dw_hdmi_disable(hdmi, state);
+	dw_hdmi_disable(conn, hdmi, state);
 	return 0;
 }
 
-int rockchip_dw_hdmi_get_timing(struct display_state *state)
+int rockchip_dw_hdmi_get_timing(struct rockchip_connector *conn, struct display_state *state)
 {
 	int ret, i;
 	struct connector_state *conn_state = &state->conn_state;
 	struct drm_display_mode *mode = &conn_state->mode;
-	struct dw_hdmi *hdmi = conn_state->private;
+	struct dw_hdmi *hdmi = conn->data;
 	struct edid *edid = (struct edid *)conn_state->edid;
 	unsigned int bus_format;
 	unsigned long enc_out_encoding;
@@ -2453,7 +2444,7 @@ int rockchip_dw_hdmi_get_timing(struct display_state *state)
 	}
 	drm_rk_filter_whitelist(&hdmi->edid_data);
 	if (hdmi->phy.ops->mode_valid)
-		hdmi->phy.ops->mode_valid(hdmi, state);
+		hdmi->phy.ops->mode_valid(conn, hdmi, state);
 	drm_mode_max_resolution_filter(&hdmi->edid_data,
 				       &state->crtc_state.max_output);
 	if (!drm_mode_prune_invalid(&hdmi->edid_data)) {
@@ -2516,11 +2507,10 @@ int rockchip_dw_hdmi_get_timing(struct display_state *state)
 	return 0;
 }
 
-int rockchip_dw_hdmi_detect(struct display_state *state)
+int rockchip_dw_hdmi_detect(struct rockchip_connector *conn, struct display_state *state)
 {
 	int ret;
-	struct connector_state *conn_state = &state->conn_state;
-	struct dw_hdmi *hdmi = conn_state->private;
+	struct dw_hdmi *hdmi = conn->data;
 
 	if (!hdmi)
 		return -EFAULT;
@@ -2530,18 +2520,18 @@ int rockchip_dw_hdmi_detect(struct display_state *state)
 	return ret;
 }
 
-int rockchip_dw_hdmi_get_edid(struct display_state *state)
+int rockchip_dw_hdmi_get_edid(struct rockchip_connector *conn, struct display_state *state)
 {
 	int ret;
 	struct connector_state *conn_state = &state->conn_state;
-	struct dw_hdmi *hdmi = conn_state->private;
+	struct dw_hdmi *hdmi = conn->data;
 
 	ret = drm_do_get_edid(&hdmi->adap, conn_state->edid);
 
 	return ret;
 }
 
-int inno_dw_hdmi_phy_init(struct dw_hdmi *hdmi, void *data)
+int inno_dw_hdmi_phy_init(struct rockchip_connector *conn, struct dw_hdmi *hdmi, void *data)
 {
 	struct display_state *state = (struct display_state *)data;
 	struct connector_state *conn_state = &state->conn_state;
@@ -2556,17 +2546,17 @@ int inno_dw_hdmi_phy_init(struct dw_hdmi *hdmi, void *data)
 		bus_width = color_depth;
 	else
 		bus_width = 8;
-	rockchip_phy_set_bus_width(conn_state->phy, bus_width);
-	rockchip_phy_set_pll(conn_state->phy,
+	rockchip_phy_set_bus_width(conn->phy, bus_width);
+	rockchip_phy_set_pll(conn->phy,
 			     conn_state->mode.crtc_clock * 1000);
 	if (hdmi->edid_data.display_info.hdmi.scdc.supported)
 		rockchip_dw_hdmi_scdc_set_tmds_rate(hdmi);
-	rockchip_phy_power_on(conn_state->phy);
+	rockchip_phy_power_on(conn->phy);
 
 	return 0;
 }
 
-void inno_dw_hdmi_phy_disable(struct dw_hdmi *hdmi, void *data)
+void inno_dw_hdmi_phy_disable(struct rockchip_connector *conn, struct dw_hdmi *hdmi, void *data)
 {
 }
 
@@ -2588,10 +2578,8 @@ inno_dw_hdmi_phy_read_hpd(struct dw_hdmi *hdmi, void *data)
 	return status;
 }
 
-void inno_dw_hdmi_mode_valid(struct dw_hdmi *hdmi, void *data)
+void inno_dw_hdmi_mode_valid(struct rockchip_connector *conn, struct dw_hdmi *hdmi, void *data)
 {
-	struct display_state *state = (struct display_state *)data;
-	struct connector_state *conn_state = &state->conn_state;
 	struct hdmi_edid_data *edid_data = &hdmi->edid_data;
 	unsigned long rate;
 	int i, ret;
@@ -2606,7 +2594,7 @@ void inno_dw_hdmi_mode_valid(struct dw_hdmi *hdmi, void *data)
 			rate = mode_buf[i].clock * 1000;
 
 		/* Check whether mode is out of phy cfg range. */
-		ret = rockchip_phy_round_rate(conn_state->phy, rate);
+		ret = rockchip_phy_round_rate(conn->phy, rate);
 
 		if (ret < 0)
 			edid_data->mode_buf[i].invalid = true;
diff --git a/drivers/video/drm/dw_hdmi_qp.c b/drivers/video/drm/dw_hdmi_qp.c
index 02fb0e2..7a8b54f 100644
--- a/drivers/video/drm/dw_hdmi_qp.c
+++ b/drivers/video/drm/dw_hdmi_qp.c
@@ -512,6 +512,25 @@ hdmi_get_tmdsclock(struct dw_hdmi_qp *hdmi, unsigned long mpixelclock)
 	return tmdsclock;
 }
 
+static void hdmi_infoframe_set_checksum(u8 *ptr, int size)
+{
+	u8 csum = 0;
+	int i;
+
+	ptr[3] = 0;
+	/* compute checksum */
+	for (i = 0; i < size; i++)
+		csum += ptr[i];
+
+	ptr[3] = 256 - csum;
+}
+
+static bool is_hdmi2_sink(struct dw_hdmi_qp *hdmi)
+{
+	return hdmi->edid_data.display_info.hdmi.scdc.supported ||
+		hdmi->edid_data.display_info.color_formats & DRM_COLOR_FORMAT_YCRCB420;
+}
+
 static void hdmi_config_AVI(struct dw_hdmi_qp *hdmi, struct drm_display_mode *mode)
 {
 	struct hdmi_avi_infoframe frame;
@@ -542,7 +561,7 @@ static void hdmi_config_AVI(struct dw_hdmi_qp *hdmi, struct drm_display_mode *mo
 	else
 		frame.colorspace = HDMI_COLORSPACE_RGB;
 
-	/* Set up colorimetry */
+	/* Set up colorimetry and quant range */
 	if (!hdmi_bus_fmt_is_rgb(hdmi->hdmi_data.enc_out_bus_format)) {
 		switch (hdmi->hdmi_data.enc_out_encoding) {
 		case V4L2_YCBCR_ENC_601:
@@ -561,19 +580,54 @@ static void hdmi_config_AVI(struct dw_hdmi_qp *hdmi, struct drm_display_mode *mo
 			frame.extended_colorimetry =
 					HDMI_EXTENDED_COLORIMETRY_XV_YCC_709;
 			break;
+		case V4L2_YCBCR_ENC_BT2020:
+			if (hdmi->hdmi_data.enc_in_encoding == V4L2_YCBCR_ENC_BT2020)
+				frame.colorimetry = HDMI_COLORIMETRY_EXTENDED;
+			else
+				frame.colorimetry = HDMI_COLORIMETRY_ITU_709;
+			frame.extended_colorimetry =
+					HDMI_EXTENDED_COLORIMETRY_BT2020;
+			break;
 		default: /* Carries no data */
 			frame.colorimetry = HDMI_COLORIMETRY_ITU_601;
 			frame.extended_colorimetry =
 					HDMI_EXTENDED_COLORIMETRY_XV_YCC_601;
 			break;
 		}
+
+		frame.ycc_quantization_range = HDMI_YCC_QUANTIZATION_RANGE_LIMITED;
+	} else {
+		if (hdmi->hdmi_data.enc_out_encoding == V4L2_YCBCR_ENC_BT2020) {
+			frame.colorimetry = HDMI_COLORIMETRY_EXTENDED;
+			frame.extended_colorimetry =
+				HDMI_EXTENDED_COLORIMETRY_BT2020;
+		} else {
+			frame.colorimetry = HDMI_COLORIMETRY_NONE;
+			frame.extended_colorimetry =
+				HDMI_EXTENDED_COLORIMETRY_XV_YCC_601;
+		}
+
+		if (is_hdmi2_sink(hdmi) &&
+		    frame.quantization_range == HDMI_QUANTIZATION_RANGE_FULL)
+			frame.ycc_quantization_range = HDMI_YCC_QUANTIZATION_RANGE_FULL;
+		else
+			frame.ycc_quantization_range = HDMI_YCC_QUANTIZATION_RANGE_LIMITED;
 	}
 
 	frame.scan_mode = HDMI_SCAN_MODE_NONE;
-	frame.video_code = hdmi->vic;
 
 	hdmi_avi_infoframe_pack_only(&frame, buff, 17);
 
+	/* mode which vic >= 128 must use avi version 3 */
+	if (hdmi->vic >= 128) {
+		frame.version = 3;
+		buff[1] = frame.version;
+		buff[4] &= 0x1f;
+		buff[4] |= ((frame.colorspace & 0x7) << 5);
+		buff[7] = hdmi->vic;
+		hdmi_infoframe_set_checksum(buff, 17);
+	}
+
 	/*
 	 * The Designware IP uses a different byte format from standard
 	 * AVI info frames, though generally the bits are in the correct
@@ -597,8 +651,90 @@ static void hdmi_config_AVI(struct dw_hdmi_qp *hdmi, struct drm_display_mode *mo
 
 	hdmi_modb(hdmi, 0, PKTSCHED_AVI_FIELDRATE, PKTSCHED_PKT_CONFIG1);
 
-	hdmi_modb(hdmi, PKTSCHED_AVI_TX_EN | PKTSCHED_GCP_TX_EN,
-		  PKTSCHED_AVI_TX_EN | PKTSCHED_GCP_TX_EN,
+	hdmi_modb(hdmi, PKTSCHED_AVI_TX_EN, PKTSCHED_AVI_TX_EN,
+		  PKTSCHED_PKT_EN);
+}
+
+#define VSI_PKT_TYPE		0x81
+#define VSI_PKT_VERSION		1
+#define HDMI_FORUM_OUI		0xc45dd8
+#define ALLM_MODE		BIT(1)
+#define HDMI_FORUM_LEN		9
+
+static void hdmi_config_vendor_specific_infoframe(struct dw_hdmi_qp *hdmi,
+						  struct drm_display_mode *mode)
+{
+	struct hdmi_vendor_infoframe frame;
+	struct dw_hdmi_link_config *link_cfg = NULL;
+	u8 buffer[10];
+	u32 val;
+	ssize_t err;
+	int i, reg;
+
+	link_cfg = dw_hdmi_rockchip_get_link_cfg(hdmi->rk_hdmi);
+
+	hdmi_modb(hdmi, 0, PKTSCHED_VSI_TX_EN, PKTSCHED_PKT_EN);
+
+	for (i = 0; i <= 7; i++)
+		hdmi_writel(hdmi, 0, PKT_VSI_CONTENTS0 + i * 4);
+
+	if (link_cfg->allm_en) {
+		buffer[0] = VSI_PKT_TYPE;
+		buffer[1] = VSI_PKT_VERSION;
+		buffer[2] = 5;
+		buffer[4] = HDMI_FORUM_OUI & 0xff;
+		buffer[5] = (HDMI_FORUM_OUI >> 8) & 0xff;
+		buffer[6] = (HDMI_FORUM_OUI >> 16) & 0xff;
+		buffer[7] = VSI_PKT_VERSION;
+		buffer[8] = ALLM_MODE;
+
+		hdmi_infoframe_set_checksum(buffer, HDMI_FORUM_LEN);
+
+		err = 9;
+	} else {
+		err = drm_hdmi_vendor_infoframe_from_display_mode(&frame, mode);
+		if (err < 0)
+			/*
+			 * Going into that statement does not means vendor infoframe
+			 * fails. It just informed us that vendor infoframe is not
+			 * needed for the selected mode. Only 4k or stereoscopic 3D
+			 * mode requires vendor infoframe. So just simply return.
+			 */
+			return;
+
+		err = hdmi_vendor_infoframe_pack(&frame, buffer, sizeof(buffer));
+		if (err < 0) {
+			dev_err(hdmi->dev, "Failed to pack vendor infoframe: %zd\n",
+				err);
+			return;
+		}
+	}
+
+	/* vsi header */
+	val = (buffer[2] << 16) | (buffer[1] << 8) | buffer[0];
+	hdmi_writel(hdmi, val, PKT_VSI_CONTENTS0);
+
+	reg = PKT_VSI_CONTENTS1;
+	for (i = 3; i < err; i++) {
+		if (i % 4 == 3)
+			val = buffer[i];
+		if (i % 4 == 0)
+			val |= buffer[i] << 8;
+		if (i % 4 == 1)
+			val |= buffer[i] << 16;
+		if (i % 4 == 2)
+			val |= buffer[i] << 24;
+
+		if ((i % 4 == 2) || (i == (err - 1))) {
+			hdmi_writel(hdmi, val, reg);
+			reg += 4;
+		}
+	}
+
+	hdmi_writel(hdmi, 0, PKT_VSI_CONTENTS7);
+
+	hdmi_modb(hdmi, 0, PKTSCHED_VSI_FIELDRATE, PKTSCHED_PKT_CONFIG1);
+	hdmi_modb(hdmi, PKTSCHED_VSI_TX_EN, PKTSCHED_VSI_TX_EN,
 		  PKTSCHED_PKT_EN);
 }
 
@@ -713,7 +849,14 @@ static int hdmi_start_flt(struct dw_hdmi_qp *hdmi, u8 rate)
 	int i = 0;
 	bool ltsp = false;
 
-	hdmi_modb(hdmi, BIT(6), BIT(6), 0x44);
+	hdmi_modb(hdmi, AVP_DATAPATH_VIDEO_SWDISABLE,
+		  AVP_DATAPATH_VIDEO_SWDISABLE, GLOBAL_SWDISABLE);
+
+	hdmi_writel(hdmi, AVP_DATAPATH_SWINIT_P, GLOBAL_SWRESET_REQUEST);
+
+	/* clear flt flags */
+	drm_scdc_writeb(&hdmi->adap, 0x10, 0xff);
+
 	/* FLT_READY & FFE_LEVELS read */
 	for (i = 0; i < 20; i++) {
 		drm_scdc_readb(&hdmi->adap, SCDC_STATUS_FLAGS_0, &val);
@@ -723,18 +866,18 @@ static int hdmi_start_flt(struct dw_hdmi_qp *hdmi, u8 rate)
 	}
 
 	if (i == 20) {
-		dev_err(hdmi->dev, "sink flt isn't ready\n");
+		printf("sink flt isn't ready\n");
 		return -EINVAL;
 	}
 
 	/* max ffe level 3 */
 	val = 0 << 4 | hdmi_set_frl_mask(rate);
 	drm_scdc_writeb(&hdmi->adap, 0x31, val);
-
 	/* select FRL_RATE & FFE_LEVELS */
 	hdmi_writel(hdmi, ffe_lv, FLT_CONFIG0);
 
-	while (1) {
+	i = 500;
+	while (i--) {
 		mdelay(4);
 		drm_scdc_readb(&hdmi->adap, 0x10, &val);
 
@@ -753,14 +896,14 @@ static int hdmi_start_flt(struct dw_hdmi_qp *hdmi, u8 rate)
 			ln3 = (reg_val >> 4) & 0xf;
 
 			if (!ln0 && !ln1 && !ln2 && !ln3) {
-				printf("ltsp!\n");
+				printf("goto ltsp\n");
 				ltsp = true;
 				hdmi_writel(hdmi, 0, FLT_CONFIG1);
 			} else if ((ln0 == 0xf) | (ln1 == 0xf) | (ln2 == 0xf) | (ln3 == 0xf)) {
-				printf("lts4!\n");
+				printf("goto lts4\n");
 				break;
 			} else if ((ln0 == 0xe) | (ln1 == 0xe) | (ln2 == 0xe) | (ln3 == 0xe)) {
-				printf("ffe!\n");
+				printf("goto ffe\n");
 				break;
 			} else {
 				value = (ln3 << 16) | (ln2 << 12) | (ln1 << 8) | (ln0 << 4) | 0xf;
@@ -771,12 +914,17 @@ static int hdmi_start_flt(struct dw_hdmi_qp *hdmi, u8 rate)
 		drm_scdc_writeb(&hdmi->adap, 0x10, val);
 
 		if ((val & BIT(4)) && ltsp) {
+			hdmi_modb(hdmi, 0, AVP_DATAPATH_VIDEO_SWDISABLE, GLOBAL_SWDISABLE);
 			printf("flt success\n");
 			break;
 		}
 	}
 
-	hdmi_modb(hdmi, 0, BIT(6), 0x44);
+	if (i < 0) {
+		printf("flt time out\n");
+		return -ETIMEDOUT;
+	}
+
 	return 0;
 }
 
@@ -784,19 +932,18 @@ static int hdmi_start_flt(struct dw_hdmi_qp *hdmi, u8 rate)
 
 static void hdmi_set_op_mode(struct dw_hdmi_qp *hdmi,
 			     struct dw_hdmi_link_config *link_cfg,
-			     bool scdc_support)
+			     struct display_state *state,
+			     struct rockchip_connector *conn)
 {
 	int frl_rate;
-	int i;
+	int i, ret;
 
-	hdmi_writel(hdmi, 0, FLT_CONFIG0);
-	if (scdc_support)
-		drm_scdc_writeb(&hdmi->adap, 0x31, 0);
-	mdelay(200);
 	if (!link_cfg->frl_mode) {
 		printf("dw hdmi qp use tmds mode\n");
 		hdmi_modb(hdmi, 0, OPMODE_FRL, LINK_CONFIG0);
 		hdmi_modb(hdmi, 0, OPMODE_FRL_4LANES, LINK_CONFIG0);
+		hdmi->phy.ops->init(conn, hdmi->rk_hdmi, state);
+		hdmi->phy.enabled = true;
 		return;
 	}
 
@@ -809,16 +956,28 @@ static void hdmi_set_op_mode(struct dw_hdmi_qp *hdmi,
 	hdmi_modb(hdmi, 1, OPMODE_FRL, LINK_CONFIG0);
 
 	frl_rate = link_cfg->frl_lanes * link_cfg->rate_per_lane;
-	hdmi_start_flt(hdmi, frl_rate);
+	hdmi->phy.ops->init(conn, hdmi->rk_hdmi, state);
+	hdmi->phy.enabled = true;
+
+	mdelay(200);
+	ret = hdmi_start_flt(hdmi, frl_rate);
+	if (ret) {
+		hdmi_writel(hdmi, 0, FLT_CONFIG0);
+		drm_scdc_writeb(&hdmi->adap, 0x31, 0);
+		hdmi_modb(hdmi, 0, AVP_DATAPATH_VIDEO_SWDISABLE, GLOBAL_SWDISABLE);
+		return;
+	}
 
-	for (i = 0; i < 50; i++) {
+	for (i = 0; i < 200; i++) {
 		hdmi_modb(hdmi, PKTSCHED_NULL_TX_EN, PKTSCHED_NULL_TX_EN, PKTSCHED_PKT_EN);
-		mdelay(1);
+		udelay(50);
 		hdmi_modb(hdmi, 0, PKTSCHED_NULL_TX_EN, PKTSCHED_PKT_EN);
+		udelay(50);
 	}
 }
 
 static int dw_hdmi_setup(struct dw_hdmi_qp *hdmi,
+			 struct rockchip_connector *conn,
 			 struct drm_display_mode *mode,
 			 struct display_state *state)
 {
@@ -886,10 +1045,7 @@ static int dw_hdmi_setup(struct dw_hdmi_qp *hdmi,
 	hdmi->hdmi_data.video_mode.mdataenablepolarity = true;
 
 	/* HDMI Initialization Step B.2 */
-	ret = hdmi->phy.ops->init(hdmi->rk_hdmi, state);
-	if (ret)
-		return ret;
-	hdmi->phy.enabled = true;
+	hdmi->phy.ops->set_pll(conn, hdmi->rk_hdmi, state);
 
 	rk3588_set_grf_cfg(hdmi->rk_hdmi);
 	link_cfg = dw_hdmi_rockchip_get_link_cfg(hdmi->rk_hdmi);
@@ -899,6 +1055,10 @@ static int dw_hdmi_setup(struct dw_hdmi_qp *hdmi,
 		printf("%s HDMI mode\n", __func__);
 		hdmi_modb(hdmi, 0, OPMODE_DVI, LINK_CONFIG0);
 		hdmi_modb(hdmi, HDCP2_BYPASS, HDCP2_BYPASS, HDCP2LOGIC_CONFIG0);
+		hdmi_modb(hdmi, KEEPOUT_REKEY_ALWAYS, KEEPOUT_REKEY_CFG, FRAME_COMPOSER_CONFIG9);
+		hdmi_writel(hdmi, 0, FLT_CONFIG0);
+		if (hdmi_info->scdc.supported)
+			drm_scdc_writeb(&hdmi->adap, 0x31, 0);
 		if (!link_cfg->frl_mode) {
 			if (vmode->mtmdsclock > HDMI14_MAX_TMDSCLK) {
 				drm_scdc_readb(&hdmi->adap, SCDC_SINK_VERSION, &bytes);
@@ -907,6 +1067,7 @@ static int dw_hdmi_setup(struct dw_hdmi_qp *hdmi,
 				drm_scdc_set_high_tmds_clock_ratio(&hdmi->adap, 1);
 				drm_scdc_set_scrambling(&hdmi->adap, 1);
 				hdmi_writel(hdmi, 1, SCRAMB_CONFIG0);
+				mdelay(100);
 			} else {
 				if (hdmi_info->scdc.supported) {
 					drm_scdc_set_high_tmds_clock_ratio(&hdmi->adap, 0);
@@ -917,10 +1078,20 @@ static int dw_hdmi_setup(struct dw_hdmi_qp *hdmi,
 		}
 		/* HDMI Initialization Step F - Configure AVI InfoFrame */
 		hdmi_config_AVI(hdmi, mode);
+		hdmi_config_vendor_specific_infoframe(hdmi, mode);
 		hdmi_config_CVTEM(hdmi, link_cfg);
-		hdmi_set_op_mode(hdmi, link_cfg, hdmi_info->scdc.supported);
+		hdmi_set_op_mode(hdmi, link_cfg, state, conn);
+		/* clear avmute */
+		mdelay(50);
+		hdmi_writel(hdmi, 2, PKTSCHED_PKT_CONTROL0);
+		hdmi_modb(hdmi, PKTSCHED_GCP_TX_EN, PKTSCHED_GCP_TX_EN,
+			  PKTSCHED_PKT_EN);
 	} else {
 		hdmi_modb(hdmi, OPMODE_DVI, OPMODE_DVI, LINK_CONFIG0);
+		ret = hdmi->phy.ops->init(conn, hdmi->rk_hdmi, state);
+		if (ret)
+			return ret;
+		hdmi->phy.enabled = true;
 		printf("%s DVI mode\n", __func__);
 	}
 
@@ -944,24 +1115,15 @@ int dw_hdmi_detect_hotplug(struct dw_hdmi_qp *hdmi,
 	return ret;
 }
 
-int rockchip_dw_hdmi_qp_pre_init(struct display_state *state)
+int rockchip_dw_hdmi_qp_init(struct rockchip_connector *conn, struct display_state *state)
 {
 	struct connector_state *conn_state = &state->conn_state;
-
-	conn_state->type = DRM_MODE_CONNECTOR_HDMIA;
-
-	return 0;
-}
-
-int rockchip_dw_hdmi_qp_init(struct display_state *state)
-{
-	struct connector_state *conn_state = &state->conn_state;
-	const struct rockchip_connector *connector = conn_state->connector;
-	const struct dw_hdmi_plat_data *pdata = connector->data;
-	void *rk_hdmi = dev_get_priv(conn_state->dev);
+	const struct dw_hdmi_plat_data *pdata =
+		(const struct dw_hdmi_plat_data *)dev_get_driver_data(conn->dev);
+	void *rk_hdmi = dev_get_priv(conn->dev);
 	struct dw_hdmi_qp *hdmi;
 	struct drm_display_mode *mode_buf;
-	ofnode hdmi_node = conn_state->node;
+	ofnode hdmi_node = conn->dev->node;
 	struct device_node *ddc_node;
 
 	hdmi = malloc(sizeof(struct dw_hdmi_qp));
@@ -981,7 +1143,7 @@ int rockchip_dw_hdmi_qp_init(struct display_state *state)
 
 	memset(mode_buf, 0, MODE_LEN * sizeof(struct drm_display_mode));
 
-	hdmi->regs = dev_read_addr_ptr(conn_state->dev);
+	hdmi->regs = dev_read_addr_ptr(conn->dev);
 
 	ddc_node = of_parse_phandle(ofnode_to_np(hdmi_node), "ddc-i2c-bus", 0);
 	if (ddc_node) {
@@ -1014,7 +1176,7 @@ int rockchip_dw_hdmi_qp_init(struct display_state *state)
 	hdmi->plat_data = pdata;
 	hdmi->edid_data.mode_buf = mode_buf;
 
-	conn_state->private = hdmi;
+	conn->data = hdmi;
 
 	dw_hdmi_detect_phy(hdmi);
 	hdmi_writel(hdmi, 0, MAINUNIT_0_INT_MASK_N);
@@ -1026,10 +1188,9 @@ int rockchip_dw_hdmi_qp_init(struct display_state *state)
 	return 0;
 }
 
-void rockchip_dw_hdmi_qp_deinit(struct display_state *state)
+void rockchip_dw_hdmi_qp_deinit(struct rockchip_connector *conn, struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
-	struct dw_hdmi_qp *hdmi = conn_state->private;
+	struct dw_hdmi_qp *hdmi = conn->data;
 
 	if (hdmi->i2c)
 		free(hdmi->i2c);
@@ -1039,24 +1200,25 @@ void rockchip_dw_hdmi_qp_deinit(struct display_state *state)
 		free(hdmi);
 }
 
-int rockchip_dw_hdmi_qp_prepare(struct display_state *state)
+int rockchip_dw_hdmi_qp_prepare(struct rockchip_connector *conn, struct display_state *state)
 {
 	return 0;
 }
 
-static void dw_hdmi_disable(struct dw_hdmi_qp *hdmi, struct display_state *state)
+static void dw_hdmi_disable(struct rockchip_connector *conn, struct dw_hdmi_qp *hdmi,
+			    struct display_state *state)
 {
 	if (hdmi->phy.enabled) {
-		hdmi->phy.ops->disable(hdmi->rk_hdmi, state);
+		hdmi->phy.ops->disable(conn, hdmi->rk_hdmi, state);
 		hdmi->phy.enabled = false;
 	}
 }
 
-int rockchip_dw_hdmi_qp_enable(struct display_state *state)
+int rockchip_dw_hdmi_qp_enable(struct rockchip_connector *conn, struct display_state *state)
 {
 	struct connector_state *conn_state = &state->conn_state;
 	struct drm_display_mode *mode = &conn_state->mode;
-	struct dw_hdmi_qp *hdmi = conn_state->private;
+	struct dw_hdmi_qp *hdmi = conn->data;
 
 	if (!hdmi)
 		return -EFAULT;
@@ -1064,26 +1226,25 @@ int rockchip_dw_hdmi_qp_enable(struct display_state *state)
 	/* Store the display mode for plugin/DKMS poweron events */
 	memcpy(&hdmi->previous_mode, mode, sizeof(hdmi->previous_mode));
 
-	dw_hdmi_setup(hdmi, mode, state);
+	dw_hdmi_setup(hdmi, conn, mode, state);
 
 	return 0;
 }
 
-int rockchip_dw_hdmi_qp_disable(struct display_state *state)
+int rockchip_dw_hdmi_qp_disable(struct rockchip_connector *conn, struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
-	struct dw_hdmi_qp *hdmi = conn_state->private;
+	struct dw_hdmi_qp *hdmi = conn->data;
 
-	dw_hdmi_disable(hdmi, state);
+	dw_hdmi_disable(conn, hdmi, state);
 	return 0;
 }
 
-int rockchip_dw_hdmi_qp_get_timing(struct display_state *state)
+int rockchip_dw_hdmi_qp_get_timing(struct rockchip_connector *conn, struct display_state *state)
 {
 	int ret, i;
 	struct connector_state *conn_state = &state->conn_state;
 	struct drm_display_mode *mode = &conn_state->mode;
-	struct dw_hdmi_qp *hdmi = conn_state->private;
+	struct dw_hdmi_qp *hdmi = conn->data;
 	struct edid *edid = (struct edid *)conn_state->edid;
 	unsigned int bus_format;
 	unsigned long enc_out_encoding;
@@ -1123,7 +1284,7 @@ int rockchip_dw_hdmi_qp_get_timing(struct display_state *state)
 			drm_mode_vrefresh(&hdmi->edid_data.mode_buf[i]);
 
 	drm_mode_sort(&hdmi->edid_data);
-	dw_hdmi_qp_selete_output(&hdmi->edid_data, conn_state, &bus_format,
+	dw_hdmi_qp_selete_output(&hdmi->edid_data, conn, &bus_format,
 				 overscan, hdmi->dev_type,
 				 hdmi->output_bus_format_rgb, hdmi->rk_hdmi,
 				 state);
@@ -1173,11 +1334,10 @@ int rockchip_dw_hdmi_qp_get_timing(struct display_state *state)
 	return 0;
 }
 
-int rockchip_dw_hdmi_qp_detect(struct display_state *state)
+int rockchip_dw_hdmi_qp_detect(struct rockchip_connector *conn, struct display_state *state)
 {
 	int ret;
-	struct connector_state *conn_state = &state->conn_state;
-	struct dw_hdmi_qp *hdmi = conn_state->private;
+	struct dw_hdmi_qp *hdmi = conn->data;
 
 	if (!hdmi)
 		return -EFAULT;
@@ -1187,11 +1347,11 @@ int rockchip_dw_hdmi_qp_detect(struct display_state *state)
 	return ret;
 }
 
-int rockchip_dw_hdmi_qp_get_edid(struct display_state *state)
+int rockchip_dw_hdmi_qp_get_edid(struct rockchip_connector *conn, struct display_state *state)
 {
 	int ret;
 	struct connector_state *conn_state = &state->conn_state;
-	struct dw_hdmi_qp *hdmi = conn_state->private;
+	struct dw_hdmi_qp *hdmi = conn->data;
 
 	ret = drm_do_get_edid(&hdmi->adap, conn_state->edid);
 
diff --git a/drivers/video/drm/dw_hdmi_qp.h b/drivers/video/drm/dw_hdmi_qp.h
index 3c54b13..e79c286 100644
--- a/drivers/video/drm/dw_hdmi_qp.h
+++ b/drivers/video/drm/dw_hdmi_qp.h
@@ -18,6 +18,7 @@
 #define GLOBAL_SWRESET_REQUEST				0x40
 #define EARCRX_CMDC_SWINIT_P				BIT(27)
 #define AVP_DATAPATH_PACKET_AUDIO_SWINIT_P		BIT(10)
+#define AVP_DATAPATH_SWINIT_P				BIT(6)
 #define GLOBAL_SWDISABLE				0x44
 #define CEC_SWDISABLE					BIT(17)
 #define AVP_DATAPATH_PACKET_AUDIO_SWDISABLE		BIT(10)
@@ -134,6 +135,8 @@
 #define FRAME_COMPOSER_CONFIG7				0x85c
 #define FRAME_COMPOSER_CONFIG8				0x860
 #define FRAME_COMPOSER_CONFIG9				0x864
+#define KEEPOUT_REKEY_CFG				GENMASK(9, 8)
+#define KEEPOUT_REKEY_ALWAYS				(0x2 << 8)
 #define FRAME_COMPOSER_CONTROL0				0x86c
 /* Video Monitor Registers */
 #define VIDEO_MONITOR_CONFIG0				0x880
@@ -191,6 +194,7 @@
 #define PKTSCHED_PRQUEUE2_CONFIG2			0xa94
 #define PKTSCHED_PKT_CONFIG0				0xa98
 #define PKTSCHED_PKT_CONFIG1				0xa9c
+#define PKTSCHED_VSI_FIELDRATE				BIT(14)
 #define PKTSCHED_AVI_FIELDRATE				BIT(12)
 #define PKTSCHED_PKT_CONFIG2				0xaa0
 #define PKTSCHED_PKT_CONFIG3				0xaa4
@@ -198,6 +202,7 @@
 #define PKTSCHED_DRMI_TX_EN				BIT(17)
 #define PKTSCHED_AUDI_TX_EN				BIT(15)
 #define PKTSCHED_AVI_TX_EN				BIT(13)
+#define PKTSCHED_VSI_TX_EN				BIT(12)
 #define PKTSCHED_EMP_CVTEM_TX_EN			BIT(10)
 #define PKTSCHED_AMD_TX_EN				BIT(8)
 #define PKTSCHED_GCP_TX_EN				BIT(3)
@@ -928,7 +933,7 @@ void rk3588_set_grf_cfg(void *data);
 void dw_hdmi_qp_set_iomux(void *data);
 struct dw_hdmi_link_config *dw_hdmi_rockchip_get_link_cfg(void *data);
 void dw_hdmi_qp_selete_output(struct hdmi_edid_data *edid_data,
-			      struct connector_state *conn_state,
+			      struct rockchip_connector *conn,
 			      unsigned int *bus_format,
 			      struct overscan *overscan,
 			      enum dw_hdmi_devtype dev_type,
diff --git a/drivers/video/drm/dw_mipi_dsi.c b/drivers/video/drm/dw_mipi_dsi.c
index ca2671d..2a490d1 100644
--- a/drivers/video/drm/dw_mipi_dsi.c
+++ b/drivers/video/drm/dw_mipi_dsi.c
@@ -230,6 +230,7 @@ struct mipi_dphy {
 };
 
 struct dw_mipi_dsi {
+	struct rockchip_connector connector;
 	struct udevice *dev;
 	void *base;
 	void *grf;
@@ -1086,22 +1087,13 @@ static void dw_mipi_dsi_clear_err(struct dw_mipi_dsi *dsi)
 	dsi_write(dsi, DSI_INT_MSK1, 0);
 }
 
-static int dw_mipi_dsi_connector_pre_init(struct display_state *state)
+static int dw_mipi_dsi_connector_init(struct rockchip_connector *conn, struct display_state *state)
 {
 	struct connector_state *conn_state = &state->conn_state;
-
-	conn_state->type = DRM_MODE_CONNECTOR_DSI;
-
-	return 0;
-}
-
-static int dw_mipi_dsi_connector_init(struct display_state *state)
-{
-	struct connector_state *conn_state = &state->conn_state;
-	struct dw_mipi_dsi *dsi = dev_get_priv(conn_state->dev);
+	struct dw_mipi_dsi *dsi = dev_get_priv(conn->dev);
 
 	conn_state->disp_info  = rockchip_get_disp_info(conn_state->type, dsi->id);
-	dsi->dphy.phy = conn_state->phy;
+	dsi->dphy.phy = conn->phy;
 
 	conn_state->output_mode = ROCKCHIP_OUT_MODE_P888;
 	conn_state->color_space = V4L2_COLORSPACE_DEFAULT;
@@ -1266,11 +1258,12 @@ static void dw_mipi_dsi_pre_enable(struct dw_mipi_dsi *dsi)
 		dw_mipi_dsi_pre_enable(dsi->slave);
 }
 
-static int dw_mipi_dsi_connector_prepare(struct display_state *state)
+static int dw_mipi_dsi_connector_prepare(struct rockchip_connector *conn,
+					 struct display_state *state)
 {
 	struct connector_state *conn_state = &state->conn_state;
 	struct crtc_state *crtc_state = &state->crtc_state;
-	struct dw_mipi_dsi *dsi = dev_get_priv(conn_state->dev);
+	struct dw_mipi_dsi *dsi = dev_get_priv(conn->dev);
 	unsigned long lane_rate;
 
 	memcpy(&dsi->mode, &conn_state->mode, sizeof(struct drm_display_mode));
@@ -1298,28 +1291,28 @@ static int dw_mipi_dsi_connector_prepare(struct display_state *state)
 	return 0;
 }
 
-static void dw_mipi_dsi_connector_unprepare(struct display_state *state)
+static void dw_mipi_dsi_connector_unprepare(struct rockchip_connector *conn,
+					    struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
-	struct dw_mipi_dsi *dsi = dev_get_priv(conn_state->dev);
+	struct dw_mipi_dsi *dsi = dev_get_priv(conn->dev);
 
 	dw_mipi_dsi_post_disable(dsi);
 }
 
-static int dw_mipi_dsi_connector_enable(struct display_state *state)
+static int dw_mipi_dsi_connector_enable(struct rockchip_connector *conn,
+					struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
-	struct dw_mipi_dsi *dsi = dev_get_priv(conn_state->dev);
+	struct dw_mipi_dsi *dsi = dev_get_priv(conn->dev);
 
 	dw_mipi_dsi_enable(dsi);
 
 	return 0;
 }
 
-static int dw_mipi_dsi_connector_disable(struct display_state *state)
+static int dw_mipi_dsi_connector_disable(struct rockchip_connector *conn,
+					 struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
-	struct dw_mipi_dsi *dsi = dev_get_priv(conn_state->dev);
+	struct dw_mipi_dsi *dsi = dev_get_priv(conn->dev);
 
 	dw_mipi_dsi_disable(dsi);
 
@@ -1327,7 +1320,6 @@ static int dw_mipi_dsi_connector_disable(struct display_state *state)
 }
 
 static const struct rockchip_connector_funcs dw_mipi_dsi_connector_funcs = {
-	.pre_init = dw_mipi_dsi_connector_pre_init,
 	.init = dw_mipi_dsi_connector_init,
 	.prepare = dw_mipi_dsi_connector_prepare,
 	.unprepare = dw_mipi_dsi_connector_unprepare,
@@ -1338,9 +1330,8 @@ static const struct rockchip_connector_funcs dw_mipi_dsi_connector_funcs = {
 static int dw_mipi_dsi_probe(struct udevice *dev)
 {
 	struct dw_mipi_dsi *dsi = dev_get_priv(dev);
-	const struct rockchip_connector *connector =
-		(const struct rockchip_connector *)dev_get_driver_data(dev);
-	const struct dw_mipi_dsi_plat_data *pdata = connector->data;
+	const struct dw_mipi_dsi_plat_data *pdata =
+		(const struct dw_mipi_dsi_plat_data *)dev_get_driver_data(dev);
 	int id;
 
 	dsi->base = dev_read_addr_ptr(dev);
@@ -1357,6 +1348,9 @@ static int dw_mipi_dsi_probe(struct udevice *dev)
 	dsi->id = id;
 	dsi->data_swap = dev_read_bool(dsi->dev, "rockchip,data-swap");
 
+	rockchip_connector_bind(&dsi->connector, dev, dsi->id, &dw_mipi_dsi_connector_funcs, NULL,
+				DRM_MODE_CONNECTOR_DSI);
+
 	return 0;
 }
 
@@ -1374,11 +1368,6 @@ static const struct dw_mipi_dsi_plat_data px30_mipi_dsi_plat_data = {
 	.max_bit_rate_per_lane = 1000000000UL,
 };
 
-static const struct rockchip_connector px30_mipi_dsi_driver_data = {
-	 .funcs = &dw_mipi_dsi_connector_funcs,
-	 .data = &px30_mipi_dsi_plat_data,
-};
-
 static const u32 rk1808_dsi_grf_reg_fields[MAX_FIELDS] = {
 	[MASTERSLAVEZ]          = GRF_REG_FIELD(0x0440,  8,  8),
 	[DPIUPDATECFG]          = GRF_REG_FIELD(0x0440,  7,  7),
@@ -1394,11 +1383,6 @@ static const struct dw_mipi_dsi_plat_data rk1808_mipi_dsi_plat_data = {
 	.max_bit_rate_per_lane = 2000000000UL,
 };
 
-static const struct rockchip_connector rk1808_mipi_dsi_driver_data = {
-	 .funcs = &dw_mipi_dsi_connector_funcs,
-	 .data = &rk1808_mipi_dsi_plat_data,
-};
-
 static const u32 rk3128_dsi_grf_reg_fields[MAX_FIELDS] = {
 	[FORCETXSTOPMODE]	= GRF_REG_FIELD(0x0150, 10, 13),
 	[FORCERXMODE]		= GRF_REG_FIELD(0x0150,  9,  9),
@@ -1412,11 +1396,6 @@ static const struct dw_mipi_dsi_plat_data rk3128_mipi_dsi_plat_data = {
 	.max_bit_rate_per_lane = 1000000000UL,
 };
 
-static const struct rockchip_connector rk3128_mipi_dsi_driver_data = {
-	 .funcs = &dw_mipi_dsi_connector_funcs,
-	 .data = &rk3128_mipi_dsi_plat_data,
-};
-
 static const u32 rk3288_dsi0_grf_reg_fields[MAX_FIELDS] = {
 	[DPICOLORM]		= GRF_REG_FIELD(0x025c,  8,  8),
 	[DPISHUTDN]		= GRF_REG_FIELD(0x025c,  7,  7),
@@ -1449,11 +1428,6 @@ static const struct dw_mipi_dsi_plat_data rk3288_mipi_dsi_plat_data = {
 	.max_bit_rate_per_lane = 1500000000UL,
 };
 
-static const struct rockchip_connector rk3288_mipi_dsi_driver_data = {
-	 .funcs = &dw_mipi_dsi_connector_funcs,
-	 .data = &rk3288_mipi_dsi_plat_data,
-};
-
 static const u32 rk3366_dsi_grf_reg_fields[MAX_FIELDS] = {
 	[VOPSEL]		= GRF_REG_FIELD(0x0400,  2,  2),
 	[DPIUPDATECFG]		= GRF_REG_FIELD(0x0410,  9,  9),
@@ -1469,11 +1443,6 @@ static const struct dw_mipi_dsi_plat_data rk3366_mipi_dsi_plat_data = {
 	.max_bit_rate_per_lane = 1000000000UL,
 };
 
-static const struct rockchip_connector rk3366_mipi_dsi_driver_data = {
-	 .funcs = &dw_mipi_dsi_connector_funcs,
-	 .data = &rk3366_mipi_dsi_plat_data,
-};
-
 static const u32 rk3368_dsi_grf_reg_fields[MAX_FIELDS] = {
 	[DPIUPDATECFG]		= GRF_REG_FIELD(0x0418,  7,  7),
 	[DPICOLORM]		= GRF_REG_FIELD(0x0418,  3,  3),
@@ -1488,11 +1457,6 @@ static const struct dw_mipi_dsi_plat_data rk3368_mipi_dsi_plat_data = {
 	.max_bit_rate_per_lane = 1000000000UL,
 };
 
-static const struct rockchip_connector rk3368_mipi_dsi_driver_data = {
-	 .funcs = &dw_mipi_dsi_connector_funcs,
-	 .data = &rk3368_mipi_dsi_plat_data,
-};
-
 static const u32 rk3399_dsi0_grf_reg_fields[MAX_FIELDS] = {
 	[DPIUPDATECFG]		= GRF_REG_FIELD(0x6224, 15, 15),
 	[DPISHUTDN]		= GRF_REG_FIELD(0x6224, 14, 14),
@@ -1525,11 +1489,6 @@ static const struct dw_mipi_dsi_plat_data rk3399_mipi_dsi_plat_data = {
 	.max_bit_rate_per_lane = 1500000000UL,
 };
 
-static const struct rockchip_connector rk3399_mipi_dsi_driver_data = {
-	 .funcs = &dw_mipi_dsi_connector_funcs,
-	 .data = &rk3399_mipi_dsi_plat_data,
-};
-
 static const u32 rk3568_dsi0_grf_reg_fields[MAX_FIELDS] = {
 	[DPIUPDATECFG]		= GRF_REG_FIELD(0x0360,  2,  2),
 	[DPICOLORM]		= GRF_REG_FIELD(0x0360,  1,  1),
@@ -1555,10 +1514,6 @@ static const struct dw_mipi_dsi_plat_data rk3568_mipi_dsi_plat_data = {
 	.dsi1_grf_reg_fields = rk3568_dsi1_grf_reg_fields,
 	.max_bit_rate_per_lane = 1200000000UL,
 };
-static const struct rockchip_connector rk3568_mipi_dsi_driver_data = {
-	 .funcs = &dw_mipi_dsi_connector_funcs,
-	 .data = &rk3568_mipi_dsi_plat_data,
-};
 
 static const u32 rv1108_dsi_grf_reg_fields[MAX_FIELDS] = {
 	[DPICOLORM]		= GRF_REG_FIELD(0x0410,  7,  7),
@@ -1574,11 +1529,6 @@ static const struct dw_mipi_dsi_plat_data rv1108_mipi_dsi_plat_data = {
 	.max_bit_rate_per_lane = 1000000000UL,
 };
 
-static const struct rockchip_connector rv1108_mipi_dsi_driver_data = {
-	 .funcs = &dw_mipi_dsi_connector_funcs,
-	 .data = &rv1108_mipi_dsi_plat_data,
-};
-
 static const u32 rv1126_dsi_grf_reg_fields[MAX_FIELDS] = {
 	[DPIUPDATECFG]		= GRF_REG_FIELD(0x0008,  5,  5),
 	[DPISHUTDN]		= GRF_REG_FIELD(0x0008,  4,  4),
@@ -1593,51 +1543,46 @@ static const struct dw_mipi_dsi_plat_data rv1126_mipi_dsi_plat_data = {
 	.max_bit_rate_per_lane = 1000000000UL,
 };
 
-static const struct rockchip_connector rv1126_mipi_dsi_driver_data = {
-	 .funcs = &dw_mipi_dsi_connector_funcs,
-	 .data = &rv1126_mipi_dsi_plat_data,
-};
-
 static const struct udevice_id dw_mipi_dsi_ids[] = {
 	{
 		.compatible = "rockchip,px30-mipi-dsi",
-		.data = (ulong)&px30_mipi_dsi_driver_data,
+		.data = (ulong)&px30_mipi_dsi_plat_data,
 	},
 	{
 		.compatible = "rockchip,rk1808-mipi-dsi",
-		.data = (ulong)&rk1808_mipi_dsi_driver_data,
+		.data = (ulong)&rk1808_mipi_dsi_plat_data,
 	},
 	{
 		.compatible = "rockchip,rk3128-mipi-dsi",
-		.data = (ulong)&rk3128_mipi_dsi_driver_data,
+		.data = (ulong)&rk3128_mipi_dsi_plat_data,
 	},
 	{
 		.compatible = "rockchip,rk3288-mipi-dsi",
-		.data = (ulong)&rk3288_mipi_dsi_driver_data,
+		.data = (ulong)&rk3288_mipi_dsi_plat_data,
 	},
 	{
 		.compatible = "rockchip,rk3366-mipi-dsi",
-		.data = (ulong)&rk3366_mipi_dsi_driver_data,
+		.data = (ulong)&rk3366_mipi_dsi_plat_data,
 	},
 	{
 		.compatible = "rockchip,rk3368-mipi-dsi",
-		.data = (ulong)&rk3368_mipi_dsi_driver_data,
+		.data = (ulong)&rk3368_mipi_dsi_plat_data,
 	},
 	{
 		.compatible = "rockchip,rk3399-mipi-dsi",
-		.data = (ulong)&rk3399_mipi_dsi_driver_data,
+		.data = (ulong)&rk3399_mipi_dsi_plat_data,
 	},
 	{
 		.compatible = "rockchip,rk3568-mipi-dsi",
-		.data = (ulong)&rk3568_mipi_dsi_driver_data,
+		.data = (ulong)&rk3568_mipi_dsi_plat_data,
 	},
 	{
 		.compatible = "rockchip,rv1108-mipi-dsi",
-		.data = (ulong)&rv1108_mipi_dsi_driver_data,
+		.data = (ulong)&rv1108_mipi_dsi_plat_data,
 	},
 	{
 		.compatible = "rockchip,rv1126-mipi-dsi",
-		.data = (ulong)&rv1126_mipi_dsi_driver_data,
+		.data = (ulong)&rv1126_mipi_dsi_plat_data,
 	},
 	{}
 };
diff --git a/drivers/video/drm/dw_mipi_dsi2.c b/drivers/video/drm/dw_mipi_dsi2.c
index 81a0a61..1ee8652 100644
--- a/drivers/video/drm/dw_mipi_dsi2.c
+++ b/drivers/video/drm/dw_mipi_dsi2.c
@@ -22,6 +22,7 @@
 #include <asm/arch-rockchip/clock.h>
 #include <linux/iopoll.h>
 
+#include "rockchip_bridge.h"
 #include "rockchip_display.h"
 #include "rockchip_crtc.h"
 #include "rockchip_connector.h"
@@ -262,6 +263,7 @@ struct mipi_dphy_configure {
 };
 
 struct dw_mipi_dsi2 {
+	struct rockchip_connector connector;
 	struct udevice *dev;
 	void *base;
 	void *grf;
@@ -287,6 +289,7 @@ struct dw_mipi_dsi2 {
 	struct drm_display_mode mode;
 	bool data_swap;
 
+	struct mipi_dsi_device *device;
 	struct mipi_dphy_configure mipi_dphy_cfg;
 	const struct dw_mipi_dsi2_plat_data *pdata;
 	struct drm_dsc_picture_parameter_set *pps;
@@ -687,28 +690,61 @@ static void dw_mipi_dsi2_post_disable(struct dw_mipi_dsi2 *dsi2)
 		dw_mipi_dsi2_post_disable(dsi2->slave);
 }
 
-static int dw_mipi_dsi2_connector_pre_init(struct display_state *state)
+static int dw_mipi_dsi2_connector_pre_init(struct rockchip_connector *conn,
+					   struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
+	struct dw_mipi_dsi2 *dsi2 = dev_get_priv(conn->dev);
+	struct mipi_dsi_host *host = dev_get_platdata(dsi2->dev);
+	struct mipi_dsi_device *device;
+	char name[20];
+	struct udevice *dev;
+
+	device = calloc(1, sizeof(struct dw_mipi_dsi2));
+	if (!device)
+		return -ENOMEM;
+
+	if (conn->bridge)
+		dev = conn->bridge->dev;
+	else if (conn->panel)
+		dev = conn->panel->dev;
+	else
+		return -ENODEV;
+
+	device->dev = dev;
+	device->host = host;
+	device->lanes = dev_read_u32_default(dev, "dsi,lanes", 4);
+	device->channel = dev_read_u32_default(dev, "reg", 0);
+	device->format = dev_read_u32_default(dev, "dsi,format",
+					      MIPI_DSI_FMT_RGB888);
+	device->mode_flags = dev_read_u32_default(dev, "dsi,flags",
+						  MIPI_DSI_MODE_VIDEO |
+						  MIPI_DSI_MODE_VIDEO_BURST |
+						  MIPI_DSI_MODE_VIDEO_HBP |
+						  MIPI_DSI_MODE_LPM |
+						  MIPI_DSI_MODE_EOT_PACKET);
+
+	sprintf(name, "%s.%d", host->dev->name, device->channel);
+	device_set_name(dev, name);
+	dsi2->device = device;
+	dev->parent_platdata = device;
 
-	conn_state->type = DRM_MODE_CONNECTOR_DSI;
+	mipi_dsi_attach(dsi2->device);
 
 	return 0;
 }
 
-static int dw_mipi_dsi2_connector_init(struct display_state *state)
+static int dw_mipi_dsi2_connector_init(struct rockchip_connector *conn, struct display_state *state)
 {
 	struct connector_state *conn_state = &state->conn_state;
 	struct crtc_state *cstate = &state->crtc_state;
-	struct dw_mipi_dsi2 *dsi2 = dev_get_priv(conn_state->dev);
+	struct dw_mipi_dsi2 *dsi2 = dev_get_priv(conn->dev);
 	struct rockchip_phy *phy = NULL;
 	struct udevice *phy_dev;
 	struct udevice *dev;
 	int ret;
 
-
 	conn_state->disp_info  = rockchip_get_disp_info(conn_state->type, dsi2->id);
-	dsi2->dcphy.phy = conn_state->phy;
+	dsi2->dcphy.phy = conn->phy;
 
 	conn_state->output_mode = ROCKCHIP_OUT_MODE_P888;
 	conn_state->color_space = V4L2_COLORSPACE_DEFAULT;
@@ -1010,10 +1046,11 @@ static void dw_mipi_dsi2_pre_enable(struct dw_mipi_dsi2 *dsi2)
 		dw_mipi_dsi2_pre_enable(dsi2->slave);
 }
 
-static int dw_mipi_dsi2_connector_prepare(struct display_state *state)
+static int dw_mipi_dsi2_connector_prepare(struct rockchip_connector *conn,
+					  struct display_state *state)
 {
+	struct dw_mipi_dsi2 *dsi2 = dev_get_priv(conn->dev);
 	struct connector_state *conn_state = &state->conn_state;
-	struct dw_mipi_dsi2 *dsi2 = dev_get_priv(conn_state->dev);
 	unsigned long lane_rate;
 
 	memcpy(&dsi2->mode, &conn_state->mode, sizeof(struct drm_display_mode));
@@ -1037,28 +1074,28 @@ static int dw_mipi_dsi2_connector_prepare(struct display_state *state)
 	return 0;
 }
 
-static void dw_mipi_dsi2_connector_unprepare(struct display_state *state)
+static void dw_mipi_dsi2_connector_unprepare(struct rockchip_connector *conn,
+					     struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
-	struct dw_mipi_dsi2 *dsi2 = dev_get_priv(conn_state->dev);
+	struct dw_mipi_dsi2 *dsi2 = dev_get_priv(conn->dev);
 
 	dw_mipi_dsi2_post_disable(dsi2);
 }
 
-static int dw_mipi_dsi2_connector_enable(struct display_state *state)
+static int dw_mipi_dsi2_connector_enable(struct rockchip_connector *conn,
+					 struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
-	struct dw_mipi_dsi2 *dsi2 = dev_get_priv(conn_state->dev);
+	struct dw_mipi_dsi2 *dsi2 = dev_get_priv(conn->dev);
 
 	dw_mipi_dsi2_enable(dsi2);
 
 	return 0;
 }
 
-static int dw_mipi_dsi2_connector_disable(struct display_state *state)
+static int dw_mipi_dsi2_connector_disable(struct rockchip_connector *conn,
+					  struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
-	struct dw_mipi_dsi2 *dsi2 = dev_get_priv(conn_state->dev);
+	struct dw_mipi_dsi2 *dsi2 = dev_get_priv(conn->dev);
 
 	dw_mipi_dsi2_disable(dsi2);
 
@@ -1077,9 +1114,8 @@ static const struct rockchip_connector_funcs dw_mipi_dsi2_connector_funcs = {
 static int dw_mipi_dsi2_probe(struct udevice *dev)
 {
 	struct dw_mipi_dsi2 *dsi2 = dev_get_priv(dev);
-	const struct rockchip_connector *connector =
-		(const struct rockchip_connector *)dev_get_driver_data(dev);
-	const struct dw_mipi_dsi2_plat_data *pdata = connector->data;
+	const struct dw_mipi_dsi2_plat_data *pdata =
+		(const struct dw_mipi_dsi2_plat_data *)dev_get_driver_data(dev);
 	struct udevice *syscon;
 	int id, ret;
 
@@ -1102,6 +1138,9 @@ static int dw_mipi_dsi2_probe(struct udevice *dev)
 	dsi2->id = id;
 	dsi2->data_swap = dev_read_bool(dsi2->dev, "rockchip,data-swap");
 
+	rockchip_connector_bind(&dsi2->connector, dev, id, &dw_mipi_dsi2_connector_funcs, NULL,
+				DRM_MODE_CONNECTOR_DSI);
+
 	return 0;
 }
 
@@ -1129,15 +1168,11 @@ static const struct dw_mipi_dsi2_plat_data rk3588_mipi_dsi2_plat_data = {
 	.dphy_max_bit_rate_per_lane = 4500000000ULL,
 	.cphy_max_symbol_rate_per_lane = 2000000000ULL,
 };
-static const struct rockchip_connector rk3588_mipi_dsi2_driver_data = {
-	 .funcs = &dw_mipi_dsi2_connector_funcs,
-	 .data = &rk3588_mipi_dsi2_plat_data,
-};
 
 static const struct udevice_id dw_mipi_dsi2_ids[] = {
 	{
 		.compatible = "rockchip,rk3588-mipi-dsi2",
-		.data = (ulong)&rk3588_mipi_dsi2_driver_data,
+		.data = (ulong)&rk3588_mipi_dsi2_plat_data,
 	},
 	{}
 };
@@ -1152,17 +1187,12 @@ static ssize_t dw_mipi_dsi2_host_transfer(struct mipi_dsi_host *host,
 
 static int dw_mipi_dsi2_get_dsc_params_from_sink(struct dw_mipi_dsi2 *dsi2)
 {
-	struct udevice *dev = NULL;
+	struct udevice *dev = dsi2->device->dev;
 	struct rockchip_cmd_header *header;
 	struct drm_dsc_picture_parameter_set *pps = NULL;
 	u8 *dsc_packed_pps;
 	const void *data;
 	int len;
-	int ret;
-
-	ret = device_find_first_child(dsi2->dev, &dev);
-	if (ret)
-		return ret;
 
 	dsi2->c_option = dev_read_bool(dev, "phy-c-option");
 	dsi2->scrambling_en = dev_read_bool(dev, "scrambling-enable");
@@ -1243,45 +1273,6 @@ static int dw_mipi_dsi2_bind(struct udevice *dev)
 	return dm_scan_fdt_dev(dev);
 }
 
-static int dw_mipi_dsi2_child_post_bind(struct udevice *dev)
-{
-	struct mipi_dsi_host *host = dev_get_platdata(dev->parent);
-	struct mipi_dsi_device *device = dev_get_parent_platdata(dev);
-	char name[20];
-
-	sprintf(name, "%s.%d", host->dev->name, device->channel);
-	device_set_name(dev, name);
-
-	device->dev = dev;
-	device->host = host;
-	device->lanes = dev_read_u32_default(dev, "dsi,lanes", 4);
-	device->format = dev_read_u32_default(dev, "dsi,format",
-					      MIPI_DSI_FMT_RGB888);
-	device->mode_flags = dev_read_u32_default(dev, "dsi,flags",
-						  MIPI_DSI_MODE_VIDEO |
-						  MIPI_DSI_MODE_VIDEO_BURST |
-						  MIPI_DSI_MODE_VIDEO_HBP |
-						  MIPI_DSI_MODE_LPM |
-						  MIPI_DSI_MODE_EOT_PACKET);
-	device->channel = dev_read_u32_default(dev, "reg", 0);
-
-	return 0;
-}
-
-static int dw_mipi_dsi2_child_pre_probe(struct udevice *dev)
-{
-	struct mipi_dsi_device *device = dev_get_parent_platdata(dev);
-	int ret;
-
-	ret = mipi_dsi_attach(device);
-	if (ret) {
-		dev_err(dev, "mipi_dsi_attach() failed: %d\n", ret);
-		return ret;
-	}
-
-	return 0;
-}
-
 U_BOOT_DRIVER(dw_mipi_dsi2) = {
 	.name = "dw_mipi_dsi2",
 	.id = UCLASS_DISPLAY,
@@ -1289,8 +1280,5 @@ U_BOOT_DRIVER(dw_mipi_dsi2) = {
 	.probe = dw_mipi_dsi2_probe,
 	.bind = dw_mipi_dsi2_bind,
 	.priv_auto_alloc_size = sizeof(struct dw_mipi_dsi2),
-	.per_child_platdata_auto_alloc_size = sizeof(struct mipi_dsi_device),
 	.platdata_auto_alloc_size = sizeof(struct mipi_dsi_host),
-	.child_post_bind = dw_mipi_dsi2_child_post_bind,
-	.child_pre_probe = dw_mipi_dsi2_child_pre_probe,
 };
diff --git a/drivers/video/drm/inno_hdmi.c b/drivers/video/drm/inno_hdmi.c
index f8bc0c9..8ae9717 100644
--- a/drivers/video/drm/inno_hdmi.c
+++ b/drivers/video/drm/inno_hdmi.c
@@ -7,6 +7,7 @@
 #include <syscon.h>
 #include <asm/io.h>
 #include <asm/arch-rockchip/clock.h>
+#include <dm/of_access.h>
 #include <dm/device.h>
 #include <dm/read.h>
 #include <linux/hdmi.h>
@@ -620,22 +621,12 @@ static int inno_hdmi_i2c_xfer(struct ddc_adapter *adap,
 	return ret;
 }
 
-int rockchip_inno_hdmi_pre_init(struct display_state *state)
+static int rockchip_inno_hdmi_init(struct rockchip_connector *conn, struct display_state *state)
 {
 	struct connector_state *conn_state = &state->conn_state;
-
-	conn_state->type = DRM_MODE_CONNECTOR_HDMIA;
-
-	return 0;
-}
-
-static int rockchip_inno_hdmi_init(struct display_state *state)
-{
-	struct connector_state *conn_state = &state->conn_state;
-	const struct rockchip_connector *connector = conn_state->connector;
 	struct inno_hdmi *hdmi;
 	struct drm_display_mode *mode_buf;
-	ofnode hdmi_node = conn_state->node;
+	ofnode hdmi_node = conn->dev->node;
 	int ret;
 
 	hdmi = calloc(1, sizeof(struct inno_hdmi));
@@ -646,7 +637,7 @@ static int rockchip_inno_hdmi_init(struct display_state *state)
 	if (!mode_buf)
 		return -ENOMEM;
 
-	hdmi->regs = dev_read_addr_ptr(conn_state->dev);
+	hdmi->regs = dev_read_addr_ptr(conn->dev);
 
 	hdmi->grf = syscon_get_first_range(ROCKCHIP_SYSCON_GRF);
 	if (hdmi->grf <= 0) {
@@ -675,14 +666,14 @@ static int rockchip_inno_hdmi_init(struct display_state *state)
 	conn_state->type = DRM_MODE_CONNECTOR_HDMIA;
 	conn_state->output_mode = ROCKCHIP_OUT_MODE_AAAA;
 
-	hdmi->plat_data = (struct inno_hdmi_plat_data *)connector->data;
+	hdmi->plat_data = (struct inno_hdmi_plat_data *)dev_get_driver_data(conn->dev);
 	hdmi->edid_data.mode_buf = mode_buf;
 	hdmi->sample_rate = 48000;
 
-	conn_state->private = hdmi;
+	conn->data = hdmi;
 
 	inno_hdmi_reset(hdmi);
-	ret = clk_get_by_name(conn_state->dev, "pclk", &hdmi->pclk);
+	ret = clk_get_by_name(conn->dev, "pclk", &hdmi->pclk);
 	if (ret < 0) {
 		dev_err(hdmi->dev, "failed to get pclk: %d\n", ret);
 		return ret;
@@ -696,11 +687,11 @@ static int rockchip_inno_hdmi_init(struct display_state *state)
 	return 0;
 }
 
-static int rockchip_inno_hdmi_enable(struct display_state *state)
+static int rockchip_inno_hdmi_enable(struct rockchip_connector *conn, struct display_state *state)
 {
 	struct connector_state *conn_state = &state->conn_state;
 	struct drm_display_mode *mode = &conn_state->mode;
-	struct inno_hdmi *hdmi = conn_state->private;
+	struct inno_hdmi *hdmi = conn->data;
 
 	if (!hdmi)
 		return -EFAULT;
@@ -714,10 +705,9 @@ static int rockchip_inno_hdmi_enable(struct display_state *state)
 	return 0;
 }
 
-static void rockchip_inno_hdmi_deinit(struct display_state *state)
+static void rockchip_inno_hdmi_deinit(struct rockchip_connector *conn, struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
-	struct inno_hdmi *hdmi = conn_state->private;
+	struct inno_hdmi *hdmi = conn->data;
 
 	if (hdmi->i2c)
 		free(hdmi->i2c);
@@ -725,35 +715,34 @@ static void rockchip_inno_hdmi_deinit(struct display_state *state)
 		free(hdmi);
 }
 
-static int rockchip_inno_hdmi_prepare(struct display_state *state)
+static int rockchip_inno_hdmi_prepare(struct rockchip_connector *conn, struct display_state *state)
 {
 	return 0;
 }
 
-static int rockchip_inno_hdmi_disable(struct display_state *state)
+static int rockchip_inno_hdmi_disable(struct rockchip_connector *conn, struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
-	struct inno_hdmi *hdmi = conn_state->private;
+	struct inno_hdmi *hdmi = conn->data;
 
 	inno_hdmi_set_pwr_mode(hdmi, LOWER_PWR);
 	return 0;
 }
 
-static int rockchip_inno_hdmi_detect(struct display_state *state)
+static int rockchip_inno_hdmi_detect(struct rockchip_connector *conn, struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
-	struct inno_hdmi *hdmi = conn_state->private;
+	struct inno_hdmi *hdmi = conn->data;
 
 	return (hdmi_readb(hdmi, HDMI_STATUS) & m_HOTPLUG) ?
 		connector_status_connected : connector_status_disconnected;
 }
 
-static int rockchip_inno_hdmi_get_timing(struct display_state *state)
+static int rockchip_inno_hdmi_get_timing(struct rockchip_connector *conn,
+					 struct display_state *state)
 {
 	int  i, ret;
 	struct connector_state *conn_state = &state->conn_state;
 	struct drm_display_mode *mode = &conn_state->mode;
-	struct inno_hdmi *hdmi = conn_state->private;
+	struct inno_hdmi *hdmi = conn->data;
 	struct edid *edid = (struct edid *)conn_state->edid;
 	const u8 def_modes_vic[6] = {16, 4, 2, 17, 31, 19};
 
@@ -798,18 +787,7 @@ static int rockchip_inno_hdmi_get_timing(struct display_state *state)
 	return 0;
 }
 
-static int rockchip_inno_hdmi_probe(struct udevice *dev)
-{
-	return 0;
-}
-
-static int rockchip_inno_hdmi_bind(struct udevice *dev)
-{
-	return 0;
-}
-
 const struct rockchip_connector_funcs rockchip_inno_hdmi_funcs = {
-	.pre_init = rockchip_inno_hdmi_pre_init,
 	.init = rockchip_inno_hdmi_init,
 	.deinit = rockchip_inno_hdmi_deinit,
 	.prepare = rockchip_inno_hdmi_prepare,
@@ -819,6 +797,26 @@ const struct rockchip_connector_funcs rockchip_inno_hdmi_funcs = {
 	.detect = rockchip_inno_hdmi_detect,
 };
 
+static int rockchip_inno_hdmi_probe(struct udevice *dev)
+{
+	int id;
+	struct rockchip_connector *conn = dev_get_priv(dev);
+
+	id = of_alias_get_id(ofnode_to_np(dev->node), "hdmi");
+	if (id < 0)
+		id = 0;
+
+	rockchip_connector_bind(conn, dev, id, &rockchip_inno_hdmi_funcs, NULL,
+				DRM_MODE_CONNECTOR_HDMIA);
+
+	return 0;
+}
+
+static int rockchip_inno_hdmi_bind(struct udevice *dev)
+{
+	return 0;
+}
+
 static const struct inno_hdmi_plat_data rk3036_hdmi_drv_data = {
 	.dev_type   = RK3036_HDMI,
 	.phy_config = rk3036_hdmi_phy_config,
@@ -829,24 +827,14 @@ static const struct inno_hdmi_plat_data rk3128_hdmi_drv_data = {
 	.phy_config = rk3128_hdmi_phy_config,
 };
 
-static const struct rockchip_connector rk3036_inno_hdmi_data = {
-	.funcs = &rockchip_inno_hdmi_funcs,
-	.data = &rk3036_hdmi_drv_data,
-};
-
-static const struct rockchip_connector rk3128_inno_hdmi_data = {
-	.funcs = &rockchip_inno_hdmi_funcs,
-	.data = &rk3128_hdmi_drv_data,
-};
-
 static const struct udevice_id rockchip_inno_hdmi_ids[] = {
 	{
 	 .compatible = "rockchip,rk3036-inno-hdmi",
-	 .data = (ulong)&rk3036_inno_hdmi_data,
+	 .data = (ulong)&rk3036_hdmi_drv_data,
 	},
 	{
 	 .compatible = "rockchip,rk3128-inno-hdmi",
-	 .data = (ulong)&rk3128_inno_hdmi_data,
+	 .data = (ulong)&rk3128_hdmi_drv_data,
 	}, {}
 
 };
@@ -857,4 +845,5 @@ U_BOOT_DRIVER(rockchip_inno_hdmi) = {
 	.of_match = rockchip_inno_hdmi_ids,
 	.probe	= rockchip_inno_hdmi_probe,
 	.bind	= rockchip_inno_hdmi_bind,
+	.priv_auto_alloc_size = sizeof(struct rockchip_connector),
 };
diff --git a/drivers/video/drm/max96745.c b/drivers/video/drm/max96745.c
index 69f6381..c824e01 100644
--- a/drivers/video/drm/max96745.c
+++ b/drivers/video/drm/max96745.c
@@ -14,36 +14,36 @@
 #include "rockchip_display.h"
 #include "rockchip_panel.h"
 
-static void max96745_bridge_enable(struct rockchip_bridge *bridge)
-{
-	struct udevice *dev = bridge->dev;
-
-	dm_i2c_reg_clrset(dev->parent, 0x0100, VID_TX_EN,
-			  FIELD_PREP(VID_TX_EN, 1));
-}
+struct max96745_bridge_priv {
+	struct gpio_desc lock_gpio;
+};
 
-static void max96745_bridge_disable(struct rockchip_bridge *bridge)
+static bool max96745_bridge_detect(struct rockchip_bridge *bridge)
 {
-	struct udevice *dev = bridge->dev;
+	struct max96745_bridge_priv *priv = dev_get_priv(bridge->dev);
+
+	if (!dm_gpio_get_value(&priv->lock_gpio))
+		return false;
 
-	dm_i2c_reg_clrset(dev->parent, 0x0100, VID_TX_EN,
-			  FIELD_PREP(VID_TX_EN, 0));
+	return true;
 }
 
 static const struct rockchip_bridge_funcs max96745_bridge_funcs = {
-	.enable = max96745_bridge_enable,
-	.disable = max96745_bridge_disable,
+	.detect = max96745_bridge_detect,
 };
 
 static int max96745_bridge_probe(struct udevice *dev)
 {
+	struct max96745_bridge_priv *priv = dev_get_priv(dev);
 	struct rockchip_bridge *bridge;
+	int ret;
 
-	dm_i2c_reg_write(dev->parent, 0x7019, 0x00);
-	dm_i2c_reg_write(dev->parent, 0x70a0, 0x04);
-	dm_i2c_reg_write(dev->parent, 0x7074, 0x14);
-	dm_i2c_reg_write(dev->parent, 0x7070, 0x04);
-	dm_i2c_reg_write(dev->parent, 0x7000, 0x01);
+	ret = gpio_request_by_name(dev, "lock-gpios", 0, &priv->lock_gpio,
+				   GPIOD_IS_IN);
+	if (ret) {
+		dev_err(dev, "failed to get lock GPIO: %d\n", ret);
+		return ret;
+	}
 
 	bridge = calloc(1, sizeof(*bridge));
 	if (!bridge)
@@ -66,4 +66,5 @@ U_BOOT_DRIVER(max96745_bridge) = {
 	.id = UCLASS_VIDEO_BRIDGE,
 	.of_match = max96745_bridge_of_match,
 	.probe = max96745_bridge_probe,
+	.priv_auto_alloc_size = sizeof(struct max96745_bridge_priv),
 };
diff --git a/drivers/video/drm/max96752f.c b/drivers/video/drm/max96752f.c
index 4037173..e7553d1 100644
--- a/drivers/video/drm/max96752f.c
+++ b/drivers/video/drm/max96752f.c
@@ -15,13 +15,15 @@
 #include "rockchip_display.h"
 #include "rockchip_panel.h"
 
-static void max96752f_bridge_enable(struct rockchip_bridge *bridge)
+static void max96752f_bridge_pre_enable(struct rockchip_bridge *bridge)
 {
 	struct udevice *dev = bridge->dev;
-	struct rockchip_panel *panel = state_get_panel(bridge->state);
+	struct connector_state *conn_state = &bridge->state->conn_state;
 	bool oldi_format, oldi_4th_lane;
 
-	switch (panel->bus_format) {
+	max96752f_init(dev->parent);
+
+	switch (conn_state->bus_format) {
 	case MEDIA_BUS_FMT_RGB888_1X7X4_JEIDA:
 		oldi_4th_lane = false;
 		oldi_format = 0x0;
@@ -46,7 +48,7 @@ static void max96752f_bridge_enable(struct rockchip_bridge *bridge)
 }
 
 static const struct rockchip_bridge_funcs max96752f_bridge_funcs = {
-	.enable = max96752f_bridge_enable,
+	.pre_enable = max96752f_bridge_pre_enable,
 };
 
 static int max96752f_bridge_probe(struct udevice *dev)
diff --git a/drivers/video/drm/max96755f.c b/drivers/video/drm/max96755f.c
index 96b16a9..e09849f 100644
--- a/drivers/video/drm/max96755f.c
+++ b/drivers/video/drm/max96755f.c
@@ -131,16 +131,28 @@ static void max96755f_bridge_mode_set(struct rockchip_bridge *bridge,
 	memcpy(&priv->mode, mode, sizeof(struct drm_display_mode));
 }
 
+static bool max96755f_bridge_detect(struct rockchip_bridge *bridge)
+{
+	struct max96755f_priv *priv = dev_get_priv(bridge->dev->parent);
+
+	if (!dm_gpio_get_value(&priv->lock_gpio))
+		return false;
+
+	return true;
+}
+
 static const struct rockchip_bridge_funcs max96755f_bridge_funcs = {
 	.enable = max96755f_bridge_enable,
 	.disable = max96755f_bridge_disable,
 	.mode_set = max96755f_bridge_mode_set,
+	.detect = max96755f_bridge_detect,
 };
 
 static int max96755f_bridge_probe(struct udevice *dev)
 {
 	struct rockchip_bridge *bridge;
 	struct max96755f_priv *priv = dev_get_priv(dev->parent);
+	int ret;
 
 	bridge = calloc(1, sizeof(*bridge));
 	if (!bridge)
@@ -154,6 +166,13 @@ static int max96755f_bridge_probe(struct udevice *dev)
 	priv->dv_swp_ab = dev_read_bool(dev, "vd-swap-ab");
 	priv->dpi_deskew_en = dev_read_bool(dev, "dpi-deskew-en");
 
+	ret = gpio_request_by_name(dev, "lock-gpios", 0, &priv->lock_gpio,
+				   GPIOD_IS_IN);
+	if (ret) {
+		dev_err(dev, "failed to get lock GPIO: %d\n", ret);
+		return ret;
+	}
+
 	return 0;
 }
 
diff --git a/drivers/video/drm/panel-maxim-deserializer.c b/drivers/video/drm/panel-maxim-deserializer.c
new file mode 100644
index 0000000..583f6a4
--- /dev/null
+++ b/drivers/video/drm/panel-maxim-deserializer.c
@@ -0,0 +1,300 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * (C) Copyright 2022 Rockchip Electronics Co., Ltd
+ */
+
+#include <config.h>
+#include <common.h>
+#include <backlight.h>
+#include <errno.h>
+#include <malloc.h>
+#include <video.h>
+
+#include <asm/gpio.h>
+#include <dm/device.h>
+#include <dm/read.h>
+#include <dm/pinctrl.h>
+#include <dm/uclass-id.h>
+#include <linux/media-bus-format.h>
+
+#include "rockchip_display.h"
+#include "rockchip_panel.h"
+
+struct maxim_deserializer_panel;
+
+struct maxim_deserializer_panel_desc {
+	const char *name;
+	u16 id;
+	struct drm_display_mode mode;
+	u32 width_mm;
+	u32 height_mm;
+
+	struct {
+		const char *name;
+		u8 addr;
+		u8 dev_id;
+	} deserializer;
+
+	void (*prepare)(struct maxim_deserializer_panel *p);
+	void (*unprepare)(struct maxim_deserializer_panel *p);
+	void (*enable)(struct maxim_deserializer_panel *p);
+	void (*disable)(struct maxim_deserializer_panel *p);
+};
+
+struct maxim_deserializer_panel {
+	struct udevice *dev;
+	struct udevice *backlight;
+	struct gpio_desc enable_gpio;
+
+	/* the panel desc as detected */
+	const struct maxim_deserializer_panel_desc *desc;
+};
+
+static void maxim_max96752f_panel_prepare(struct maxim_deserializer_panel *p)
+{
+	pinctrl_select_state(p->dev, p->desc->name ?
+			     p->desc->name : p->desc->deserializer.name);
+
+	dm_i2c_reg_write(p->dev, 0x0002, 0x43);
+	dm_i2c_reg_write(p->dev, 0x0140, 0x20);
+
+	dm_i2c_reg_write(p->dev, 0x01ce, 0x5e);	/* oldi */
+	dm_i2c_reg_write(p->dev, 0x020c, 0x84);	/* bl_pwm */
+	dm_i2c_reg_write(p->dev, 0x0206, 0x83);	/* tp_int */
+
+	dm_i2c_reg_write(p->dev, 0x0215, 0x90);	/* lcd_en */
+	mdelay(20);
+}
+
+static void maxim_max96752f_panel_unprepare(struct maxim_deserializer_panel *p)
+{
+	dm_i2c_reg_write(p->dev, 0x0215, 0x80);	/* lcd_en */
+}
+
+static void maxim_max96752f_panel_enable(struct maxim_deserializer_panel *p)
+{
+	dm_i2c_reg_write(p->dev, 0x0227, 0x90);	/* lcd_rst */
+	mdelay(20);
+	dm_i2c_reg_write(p->dev, 0x020f, 0x90);	/* tp_rst */
+	mdelay(100);
+	dm_i2c_reg_write(p->dev, 0x0221, 0x90);	/* lcd_stb */
+	mdelay(60);
+	dm_i2c_reg_write(p->dev, 0x0212, 0x90);	/* bl_current_ctl */
+	dm_i2c_reg_write(p->dev, 0x0209, 0x90);	/* bl_en */
+}
+
+static void maxim_max96752f_panel_disable(struct maxim_deserializer_panel *p)
+{
+	dm_i2c_reg_write(p->dev, 0x0209, 0x80);	/* bl_en */
+	dm_i2c_reg_write(p->dev, 0x0212, 0x80); /* bl_current_ctl */
+	dm_i2c_reg_write(p->dev, 0x0221, 0x80);	/* lcd_stb */
+	dm_i2c_reg_write(p->dev, 0x020f, 0x80);	/* tp_rst */
+	dm_i2c_reg_write(p->dev, 0x0227, 0x80);	/* lcd_rst */
+}
+
+static const struct maxim_deserializer_panel_desc maxim_deserializer_default_panels[] = {
+	{
+		.deserializer = {
+			.name = "max96752f",
+			.addr = 0x48,
+			.dev_id = 0x82,
+		},
+
+		.mode = {
+			.clock = 148500,
+			.hdisplay = 1920,
+			.hsync_start = 1920 + 20,
+			.hsync_end = 1920 + 20 + 20,
+			.htotal = 1920 + 20 + 20 + 20,
+			.vdisplay = 1080,
+			.vsync_start = 1080 + 250,
+			.vsync_end = 1080 + 250 + 2,
+			.vtotal = 1080 + 250 + 2 + 8,
+			.flags = DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC,
+		},
+
+		.prepare = maxim_max96752f_panel_prepare,
+		.enable = maxim_max96752f_panel_enable,
+		.disable = maxim_max96752f_panel_disable,
+		.unprepare = maxim_max96752f_panel_unprepare,
+	},
+};
+
+static void maxim_deserializer_panel_prepare(struct rockchip_panel *panel)
+{
+	struct maxim_deserializer_panel *p = dev_get_priv(panel->dev);
+
+	if (!p->desc)
+		return;
+
+	if (p->desc->prepare)
+		p->desc->prepare(p);
+}
+
+static void maxim_deserializer_panel_unprepare(struct rockchip_panel *panel)
+{
+	struct maxim_deserializer_panel *p = dev_get_priv(panel->dev);
+
+	if (!p->desc)
+		return;
+
+	if (p->desc->unprepare)
+		p->desc->unprepare(p);
+}
+
+static void maxim_deserializer_panel_enable(struct rockchip_panel *panel)
+{
+	struct maxim_deserializer_panel *p = dev_get_priv(panel->dev);
+
+	if (!p->desc)
+		return;
+
+	if (p->desc->enable)
+		p->desc->enable(p);
+
+	if (p->backlight)
+		backlight_enable(p->backlight);
+}
+
+static void maxim_deserializer_panel_disable(struct rockchip_panel *panel)
+{
+	struct maxim_deserializer_panel *p = dev_get_priv(panel->dev);
+
+	if (!p->desc)
+		return;
+
+	if (p->backlight)
+		backlight_disable(p->backlight);
+
+	if (p->desc->disable)
+		p->desc->disable(p);
+}
+
+static u16 maxim_deserializer_panel_get_id(struct maxim_deserializer_panel *p)
+{
+	/* TODO */
+	return 0;
+}
+
+static int maxim_deserializer_panel_detect(struct maxim_deserializer_panel *p)
+{
+	const struct maxim_deserializer_panel_desc *desc = NULL;
+	struct udevice *dev = p->dev;
+	struct dm_i2c_chip *chip = dev_get_parent_platdata(dev);
+	u16 id = maxim_deserializer_panel_get_id(p);
+	unsigned int i, ret;
+
+	if (id) {
+		/* TODO */
+	} else {
+		u8 dev_id;
+
+		for (i = 0; i < ARRAY_SIZE(maxim_deserializer_default_panels); i++) {
+			chip->chip_addr = maxim_deserializer_default_panels[i].deserializer.addr;
+
+			ret = dm_i2c_reg_read(dev, 0x000d);
+			if (ret < 0)
+				continue;
+
+			dev_id = ret;
+
+			if (maxim_deserializer_default_panels[i].deserializer.dev_id == dev_id) {
+				desc = &maxim_deserializer_default_panels[i];
+				break;
+			}
+		}
+	}
+
+	if (!desc)
+		return -ENODEV;
+
+	p->desc = desc;
+	chip->chip_addr = desc->deserializer.addr;
+
+	return 0;
+}
+
+static int maxim_deserializer_panel_get_mode(struct rockchip_panel *panel,
+					     struct drm_display_mode *mode)
+{
+	struct maxim_deserializer_panel *p = dev_get_priv(panel->dev);
+	int ret;
+
+	ret = maxim_deserializer_panel_detect(p);
+	if (ret)
+		return ret;
+
+	memcpy(mode, &p->desc->mode, sizeof(struct drm_display_mode));
+	mode->vrefresh = drm_mode_vrefresh(mode);
+
+	return 0;
+}
+
+static const struct rockchip_panel_funcs maxim_deserializer_panel_funcs = {
+	.prepare = maxim_deserializer_panel_prepare,
+	.unprepare = maxim_deserializer_panel_unprepare,
+	.enable = maxim_deserializer_panel_enable,
+	.disable = maxim_deserializer_panel_disable,
+	.get_mode = maxim_deserializer_panel_get_mode,
+};
+
+static void maxim_deserializer_panel_power_on(struct maxim_deserializer_panel *p)
+{
+	if (dm_gpio_is_valid(&p->enable_gpio)) {
+		dm_gpio_set_value(&p->enable_gpio, 1);
+		mdelay(500);
+	}
+}
+
+static int maxim_deserializer_panel_probe(struct udevice *dev)
+{
+	struct maxim_deserializer_panel *p = dev_get_priv(dev);
+	struct rockchip_panel *panel;
+	int ret;
+
+	ret = i2c_set_chip_offset_len(dev, 2);
+	if (ret)
+		return ret;
+
+	p->dev = dev;
+
+	ret = uclass_get_device_by_phandle(UCLASS_PANEL_BACKLIGHT, dev,
+					   "backlight", &p->backlight);
+	if (ret && ret != -ENOENT) {
+		dev_err(dev, "%s: Cannot get backlight: %d\n", __func__, ret);
+		return ret;
+	}
+
+	ret = gpio_request_by_name(dev, "enable-gpios", 0,
+				   &p->enable_gpio, GPIOD_IS_OUT);
+	if (ret && ret != -ENOENT) {
+		dev_err(dev, "%s: Cannot get enable GPIO: %d\n", __func__, ret);
+		return ret;
+	}
+
+	maxim_deserializer_panel_power_on(p);
+
+	panel = calloc(1, sizeof(*panel));
+	if (!panel)
+		return -ENOMEM;
+
+	dev->driver_data = (ulong)panel;
+	panel->dev = dev;
+	panel->bus_format = MEDIA_BUS_FMT_RGB888_1X24;
+	panel->funcs = &maxim_deserializer_panel_funcs;
+
+	return 0;
+}
+
+static const struct udevice_id maxim_deserializer_panel_of_match[] = {
+	{ .compatible = "maxim,deserializer-panel", },
+	{}
+};
+
+U_BOOT_DRIVER(maxim_deserializer_panel) = {
+	.name = "maxim_deserializer_panel",
+	.id = UCLASS_PANEL,
+	.of_match = maxim_deserializer_panel_of_match,
+	.probe = maxim_deserializer_panel_probe,
+	.priv_auto_alloc_size = sizeof(struct maxim_deserializer_panel),
+};
diff --git a/drivers/video/drm/phy-rockchip-samsung-hdptx-hdmi.c b/drivers/video/drm/phy-rockchip-samsung-hdptx-hdmi.c
index 7006570..e04543f 100644
--- a/drivers/video/drm/phy-rockchip-samsung-hdptx-hdmi.c
+++ b/drivers/video/drm/phy-rockchip-samsung-hdptx-hdmi.c
@@ -875,7 +875,7 @@ static int hdptx_post_enable_lane(struct rockchip_hdptx_phy *hdptx)
 	hdptx_grf_write(hdptx, GRF_HDPTX_CON0, val);
 
 	val = 0;
-	for (i = 0; i < 20; i++) {
+	for (i = 0; i < 50; i++) {
 		val = hdptx_grf_read(hdptx, GRF_HDPTX_STATUS);
 
 		if (val & HDPTX_O_PHY_RDY && val & HDPTX_O_PLL_LOCK_DONE)
@@ -883,7 +883,7 @@ static int hdptx_post_enable_lane(struct rockchip_hdptx_phy *hdptx)
 		udelay(100);
 	}
 
-	if (i == 20) {
+	if (i == 50) {
 		dev_err(hdptx->dev, "hdptx phy lane can't ready!\n");
 		return -EINVAL;
 	}
@@ -910,7 +910,7 @@ static int hdptx_post_enable_pll(struct rockchip_hdptx_phy *hdptx)
 	reset_deassert(&hdptx->cmn_reset);
 
 	val = 0;
-	for (i = 0; i < 20; i++) {
+	for (i = 0; i < 50; i++) {
 		val = hdptx_grf_read(hdptx, GRF_HDPTX_STATUS);
 
 		if (val & HDPTX_O_PHY_CLK_RDY)
@@ -918,7 +918,7 @@ static int hdptx_post_enable_pll(struct rockchip_hdptx_phy *hdptx)
 		udelay(20);
 	}
 
-	if (i == 20) {
+	if (i == 50) {
 		dev_err(hdptx->dev, "hdptx phy pll can't lock!\n");
 		return -EINVAL;
 	}
@@ -945,7 +945,7 @@ static int hdptx_post_power_up(struct rockchip_hdptx_phy *hdptx)
 	udelay(10);
 	reset_deassert(&hdptx->cmn_reset);
 
-	for (i = 0; i < 20; i++) {
+	for (i = 0; i < 50; i++) {
 		val = hdptx_grf_read(hdptx, GRF_HDPTX_STATUS);
 
 		if (val & HDPTX_O_PLL_LOCK_DONE)
@@ -953,7 +953,7 @@ static int hdptx_post_power_up(struct rockchip_hdptx_phy *hdptx)
 		udelay(20);
 	}
 
-	if (i == 20) {
+	if (i == 50) {
 		dev_err(hdptx->dev, "hdptx phy can't lock!\n");
 		return -EINVAL;
 	}
@@ -962,7 +962,7 @@ static int hdptx_post_power_up(struct rockchip_hdptx_phy *hdptx)
 
 	reset_deassert(&hdptx->lane_reset);
 
-	for (i = 0; i < 20; i++) {
+	for (i = 0; i < 50; i++) {
 		val = hdptx_grf_read(hdptx, GRF_HDPTX_STATUS);
 
 		if (val & HDPTX_O_PHY_RDY)
@@ -970,7 +970,7 @@ static int hdptx_post_power_up(struct rockchip_hdptx_phy *hdptx)
 		udelay(100);
 	}
 
-	if (i == 20) {
+	if (i == 50) {
 		dev_err(hdptx->dev, "hdptx phy can't ready!\n");
 		return -EINVAL;
 	}
@@ -1051,6 +1051,163 @@ static bool hdptx_phy_clk_pll_calc(unsigned int data_rate,
 	return true;
 }
 
+static int hdptx_lcpll_cmn_config(struct rockchip_hdptx_phy *hdptx, unsigned long bit_rate)
+{
+	u8 color_depth = (bit_rate & COLOR_DEPTH_MASK) ? 1 : 0;
+	struct lcpll_config *cfg = lcpll_cfg;
+
+	for (; cfg->bit_rate != ~0; cfg++)
+		if (bit_rate == cfg->bit_rate)
+			break;
+
+	if (cfg->bit_rate == ~0)
+		return -EINVAL;
+
+	hdptx_pre_power_up(hdptx);
+
+	reset_assert(&hdptx->lcpll_reset);
+	udelay(20);
+	reset_deassert(&hdptx->lcpll_reset);
+
+	hdptx_update_bits(hdptx, CMN_REG0008, LCPLL_EN_MASK |
+		       LCPLL_LCVCO_MODE_EN_MASK, LCPLL_EN(1) |
+		       LCPLL_LCVCO_MODE_EN(cfg->lcvco_mode_en));
+	hdptx_write(hdptx, CMN_REG0009, 0x0c);
+	hdptx_write(hdptx, CMN_REG000A, 0x83);
+	hdptx_write(hdptx, CMN_REG000B, 0x06);
+	hdptx_write(hdptx, CMN_REG000C, 0x20);
+	hdptx_write(hdptx, CMN_REG000D, 0xb8);
+	hdptx_write(hdptx, CMN_REG000E, 0x0f);
+	hdptx_write(hdptx, CMN_REG000F, 0x0f);
+	hdptx_write(hdptx, CMN_REG0010, 0x04);
+	hdptx_write(hdptx, CMN_REG0011, 0x00);
+	hdptx_write(hdptx, CMN_REG0012, 0x26);
+	hdptx_write(hdptx, CMN_REG0013, 0x22);
+	hdptx_write(hdptx, CMN_REG0014, 0x24);
+	hdptx_write(hdptx, CMN_REG0015, 0x77);
+	hdptx_write(hdptx, CMN_REG0016, 0x08);
+	hdptx_write(hdptx, CMN_REG0017, 0x00);
+	hdptx_write(hdptx, CMN_REG0018, 0x04);
+	hdptx_write(hdptx, CMN_REG0019, 0x48);
+	hdptx_write(hdptx, CMN_REG001A, 0x01);
+	hdptx_write(hdptx, CMN_REG001B, 0x00);
+	hdptx_write(hdptx, CMN_REG001C, 0x01);
+	hdptx_write(hdptx, CMN_REG001D, 0x64);
+	hdptx_update_bits(hdptx, CMN_REG001E, LCPLL_PI_EN_MASK |
+		       LCPLL_100M_CLK_EN_MASK,
+		       LCPLL_PI_EN(cfg->pi_en) |
+		       LCPLL_100M_CLK_EN(cfg->clk_en_100m));
+	hdptx_write(hdptx, CMN_REG001F, 0x00);
+	hdptx_write(hdptx, CMN_REG0020, cfg->pms_mdiv);
+	hdptx_write(hdptx, CMN_REG0021, cfg->pms_mdiv_afc);
+	hdptx_write(hdptx, CMN_REG0022, (cfg->pms_pdiv << 4) | cfg->pms_refdiv);
+	hdptx_write(hdptx, CMN_REG0023, (cfg->pms_sdiv << 4) | cfg->pms_sdiv);
+	hdptx_write(hdptx, CMN_REG0025, 0x10);
+	hdptx_write(hdptx, CMN_REG0026, 0x53);
+	hdptx_write(hdptx, CMN_REG0027, 0x01);
+	hdptx_write(hdptx, CMN_REG0028, 0x0d);
+	hdptx_write(hdptx, CMN_REG0029, 0x01);
+	hdptx_write(hdptx, CMN_REG002A, cfg->sdm_deno);
+	hdptx_write(hdptx, CMN_REG002B, cfg->sdm_num_sign);
+	hdptx_write(hdptx, CMN_REG002C, cfg->sdm_num);
+	hdptx_update_bits(hdptx, CMN_REG002D, LCPLL_SDC_N_MASK,
+			  LCPLL_SDC_N(cfg->sdc_n));
+	hdptx_write(hdptx, CMN_REG002E, 0x02);
+	hdptx_write(hdptx, CMN_REG002F, 0x0d);
+	hdptx_write(hdptx, CMN_REG0030, 0x00);
+	hdptx_write(hdptx, CMN_REG0031, 0x20);
+	hdptx_write(hdptx, CMN_REG0032, 0x30);
+	hdptx_write(hdptx, CMN_REG0033, 0x0b);
+	hdptx_write(hdptx, CMN_REG0034, 0x23);
+	hdptx_write(hdptx, CMN_REG0035, 0x00);
+	hdptx_write(hdptx, CMN_REG0038, 0x00);
+	hdptx_write(hdptx, CMN_REG0039, 0x00);
+	hdptx_write(hdptx, CMN_REG003A, 0x00);
+	hdptx_write(hdptx, CMN_REG003B, 0x00);
+	hdptx_write(hdptx, CMN_REG003C, 0x80);
+	hdptx_write(hdptx, CMN_REG003D, 0x00);
+	hdptx_write(hdptx, CMN_REG003E, 0x0c);
+	hdptx_write(hdptx, CMN_REG003F, 0x83);
+	hdptx_write(hdptx, CMN_REG0040, 0x06);
+	hdptx_write(hdptx, CMN_REG0041, 0x20);
+	hdptx_write(hdptx, CMN_REG0042, 0xb8);
+	hdptx_write(hdptx, CMN_REG0043, 0x00);
+	hdptx_write(hdptx, CMN_REG0044, 0x46);
+	hdptx_write(hdptx, CMN_REG0045, 0x24);
+	hdptx_write(hdptx, CMN_REG0046, 0xff);
+	hdptx_write(hdptx, CMN_REG0047, 0x00);
+	hdptx_write(hdptx, CMN_REG0048, 0x44);
+	hdptx_write(hdptx, CMN_REG0049, 0xfa);
+	hdptx_write(hdptx, CMN_REG004A, 0x08);
+	hdptx_write(hdptx, CMN_REG004B, 0x00);
+	hdptx_write(hdptx, CMN_REG004C, 0x01);
+	hdptx_write(hdptx, CMN_REG004D, 0x64);
+	hdptx_write(hdptx, CMN_REG004E, 0x14);
+	hdptx_write(hdptx, CMN_REG004F, 0x00);
+	hdptx_write(hdptx, CMN_REG0050, 0x00);
+	hdptx_write(hdptx, CMN_REG0051, 0x00);
+	hdptx_write(hdptx, CMN_REG0055, 0x00);
+	hdptx_write(hdptx, CMN_REG0059, 0x11);
+	hdptx_write(hdptx, CMN_REG005A, 0x03);
+	hdptx_write(hdptx, CMN_REG005C, 0x05);
+	hdptx_write(hdptx, CMN_REG005D, 0x0c);
+	hdptx_write(hdptx, CMN_REG005E, 0x07);
+	hdptx_write(hdptx, CMN_REG005F, 0x01);
+	hdptx_write(hdptx, CMN_REG0060, 0x01);
+	hdptx_write(hdptx, CMN_REG0064, 0x07);
+	hdptx_write(hdptx, CMN_REG0065, 0x00);
+	hdptx_write(hdptx, CMN_REG0069, 0x00);
+	hdptx_write(hdptx, CMN_REG006B, 0x04);
+	hdptx_write(hdptx, CMN_REG006C, 0x00);
+	hdptx_write(hdptx, CMN_REG0070, 0x01);
+	hdptx_write(hdptx, CMN_REG0073, 0x30);
+	hdptx_write(hdptx, CMN_REG0074, 0x00);
+	hdptx_write(hdptx, CMN_REG0075, 0x20);
+	hdptx_write(hdptx, CMN_REG0076, 0x30);
+	hdptx_write(hdptx, CMN_REG0077, 0x08);
+	hdptx_write(hdptx, CMN_REG0078, 0x0c);
+	hdptx_write(hdptx, CMN_REG0079, 0x00);
+	hdptx_write(hdptx, CMN_REG007B, 0x00);
+	hdptx_write(hdptx, CMN_REG007C, 0x00);
+	hdptx_write(hdptx, CMN_REG007D, 0x00);
+	hdptx_write(hdptx, CMN_REG007E, 0x00);
+	hdptx_write(hdptx, CMN_REG007F, 0x00);
+	hdptx_write(hdptx, CMN_REG0080, 0x00);
+	hdptx_write(hdptx, CMN_REG0081, 0x09);
+	hdptx_write(hdptx, CMN_REG0082, 0x04);
+	hdptx_write(hdptx, CMN_REG0083, 0x24);
+	hdptx_write(hdptx, CMN_REG0084, 0x20);
+	hdptx_write(hdptx, CMN_REG0085, 0x03);
+	hdptx_write(hdptx, CMN_REG0086, 0x01);
+	hdptx_update_bits(hdptx, CMN_REG0086, PLL_PCG_POSTDIV_SEL_MASK,
+			  PLL_PCG_POSTDIV_SEL(cfg->pms_sdiv));
+	hdptx_update_bits(hdptx, CMN_REG0086, PLL_PCG_CLK_SEL_MASK,
+			  PLL_PCG_CLK_SEL(color_depth));
+	hdptx_write(hdptx, CMN_REG0087, 0x0c);
+	hdptx_write(hdptx, CMN_REG0089, 0x02);
+	hdptx_write(hdptx, CMN_REG008A, 0x55);
+	hdptx_write(hdptx, CMN_REG008B, 0x25);
+	hdptx_write(hdptx, CMN_REG008C, 0x2c);
+	hdptx_write(hdptx, CMN_REG008D, 0x22);
+	hdptx_write(hdptx, CMN_REG008E, 0x14);
+	hdptx_write(hdptx, CMN_REG008F, 0x20);
+	hdptx_write(hdptx, CMN_REG0090, 0x00);
+	hdptx_write(hdptx, CMN_REG0091, 0x00);
+	hdptx_write(hdptx, CMN_REG0092, 0x00);
+	hdptx_write(hdptx, CMN_REG0093, 0x00);
+	hdptx_write(hdptx, CMN_REG0095, 0x00);
+	hdptx_write(hdptx, CMN_REG0097, 0x00);
+	hdptx_write(hdptx, CMN_REG0099, 0x00);
+	hdptx_write(hdptx, CMN_REG009A, 0x11);
+	hdptx_write(hdptx, CMN_REG009B, 0x10);
+	hdptx_write(hdptx, SB_REG0114, 0x00);
+	hdptx_write(hdptx, SB_REG0115, 0x00);
+	hdptx_write(hdptx, SB_REG0116, 0x00);
+	hdptx_write(hdptx, SB_REG0117, 0x00);
+
+	return hdptx_post_enable_pll(hdptx);
+}
+
 static int hdptx_ropll_cmn_config(struct rockchip_hdptx_phy *hdptx, unsigned long bit_rate)
 {
 	int bus_width = hdptx->bus_width;
@@ -1245,14 +1402,6 @@ static int hdptx_ropll_tmds_mode_config(struct rockchip_hdptx_phy *hdptx, u32 ra
 	if (color_depth)
 		bit_rate = bit_rate * 5 / 4;
 
-	if (!hdptx->pll_locked) {
-		int ret;
-
-		ret = hdptx_ropll_cmn_config(hdptx, bit_rate);
-		if (ret)
-			return ret;
-	}
-
 	hdptx_write(hdptx, SB_REG0114, 0x00);
 	hdptx_write(hdptx, SB_REG0115, 0x00);
 	hdptx_write(hdptx, SB_REG0116, 0x00);
@@ -1338,6 +1487,19 @@ static int hdptx_ropll_tmds_mode_config(struct rockchip_hdptx_phy *hdptx, u32 ra
 	hdptx_write(hdptx, LANE_REG061F, 0x15);
 	hdptx_write(hdptx, LANE_REG0620, 0xa0);
 
+	hdptx_write(hdptx, LANE_REG0303, 0x2f);
+	hdptx_write(hdptx, LANE_REG0403, 0x2f);
+	hdptx_write(hdptx, LANE_REG0503, 0x2f);
+	hdptx_write(hdptx, LANE_REG0603, 0x2f);
+	hdptx_write(hdptx, LANE_REG0305, 0x03);
+	hdptx_write(hdptx, LANE_REG0405, 0x03);
+	hdptx_write(hdptx, LANE_REG0505, 0x03);
+	hdptx_write(hdptx, LANE_REG0605, 0x03);
+	hdptx_write(hdptx, LANE_REG0306, 0x1c);
+	hdptx_write(hdptx, LANE_REG0406, 0x1c);
+	hdptx_write(hdptx, LANE_REG0506, 0x1c);
+	hdptx_write(hdptx, LANE_REG0606, 0x1c);
+
 	return hdptx_post_enable_lane(hdptx);
 }
 
@@ -1561,159 +1723,33 @@ static int hdptx_ropll_frl_mode_config(struct rockchip_hdptx_phy *hdptx, u32 rat
 	hdptx_write(hdptx, LANE_REG061F, 0x15);
 	hdptx_write(hdptx, LANE_REG0620, 0xa0);
 
+	hdptx_write(hdptx, LANE_REG0303, 0x2f);
+	hdptx_write(hdptx, LANE_REG0403, 0x2f);
+	hdptx_write(hdptx, LANE_REG0503, 0x2f);
+	hdptx_write(hdptx, LANE_REG0603, 0x2f);
+	hdptx_write(hdptx, LANE_REG0305, 0x03);
+	hdptx_write(hdptx, LANE_REG0405, 0x03);
+	hdptx_write(hdptx, LANE_REG0505, 0x03);
+	hdptx_write(hdptx, LANE_REG0605, 0x03);
+	hdptx_write(hdptx, LANE_REG0306, 0xfc);
+	hdptx_write(hdptx, LANE_REG0406, 0xfc);
+	hdptx_write(hdptx, LANE_REG0506, 0xfc);
+	hdptx_write(hdptx, LANE_REG0606, 0xfc);
+
+	hdptx_write(hdptx, LANE_REG0305, 0x4f);
+	hdptx_write(hdptx, LANE_REG0405, 0x4f);
+	hdptx_write(hdptx, LANE_REG0505, 0x4f);
+	hdptx_write(hdptx, LANE_REG0605, 0x4f);
+	hdptx_write(hdptx, LANE_REG0304, 0x14);
+	hdptx_write(hdptx, LANE_REG0404, 0x14);
+	hdptx_write(hdptx, LANE_REG0504, 0x14);
+	hdptx_write(hdptx, LANE_REG0604, 0x14);
+
 	return hdptx_post_power_up(hdptx);
 }
 
 static int hdptx_lcpll_frl_mode_config(struct rockchip_hdptx_phy *hdptx, u32 rate)
 {
-	u32 bit_rate = rate & DATA_RATE_MASK;
-	u8 color_depth = (rate & COLOR_DEPTH_MASK) ? 1 : 0;
-	struct lcpll_config *cfg = lcpll_cfg;
-
-	for (; cfg->bit_rate != ~0; cfg++)
-		if (bit_rate == cfg->bit_rate)
-			break;
-
-	if (cfg->bit_rate == ~0)
-		return -EINVAL;
-
-	hdptx_pre_power_up(hdptx);
-
-	hdptx_update_bits(hdptx, CMN_REG0008, LCPLL_EN_MASK |
-		       LCPLL_LCVCO_MODE_EN_MASK, LCPLL_EN(1) |
-		       LCPLL_LCVCO_MODE_EN(cfg->lcvco_mode_en));
-	hdptx_write(hdptx, CMN_REG0009, 0x0c);
-	hdptx_write(hdptx, CMN_REG000A, 0x83);
-	hdptx_write(hdptx, CMN_REG000B, 0x06);
-	hdptx_write(hdptx, CMN_REG000C, 0x20);
-	hdptx_write(hdptx, CMN_REG000D, 0xb8);
-	hdptx_write(hdptx, CMN_REG000E, 0x0f);
-	hdptx_write(hdptx, CMN_REG000F, 0x0f);
-	hdptx_write(hdptx, CMN_REG0010, 0x04);
-	hdptx_write(hdptx, CMN_REG0011, 0x00);
-	hdptx_write(hdptx, CMN_REG0012, 0x26);
-	hdptx_write(hdptx, CMN_REG0013, 0x22);
-	hdptx_write(hdptx, CMN_REG0014, 0x24);
-	hdptx_write(hdptx, CMN_REG0015, 0x77);
-	hdptx_write(hdptx, CMN_REG0016, 0x08);
-	hdptx_write(hdptx, CMN_REG0017, 0x00);
-	hdptx_write(hdptx, CMN_REG0018, 0x04);
-	hdptx_write(hdptx, CMN_REG0019, 0x48);
-	hdptx_write(hdptx, CMN_REG001A, 0x01);
-	hdptx_write(hdptx, CMN_REG001B, 0x00);
-	hdptx_write(hdptx, CMN_REG001C, 0x01);
-	hdptx_write(hdptx, CMN_REG001D, 0x64);
-	hdptx_update_bits(hdptx, CMN_REG001E, LCPLL_PI_EN_MASK |
-		       LCPLL_100M_CLK_EN_MASK,
-		       LCPLL_PI_EN(cfg->pi_en) |
-		       LCPLL_100M_CLK_EN(cfg->clk_en_100m));
-	hdptx_write(hdptx, CMN_REG001F, 0x00);
-	hdptx_write(hdptx, CMN_REG0020, cfg->pms_mdiv);
-	hdptx_write(hdptx, CMN_REG0021, cfg->pms_mdiv_afc);
-	hdptx_write(hdptx, CMN_REG0022, (cfg->pms_pdiv << 4) | cfg->pms_refdiv);
-	hdptx_write(hdptx, CMN_REG0023, (cfg->pms_sdiv << 4) | cfg->pms_sdiv);
-	hdptx_write(hdptx, CMN_REG0025, 0x10);
-	hdptx_write(hdptx, CMN_REG0026, 0x53);
-	hdptx_write(hdptx, CMN_REG0027, 0x01);
-	hdptx_write(hdptx, CMN_REG0028, 0x0d);
-	hdptx_write(hdptx, CMN_REG0029, 0x01);
-	hdptx_write(hdptx, CMN_REG002A, cfg->sdm_deno);
-	hdptx_write(hdptx, CMN_REG002B, cfg->sdm_num_sign);
-	hdptx_write(hdptx, CMN_REG002C, cfg->sdm_num);
-	hdptx_update_bits(hdptx, CMN_REG002D, LCPLL_SDC_N_MASK,
-			  LCPLL_SDC_N(cfg->sdc_n));
-	hdptx_write(hdptx, CMN_REG002E, 0x02);
-	hdptx_write(hdptx, CMN_REG002F, 0x0d);
-	hdptx_write(hdptx, CMN_REG0030, 0x00);
-	hdptx_write(hdptx, CMN_REG0031, 0x20);
-	hdptx_write(hdptx, CMN_REG0032, 0x30);
-	hdptx_write(hdptx, CMN_REG0033, 0x0b);
-	hdptx_write(hdptx, CMN_REG0034, 0x23);
-	hdptx_write(hdptx, CMN_REG0035, 0x00);
-	hdptx_write(hdptx, CMN_REG0038, 0x00);
-	hdptx_write(hdptx, CMN_REG0039, 0x00);
-	hdptx_write(hdptx, CMN_REG003A, 0x00);
-	hdptx_write(hdptx, CMN_REG003B, 0x00);
-	hdptx_write(hdptx, CMN_REG003C, 0x80);
-	hdptx_write(hdptx, CMN_REG003D, 0x00);
-	hdptx_write(hdptx, CMN_REG003E, 0x0c);
-	hdptx_write(hdptx, CMN_REG003F, 0x83);
-	hdptx_write(hdptx, CMN_REG0040, 0x06);
-	hdptx_write(hdptx, CMN_REG0041, 0x20);
-	hdptx_write(hdptx, CMN_REG0042, 0xb8);
-	hdptx_write(hdptx, CMN_REG0043, 0x00);
-	hdptx_write(hdptx, CMN_REG0044, 0x46);
-	hdptx_write(hdptx, CMN_REG0045, 0x24);
-	hdptx_write(hdptx, CMN_REG0046, 0xff);
-	hdptx_write(hdptx, CMN_REG0047, 0x00);
-	hdptx_write(hdptx, CMN_REG0048, 0x44);
-	hdptx_write(hdptx, CMN_REG0049, 0xfa);
-	hdptx_write(hdptx, CMN_REG004A, 0x08);
-	hdptx_write(hdptx, CMN_REG004B, 0x00);
-	hdptx_write(hdptx, CMN_REG004C, 0x01);
-	hdptx_write(hdptx, CMN_REG004D, 0x64);
-	hdptx_write(hdptx, CMN_REG004E, 0x14);
-	hdptx_write(hdptx, CMN_REG004F, 0x00);
-	hdptx_write(hdptx, CMN_REG0050, 0x00);
-	hdptx_write(hdptx, CMN_REG0051, 0x00);
-	hdptx_write(hdptx, CMN_REG0055, 0x00);
-	hdptx_write(hdptx, CMN_REG0059, 0x11);
-	hdptx_write(hdptx, CMN_REG005A, 0x03);
-	hdptx_write(hdptx, CMN_REG005C, 0x05);
-	hdptx_write(hdptx, CMN_REG005D, 0x0c);
-	hdptx_write(hdptx, CMN_REG005E, 0x07);
-	hdptx_write(hdptx, CMN_REG005F, 0x01);
-	hdptx_write(hdptx, CMN_REG0060, 0x01);
-	hdptx_write(hdptx, CMN_REG0064, 0x07);
-	hdptx_write(hdptx, CMN_REG0065, 0x00);
-	hdptx_write(hdptx, CMN_REG0069, 0x00);
-	hdptx_write(hdptx, CMN_REG006B, 0x04);
-	hdptx_write(hdptx, CMN_REG006C, 0x00);
-	hdptx_write(hdptx, CMN_REG0070, 0x01);
-	hdptx_write(hdptx, CMN_REG0073, 0x30);
-	hdptx_write(hdptx, CMN_REG0074, 0x00);
-	hdptx_write(hdptx, CMN_REG0075, 0x20);
-	hdptx_write(hdptx, CMN_REG0076, 0x30);
-	hdptx_write(hdptx, CMN_REG0077, 0x08);
-	hdptx_write(hdptx, CMN_REG0078, 0x0c);
-	hdptx_write(hdptx, CMN_REG0079, 0x00);
-	hdptx_write(hdptx, CMN_REG007B, 0x00);
-	hdptx_write(hdptx, CMN_REG007C, 0x00);
-	hdptx_write(hdptx, CMN_REG007D, 0x00);
-	hdptx_write(hdptx, CMN_REG007E, 0x00);
-	hdptx_write(hdptx, CMN_REG007F, 0x00);
-	hdptx_write(hdptx, CMN_REG0080, 0x00);
-	hdptx_write(hdptx, CMN_REG0081, 0x09);
-	hdptx_write(hdptx, CMN_REG0082, 0x04);
-	hdptx_write(hdptx, CMN_REG0083, 0x24);
-	hdptx_write(hdptx, CMN_REG0084, 0x20);
-	hdptx_write(hdptx, CMN_REG0085, 0x03);
-	hdptx_write(hdptx, CMN_REG0086, 0x01);
-	hdptx_update_bits(hdptx, CMN_REG0086, PLL_PCG_POSTDIV_SEL_MASK,
-			  PLL_PCG_POSTDIV_SEL(cfg->pms_sdiv));
-	hdptx_update_bits(hdptx, CMN_REG0086, PLL_PCG_CLK_SEL_MASK,
-			  PLL_PCG_CLK_SEL(color_depth));
-	hdptx_write(hdptx, CMN_REG0087, 0x0c);
-	hdptx_write(hdptx, CMN_REG0089, 0x02);
-	hdptx_write(hdptx, CMN_REG008A, 0x55);
-	hdptx_write(hdptx, CMN_REG008B, 0x25);
-	hdptx_write(hdptx, CMN_REG008C, 0x2c);
-	hdptx_write(hdptx, CMN_REG008D, 0x22);
-	hdptx_write(hdptx, CMN_REG008E, 0x14);
-	hdptx_write(hdptx, CMN_REG008F, 0x20);
-	hdptx_write(hdptx, CMN_REG0090, 0x00);
-	hdptx_write(hdptx, CMN_REG0091, 0x00);
-	hdptx_write(hdptx, CMN_REG0092, 0x00);
-	hdptx_write(hdptx, CMN_REG0093, 0x00);
-	hdptx_write(hdptx, CMN_REG0095, 0x00);
-	hdptx_write(hdptx, CMN_REG0097, 0x00);
-	hdptx_write(hdptx, CMN_REG0099, 0x00);
-	hdptx_write(hdptx, CMN_REG009A, 0x11);
-	hdptx_write(hdptx, CMN_REG009B, 0x10);
-	hdptx_write(hdptx, SB_REG0114, 0x00);
-	hdptx_write(hdptx, SB_REG0115, 0x00);
-	hdptx_write(hdptx, SB_REG0116, 0x00);
-	hdptx_write(hdptx, SB_REG0117, 0x00);
 	hdptx_write(hdptx, LNTOP_REG0200, 0x04);
 	hdptx_write(hdptx, LNTOP_REG0201, 0x00);
 	hdptx_write(hdptx, LNTOP_REG0202, 0x00);
@@ -1779,7 +1815,7 @@ static int hdptx_lcpll_frl_mode_config(struct rockchip_hdptx_phy *hdptx, u32 rat
 	hdptx_write(hdptx, LANE_REG061F, 0x15);
 	hdptx_write(hdptx, LANE_REG0620, 0xa0);
 
-	return hdptx_post_power_up(hdptx);
+	return hdptx_post_enable_lane(hdptx);
 }
 
 static int rockchip_hdptx_phy_power_on(struct rockchip_phy *phy)
@@ -2007,13 +2043,21 @@ static ulong hdptx_clk_set_rate(struct clk *clk, ulong rate)
 	u8 color_depth = (bus_width & COLOR_DEPTH_MASK) ? 1 : 0;
 	ulong new_rate = -ENOENT;
 
-	if (color_depth)
+	if (color_depth && rate <= 600000000)
 		rate = (rate / 100) * 5 / 4;
 	else
 		rate = rate / 100;
-	if (!hdptx_ropll_cmn_config(hdptx, rate)) {
-		new_rate = rate;
-		priv->rate = rate;
+
+	if (rate > 6000000) {
+		if (!hdptx_lcpll_cmn_config(hdptx, rate)) {
+			new_rate = rate;
+			priv->rate = rate;
+		}
+	} else {
+		if (!hdptx_ropll_cmn_config(hdptx, rate)) {
+			new_rate = rate;
+			priv->rate = rate;
+		}
 	}
 
 	return new_rate;
diff --git a/drivers/video/drm/rk618_lvds.c b/drivers/video/drm/rk618_lvds.c
index 4584147..4ef6bf8 100644
--- a/drivers/video/drm/rk618_lvds.c
+++ b/drivers/video/drm/rk618_lvds.c
@@ -14,6 +14,7 @@
 #include "rockchip_display.h"
 #include "rockchip_bridge.h"
 #include "rockchip_panel.h"
+#include "rockchip_connector.h"
 
 #include "rk618.h"
 
@@ -38,7 +39,7 @@ static int lvds_write(struct rk618_lvds_priv *priv, u16 reg, u32 val)
 static void rk618_lvds_bridge_enable(struct rockchip_bridge *bridge)
 {
 	struct rk618_lvds_priv *priv = dev_get_priv(bridge->dev);
-	struct rockchip_panel *panel = state_get_panel(bridge->state);
+	struct rockchip_panel *panel = bridge->conn->panel;
 	u32 value, format;
 
 	rk618_frc_dclk_invert(priv->parent);
diff --git a/drivers/video/drm/rockchip_bridge.c b/drivers/video/drm/rockchip_bridge.c
index 354bc5e..aa08992 100644
--- a/drivers/video/drm/rockchip_bridge.c
+++ b/drivers/video/drm/rockchip_bridge.c
@@ -6,15 +6,17 @@
 #include "rockchip_bridge.h"
 
 void rockchip_bridge_init(struct rockchip_bridge *bridge,
+			  struct rockchip_connector *conn,
 			  struct display_state *state)
 {
 	if (!bridge)
 		return;
 
+	bridge->conn = conn;
 	bridge->state = state;
 
 	if (bridge->next_bridge)
-		rockchip_bridge_init(bridge->next_bridge, state);
+		rockchip_bridge_init(bridge->next_bridge, conn, state);
 }
 
 void rockchip_bridge_pre_enable(struct rockchip_bridge *bridge)
@@ -77,3 +79,15 @@ void rockchip_bridge_mode_set(struct rockchip_bridge *bridge,
 	if (bridge->next_bridge)
 		rockchip_bridge_mode_set(bridge->next_bridge, mode);
 }
+
+bool rockchip_bridge_detect(struct rockchip_bridge *bridge)
+{
+	if (bridge->funcs && bridge->funcs->detect)
+		if (!bridge->funcs->detect(bridge))
+			return false;
+
+	if (bridge->next_bridge)
+		return rockchip_bridge_detect(bridge->next_bridge);
+
+	return true;
+}
diff --git a/drivers/video/drm/rockchip_bridge.h b/drivers/video/drm/rockchip_bridge.h
index c311bd7..3ce20b6 100644
--- a/drivers/video/drm/rockchip_bridge.h
+++ b/drivers/video/drm/rockchip_bridge.h
@@ -14,6 +14,7 @@
 struct display_state;
 struct rockchip_bridge;
 struct drm_display_mode;
+struct rockchip_connector;
 
 struct rockchip_bridge_funcs {
 	void (*enable)(struct rockchip_bridge *bridge);
@@ -22,16 +23,19 @@ struct rockchip_bridge_funcs {
 	void (*post_disable)(struct rockchip_bridge *bridge);
 	void (*mode_set)(struct rockchip_bridge *bridge,
 			 const struct drm_display_mode *mode);
+	bool (*detect)(struct rockchip_bridge *bridge);
 };
 
 struct rockchip_bridge {
 	struct udevice *dev;
 	const struct rockchip_bridge_funcs *funcs;
 	struct rockchip_bridge *next_bridge;
+	struct rockchip_connector *conn;
 	struct display_state *state;
 };
 
 void rockchip_bridge_init(struct rockchip_bridge *bridge,
+			  struct rockchip_connector *conn,
 			  struct display_state *state);
 void rockchip_bridge_enable(struct rockchip_bridge *bridge);
 void rockchip_bridge_disable(struct rockchip_bridge *bridge);
@@ -39,5 +43,6 @@ void rockchip_bridge_pre_enable(struct rockchip_bridge *bridge);
 void rockchip_bridge_post_disable(struct rockchip_bridge *bridge);
 void rockchip_bridge_mode_set(struct rockchip_bridge *bridge,
 			      const struct drm_display_mode *mode);
+bool rockchip_bridge_detect(struct rockchip_bridge *bridge);
 
 #endif
diff --git a/drivers/video/drm/rockchip_connector.c b/drivers/video/drm/rockchip_connector.c
new file mode 100644
index 0000000..fb7adfa
--- /dev/null
+++ b/drivers/video/drm/rockchip_connector.c
@@ -0,0 +1,324 @@
+// SPDX-License-Identifier: GPL-2.0-or-later
+/*
+ * Rockchip Connector Helper Function
+ *
+ * Copyright (C) 2021 Rockchip Electronics Co., Ltd
+ */
+
+#include <dm/device.h>
+#include <dm/read.h>
+#include <linux/compat.h>
+#include <linux/list.h>
+
+#include "rockchip_display.h"
+#include "rockchip_crtc.h"
+#include "rockchip_connector.h"
+#include "rockchip_phy.h"
+
+static LIST_HEAD(rockchip_connector_list);
+
+int rockchip_connector_bind(struct rockchip_connector *conn, struct udevice *dev, int id,
+			    const struct rockchip_connector_funcs *funcs, void *data, int type)
+{
+	conn->id = id;
+	conn->dev = dev;
+	conn->funcs = funcs;
+	conn->data = data;
+	conn->type = type;
+	list_add_tail(&conn->head, &rockchip_connector_list);
+
+	return 0;
+}
+
+struct rockchip_connector *get_rockchip_connector_by_device(struct udevice *dev)
+{
+	struct rockchip_connector *conn;
+
+	list_for_each_entry(conn, &rockchip_connector_list, head) {
+		if (conn->dev == dev)
+			return conn;
+	}
+
+	return NULL;
+}
+
+int rockchip_connector_pre_init(struct display_state *state)
+{
+	int ret = 0;
+	struct rockchip_connector *conn;
+
+	conn = state->conn_state.connector;
+	if (conn->funcs->pre_init) {
+		ret = conn->funcs->pre_init(conn, state);
+		if (ret)
+			return ret;
+		if (state->conn_state.secondary) {
+			conn = state->conn_state.connector;
+			ret = conn->funcs->pre_init(conn, state);
+			if (ret)
+				return ret;
+		}
+	}
+
+	return ret;
+}
+
+static int rockchip_connector_path_init(struct rockchip_connector *conn,
+					struct display_state *state)
+{
+	int ret = 0;
+
+	if (conn->panel)
+		rockchip_panel_init(conn->panel, conn, state);
+
+	if (conn->bridge)
+		rockchip_bridge_init(conn->bridge, conn, state);
+
+	if (conn->funcs->init) {
+		ret = conn->funcs->init(conn, state);
+		if (ret)
+			return ret;
+	}
+
+	if (conn->phy)
+		rockchip_phy_init(conn->phy);
+
+	return ret;
+}
+
+int rockchip_connector_init(struct display_state *state)
+{
+	int ret = 0;
+	struct rockchip_connector *conn;
+
+	conn = state->conn_state.connector;
+	ret = rockchip_connector_path_init(conn, state);
+	if (ret)
+		return ret;
+	if (state->conn_state.secondary) {
+		conn = state->conn_state.secondary;
+		ret = rockchip_connector_path_init(conn, state);
+		if (ret)
+			return ret;
+	}
+
+	return ret;
+}
+
+int rockchip_connector_deinit(struct display_state *state)
+{
+	struct rockchip_connector *conn;
+
+	conn = state->conn_state.connector;
+	if (conn->funcs->deinit) {
+		conn->funcs->deinit(conn, state);
+		if (state->conn_state.secondary) {
+			conn = state->conn_state.secondary;
+			conn->funcs->deinit(conn, state);
+		}
+	}
+
+	return 0;
+}
+
+static bool rockchip_connector_path_detect(struct rockchip_connector *conn,
+					   struct display_state *state)
+{
+	int ret;
+
+	if (conn->funcs->detect) {
+		ret = conn->funcs->detect(conn, state);
+		if (!ret) {
+			printf("%s disconnected\n", conn->dev->name);
+			return false;
+		}
+	}
+
+	if (conn->bridge) {
+		ret = rockchip_bridge_detect(conn->bridge);
+		if (!ret) {
+			printf("%s disconnected\n",
+			       dev_np(conn->bridge->dev)->full_name);
+			return false;
+		}
+	}
+
+	return true;
+}
+
+bool rockchip_connector_detect(struct display_state *state)
+{
+	bool ret;
+	struct rockchip_connector *conn;
+
+	conn = state->conn_state.connector;
+	ret = rockchip_connector_path_detect(conn, state);
+	if (!ret)
+		return false;
+	if (state->conn_state.secondary) {
+		conn = state->conn_state.secondary;
+		ret = rockchip_connector_path_detect(conn, state);
+		if (!ret)
+			return false;
+	}
+
+	return true;
+}
+
+int rockchip_connector_get_timing(struct display_state *state)
+{
+	int ret = 0;
+	struct rockchip_connector *conn;
+
+	conn = state->conn_state.connector;
+	if (conn->funcs->get_timing) {
+		ret = conn->funcs->get_timing(conn, state);
+		if (ret)
+			return ret;
+		if (state->conn_state.secondary) {
+			conn = state->conn_state.secondary;
+			ret = conn->funcs->get_timing(conn, state);
+			if (ret)
+				return ret;
+		}
+	}
+
+	return ret;
+}
+
+int rockchip_connector_get_edid(struct display_state *state)
+{
+	int ret = 0;
+	struct rockchip_connector *conn;
+
+	conn = state->conn_state.connector;
+	if (conn->funcs->get_edid) {
+		ret = conn->funcs->get_edid(conn, state);
+		if (ret)
+			return ret;
+		if (state->conn_state.secondary) {
+			conn = state->conn_state.secondary;
+			ret = conn->funcs->get_edid(conn, state);
+			if (ret)
+				return ret;
+		}
+	}
+
+	return ret;
+}
+
+static int rockchip_connector_path_pre_enable(struct rockchip_connector *conn,
+					      struct display_state *state)
+{
+	if (conn->funcs->prepare)
+		conn->funcs->prepare(conn, state);
+
+	if (conn->bridge)
+		rockchip_bridge_pre_enable(conn->bridge);
+
+	if (conn->panel)
+		rockchip_panel_prepare(conn->panel);
+
+	return 0;
+}
+
+int rockchip_connector_pre_enable(struct display_state *state)
+{
+	struct rockchip_connector *conn;
+
+	conn = state->conn_state.connector;
+	rockchip_connector_path_pre_enable(conn, state);
+	if (state->conn_state.secondary) {
+		conn = state->conn_state.secondary;
+		rockchip_connector_path_pre_enable(conn, state);
+	}
+
+	return 0;
+}
+
+static int rockchip_connector_path_enable(struct rockchip_connector *conn,
+					  struct display_state *state)
+{
+	if (conn->funcs->enable)
+		conn->funcs->enable(conn, state);
+
+	if (conn->bridge)
+		rockchip_bridge_enable(conn->bridge);
+
+	if (conn->panel)
+		rockchip_panel_enable(conn->panel);
+
+	return 0;
+}
+
+int rockchip_connector_enable(struct display_state *state)
+{
+	struct rockchip_connector *conn;
+
+	conn = state->conn_state.connector;
+	rockchip_connector_path_enable(conn, state);
+	if (state->conn_state.secondary) {
+		conn = state->conn_state.secondary;
+		rockchip_connector_path_enable(conn, state);
+	}
+
+	return 0;
+}
+
+static int rockchip_connector_path_disable(struct rockchip_connector *conn,
+					   struct display_state *state)
+{
+	if (conn->panel)
+		rockchip_panel_disable(conn->panel);
+
+	if (conn->bridge)
+		rockchip_bridge_disable(conn->bridge);
+
+	if (conn->funcs->disable)
+		conn->funcs->disable(conn, state);
+
+	return 0;
+}
+
+int rockchip_connector_disable(struct display_state *state)
+{
+	struct rockchip_connector *conn;
+
+	conn = state->conn_state.connector;
+	rockchip_connector_path_disable(conn, state);
+	if (state->conn_state.secondary) {
+		conn = state->conn_state.secondary;
+		rockchip_connector_path_disable(conn, state);
+	}
+
+	return 0;
+}
+
+static int rockchip_connector_path_post_disable(struct rockchip_connector *conn,
+						struct display_state *state)
+{
+	if (conn->panel)
+		rockchip_panel_unprepare(conn->panel);
+
+	if (conn->bridge)
+		rockchip_bridge_post_disable(conn->bridge);
+
+	if (conn->funcs->unprepare)
+		conn->funcs->unprepare(conn, state);
+
+	return 0;
+}
+
+int rockchip_connector_post_disable(struct display_state *state)
+{
+	struct rockchip_connector *conn;
+
+	conn = state->conn_state.connector;
+	rockchip_connector_path_post_disable(conn, state);
+	if (state->conn_state.secondary) {
+		conn = state->conn_state.secondary;
+		rockchip_connector_path_post_disable(conn, state);
+	}
+
+	return 0;
+}
diff --git a/drivers/video/drm/rockchip_connector.h b/drivers/video/drm/rockchip_connector.h
index 331e86a..39a81e4 100644
--- a/drivers/video/drm/rockchip_connector.h
+++ b/drivers/video/drm/rockchip_connector.h
@@ -7,10 +7,20 @@
 #ifndef _ROCKCHIP_CONNECTOR_H_
 #define _ROCKCHIP_CONNECTOR_H_
 
+#include "rockchip_bridge.h"
+#include "rockchip_panel.h"
+
 struct rockchip_connector {
-	const struct rockchip_connector_funcs *funcs;
+	struct udevice *dev;
+	struct rockchip_bridge *bridge;
+	struct rockchip_panel *panel;
+	struct rockchip_phy *phy;
+	struct list_head head;
+	int id;
+	int type;
 
-	const void *data;
+	const struct rockchip_connector_funcs *funcs;
+	void *data;
 };
 
 struct rockchip_connector_funcs {
@@ -18,21 +28,21 @@ struct rockchip_connector_funcs {
 	 * pre init connector, prepare some parameter out_if, this will be
 	 * used by rockchip_display.c and vop
 	 */
-	int (*pre_init)(struct display_state *state);
+	int (*pre_init)(struct rockchip_connector *connector, struct display_state *state);
 
 	/*
 	 * init connector, prepare resource to ensure
 	 * detect and get_timing can works
 	 */
-	int (*init)(struct display_state *state);
+	int (*init)(struct rockchip_connector *connector, struct display_state *state);
 
-	void (*deinit)(struct display_state *state);
+	void (*deinit)(struct rockchip_connector *connector, struct display_state *state);
 	/*
 	 * Optional, if connector not support hotplug,
 	 * Returns:
 	 *   0 means disconnected, else means connected
 	 */
-	int (*detect)(struct display_state *state);
+	int (*detect)(struct rockchip_connector *connector, struct display_state *state);
 	/*
 	 * Optional, if implement it, need fill the timing data:
 	 *     state->conn_state->mode
@@ -40,32 +50,44 @@ struct rockchip_connector_funcs {
 	 * Returns:
 	 *   0 means success, else means failed
 	 */
-	int (*get_timing)(struct display_state *state);
+	int (*get_timing)(struct rockchip_connector *connector, struct display_state *state);
 	/*
 	 * Optional, if implement it, need fill the edid data:
 	 *     state->conn_state->edid
 	 * Returns:
 	 *   0 means success, else means failed
 	 */
-	int (*get_edid)(struct display_state *state);
+	int (*get_edid)(struct rockchip_connector *connector, struct display_state *state);
 	/*
 	 * call before crtc enable.
 	 */
-	int (*prepare)(struct display_state *state);
+	int (*prepare)(struct rockchip_connector *connector, struct display_state *state);
 	/*
 	 * call after crtc enable
 	 */
-	int (*enable)(struct display_state *state);
-	int (*disable)(struct display_state *state);
-	void (*unprepare)(struct display_state *state);
-	/*
-	 * Save data to dts, then you can share data to kernel space.
-	 */
-	int (*fixup_dts)(struct display_state *state, void *blob);
+	int (*enable)(struct rockchip_connector *connector, struct display_state *state);
+	int (*disable)(struct rockchip_connector *connector, struct display_state *state);
+	void (*unprepare)(struct rockchip_connector *connector, struct display_state *state);
+
+	int (*check)(struct rockchip_connector *connector, struct display_state *state);
+	int (*mode_valid)(struct rockchip_connector *connector, struct display_state *state);
 };
 
 const struct rockchip_connector *
 rockchip_get_connector(const void *blob, int connector_node);
+int rockchip_connector_bind(struct rockchip_connector *connector, struct udevice *dev, int id,
+			    const struct rockchip_connector_funcs *funcs, void *data, int type);
+struct rockchip_connector *get_rockchip_connector_by_device(struct udevice *dev);
+int rockchip_connector_pre_init(struct display_state *state);
+int rockchip_connector_init(struct display_state *state);
+int rockchip_connector_deinit(struct display_state *state);
+bool rockchip_connector_detect(struct display_state *state);
+int rockchip_connector_get_timing(struct display_state *state);
+int rockchip_connector_get_edid(struct display_state *state);
+int rockchip_connector_pre_enable(struct display_state *state);
+int rockchip_connector_enable(struct display_state *state);
+int rockchip_connector_disable(struct display_state *state);
+int rockchip_connector_post_disable(struct display_state *state);
 
 #ifdef CONFIG_DRM_ROCKCHIP_ANALOGIX_DP
 struct rockchip_dp_chip_data;
diff --git a/drivers/video/drm/rockchip_crtc.c b/drivers/video/drm/rockchip_crtc.c
index a0f3958..1e7376d 100644
--- a/drivers/video/drm/rockchip_crtc.c
+++ b/drivers/video/drm/rockchip_crtc.c
@@ -36,6 +36,11 @@ static const struct rockchip_crtc rk3036_vop_data = {
 	.data = &rk3036_vop,
 };
 
+static const struct rockchip_crtc rv1106_vop_data = {
+	.funcs = &rockchip_vop_funcs,
+	.data = &rv1106_vop,
+};
+
 static const struct rockchip_crtc rv1108_vop_data = {
 	.funcs = &rockchip_vop_funcs,
 	.data = &rv1108_vop,
@@ -124,6 +129,9 @@ static const struct udevice_id rockchip_vop_ids[] = {
 		.compatible = "rockchip,rv1108-vop",
 		.data = (ulong)&rv1108_vop_data,
 	}, {
+		.compatible = "rockchip,rv1106-vop",
+		.data = (ulong)&rv1106_vop_data,
+	}, {
 		.compatible = "rockchip,rv1126-vop",
 		.data = (ulong)&rv1126_vop_data,
 	}, {
diff --git a/drivers/video/drm/rockchip_crtc.h b/drivers/video/drm/rockchip_crtc.h
index 3ad1e12..b28e8dd 100644
--- a/drivers/video/drm/rockchip_crtc.h
+++ b/drivers/video/drm/rockchip_crtc.h
@@ -11,6 +11,7 @@
 
 struct rockchip_vp {
 	bool enable;
+	bool xmirror_en;
 	u8 bg_ovl_dly;
 	u8 primary_plane_id;
 	int output_type;
@@ -26,6 +27,8 @@ struct rockchip_crtc {
 	bool hdmi_hpd : 1;
 	bool active : 1;
 	bool assign_plane : 1;
+	bool splice_mode : 1;
+	u8 splice_crtc_id;
 };
 
 struct rockchip_crtc_funcs {
@@ -39,6 +42,9 @@ struct rockchip_crtc_funcs {
 	void (*unprepare)(struct display_state *state);
 	int (*fixup_dts)(struct display_state *state, void *blob);
 	int (*send_mcu_cmd)(struct display_state *state, u32 type, u32 value);
+	int (*check)(struct display_state *state);
+	int (*mode_valid)(struct display_state *state);
+	int (*plane_check)(struct display_state *state);
 };
 
 struct vop_data;
@@ -58,6 +64,7 @@ extern const struct vop_data rk3399_vop_big;
 extern const struct vop_data rk3399_vop_lit;
 extern const struct vop_data rk322x_vop;
 extern const struct vop_data rk3328_vop;
+extern const struct vop_data rv1106_vop;
 extern const struct vop_data rv1108_vop;
 extern const struct vop_data rv1126_vop;
 extern const struct vop2_data rk3568_vop;
diff --git a/drivers/video/drm/rockchip_display.c b/drivers/video/drm/rockchip_display.c
index 51a95f8..2dc3a43 100644
--- a/drivers/video/drm/rockchip_display.c
+++ b/drivers/video/drm/rockchip_display.c
@@ -189,14 +189,13 @@ struct base2_disp_info *rockchip_get_disp_info(int type, int id)
 }
 
 /* check which kind of public phy does connector use */
-static int check_public_use_phy(struct display_state *state)
+static int check_public_use_phy(struct rockchip_connector *conn)
 {
 	int ret = NONE;
 #ifdef CONFIG_ROCKCHIP_INNO_HDMI_PHY
-	struct connector_state *conn_state = &state->conn_state;
 
-	if (!strncmp(dev_read_name(conn_state->dev), "tve", 3) ||
-	    !strncmp(dev_read_name(conn_state->dev), "hdmi", 4))
+	if (!strncmp(dev_read_name(conn->dev), "tve", 3) ||
+	    !strncmp(dev_read_name(conn->dev), "hdmi", 4))
 		ret = INNO_HDMI_PHY;
 #endif
 
@@ -207,10 +206,9 @@ static int check_public_use_phy(struct display_state *state)
  * get public phy driver and initialize it.
  * The current version only has inno hdmi phy for hdmi and tve.
  */
-static int get_public_phy(struct display_state *state,
+static int get_public_phy(struct rockchip_connector *conn,
 			  struct public_phy_data *data)
 {
-	struct connector_state *conn_state = &state->conn_state;
 	struct rockchip_phy *phy;
 	struct udevice *dev;
 	int ret = 0;
@@ -242,10 +240,10 @@ static int get_public_phy(struct display_state *state,
 			printf("failed to init phy driver\n");
 			return ret;
 		}
-		conn_state->phy = phy;
+		conn->phy = phy;
 
 		debug("inno hdmi phy init success, save it\n");
-		data->phy_drv = conn_state->phy;
+		data->phy_drv = conn->phy;
 		data->phy_init = true;
 		return 0;
 	default:
@@ -314,20 +312,19 @@ bool can_direct_logo(int bpp)
 	return bpp == 16 || bpp == 32;
 }
 
-static int connector_phy_init(struct display_state *state,
+static int connector_phy_init(struct rockchip_connector *conn,
 			      struct public_phy_data *data)
 {
-	struct connector_state *conn_state = &state->conn_state;
 	int type;
 
 	/* does this connector use public phy with others */
-	type = check_public_use_phy(state);
+	type = check_public_use_phy(conn);
 	if (type == INNO_HDMI_PHY) {
 		/* there is no public phy was initialized */
 		if (!data->phy_init) {
 			debug("start get public phy\n");
 			data->public_phy_type = type;
-			if (get_public_phy(state, data)) {
+			if (get_public_phy(conn, data)) {
 				printf("can't find correct public phy type\n");
 				free(data);
 				return -EINVAL;
@@ -336,52 +333,13 @@ static int connector_phy_init(struct display_state *state,
 		}
 
 		/* if this phy has been initialized, get it directly */
-		conn_state->phy = (struct rockchip_phy *)data->phy_drv;
+		conn->phy = (struct rockchip_phy *)data->phy_drv;
 		return 0;
 	}
 
 	return 0;
 }
 
-static int connector_panel_init(struct display_state *state)
-{
-	struct connector_state *conn_state = &state->conn_state;
-	struct panel_state *panel_state = &state->panel_state;
-	const struct rockchip_panel *panel = panel_state->panel;
-	ofnode dsp_lut_node;
-	int ret, len;
-
-	if (!panel)
-		return 0;
-
-	dsp_lut_node = dev_read_subnode(panel->dev, "dsp-lut");
-	if (!ofnode_valid(dsp_lut_node)) {
-		debug("%s can not find dsp-lut node\n", __func__);
-		return 0;
-	}
-
-	ofnode_get_property(dsp_lut_node, "gamma-lut", &len);
-	if (len > 0) {
-		conn_state->gamma.size = len / sizeof(u32);
-		conn_state->gamma.lut = malloc(len);
-		if (!conn_state->gamma.lut) {
-			printf("malloc gamma lut failed\n");
-			return -ENOMEM;
-		}
-		ret = ofnode_read_u32_array(dsp_lut_node, "gamma-lut",
-					    conn_state->gamma.lut,
-					    conn_state->gamma.size);
-		if (ret) {
-			printf("Cannot decode gamma_lut\n");
-			conn_state->gamma.lut = NULL;
-			return -EINVAL;
-		}
-		panel_state->dsp_lut_node = dsp_lut_node;
-	}
-
-	return 0;
-}
-
 int drm_mode_vrefresh(const struct drm_display_mode *mode)
 {
 	int refresh = 0;
@@ -497,10 +455,9 @@ static int display_get_force_timing_from_dts(ofnode node, struct drm_display_mod
 	return 0;
 }
 
-static int display_get_timing_from_dts(struct panel_state *panel_state,
+static int display_get_timing_from_dts(struct rockchip_panel *panel,
 				       struct drm_display_mode *mode)
 {
-	struct rockchip_panel *panel = panel_state->panel;
 	struct ofnode_phandle_args args;
 	ofnode dt, timing;
 	int ret;
@@ -686,11 +643,13 @@ static int display_get_timing(struct display_state *state)
 	struct connector_state *conn_state = &state->conn_state;
 	struct drm_display_mode *mode = &conn_state->mode;
 	const struct drm_display_mode *m;
-	struct panel_state *panel_state = &state->panel_state;
-	const struct rockchip_panel *panel = panel_state->panel;
+	struct rockchip_panel *panel = conn_state->connector->panel;
+
+	if (panel->funcs->get_mode)
+		return panel->funcs->get_mode(panel, mode);
 
 	if (dev_of_valid(panel->dev) &&
-	    !display_get_timing_from_dts(panel_state, mode)) {
+	    !display_get_timing_from_dts(panel, mode)) {
 		printf("Using display timing dts\n");
 		return 0;
 	}
@@ -712,16 +671,13 @@ static int display_pre_init(void)
 
 	list_for_each_entry(state, &rockchip_display_list, head) {
 		struct connector_state *conn_state = &state->conn_state;
-		const struct rockchip_connector *conn = conn_state->connector;
-		const struct rockchip_connector_funcs *conn_funcs = conn->funcs;
 		struct crtc_state *crtc_state = &state->crtc_state;
 		struct rockchip_crtc *crtc = crtc_state->crtc;
 
-		if (conn_funcs->pre_init) {
-			ret = conn_funcs->pre_init(state);
-			if (ret)
-				printf("pre init conn error\n");
-		}
+		ret = rockchip_connector_pre_init(state);
+		if (ret)
+			printf("pre init conn error\n");
+
 		crtc->vps[crtc_state->crtc_id].output_type = conn_state->type;
 	}
 	return ret;
@@ -767,7 +723,8 @@ static int display_get_edid_mode(struct display_state *state)
 		mode->picture_aspect_ratio = HDMI_PICTURE_ASPECT_16_9;
 		mode->type = DRM_MODE_TYPE_DRIVER | DRM_MODE_TYPE_PREFERRED;
 
-		printf("error: %s get mode from edid failed, use 720p60 as default mode\n", conn_state->dev->name);
+		printf("error: %s get mode from edid failed, use 720p60 as default mode\n",
+		       state->conn_state.connector->dev->name);
 	}
 
 	return ret;
@@ -776,9 +733,7 @@ static int display_get_edid_mode(struct display_state *state)
 static int display_init(struct display_state *state)
 {
 	struct connector_state *conn_state = &state->conn_state;
-	struct panel_state *panel_state = &state->panel_state;
-	const struct rockchip_connector *conn = conn_state->connector;
-	const struct rockchip_connector_funcs *conn_funcs = conn->funcs;
+	struct rockchip_connector *conn = conn_state->connector;
 	struct crtc_state *crtc_state = &state->crtc_state;
 	struct rockchip_crtc *crtc = crtc_state->crtc;
 	const struct rockchip_crtc_funcs *crtc_funcs = crtc->funcs;
@@ -795,8 +750,8 @@ static int display_init(struct display_state *state)
 	if (state->is_init)
 		return 0;
 
-	if (!conn_funcs || !crtc_funcs) {
-		printf("failed to find connector or crtc functions\n");
+	if (!crtc_funcs) {
+		printf("failed to find crtc functions\n");
 		return -ENXIO;
 	}
 
@@ -818,20 +773,9 @@ static int display_init(struct display_state *state)
 			return ret;
 	}
 
-	if (panel_state->panel)
-		rockchip_panel_init(panel_state->panel, state);
-
-	if (conn_state->bridge)
-		rockchip_bridge_init(conn_state->bridge, state);
-
-	if (conn_funcs->init) {
-		ret = conn_funcs->init(state);
-		if (ret)
-			goto deinit;
-	}
-
-	if (conn_state->phy)
-		rockchip_phy_init(conn_state->phy);
+	ret = rockchip_connector_init(state);
+	if (ret)
+		goto deinit;
 
 	/*
 	 * support hotplug, but not connect;
@@ -847,57 +791,70 @@ static int display_init(struct display_state *state)
 		goto deinit;
 	}
 #endif
-	if (conn_funcs->detect) {
-		ret = conn_funcs->detect(state);
+
+	ret = rockchip_connector_detect(state);
 #if defined(CONFIG_ROCKCHIP_DRM_TVE) || defined(CONFIG_DRM_ROCKCHIP_RK1000)
-		if (conn_state->type == DRM_MODE_CONNECTOR_HDMIA)
-			crtc->hdmi_hpd = ret;
+	if (conn_state->type == DRM_MODE_CONNECTOR_HDMIA)
+		crtc->hdmi_hpd = ret;
 #endif
-		if (!ret && !state->force_output) {
-			printf("%s disconnected\n", conn_state->dev->name);
-			goto deinit;
-		}
-	}
+	if (!ret && !state->force_output)
+		goto deinit;
 
-	if (panel_state->panel) {
+	if (conn->panel) {
 		ret = display_get_timing(state);
 		if (!ret)
-			conn_state->bpc = panel_state->panel->bpc;
+			conn_state->bpc = conn->panel->bpc;
 #if defined(CONFIG_I2C_EDID)
-		if (ret < 0 && conn_funcs->get_edid) {
-			rockchip_panel_prepare(panel_state->panel);
-			ret = conn_funcs->get_edid(state);
+		if (ret < 0 && conn->funcs->get_edid) {
+			rockchip_panel_prepare(conn->panel);
+			ret = conn->funcs->get_edid(conn, state);
 			if (!ret)
 				display_get_edid_mode(state);
 		}
 #endif
-	} else if (conn_state->bridge) {
-		ret = video_bridge_read_edid(conn_state->bridge->dev,
+	} else if (conn->bridge) {
+		ret = video_bridge_read_edid(conn->bridge->dev,
 					     conn_state->edid, EDID_SIZE);
 		if (ret > 0) {
 #if defined(CONFIG_I2C_EDID)
 			display_get_edid_mode(state);
 #endif
 		} else {
-			ret = video_bridge_get_timing(conn_state->bridge->dev);
+			ret = video_bridge_get_timing(conn->bridge->dev);
 		}
-	} else if (conn_funcs->get_timing) {
-		ret = conn_funcs->get_timing(state);
-	} else if (conn_funcs->get_edid) {
-		ret = conn_funcs->get_edid(state);
+	} else if (conn->funcs->get_timing) {
+		ret = conn->funcs->get_timing(conn, state);
+	} else if (conn->funcs->get_edid) {
+		ret = conn->funcs->get_edid(conn, state);
 #if defined(CONFIG_I2C_EDID)
 		if (!ret)
 			display_get_edid_mode(state);
 #endif
 	}
 
+	if (!ret && conn_state->secondary) {
+		struct rockchip_connector *connector = conn_state->secondary;
+
+		if (connector->panel) {
+			if (connector->panel->funcs->get_mode) {
+				struct drm_display_mode *_mode = drm_mode_create();
+
+				ret = connector->panel->funcs->get_mode(connector->panel, _mode);
+				if (!ret && !drm_mode_equal(_mode, mode))
+					ret = -EINVAL;
+
+				drm_mode_destroy(_mode);
+			}
+		}
+	}
+
 	if (ret && !state->force_output)
 		goto deinit;
 	if (state->force_output)
 		display_use_force_mode(state);
 
 	/* rk356x series drive mipi pixdata on posedge */
-	compatible = dev_read_string(conn_state->dev, "compatible");
+	compatible = dev_read_string(conn->dev, "compatible");
 	if (!strcmp(compatible, "rockchip,rk3568-mipi-dsi"))
 		conn_state->mode.flags |= DRM_MODE_FLAG_PPIXDATA;
 
@@ -905,7 +862,7 @@ static int display_init(struct display_state *state)
 	       "    H: %04d %04d %04d %04d\n"
 	       "    V: %04d %04d %04d %04d\n"
 	       "bus_format: %x\n",
-	       conn_state->dev->name,
+	       conn->dev->name,
 	       state->force_output ? "use force output" : "",
 	       mode->clock, mode->flags,
 	       mode->hdisplay, mode->hsync_start,
@@ -916,8 +873,16 @@ static int display_init(struct display_state *state)
 
 	drm_mode_set_crtcinfo(mode, CRTC_INTERLACE_HALVE_V);
 
-	if (conn_state->bridge)
-		rockchip_bridge_mode_set(conn_state->bridge, &conn_state->mode);
+	if (conn_state->secondary) {
+		mode->crtc_clock *= 2;
+		mode->crtc_hdisplay *= 2;
+		mode->crtc_hsync_start *= 2;
+		mode->crtc_hsync_end *= 2;
+		mode->crtc_htotal *= 2;
+	}
+
+	if (conn->bridge)
+		rockchip_bridge_mode_set(conn->bridge, &conn_state->mode);
 
 	if (crtc_funcs->init) {
 		ret = crtc_funcs->init(state);
@@ -933,8 +898,7 @@ static int display_init(struct display_state *state)
 	return 0;
 
 deinit:
-	if (conn_funcs->deinit)
-		conn_funcs->deinit(state);
+	rockchip_connector_deinit(state);
 	return ret;
 }
 
@@ -978,13 +942,9 @@ static int display_set_plane(struct display_state *state)
 
 static int display_enable(struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
-	const struct rockchip_connector *conn = conn_state->connector;
-	const struct rockchip_connector_funcs *conn_funcs = conn->funcs;
 	struct crtc_state *crtc_state = &state->crtc_state;
 	const struct rockchip_crtc *crtc = crtc_state->crtc;
 	const struct rockchip_crtc_funcs *crtc_funcs = crtc->funcs;
-	struct panel_state *panel_state = &state->panel_state;
 
 	if (!state->is_init)
 		return -EINVAL;
@@ -995,26 +955,12 @@ static int display_enable(struct display_state *state)
 	if (crtc_funcs->prepare)
 		crtc_funcs->prepare(state);
 
-	if (conn_funcs->prepare)
-		conn_funcs->prepare(state);
-
-	if (conn_state->bridge)
-		rockchip_bridge_pre_enable(conn_state->bridge);
-
-	if (panel_state->panel)
-		rockchip_panel_prepare(panel_state->panel);
+	rockchip_connector_pre_enable(state);
 
 	if (crtc_funcs->enable)
 		crtc_funcs->enable(state);
 
-	if (conn_funcs->enable)
-		conn_funcs->enable(state);
-
-	if (conn_state->bridge)
-		rockchip_bridge_enable(conn_state->bridge);
-
-	if (panel_state->panel)
-		rockchip_panel_enable(panel_state->panel);
+	rockchip_connector_enable(state);
 
 	state->is_enable = true;
 
@@ -1023,13 +969,9 @@ static int display_enable(struct display_state *state)
 
 static int display_disable(struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
-	const struct rockchip_connector *conn = conn_state->connector;
-	const struct rockchip_connector_funcs *conn_funcs = conn->funcs;
 	struct crtc_state *crtc_state = &state->crtc_state;
 	const struct rockchip_crtc *crtc = crtc_state->crtc;
 	const struct rockchip_crtc_funcs *crtc_funcs = crtc->funcs;
-	struct panel_state *panel_state = &state->panel_state;
 
 	if (!state->is_init)
 		return 0;
@@ -1037,26 +979,12 @@ static int display_disable(struct display_state *state)
 	if (!state->is_enable)
 		return 0;
 
-	if (panel_state->panel)
-		rockchip_panel_disable(panel_state->panel);
-
-	if (conn_state->bridge)
-		rockchip_bridge_disable(conn_state->bridge);
-
-	if (conn_funcs->disable)
-		conn_funcs->disable(state);
+	rockchip_connector_disable(state);
 
 	if (crtc_funcs->disable)
 		crtc_funcs->disable(state);
 
-	if (panel_state->panel)
-		rockchip_panel_unprepare(panel_state->panel);
-
-	if (conn_state->bridge)
-		rockchip_bridge_post_disable(conn_state->bridge);
-
-	if (conn_funcs->unprepare)
-		conn_funcs->unprepare(state);
+	rockchip_connector_post_disable(state);
 
 	state->is_enable = 0;
 	state->is_init = 0;
@@ -1064,6 +992,124 @@ static int display_disable(struct display_state *state)
 	return 0;
 }
 
+static int display_rect_calc_scale(int src, int dst)
+{
+	int scale = 0;
+
+	if (WARN_ON(src < 0 || dst < 0))
+		return -EINVAL;
+
+	if (dst == 0)
+		return 0;
+
+	src <<= 16;
+
+	if (src > (dst << 16))
+		return DIV_ROUND_UP(src, dst);
+	else
+		scale = src / dst;
+
+	return scale;
+}
+
+int display_rect_calc_hscale(struct display_rect *src, struct display_rect *dst,
+			     int min_hscale, int max_hscale)
+{
+	int hscale = display_rect_calc_scale(src->w, dst->w);
+
+	if (hscale < 0 || dst->w == 0)
+		return hscale;
+
+	if (hscale < min_hscale || hscale > max_hscale)
+		return -ERANGE;
+
+	return hscale;
+}
+
+int display_rect_calc_vscale(struct display_rect *src, struct display_rect *dst,
+			     int min_vscale, int max_vscale)
+{
+	int vscale = display_rect_calc_scale(src->h, dst->h);
+
+	if (vscale < 0 || dst->h == 0)
+		return vscale;
+
+	if (vscale < min_vscale || vscale > max_vscale)
+		return -ERANGE;
+
+	return vscale;
+}
+
+static int display_check(struct display_state *state)
+{
+	struct connector_state *conn_state = &state->conn_state;
+	struct rockchip_connector *conn = conn_state->connector;
+	const struct rockchip_connector_funcs *conn_funcs = conn->funcs;
+	struct crtc_state *crtc_state = &state->crtc_state;
+	const struct rockchip_crtc *crtc = crtc_state->crtc;
+	const struct rockchip_crtc_funcs *crtc_funcs = crtc->funcs;
+	int ret;
+
+	if (!state->is_init)
+		return 0;
+
+	if (conn_funcs->check) {
+		ret = conn_funcs->check(conn, state);
+		if (ret)
+			goto check_fail;
+	}
+
+	if (crtc_funcs->check) {
+		ret = crtc_funcs->check(state);
+		if (ret)
+			goto check_fail;
+	}
+
+	if (crtc_funcs->plane_check) {
+		ret = crtc_funcs->plane_check(state);
+		if (ret)
+			goto check_fail;
+	}
+
+	return 0;
+
+check_fail:
+	state->is_init = false;
+	return ret;
+}
+
+static int display_mode_valid(struct display_state *state)
+{
+	struct connector_state *conn_state = &state->conn_state;
+	struct rockchip_connector *conn = conn_state->connector;
+	const struct rockchip_connector_funcs *conn_funcs = conn->funcs;
+	struct crtc_state *crtc_state = &state->crtc_state;
+	const struct rockchip_crtc *crtc = crtc_state->crtc;
+	const struct rockchip_crtc_funcs *crtc_funcs = crtc->funcs;
+	int ret;
+
+	if (!state->is_init)
+		return 0;
+
+	if (conn_funcs->mode_valid) {
+		ret = conn_funcs->mode_valid(conn, state);
+		if (ret)
+			goto invalid_mode;
+	}
+
+	if (crtc_funcs->mode_valid) {
+		ret = crtc_funcs->mode_valid(state);
+		if (ret)
+			goto invalid_mode;
+	}
+
+	return 0;
+
+invalid_mode:
+	state->is_init = false;
+	return ret;
+}
+
 static int display_logo(struct display_state *state)
 {
 	struct crtc_state *crtc_state = &state->crtc_state;
@@ -1089,8 +1135,8 @@ static int display_logo(struct display_state *state)
 		printf("can't support bmp bits[%d]\n", logo->bpp);
 		return -EINVAL;
 	}
-	hdisplay = conn_state->mode.hdisplay;
-	vdisplay = conn_state->mode.vdisplay;
+	hdisplay = conn_state->mode.crtc_hdisplay;
+	vdisplay = conn_state->mode.crtc_vdisplay;
 	crtc_state->src_rect.w = logo->width;
 	crtc_state->src_rect.h = logo->height;
 	crtc_state->src_rect.x = 0;
@@ -1101,7 +1147,7 @@ static int display_logo(struct display_state *state)
 	crtc_state->dma_addr = (u32)(unsigned long)logo->mem + logo->offset;
 	crtc_state->xvir = ALIGN(crtc_state->src_rect.w * logo->bpp, 32) >> 5;
 
-	if (logo->mode == ROCKCHIP_DISPLAY_FULLSCREEN) {
+	if (state->logo_mode == ROCKCHIP_DISPLAY_FULLSCREEN) {
 		crtc_state->crtc_rect.x = 0;
 		crtc_state->crtc_rect.y = 0;
 		crtc_state->crtc_rect.w = hdisplay;
@@ -1124,6 +1170,8 @@ static int display_logo(struct display_state *state)
 		}
 	}
 
+	display_mode_valid(state);
+	display_check(state);
 	display_set_plane(state);
 	display_enable(state);
 
@@ -1421,140 +1469,180 @@ enum {
 	PORT_DIR_OUT,
 };
 
-static struct rockchip_panel *rockchip_of_find_panel(struct udevice *dev)
+static const struct device_node *rockchip_of_graph_get_port_by_id(ofnode node, int id)
 {
-	ofnode panel_node, ports, port, ep, port_parent_node;
-	struct udevice *panel_dev;
-	int ret;
-
-	panel_node = dev_read_subnode(dev, "panel");
-	if (ofnode_valid(panel_node) && ofnode_is_available(panel_node)) {
-		ret = uclass_get_device_by_ofnode(UCLASS_PANEL, panel_node,
-						  &panel_dev);
-		if (!ret)
-			goto found;
-	}
+	ofnode ports, port;
+	u32 reg;
 
-	ports = dev_read_subnode(dev, "ports");
+	ports = ofnode_find_subnode(node, "ports");
 	if (!ofnode_valid(ports))
 		return NULL;
 
 	ofnode_for_each_subnode(port, ports) {
-		u32 reg;
-
 		if (ofnode_read_u32(port, "reg", &reg))
 			continue;
 
-		if (reg != PORT_DIR_OUT)
-			continue;
+		if (reg == id)
+			break;
+	}
 
-		ofnode_for_each_subnode(ep, port) {
-			ofnode _ep, _port;
-			uint phandle;
-			bool is_ports_node = false;
+	if (reg == id)
+		return ofnode_to_np(port);
 
-			if (ofnode_read_u32(ep, "remote-endpoint", &phandle))
-				continue;
+	return NULL;
+}
 
-			_ep = ofnode_get_by_phandle(phandle);
-			if (!ofnode_valid(_ep))
-				continue;
+static const struct device_node *rockchip_of_graph_get_port_parent(ofnode port)
+{
+	ofnode parent;
+	int is_ports_node;
 
-			_port = ofnode_get_parent(_ep);
-			if (!ofnode_valid(_port))
-				continue;
+	parent = ofnode_get_parent(port);
+	is_ports_node = strstr(ofnode_to_np(parent)->full_name, "ports") ? 1 : 0;
+	if (is_ports_node)
+		parent = ofnode_get_parent(parent);
 
-			port_parent_node = ofnode_get_parent(_port);
-			is_ports_node = strstr(port_parent_node.np->full_name, "ports") ? 1 : 0;
-			if (is_ports_node)
-				panel_node = ofnode_get_parent(port_parent_node);
-			else
-				panel_node = ofnode_get_parent(_port);
-			if (!ofnode_valid(panel_node))
-				continue;
+	return ofnode_to_np(parent);
+}
 
-			ret = uclass_get_device_by_ofnode(UCLASS_PANEL,
-							  panel_node,
-							  &panel_dev);
-			if (!ret)
-				goto found;
-		}
-	}
+static const struct device_node *rockchip_of_graph_get_remote_node(ofnode node, int port,
+								   int endpoint)
+{
+	const struct device_node *port_node;
+	ofnode ep;
+	u32 reg;
+	uint phandle;
 
-	return NULL;
+	port_node = rockchip_of_graph_get_port_by_id(node, port);
+	if (!port_node)
+		return NULL;
 
-found:
-	return (struct rockchip_panel *)dev_get_driver_data(panel_dev);
-}
+	ofnode_for_each_subnode(ep, np_to_ofnode(port_node)) {
+		if (ofnode_read_u32(ep, "reg", &reg))
+			break;
+		if (reg == endpoint)
+			break;
+	}
 
-static struct rockchip_bridge *rockchip_ofnode_find_bridge(ofnode node)
-{
-	struct udevice *dev;
-	int ret;
+	if (!ofnode_valid(ep))
+		return NULL;
 
-	ret = uclass_get_device_by_ofnode(UCLASS_VIDEO_BRIDGE, node, &dev);
-	if (ret)
-		return ERR_PTR(ret);
+	if (ofnode_read_u32(ep, "remote-endpoint", &phandle))
+		return NULL;
+
+	ep = ofnode_get_by_phandle(phandle);
+	if (!ofnode_valid(ep))
+		return NULL;
 
-	return (struct rockchip_bridge *)dev_get_driver_data(dev);
+	return ofnode_to_np(ep);
 }
 
-static int rockchip_of_find_bridge(ofnode node, struct rockchip_bridge **bridge)
+static int rockchip_of_find_panel(struct udevice *dev, struct rockchip_panel **panel)
 {
-	ofnode remote, ports, port, ep;
-	int ret = -EPROBE_DEFER;
-	u32 reg;
+	const struct device_node *ep_node, *panel_node;
+	ofnode panel_ofnode, port;
+	struct udevice *panel_dev;
+	int ret = 0;
 
-	if (!bridge)
-		return -EINVAL;
+	*panel = NULL;
+	panel_ofnode = dev_read_subnode(dev, "panel");
+	if (ofnode_valid(panel_ofnode) && ofnode_is_available(panel_ofnode)) {
+		ret = uclass_get_device_by_ofnode(UCLASS_PANEL, panel_ofnode,
+						  &panel_dev);
+		if (!ret)
+			goto found;
+	}
 
-	ports = ofnode_find_subnode(node, "ports");
-	if (!ofnode_valid(ports))
+	ep_node = rockchip_of_graph_get_remote_node(dev->node, PORT_DIR_OUT, 0);
+	if (!ep_node)
 		return -ENODEV;
 
-	ofnode_for_each_subnode(port, ports) {
-		if (ofnode_read_u32(port, "reg", &reg))
-			continue;
+	port = ofnode_get_parent(np_to_ofnode(ep_node));
+	if (!ofnode_valid(port))
+		return -ENODEV;
 
-		if (reg == PORT_DIR_OUT)
-			break;
-	}
+	panel_node = rockchip_of_graph_get_port_parent(port);
+	if (!panel_node)
+		return -ENODEV;
+
+	ret = uclass_get_device_by_ofnode(UCLASS_PANEL, np_to_ofnode(panel_node), &panel_dev);
+	if (!ret)
+		goto found;
+
+	return -ENODEV;
+
+found:
+	*panel = (struct rockchip_panel *)dev_get_driver_data(panel_dev);
+	return 0;
+}
 
-	if (reg != PORT_DIR_OUT)
+static int rockchip_of_find_bridge(struct udevice *dev, struct rockchip_bridge **bridge)
+{
+	const struct device_node *ep_node, *bridge_node;
+	ofnode port;
+	struct udevice *bridge_dev;
+	int ret = 0;
+
+	ep_node = rockchip_of_graph_get_remote_node(dev->node, PORT_DIR_OUT, 0);
+	if (!ep_node)
 		return -ENODEV;
 
-	ofnode_for_each_subnode(ep, port) {
-		ofnode _ep, _port, _ports;
-		uint phandle;
+	port = ofnode_get_parent(np_to_ofnode(ep_node));
+	if (!ofnode_valid(port))
+		return -ENODEV;
 
-		if (ofnode_read_u32(ep, "remote-endpoint", &phandle))
-			continue;
+	bridge_node = rockchip_of_graph_get_port_parent(port);
+	if (!bridge_node)
+		return -ENODEV;
 
-		_ep = ofnode_get_by_phandle(phandle);
-		if (!ofnode_valid(_ep))
-			continue;
+	ret = uclass_get_device_by_ofnode(UCLASS_VIDEO_BRIDGE, np_to_ofnode(bridge_node),
+					  &bridge_dev);
+	if (!ret)
+		goto found;
 
-		_port = ofnode_get_parent(_ep);
-		if (!ofnode_valid(_port))
-			continue;
+	return -ENODEV;
 
-		_ports = ofnode_get_parent(_port);
-		if (!ofnode_valid(_ports))
-			continue;
+found:
+	*bridge = (struct rockchip_bridge *)dev_get_driver_data(bridge_dev);
+	return 0;
+}
 
-		remote = ofnode_get_parent(_ports);
-		if (ofnode_valid(remote))
-			break;
+static int rockchip_of_find_panel_or_bridge(struct udevice *dev, struct rockchip_panel **panel,
+					    struct rockchip_bridge **bridge)
+{
+	int ret = 0;
+	*panel = NULL;
+	*bridge = NULL;
+
+	if (panel) {
+		ret  = rockchip_of_find_panel(dev, panel);
+		if (!ret)
+			return 0;
 	}
 
-	*bridge = rockchip_ofnode_find_bridge(remote);
-	if (!IS_ERR(*bridge))
-		ret = 0;
+	if (ret) {
+		ret = rockchip_of_find_bridge(dev, bridge);
+		if (!ret)
+			ret = rockchip_of_find_panel_or_bridge((*bridge)->dev, panel,
+							       &(*bridge)->next_bridge);
+	}
 
 	return ret;
 }
 
-static struct udevice *rockchip_of_find_connector(ofnode endpoint)
+static struct rockchip_phy *rockchip_of_find_phy(struct udevice *dev)
+{
+	struct udevice *phy_dev;
+	int ret;
+
+	ret = uclass_get_device_by_phandle(UCLASS_PHY, dev, "phys", &phy_dev);
+	if (ret)
+		return NULL;
+
+	return (struct rockchip_phy *)dev_get_driver_data(phy_dev);
+}
+
+static struct udevice *rockchip_of_find_connector_device(ofnode endpoint)
 {
 	ofnode ep, port, ports, conn;
 	uint phandle;
@@ -1587,6 +1675,77 @@ static struct udevice *rockchip_of_find_connector(ofnode endpoint)
 	return dev;
 }
 
+static struct rockchip_connector *rockchip_of_get_connector(ofnode endpoint)
+{
+	struct rockchip_connector *conn;
+	struct udevice *dev;
+	int ret;
+
+	dev = rockchip_of_find_connector_device(endpoint);
+	if (!dev) {
+		printf("Warn: can't find connect driver\n");
+		return NULL;
+	}
+
+	conn = get_rockchip_connector_by_device(dev);
+	if (!conn)
+		return NULL;
+	ret = rockchip_of_find_panel_or_bridge(dev, &conn->panel, &conn->bridge);
+	if (ret)
+		debug("Warn: no find panel or bridge\n");
+
+	conn->phy = rockchip_of_find_phy(dev);
+
+	return conn;
+}
+
+static struct rockchip_connector *rockchip_get_split_connector(struct rockchip_connector *conn)
+{
+	char *conn_name;
+	struct device_node *split_node;
+	struct udevice *split_dev;
+	struct rockchip_connector *split_conn;
+	bool split_mode;
+	int ret;
+
+	split_mode = ofnode_read_bool(conn->dev->node, "split-mode");
+	if (!split_mode)
+		return NULL;
+
+	switch (conn->type) {
+	case DRM_MODE_CONNECTOR_DisplayPort:
+		conn_name = "dp";
+		break;
+	case DRM_MODE_CONNECTOR_eDP:
+		conn_name = "edp";
+		break;
+	case DRM_MODE_CONNECTOR_HDMIA:
+		conn_name = "hdmi";
+		break;
+	default:
+		return NULL;
+	}
+
+	split_node = of_alias_get_dev(conn_name, !conn->id);
+	if (!split_node || !of_device_is_available(split_node))
+		return NULL;
+
+	ret = uclass_get_device_by_ofnode(UCLASS_DISPLAY, np_to_ofnode(split_node), &split_dev);
+	if (ret)
+		return NULL;
+
+	split_conn = get_rockchip_connector_by_device(split_dev);
+	if (!split_conn)
+		return NULL;
+	ret = rockchip_of_find_panel_or_bridge(split_dev, &split_conn->panel, &split_conn->bridge);
+	if (ret)
+		debug("Warn: no find panel or bridge\n");
+
+	split_conn->phy = rockchip_of_find_phy(split_dev);
+
+	return split_conn;
+}
+
 static bool rockchip_get_display_path_status(ofnode endpoint)
 {
 	ofnode ep;
@@ -1602,18 +1761,6 @@ static bool rockchip_get_display_path_status(ofnode endpoint)
 	return true;
 }
 
-static struct rockchip_phy *rockchip_of_find_phy(struct udevice *dev)
-{
-	struct udevice *phy_dev;
-	int ret;
-
-	ret = uclass_get_device_by_phandle(UCLASS_PHY, dev, "phys", &phy_dev);
-	if (ret)
-		return NULL;
-
-	return (struct rockchip_phy *)dev_get_driver_data(phy_dev);
-}
-
 #if defined(CONFIG_ROCKCHIP_RK3568)
 static int rockchip_display_fixup_dts(void *blob)
 {
@@ -1694,12 +1841,9 @@ static int rockchip_display_probe(struct udevice *dev)
 	struct video_uc_platdata *plat = dev_get_uclass_platdata(dev);
 	const void *blob = gd->fdt_blob;
 	int phandle;
-	struct udevice *crtc_dev, *conn_dev;
+	struct udevice *crtc_dev;
 	struct rockchip_crtc *crtc;
-	const struct rockchip_connector *conn;
-	struct rockchip_panel *panel = NULL;
-	struct rockchip_bridge *bridge = NULL, *b = NULL;
-	struct rockchip_phy *phy = NULL;
+	struct rockchip_connector *conn, *split_conn;
 	struct display_state *s;
 	const char *name;
 	int ret;
@@ -1711,7 +1855,6 @@ static int rockchip_display_probe(struct udevice *dev)
 #if defined(CONFIG_ROCKCHIP_RK3568)
 	rockchip_display_fixup_dts((void *)blob);
 #endif
-
 	/* Before relocation we don't need to do anything */
 	if (!(gd->flags & GD_FLG_RELOC))
 		return 0;
@@ -1774,38 +1917,12 @@ static int rockchip_display_probe(struct udevice *dev)
 		}
 		crtc = (struct rockchip_crtc *)dev_get_driver_data(crtc_dev);
 
-		conn_dev = rockchip_of_find_connector(np_to_ofnode(ep_node));
-		if (!conn_dev) {
-			printf("Warn: can't find connect driver\n");
+		conn = rockchip_of_get_connector(np_to_ofnode(ep_node));
+		if (!conn) {
+			printf("Warn: can't get connect driver\n");
 			continue;
 		}
-
-		conn = (const struct rockchip_connector *)dev_get_driver_data(conn_dev);
-
-		phy = rockchip_of_find_phy(conn_dev);
-
-		panel = rockchip_of_find_panel(conn_dev);
-		if (!panel) {
-			/* No panel found yet, check for a bridge next. */
-			ret = rockchip_of_find_bridge(dev_ofnode(conn_dev), &bridge);
-			if (ret && ret != -ENODEV)
-				continue;
-
-			b = bridge;
-			while (b) {
-				struct rockchip_bridge *next_bridge = NULL;
-
-				ret = rockchip_of_find_bridge(dev_ofnode(b->dev), &next_bridge);
-				if (ret)
-					break;
-
-				b->next_bridge = next_bridge;
-				b = next_bridge;
-			}
-
-			if (b)
-				panel = rockchip_of_find_panel(b->dev);
-		}
+		split_conn = rockchip_get_split_connector(conn);
 
 		s = malloc(sizeof(*s));
 		if (!s)
@@ -1841,12 +1958,14 @@ static int rockchip_display_probe(struct udevice *dev)
 		}
 
 		s->blob = blob;
-		s->panel_state.panel = panel;
-		s->conn_state.node = conn_dev->node;
-		s->conn_state.dev = conn_dev;
 		s->conn_state.connector = conn;
-		s->conn_state.phy = phy;
-		s->conn_state.bridge = bridge;
+		s->conn_state.secondary = NULL;
+		s->conn_state.type = conn->type;
+		if (split_conn) {
+			s->conn_state.secondary = split_conn;
+			s->conn_state.output_flags |= ROCKCHIP_OUTPUT_DUAL_CHANNEL_LEFT_RIGHT_MODE;
+			s->conn_state.output_flags |= conn->id ? ROCKCHIP_OUTPUT_DATA_SWAP : 0;
+		}
 		s->conn_state.overscan.left_margin = 100;
 		s->conn_state.overscan.right_margin = 100;
 		s->conn_state.overscan.top_margin = 100;
@@ -1871,6 +1990,10 @@ static int rockchip_display_probe(struct udevice *dev)
 					int cursor_plane = -1;
 
 					vp_id = ofnode_read_u32_default(vp_node, "reg", 0);
+
+					s->crtc_state.crtc->vps[vp_id].xmirror_en =
+						ofnode_read_bool(vp_node, "xmirror-enable");
+
 					ret = ofnode_read_u32_default(vp_node, "rockchip,plane-mask", 0);
 
 					cursor_plane = ofnode_read_u32_default(vp_node, "cursor-win-id", -1);
@@ -1902,13 +2025,8 @@ static int rockchip_display_probe(struct udevice *dev)
 		ret = ofnode_read_u32_default(s->crtc_state.node,
 					      "rockchip,dual-channel-swap", 0);
 		s->crtc_state.dual_channel_swap = ret;
-		if (connector_panel_init(s)) {
-			printf("Warn: Failed to init panel drivers\n");
-			free(s);
-			continue;
-		}
 
-		if (connector_phy_init(s, data)) {
+		if (connector_phy_init(conn, data)) {
 			printf("Warn: Failed to init phy drivers\n");
 			free(s);
 			continue;
@@ -1939,7 +2057,7 @@ void rockchip_display_fixup(void *blob)
 {
 	const struct rockchip_connector_funcs *conn_funcs;
 	const struct rockchip_crtc_funcs *crtc_funcs;
-	const struct rockchip_connector *conn;
+	struct rockchip_connector *conn;
 	const struct rockchip_crtc *crtc;
 	struct display_state *s;
 	int offset;
@@ -1979,6 +2097,9 @@ void rockchip_display_fixup(void *blob)
 	}
 
 	list_for_each_entry(s, &rockchip_display_list, head) {
+		if (!s->is_init)
+			continue;
+
 		conn = s->conn_state.connector;
 		if (!conn)
 			continue;
@@ -1988,6 +2109,11 @@ void rockchip_display_fixup(void *blob)
 			continue;
 		}
 
+		if (s->conn_state.secondary) {
+			s->conn_state.mode.clock *= 2;
+			s->conn_state.mode.hdisplay *= 2;
+		}
+
 		crtc = s->crtc_state.crtc;
 		if (!crtc)
 			continue;
@@ -2001,9 +2127,6 @@ void rockchip_display_fixup(void *blob)
 		if (crtc_funcs->fixup_dts)
 			crtc_funcs->fixup_dts(s, blob);
 
-		if (conn_funcs->fixup_dts)
-			conn_funcs->fixup_dts(s, blob);
-
 		np = ofnode_to_np(s->node);
 		path = np->full_name;
 		fdt_increase_size(blob, 0x400);
diff --git a/drivers/video/drm/rockchip_display.h b/drivers/video/drm/rockchip_display.h
index 8b71e29..4d45e9d 100644
--- a/drivers/video/drm/rockchip_display.h
+++ b/drivers/video/drm/rockchip_display.h
@@ -149,6 +149,8 @@ struct crtc_state {
 	int rb_swap;
 	int xvir;
 	int post_csc_mode;
+	int dclk_core_div;
+	int dclk_out_div;
 	struct display_rect src_rect;
 	struct display_rect crtc_rect;
 	struct display_rect right_src_rect;
@@ -189,13 +191,8 @@ struct overscan {
 };
 
 struct connector_state {
-	struct udevice *dev;
-	const struct rockchip_connector *connector;
-	struct rockchip_bridge *bridge;
-	struct rockchip_phy *phy;
-	ofnode node;
-
-	void *private;
+	struct rockchip_connector *connector;
+	struct rockchip_connector *secondary;
 
 	struct drm_display_mode mode;
 	struct overscan overscan;
@@ -276,13 +273,6 @@ struct display_state {
 	u32 force_bus_format;
 };
 
-static inline struct rockchip_panel *state_get_panel(struct display_state *s)
-{
-	struct panel_state *panel_state = &s->panel_state;
-
-	return panel_state->panel;
-}
-
 int drm_mode_vrefresh(const struct drm_display_mode *mode);
 int display_send_mcu_cmd(struct display_state *state, u32 type, u32 val);
 bool drm_mode_is_420(const struct drm_display_info *display,
@@ -294,4 +284,9 @@ void drm_mode_max_resolution_filter(struct hdmi_edid_data *edid_data,
 unsigned long get_cubic_lut_buffer(int crtc_id);
 int rockchip_ofnode_get_display_mode(ofnode node, struct drm_display_mode *mode);
 
+int display_rect_calc_hscale(struct display_rect *src, struct display_rect *dst,
+			     int min_hscale, int max_hscale);
+int display_rect_calc_vscale(struct display_rect *src, struct display_rect *dst,
+			     int min_vscale, int max_vscale);
+
 #endif
diff --git a/drivers/video/drm/rockchip_drm_tve.c b/drivers/video/drm/rockchip_drm_tve.c
index 6ce8e8f..a159bfe 100644
--- a/drivers/video/drm/rockchip_drm_tve.c
+++ b/drivers/video/drm/rockchip_drm_tve.c
@@ -205,18 +205,8 @@ static u8 rk_get_vdac_value(void)
 	return value;
 }
 
-static int rockchip_drm_tve_pre_init(struct display_state *state)
+static int rockchip_drm_tve_init(struct rockchip_connector *conn, struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
-
-	conn_state->type = DRM_MODE_CONNECTOR_TV;
-
-	return 0;
-}
-
-static int rockchip_drm_tve_init(struct display_state *state)
-{
-	struct connector_state *conn_state = &state->conn_state;
 	int node = 0;
 	int dac_value, getvdac;
 	fdt_addr_t addr;
@@ -229,7 +219,7 @@ static int rockchip_drm_tve_init(struct display_state *state)
 	}
 
 #if defined(CONFIG_ROCKCHIP_RK3036)
-	addr = dev_read_addr_index(conn_state->dev, 0);
+	addr = dev_read_addr_index(conn->dev, 0);
 	if (addr == FDT_ADDR_T_NONE)
 		return -EINVAL;
 
@@ -242,7 +232,7 @@ static int rockchip_drm_tve_init(struct display_state *state)
 		goto err;
 	}
 #elif defined(CONFIG_ROCKCHIP_RK3128)
-	addr = dev_read_addr_index(conn_state->dev, 0);
+	addr = dev_read_addr_index(conn->dev, 0);
 	if (addr == FDT_ADDR_T_NONE)
 		return -EINVAL;
 
@@ -256,7 +246,7 @@ static int rockchip_drm_tve_init(struct display_state *state)
 		goto err;
 	}
 #elif defined(CONFIG_ROCKCHIP_RK322X)
-	addr = dev_read_addr_index(conn_state->dev, 0);
+	addr = dev_read_addr_index(conn->dev, 0);
 	if (addr == FDT_ADDR_T_NONE)
 		return -EINVAL;
 
@@ -264,7 +254,7 @@ static int rockchip_drm_tve_init(struct display_state *state)
 	tve_s.soctype = SOC_RK322X;
 	tve_s.saturation = 0;
 
-	addr = dev_read_addr_index(conn_state->dev, 1);
+	addr = dev_read_addr_index(conn->dev, 1);
 	if (addr == FDT_ADDR_T_NONE)
 		return -EINVAL;
 	tve_s.vdacbase = (void *)addr;
@@ -275,14 +265,14 @@ static int rockchip_drm_tve_init(struct display_state *state)
 		goto err;
 	}
 #elif defined(CONFIG_ROCKCHIP_RK3328)
-	addr = dev_read_addr_index(conn_state->dev, 0);
+	addr = dev_read_addr_index(conn->dev, 0);
 	if (addr == FDT_ADDR_T_NONE)
 		return -EINVAL;
 
 	tve_s.reg_phy_base = (void *)addr;
 	tve_s.soctype = SOC_RK322XH;
 
-	addr = dev_read_addr_index(conn_state->dev, 1);
+	addr = dev_read_addr_index(conn->dev, 1);
 	if (addr == FDT_ADDR_T_NONE)
 		return -EINVAL;
 	tve_s.vdacbase = (void *)addr;
@@ -403,7 +393,7 @@ err:
 	return -ENODEV;
 }
 
-static int rockchip_drm_tve_enable(struct display_state *state)
+static int rockchip_drm_tve_enable(struct rockchip_connector *conn, struct display_state *state)
 {
 	struct connector_state *conn_state = &state->conn_state;
 	struct drm_display_mode *mode = &conn_state->mode;
@@ -411,7 +401,7 @@ static int rockchip_drm_tve_enable(struct display_state *state)
 
 #ifdef CONFIG_ROCKCHIP_INNO_HDMI_PHY
 	/* set inno hdmi phy clk. */
-	rockchip_phy_set_pll(conn_state->phy, 27000000);
+	rockchip_phy_set_pll(conn->phy, 27000000);
 #endif
 	if (mode->vdisplay == 576)
 		tve_type = TVOUT_CVBS_PAL;
@@ -424,23 +414,23 @@ static int rockchip_drm_tve_enable(struct display_state *state)
 	return 0;
 }
 
-static void rockchip_drm_tve_deinit(struct display_state *state)
+static void rockchip_drm_tve_deinit(struct rockchip_connector *conn, struct display_state *state)
 {
 	dac_enable(0);
 }
 
-static int rockchip_drm_tve_prepare(struct display_state *state)
+static int rockchip_drm_tve_prepare(struct rockchip_connector *conn, struct display_state *state)
 {
 	return 0;
 }
 
-static int rockchip_drm_tve_disable(struct display_state *state)
+static int rockchip_drm_tve_disable(struct rockchip_connector *conn, struct display_state *state)
 {
 	dac_enable(0);
 	return 0;
 }
 
-static int rockchip_drm_tve_detect(struct display_state *state)
+static int rockchip_drm_tve_detect(struct rockchip_connector *conn, struct display_state *state)
 {
 	return 1;
 }
@@ -541,7 +531,7 @@ static void drm_tve_selete_output(struct overscan *overscan,
 		       screen_info->mode.vdisplay);
 }
 
-static int rockchip_drm_tve_get_timing(struct display_state *state)
+static int rockchip_drm_tve_get_timing(struct rockchip_connector *conn, struct display_state *state)
 {
 	struct connector_state *conn_state = &state->conn_state;
 	struct drm_display_mode *mode = &conn_state->mode;
@@ -553,13 +543,7 @@ static int rockchip_drm_tve_get_timing(struct display_state *state)
 	return 0;
 }
 
-static int rockchip_drm_tve_probe(struct udevice *dev)
-{
-	return 0;
-}
-
 const struct rockchip_connector_funcs rockchip_drm_tve_funcs = {
-	.pre_init = rockchip_drm_tve_pre_init,
 	.init = rockchip_drm_tve_init,
 	.deinit = rockchip_drm_tve_deinit,
 	.prepare = rockchip_drm_tve_prepare,
@@ -569,14 +553,19 @@ const struct rockchip_connector_funcs rockchip_drm_tve_funcs = {
 	.detect = rockchip_drm_tve_detect,
 };
 
-static const struct rockchip_connector rk3328_drm_tve_data = {
-	.funcs = &rockchip_drm_tve_funcs,
-};
+static int rockchip_drm_tve_probe(struct udevice *dev)
+{
+	struct rockchip_connector *conn = dev_get_priv(dev);
+
+	rockchip_connector_bind(conn, dev, 0, &rockchip_drm_tve_funcs, NULL,
+				DRM_MODE_CONNECTOR_TV);
+
+	return 0;
+}
 
 static const struct udevice_id rockchip_drm_tve_ids[] = {
 	{
 	 .compatible = "rockchip,rk3328-tve",
-	 .data = (ulong)&rk3328_drm_tve_data,
 	}, {}
 };
 
@@ -585,4 +574,5 @@ U_BOOT_DRIVER(rockchip_drm_tve) = {
 	.id = UCLASS_DISPLAY,
 	.of_match = rockchip_drm_tve_ids,
 	.probe	= rockchip_drm_tve_probe,
+	.priv_auto_alloc_size = sizeof(struct rockchip_connector),
 };
diff --git a/drivers/video/drm/rockchip_dw_hdmi.c b/drivers/video/drm/rockchip_dw_hdmi.c
index 3bf3b2f..3a3169c 100644
--- a/drivers/video/drm/rockchip_dw_hdmi.c
+++ b/drivers/video/drm/rockchip_dw_hdmi.c
@@ -7,6 +7,7 @@
 #include <common.h>
 #include <boot_rkimg.h>
 #include <asm/io.h>
+#include <dm/of_access.h>
 #include <dm/device.h>
 #include <linux/dw_hdmi.h>
 #include <linux/hdmi.h>
@@ -490,7 +491,6 @@ static const struct dw_hdmi_phy_ops inno_dw_hdmi_phy_ops = {
 };
 
 static const struct rockchip_connector_funcs rockchip_dw_hdmi_funcs = {
-	.pre_init = rockchip_dw_hdmi_pre_init,
 	.init = rockchip_dw_hdmi_init,
 	.deinit = rockchip_dw_hdmi_deinit,
 	.prepare = rockchip_dw_hdmi_prepare,
@@ -556,61 +556,41 @@ const struct dw_hdmi_plat_data rk3568_hdmi_drv_data = {
 
 static int rockchip_dw_hdmi_probe(struct udevice *dev)
 {
-	return 0;
-}
+	int id;
+	struct rockchip_connector *conn = dev_get_priv(dev);
 
-static const struct rockchip_connector rk3568_dw_hdmi_data = {
-	.funcs = &rockchip_dw_hdmi_funcs,
-	.data = &rk3568_hdmi_drv_data,
-};
+	id = of_alias_get_id(ofnode_to_np(dev->node), "hdmi");
+	if (id < 0)
+		id = 0;
 
-static const struct rockchip_connector rk3399_dw_hdmi_data = {
-	.funcs = &rockchip_dw_hdmi_funcs,
-	.data = &rk3399_hdmi_drv_data,
-};
+	rockchip_connector_bind(conn, dev, id, &rockchip_dw_hdmi_funcs, NULL,
+				DRM_MODE_CONNECTOR_HDMIA);
 
-static const struct rockchip_connector rk3368_dw_hdmi_data = {
-	.funcs = &rockchip_dw_hdmi_funcs,
-	.data = &rk3368_hdmi_drv_data,
-};
-
-static const struct rockchip_connector rk3288_dw_hdmi_data = {
-	.funcs = &rockchip_dw_hdmi_funcs,
-	.data = &rk3288_hdmi_drv_data,
-};
-
-static const struct rockchip_connector rk3328_dw_hdmi_data = {
-	.funcs = &rockchip_dw_hdmi_funcs,
-	.data = &rk3328_hdmi_drv_data,
-};
-
-static const struct rockchip_connector rk3228_dw_hdmi_data = {
-	.funcs = &rockchip_dw_hdmi_funcs,
-	.data = &rk3228_hdmi_drv_data,
-};
+	return 0;
+}
 
 static const struct udevice_id rockchip_dw_hdmi_ids[] = {
 	{
 	 .compatible = "rockchip,rk3568-dw-hdmi",
-	 .data = (ulong)&rk3568_dw_hdmi_data,
+	 .data = (ulong)&rk3568_hdmi_drv_data,
 	}, {
 	 .compatible = "rockchip,rk3399-dw-hdmi",
-	 .data = (ulong)&rk3399_dw_hdmi_data,
+	 .data = (ulong)&rk3399_hdmi_drv_data,
 	}, {
 	 .compatible = "rockchip,rk3368-dw-hdmi",
-	 .data = (ulong)&rk3368_dw_hdmi_data,
+	 .data = (ulong)&rk3368_hdmi_drv_data,
 	}, {
 	 .compatible = "rockchip,rk3288-dw-hdmi",
-	 .data = (ulong)&rk3288_dw_hdmi_data,
+	 .data = (ulong)&rk3288_hdmi_drv_data,
 	}, {
 	 .compatible = "rockchip,rk3328-dw-hdmi",
-	 .data = (ulong)&rk3328_dw_hdmi_data,
+	 .data = (ulong)&rk3328_hdmi_drv_data,
 	}, {
 	 .compatible = "rockchip,rk3128-inno-hdmi",
-	 .data = (ulong)&rk3228_dw_hdmi_data,
+	 .data = (ulong)&rk3228_hdmi_drv_data,
 	}, {
 	 .compatible = "rockchip,rk3228-dw-hdmi",
-	 .data = (ulong)&rk3228_dw_hdmi_data,
+	 .data = (ulong)&rk3228_hdmi_drv_data,
 	}, {}
 };
 
@@ -619,4 +599,5 @@ U_BOOT_DRIVER(rockchip_dw_hdmi) = {
 	.id = UCLASS_DISPLAY,
 	.of_match = rockchip_dw_hdmi_ids,
 	.probe	= rockchip_dw_hdmi_probe,
+	.priv_auto_alloc_size = sizeof(struct rockchip_connector),
 };
diff --git a/drivers/video/drm/rockchip_dw_hdmi.h b/drivers/video/drm/rockchip_dw_hdmi.h
index 4071af0..7e8ea00 100644
--- a/drivers/video/drm/rockchip_dw_hdmi.h
+++ b/drivers/video/drm/rockchip_dw_hdmi.h
@@ -9,23 +9,22 @@
  * Rockchip connector callbacks.
  * If you want to know the details, please refer to rockchip_connector.h
  */
-int rockchip_dw_hdmi_pre_init(struct display_state *state);
-int rockchip_dw_hdmi_init(struct display_state *state);
-void rockchip_dw_hdmi_deinit(struct display_state *state);
-int rockchip_dw_hdmi_prepare(struct display_state *state);
-int rockchip_dw_hdmi_enable(struct display_state *state);
-int rockchip_dw_hdmi_disable(struct display_state *state);
-int rockchip_dw_hdmi_get_timing(struct display_state *state);
-int rockchip_dw_hdmi_detect(struct display_state *state);
-int rockchip_dw_hdmi_get_edid(struct display_state *state);
+int rockchip_dw_hdmi_init(struct rockchip_connector *conn, struct display_state *state);
+void rockchip_dw_hdmi_deinit(struct rockchip_connector *conn, struct display_state *state);
+int rockchip_dw_hdmi_prepare(struct rockchip_connector *conn, struct display_state *state);
+int rockchip_dw_hdmi_enable(struct rockchip_connector *conn, struct display_state *state);
+int rockchip_dw_hdmi_disable(struct rockchip_connector *conn, struct display_state *state);
+int rockchip_dw_hdmi_get_timing(struct rockchip_connector *conn, struct display_state *state);
+int rockchip_dw_hdmi_detect(struct rockchip_connector *conn, struct display_state *state);
+int rockchip_dw_hdmi_get_edid(struct rockchip_connector *conn, struct display_state *state);
 
 enum drm_connector_status
 inno_dw_hdmi_phy_read_hpd(struct dw_hdmi *hdmi,
 			  void *data);
-void inno_dw_hdmi_phy_disable(struct dw_hdmi *dw_hdmi,
+void inno_dw_hdmi_phy_disable(struct rockchip_connector *conn, struct dw_hdmi *dw_hdmi,
 			      void *data);
-int inno_dw_hdmi_phy_init(struct dw_hdmi *dw_hdmi,
+int inno_dw_hdmi_phy_init(struct rockchip_connector *conn, struct dw_hdmi *dw_hdmi,
 			  void *data);
-void inno_dw_hdmi_mode_valid(struct dw_hdmi *hdmi, void *data);
+void inno_dw_hdmi_mode_valid(struct rockchip_connector *conn, struct dw_hdmi *hdmi, void *data);
 
 #endif /* _ROCKCHIP_DW_HDMI_REG_H_ */
diff --git a/drivers/video/drm/rockchip_dw_hdmi_qp.c b/drivers/video/drm/rockchip_dw_hdmi_qp.c
index b63c45c..13c8f47 100644
--- a/drivers/video/drm/rockchip_dw_hdmi_qp.c
+++ b/drivers/video/drm/rockchip_dw_hdmi_qp.c
@@ -6,6 +6,7 @@
 
 #include <common.h>
 #include <boot_rkimg.h>
+#include <clk.h>
 #include <fdtdec.h>
 #include <regmap.h>
 #include <syscon.h>
@@ -53,7 +54,7 @@
 #define RK3588_YUV420			0x3
 #define RK3588_COMPRESSED_DATA		0xb
 #define RK3588_COLOR_DEPTH_MASK		(0xf << 4)
-#define RK3588_8BPC			(0x5 << 4)
+#define RK3588_8BPC			0
 #define RK3588_10BPC			(0x6 << 4)
 #define RK3588_CECIN_MASK		BIT(8)
 #define RK3588_SCLIN_MASK		BIT(9)
@@ -77,6 +78,7 @@
 #define COLOR_DEPTH_10BIT		BIT(31)
 #define HDMI_FRL_MODE			BIT(30)
 #define HDMI_EARC_MODE			BIT(29)
+#define DATA_RATE_MASK			0xFFFFFFF
 
 #define HDMI20_MAX_RATE			600000
 #define HDMI_8K60_RATE			2376000
@@ -105,6 +107,7 @@ enum hdmi_frl_rate_per_lane {
 };
 
 struct rockchip_hdmi {
+	struct rockchip_connector connector;
 	int id;
 	struct udevice *dev;
 	struct regmap *regmap;
@@ -118,10 +121,13 @@ struct rockchip_hdmi {
 
 	u8 max_frl_rate_per_lane;
 	u8 max_lanes;
+	bool allm_en;
 	u32 bus_width;
 	struct drm_hdmi_dsc_cap dsc_cap;
 	struct dw_hdmi_link_config link_cfg;
 
+	struct clk link_clk;
+
 	struct gpio_desc enable_gpio;
 };
 
@@ -435,8 +441,10 @@ static void hdmi_select_link_config(struct rockchip_hdmi *hdmi,
 	hdmi->link_cfg.dsc_mode = false;
 	hdmi->link_cfg.frl_lanes = max_lanes;
 	hdmi->link_cfg.rate_per_lane = max_rate_per_lane;
+	hdmi->link_cfg.allm_en = hdmi->allm_en;
 
-	if (!max_frl_rate || tmdsclk < HDMI20_MAX_RATE) {
+	if (!max_frl_rate ||
+	    (tmdsclk < HDMI20_MAX_RATE && mode->clock < HDMI20_MAX_RATE)) {
 		printf("%s use tmds mode\n", __func__);
 		hdmi->link_cfg.frl_mode = false;
 		return;
@@ -758,11 +766,12 @@ static unsigned int drm_rk_select_color(struct hdmi_edid_data *edid_data,
 {
 	struct drm_display_info *info = &edid_data->display_info;
 	struct drm_display_mode *mode = edid_data->preferred_mode;
+	struct drm_hdmi_info *hdmi_info = &edid_data->display_info.hdmi;
 	int max_tmds_clock = info->max_tmds_clock;
 	bool support_dc = false;
 	bool mode_420 = drm_mode_is_420(info, mode);
 	unsigned int color_depth = 8;
-	unsigned int base_color = DRM_HDMI_OUTPUT_DEFAULT_RGB;
+	unsigned int base_color = DRM_HDMI_OUTPUT_YCBCR444;
 	unsigned int color_format = DRM_HDMI_OUTPUT_DEFAULT_RGB;
 	unsigned long tmdsclock, pixclock = mode->clock;
 
@@ -825,6 +834,13 @@ static unsigned int drm_rk_select_color(struct hdmi_edid_data *edid_data,
 	if (screen_info && screen_info->depth == 10)
 		color_depth = screen_info->depth;
 
+	if (mode->clock >= 600000) {
+		color_format = DRM_HDMI_OUTPUT_YCBCR420;
+	} else if (mode->clock >= 340000) {
+		if (drm_mode_is_420(info, mode))
+			color_format = DRM_HDMI_OUTPUT_YCBCR420;
+	}
+
 	if (color_format == DRM_HDMI_OUTPUT_YCBCR422 || color_depth == 8)
 		tmdsclock = pixclock;
 	else
@@ -836,15 +852,22 @@ static unsigned int drm_rk_select_color(struct hdmi_edid_data *edid_data,
 	if (!max_tmds_clock)
 		max_tmds_clock = 340000;
 
-	if (pixclock >= 340000) {
-		if (drm_mode_is_420(info, mode))
-			color_format = DRM_HDMI_OUTPUT_YCBCR420;
-		else
-			color_format = DRM_HDMI_OUTPUT_DEFAULT_RGB;
-	} else if (tmdsclock > max_tmds_clock) {
-		color_depth = 8;
-		if (drm_mode_is_420(info, mode))
-			color_format = DRM_HDMI_OUTPUT_YCBCR420;
+	if (hdmi_info->max_frl_rate_per_lane && mode->clock > 600000)
+		max_tmds_clock =
+			hdmi_info->max_lanes * hdmi_info->max_frl_rate_per_lane *
+				1000000;
+
+	if (tmdsclock > max_tmds_clock) {
+		if (max_tmds_clock >= 594000) {
+			color_depth = 8;
+		} else if (max_tmds_clock > 340000) {
+			if (drm_mode_is_420(info, mode) || tmdsclock >= 594000)
+				color_format = DRM_HDMI_OUTPUT_YCBCR420;
+		} else {
+			color_depth = 8;
+			if (drm_mode_is_420(info, mode) || tmdsclock >= 594000)
+				color_format = DRM_HDMI_OUTPUT_YCBCR420;
+		}
 	}
 
 	printf("color_format:%x\n", color_format);
@@ -873,8 +896,10 @@ static unsigned int drm_rk_select_color(struct hdmi_edid_data *edid_data,
 	}
 }
 
+#define SUPPORT_HDMI_ALLM	BIT(1)
+
 void dw_hdmi_qp_selete_output(struct hdmi_edid_data *edid_data,
-			      struct connector_state *conn_state,
+			      struct rockchip_connector *conn,
 			      unsigned int *bus_format,
 			      struct overscan *overscan,
 			      enum dw_hdmi_devtype dev_type,
@@ -885,7 +910,7 @@ void dw_hdmi_qp_selete_output(struct hdmi_edid_data *edid_data,
 	struct drm_hdmi_info *hdmi_info = &edid_data->display_info.hdmi;
 	int ret, i, screen_size;
 	struct base_disp_info base_parameter;
-	struct base2_disp_info *base2_parameter = conn_state->disp_info;
+	struct base2_disp_info *base2_parameter = state->conn_state.disp_info;
 	const struct base_overscan *scan;
 	struct base_screen_info *screen_info = NULL;
 	struct base2_screen_info *screen_info2 = NULL;
@@ -958,6 +983,8 @@ read_aux:
 			goto read_aux;
 		}
 	} else {
+		bool allm_en = false;
+
 		scan = &base2_parameter->overscan_info;
 		screen_size = sizeof(base2_parameter->screen_info) /
 			sizeof(base2_parameter->screen_info[0]);
@@ -977,6 +1004,13 @@ read_aux:
 		screen_info->format = screen_info2->format;
 		screen_info->depth = screen_info2->depthc;
 		screen_info->feature = screen_info2->feature;
+
+		/* check if allm is enabled */
+		allm_en = base2_parameter->reserved[0] & BIT(0);
+		if (allm_en && (hdmi_info->add_func & SUPPORT_HDMI_ALLM))
+			hdmi->allm_en = true;
+		else
+			hdmi->allm_en = false;
 	}
 
 	if (scan->leftscale < min_scan && scan->leftscale > 0)
@@ -1051,7 +1085,7 @@ null_basep:
 			hdmi->bus_width |= COLOR_DEPTH_10BIT;
 	}
 
-	rockchip_phy_set_bus_width(conn_state->phy, hdmi->bus_width);
+	rockchip_phy_set_bus_width(conn->phy, hdmi->bus_width);
 }
 
 static void rk3588_set_link_mode(struct rockchip_hdmi *hdmi)
@@ -1192,25 +1226,21 @@ struct dw_hdmi_link_config *dw_hdmi_rockchip_get_link_cfg(void *data)
 	return &hdmi->link_cfg;
 }
 
-static void dw_hdmi_qp_rockchip_phy_disable(void *data, void *state)
+static void dw_hdmi_qp_rockchip_phy_disable(struct rockchip_connector *conn, void *data,
+					    void *state)
 {
-	struct display_state *display_state = (struct display_state *)state;
-	struct connector_state *conn_state = &display_state->conn_state;
-
-	rockchip_phy_power_off(conn_state->phy);
+	rockchip_phy_power_off(conn->phy);
 }
 
-static int dw_hdmi_qp_rockchip_genphy_init(void *data, void *state)
+static int dw_hdmi_qp_rockchip_genphy_init(struct rockchip_connector *conn, void *data, void *state)
 {
 	struct rockchip_hdmi *hdmi = (struct rockchip_hdmi *)data;
-	struct display_state *display_state = (struct display_state *)state;
-	struct connector_state *conn_state = &display_state->conn_state;
 
-	dw_hdmi_qp_rockchip_phy_disable(data, state);
+	dw_hdmi_qp_rockchip_phy_disable(conn, data, state);
 
-	rockchip_phy_set_bus_width(conn_state->phy, hdmi->bus_width);
+	rockchip_phy_set_bus_width(conn->phy, hdmi->bus_width);
 
-	return rockchip_phy_power_on(conn_state->phy);
+	return rockchip_phy_power_on(conn->phy);
 }
 
 static enum drm_connector_status dw_hdmi_rk3588_read_hpd(void *data)
@@ -1236,19 +1266,13 @@ static enum drm_connector_status dw_hdmi_rk3588_read_hpd(void *data)
 	return ret;
 }
 
-static void dw_hdmi_rk3588_set_pll(void *data, void *state)
+static void dw_hdmi_rk3588_set_pll(struct rockchip_connector *conn, void *data, void *state)
 {
 	struct rockchip_hdmi *hdmi = (struct rockchip_hdmi *)data;
-	struct display_state *display_state = (struct display_state *)state;
-	struct connector_state *conn_state = &display_state->conn_state;
-	struct drm_display_mode *mode = &conn_state->mode;
+	u32 rate = (hdmi->bus_width & DATA_RATE_MASK) * 100;
 
-	if (hdmi_bus_fmt_is_yuv420(hdmi->bus_format))
-		rockchip_phy_set_pll(conn_state->phy, mode->clock / 2 * 1000);
-	else
-		rockchip_phy_set_pll(conn_state->phy, mode->clock * 1000);
+	clk_set_rate(&hdmi->link_clk, rate);
 }
-
 static const struct dw_hdmi_qp_phy_ops rk3588_hdmi_phy_ops = {
 	.init = dw_hdmi_qp_rockchip_genphy_init,
 	.disable = dw_hdmi_qp_rockchip_phy_disable,
@@ -1257,7 +1281,6 @@ static const struct dw_hdmi_qp_phy_ops rk3588_hdmi_phy_ops = {
 };
 
 static const struct rockchip_connector_funcs rockchip_dw_hdmi_qp_funcs = {
-	.pre_init = rockchip_dw_hdmi_qp_pre_init,
 	.init = rockchip_dw_hdmi_qp_init,
 	.deinit = rockchip_dw_hdmi_qp_deinit,
 	.prepare = rockchip_dw_hdmi_qp_prepare,
@@ -1310,18 +1333,22 @@ static int rockchip_dw_hdmi_qp_probe(struct udevice *dev)
 		return ret;
 	}
 
+	ret = clk_get_by_name(dev, "link_clk", &hdmi->link_clk);
+	if (ret) {
+		printf("%s: can't get link_clk\n", __func__);
+		return ret;
+	}
+
+	rockchip_connector_bind(&hdmi->connector, dev, hdmi->id, &rockchip_dw_hdmi_qp_funcs,
+				NULL, DRM_MODE_CONNECTOR_HDMIA);
+
 	return 0;
 }
 
-static const struct rockchip_connector rk3588_dw_hdmi_qp_data = {
-	.funcs = &rockchip_dw_hdmi_qp_funcs,
-	.data = &rk3588_hdmi_drv_data,
-};
-
 static const struct udevice_id rockchip_dw_hdmi_qp_ids[] = {
 	{
 	 .compatible = "rockchip,rk3588-dw-hdmi",
-	 .data = (ulong)&rk3588_dw_hdmi_qp_data,
+	 .data = (ulong)&rk3588_hdmi_drv_data,
 	}, {}
 };
 
diff --git a/drivers/video/drm/rockchip_dw_hdmi_qp.h b/drivers/video/drm/rockchip_dw_hdmi_qp.h
index 8f3bde4..25e08fe 100644
--- a/drivers/video/drm/rockchip_dw_hdmi_qp.h
+++ b/drivers/video/drm/rockchip_dw_hdmi_qp.h
@@ -9,14 +9,13 @@
  * Rockchip connector callbacks.
  * If you want to know the details, please refer to rockchip_connector.h
  */
-int rockchip_dw_hdmi_qp_pre_init(struct display_state *state);
-int rockchip_dw_hdmi_qp_init(struct display_state *state);
-void rockchip_dw_hdmi_qp_deinit(struct display_state *state);
-int rockchip_dw_hdmi_qp_prepare(struct display_state *state);
-int rockchip_dw_hdmi_qp_enable(struct display_state *state);
-int rockchip_dw_hdmi_qp_disable(struct display_state *state);
-int rockchip_dw_hdmi_qp_get_timing(struct display_state *state);
-int rockchip_dw_hdmi_qp_detect(struct display_state *state);
-int rockchip_dw_hdmi_qp_get_edid(struct display_state *state);
+int rockchip_dw_hdmi_qp_init(struct rockchip_connector *conn, struct display_state *state);
+void rockchip_dw_hdmi_qp_deinit(struct rockchip_connector *conn, struct display_state *state);
+int rockchip_dw_hdmi_qp_prepare(struct rockchip_connector *conn, struct display_state *state);
+int rockchip_dw_hdmi_qp_enable(struct rockchip_connector *conn, struct display_state *state);
+int rockchip_dw_hdmi_qp_disable(struct rockchip_connector *conn, struct display_state *state);
+int rockchip_dw_hdmi_qp_get_timing(struct rockchip_connector *conn, struct display_state *state);
+int rockchip_dw_hdmi_qp_detect(struct rockchip_connector *conn, struct display_state *state);
+int rockchip_dw_hdmi_qp_get_edid(struct rockchip_connector *conn, struct display_state *state);
 
 #endif /* _ROCKCHIP_DW_HDMI_QP_H_ */
diff --git a/drivers/video/drm/rockchip_lvds.c b/drivers/video/drm/rockchip_lvds.c
index 7d24403..ffacd49 100644
--- a/drivers/video/drm/rockchip_lvds.c
+++ b/drivers/video/drm/rockchip_lvds.c
@@ -92,6 +92,7 @@ struct rockchip_lvds_funcs {
 };
 
 struct rockchip_lvds {
+	struct rockchip_connector connector;
 	int id;
 	struct udevice *dev;
 	struct regmap *grf;
@@ -103,30 +104,15 @@ struct rockchip_lvds {
 	bool dual_channel;
 };
 
-static inline struct rockchip_lvds *state_to_lvds(struct display_state *state)
+static int rockchip_lvds_connector_init(struct rockchip_connector *conn,
+					struct display_state *state)
 {
+	struct rockchip_lvds *lvds = dev_get_priv(conn->dev);
 	struct connector_state *conn_state = &state->conn_state;
-
-	return dev_get_priv(conn_state->dev);
-}
-
-static int rockchip_lvds_connector_pre_init(struct display_state *state)
-{
-	struct connector_state *conn_state = &state->conn_state;
-
-	conn_state->type = DRM_MODE_CONNECTOR_LVDS;
-
-	return 0;
-}
-
-static int rockchip_lvds_connector_init(struct display_state *state)
-{
-	struct rockchip_lvds *lvds = state_to_lvds(state);
-	struct connector_state *conn_state = &state->conn_state;
-	struct rockchip_panel *panel = state_get_panel(state);
+	struct rockchip_panel *panel = conn->panel;
 
 	lvds->mode = &conn_state->mode;
-	lvds->phy = conn_state->phy;
+	lvds->phy = conn->phy;
 	conn_state->disp_info  = rockchip_get_disp_info(conn_state->type, lvds->id);
 
 	switch (panel->bus_format) {
@@ -162,9 +148,10 @@ static int rockchip_lvds_connector_init(struct display_state *state)
 	return 0;
 }
 
-static int rockchip_lvds_connector_enable(struct display_state *state)
+static int rockchip_lvds_connector_enable(struct rockchip_connector *conn,
+					  struct display_state *state)
 {
-	struct rockchip_lvds *lvds = state_to_lvds(state);
+	struct rockchip_lvds *lvds = dev_get_priv(conn->dev);
 	struct crtc_state *crtc_state = &state->crtc_state;
 	int pipe = crtc_state->crtc_id;
 	int ret;
@@ -183,9 +170,10 @@ static int rockchip_lvds_connector_enable(struct display_state *state)
 	return 0;
 }
 
-static int rockchip_lvds_connector_disable(struct display_state *state)
+static int rockchip_lvds_connector_disable(struct rockchip_connector *conn,
+					   struct display_state *state)
 {
-	struct rockchip_lvds *lvds = state_to_lvds(state);
+	struct rockchip_lvds *lvds = dev_get_priv(conn->dev);
 
 	rockchip_phy_power_off(lvds->phy);
 
@@ -196,7 +184,6 @@ static int rockchip_lvds_connector_disable(struct display_state *state)
 }
 
 static const struct rockchip_connector_funcs rockchip_lvds_connector_funcs = {
-	.pre_init = rockchip_lvds_connector_pre_init,
 	.init = rockchip_lvds_connector_init,
 	.enable = rockchip_lvds_connector_enable,
 	.disable = rockchip_lvds_connector_disable,
@@ -205,11 +192,9 @@ static const struct rockchip_connector_funcs rockchip_lvds_connector_funcs = {
 static int rockchip_lvds_probe(struct udevice *dev)
 {
 	struct rockchip_lvds *lvds = dev_get_priv(dev);
-	const struct rockchip_connector *connector =
-		(const struct rockchip_connector *)dev_get_driver_data(dev);
 
 	lvds->dev = dev;
-	lvds->funcs = connector->data;
+	lvds->funcs = (const struct rockchip_lvds_funcs *)dev_get_driver_data(dev);
 	lvds->grf = syscon_get_regmap(dev_get_parent(dev));
 	lvds->dual_channel = dev_read_bool(dev, "dual-channel");
 	lvds->data_swap = dev_read_bool(dev, "rockchip,data-swap");
@@ -217,6 +202,9 @@ static int rockchip_lvds_probe(struct udevice *dev)
 	if (lvds->id < 0)
 		lvds->id = 0;
 
+	rockchip_connector_bind(&lvds->connector, dev, lvds->id, &rockchip_lvds_connector_funcs,
+				NULL, DRM_MODE_CONNECTOR_LVDS);
+
 	return 0;
 }
 
@@ -239,11 +227,6 @@ static const struct rockchip_lvds_funcs px30_lvds_funcs = {
 	.disable = px30_lvds_disable,
 };
 
-static const struct rockchip_connector px30_lvds_driver_data = {
-	 .funcs = &rockchip_lvds_connector_funcs,
-	 .data = &px30_lvds_funcs,
-};
-
 static void rk3126_lvds_enable(struct rockchip_lvds *lvds, int pipe)
 {
 	regmap_write(lvds->grf, RK3126_GRF_LVDS_CON0,
@@ -262,11 +245,6 @@ static const struct rockchip_lvds_funcs rk3126_lvds_funcs = {
 	.disable = rk3126_lvds_disable,
 };
 
-static const struct rockchip_connector rk3126_lvds_driver_data = {
-	 .funcs = &rockchip_lvds_connector_funcs,
-	 .data = &rk3126_lvds_funcs,
-};
-
 static void rk3288_lvds_enable(struct rockchip_lvds *lvds, int pipe)
 {
 	const struct drm_display_mode *mode = lvds->mode;
@@ -310,11 +288,6 @@ static const struct rockchip_lvds_funcs rk3288_lvds_funcs = {
 	.disable = rk3288_lvds_disable,
 };
 
-static const struct rockchip_connector rk3288_lvds_driver_data = {
-	 .funcs = &rockchip_lvds_connector_funcs,
-	 .data = &rk3288_lvds_funcs,
-};
-
 static void rk3368_lvds_enable(struct rockchip_lvds *lvds, int pipe)
 {
 	regmap_write(lvds->grf, RK3368_GRF_SOC_CON7,
@@ -334,11 +307,6 @@ static const struct rockchip_lvds_funcs rk3368_lvds_funcs = {
 	.disable = rk3368_lvds_disable,
 };
 
-static const struct rockchip_connector rk3368_lvds_driver_data = {
-	 .funcs = &rockchip_lvds_connector_funcs,
-	 .data = &rk3368_lvds_funcs,
-};
-
 static void rk3568_lvds_enable(struct rockchip_lvds *lvds, int pipe)
 {
 	regmap_write(lvds->grf, RK3568_GRF_VO_CON2,
@@ -358,31 +326,26 @@ static const struct rockchip_lvds_funcs rk3568_lvds_funcs = {
 	.disable = rk3568_lvds_disable,
 };
 
-static const struct rockchip_connector rk3568_lvds_driver_data = {
-	.funcs = &rockchip_lvds_connector_funcs,
-	.data = &rk3568_lvds_funcs,
-};
-
 static const struct udevice_id rockchip_lvds_ids[] = {
 	{
 		.compatible = "rockchip,px30-lvds",
-		.data = (ulong)&px30_lvds_driver_data,
+		.data = (ulong)&px30_lvds_funcs,
 	},
 	{
 		.compatible = "rockchip,rk3126-lvds",
-		.data = (ulong)&rk3126_lvds_driver_data,
+		.data = (ulong)&rk3126_lvds_funcs,
 	},
 	{
 		.compatible = "rockchip,rk3288-lvds",
-		.data = (ulong)&rk3288_lvds_driver_data,
+		.data = (ulong)&rk3288_lvds_funcs,
 	},
 	{
 		.compatible = "rockchip,rk3368-lvds",
-		.data = (ulong)&rk3368_lvds_driver_data,
+		.data = (ulong)&rk3368_lvds_funcs,
 	},
 	{
 		.compatible = "rockchip,rk3568-lvds",
-		.data = (ulong)&rk3568_lvds_driver_data,
+		.data = (ulong)&rk3568_lvds_funcs,
 	},
 	{}
 };
diff --git a/drivers/video/drm/rockchip_panel.c b/drivers/video/drm/rockchip_panel.c
index ad7ead6..de7e5e2 100644
--- a/drivers/video/drm/rockchip_panel.c
+++ b/drivers/video/drm/rockchip_panel.c
@@ -158,7 +158,7 @@ static void rockchip_panel_write_spi_cmds(struct rockchip_panel_priv *priv,
 	dm_gpio_set_value(&priv->spi_cs_gpio, 1);
 }
 
-static int rockchip_panel_send_mcu_cmds(struct display_state *state,
+static int rockchip_panel_send_mcu_cmds(struct rockchip_panel *panel, struct display_state *state,
 					struct rockchip_panel_cmds *cmds)
 {
 	int i;
@@ -182,10 +182,9 @@ static int rockchip_panel_send_mcu_cmds(struct display_state *state,
 	return 0;
 }
 
-static int rockchip_panel_send_spi_cmds(struct display_state *state,
+static int rockchip_panel_send_spi_cmds(struct rockchip_panel *panel, struct display_state *state,
 					struct rockchip_panel_cmds *cmds)
 {
-	struct rockchip_panel *panel = state_get_panel(state);
 	struct rockchip_panel_priv *priv = dev_get_priv(panel->dev);
 	int i;
 
@@ -300,10 +299,10 @@ static void panel_simple_prepare(struct rockchip_panel *panel)
 
 	if (plat->on_cmds) {
 		if (priv->cmd_type == CMD_TYPE_SPI)
-			ret = rockchip_panel_send_spi_cmds(panel->state,
+			ret = rockchip_panel_send_spi_cmds(panel, panel->state,
 							   plat->on_cmds);
 		else if (priv->cmd_type == CMD_TYPE_MCU)
-			ret = rockchip_panel_send_mcu_cmds(panel->state,
+			ret = rockchip_panel_send_mcu_cmds(panel, panel->state,
 							   plat->on_cmds);
 		else
 			ret = rockchip_panel_send_dsi_cmds(dsi, plat->on_cmds);
@@ -326,10 +325,10 @@ static void panel_simple_unprepare(struct rockchip_panel *panel)
 
 	if (plat->off_cmds) {
 		if (priv->cmd_type == CMD_TYPE_SPI)
-			ret = rockchip_panel_send_spi_cmds(panel->state,
+			ret = rockchip_panel_send_spi_cmds(panel, panel->state,
 							   plat->off_cmds);
 		else if (priv->cmd_type == CMD_TYPE_MCU)
-			ret = rockchip_panel_send_mcu_cmds(panel->state,
+			ret = rockchip_panel_send_mcu_cmds(panel, panel->state,
 							   plat->off_cmds);
 		else
 			ret = rockchip_panel_send_dsi_cmds(dsi, plat->off_cmds);
diff --git a/drivers/video/drm/rockchip_panel.h b/drivers/video/drm/rockchip_panel.h
index 91b2b06..5e49fe3 100644
--- a/drivers/video/drm/rockchip_panel.h
+++ b/drivers/video/drm/rockchip_panel.h
@@ -9,12 +9,15 @@
 
 struct display_state;
 struct rockchip_panel;
+struct rockchip_conn;
 
 struct rockchip_panel_funcs {
 	void (*prepare)(struct rockchip_panel *panel);
 	void (*unprepare)(struct rockchip_panel *panel);
 	void (*enable)(struct rockchip_panel *panel);
 	void (*disable)(struct rockchip_panel *panel);
+	int (*get_mode)(struct rockchip_panel *panel,
+			struct drm_display_mode *mode);
 };
 
 struct rockchip_panel {
@@ -24,15 +27,18 @@ struct rockchip_panel {
 	const struct rockchip_panel_funcs *funcs;
 	const void *data;
 
+	struct rockchip_connector *conn;
 	struct display_state *state;
 };
 
 static inline void rockchip_panel_init(struct rockchip_panel *panel,
+				       struct rockchip_connector *conn,
 				       struct display_state *state)
 {
 	if (!panel)
 		return;
 
+	panel->conn = conn;
 	panel->state = state;
 
 	if (panel->bus_format)
diff --git a/drivers/video/drm/rockchip_rgb.c b/drivers/video/drm/rockchip_rgb.c
index 0778c8e..53fb862 100644
--- a/drivers/video/drm/rockchip_rgb.c
+++ b/drivers/video/drm/rockchip_rgb.c
@@ -28,6 +28,11 @@
 #define RK1808_GRF_PD_VO_CON1		0x0444
 #define RK1808_RGB_DATA_SYNC_BYPASS(v)	HIWORD_UPDATE(v, 3, 3)
 
+#define RV1106_VENC_GRF_VOP_IO_WRAPPER	0x1000c
+#define RV1106_IO_BYPASS_SEL(v)		HIWORD_UPDATE(v, 0, 1)
+#define RV1106_VOGRF_VOP_PIPE_BYPASS	0x60034
+#define RV1106_VOP_PIPE_BYPASS(v)	HIWORD_UPDATE(v, 0, 1)
+
 #define RV1126_GRF_IOFUNC_CON3          0x1026c
 #define RV1126_LCDC_IO_BYPASS(v)        HIWORD_UPDATE(v, 0, 0)
 
@@ -54,6 +59,7 @@ struct rockchip_rgb_funcs {
 };
 
 struct rockchip_rgb {
+	struct rockchip_connector connector;
 	int id;
 	struct udevice *dev;
 	struct regmap *grf;
@@ -62,16 +68,10 @@ struct rockchip_rgb {
 	const struct rockchip_rgb_funcs *funcs;
 };
 
-static inline struct rockchip_rgb *state_to_rgb(struct display_state *state)
+static int rockchip_rgb_connector_prepare(struct rockchip_connector *conn,
+					  struct display_state *state)
 {
-	struct connector_state *conn_state = &state->conn_state;
-
-	return dev_get_priv(conn_state->dev);
-}
-
-static int rockchip_rgb_connector_prepare(struct display_state *state)
-{
-	struct rockchip_rgb *rgb = state_to_rgb(state);
+	struct rockchip_rgb *rgb = dev_get_priv(conn->dev);
 	struct crtc_state *crtc_state = &state->crtc_state;
 	int pipe = crtc_state->crtc_id;
 	int ret;
@@ -94,9 +94,10 @@ static int rockchip_rgb_connector_prepare(struct display_state *state)
 	return 0;
 }
 
-static void rockchip_rgb_connector_unprepare(struct display_state *state)
+static void rockchip_rgb_connector_unprepare(struct rockchip_connector *conn,
+					     struct display_state *state)
 {
-	struct rockchip_rgb *rgb = state_to_rgb(state);
+	struct rockchip_rgb *rgb = dev_get_priv(conn->dev);
 
 	if (rgb->phy)
 		rockchip_phy_power_off(rgb->phy);
@@ -107,21 +108,12 @@ static void rockchip_rgb_connector_unprepare(struct display_state *state)
 	pinctrl_select_state(rgb->dev, "sleep");
 }
 
-static int rockchip_rgb_connector_pre_init(struct display_state *state)
-{
-	struct connector_state *conn_state = &state->conn_state;
-
-	conn_state->type = DRM_MODE_CONNECTOR_LVDS;
-
-	return 0;
-}
-
-static int rockchip_rgb_connector_init(struct display_state *state)
+static int rockchip_rgb_connector_init(struct rockchip_connector *conn, struct display_state *state)
 {
-	struct rockchip_rgb *rgb = state_to_rgb(state);
+	struct rockchip_rgb *rgb = dev_get_priv(conn->dev);
 	struct connector_state *conn_state = &state->conn_state;
 
-	rgb->phy = conn_state->phy;
+	rgb->phy = conn->phy;
 
 	conn_state->color_space = V4L2_COLORSPACE_DEFAULT;
 	conn_state->disp_info  = rockchip_get_disp_info(conn_state->type, rgb->id);
@@ -173,7 +165,6 @@ static int rockchip_rgb_connector_init(struct display_state *state)
 }
 
 static const struct rockchip_connector_funcs rockchip_rgb_connector_funcs = {
-	.pre_init = rockchip_rgb_connector_pre_init,
 	.init = rockchip_rgb_connector_init,
 	.prepare = rockchip_rgb_connector_prepare,
 	.unprepare = rockchip_rgb_connector_unprepare,
@@ -182,20 +173,33 @@ static const struct rockchip_connector_funcs rockchip_rgb_connector_funcs = {
 static int rockchip_rgb_probe(struct udevice *dev)
 {
 	struct rockchip_rgb *rgb = dev_get_priv(dev);
-	const struct rockchip_connector *connector =
-		(const struct rockchip_connector *)dev_get_driver_data(dev);
 
 	rgb->dev = dev;
-	rgb->funcs = connector->data;
+	rgb->funcs = (const struct rockchip_rgb_funcs *)dev_get_driver_data(dev);
 	rgb->grf = syscon_get_regmap(dev_get_parent(dev));
 	rgb->data_sync_bypass = dev_read_bool(dev, "rockchip,data-sync-bypass");
 	rgb->id = of_alias_get_id(ofnode_to_np(dev->node), "rgb");
 	if (rgb->id < 0)
 		rgb->id = 0;
 
+	rockchip_connector_bind(&rgb->connector, dev, rgb->id, &rockchip_rgb_connector_funcs,
+				NULL, DRM_MODE_CONNECTOR_LVDS);
+
 	return 0;
 }
 
+static void rv1106_rgb_prepare(struct rockchip_rgb *rgb, int pipe)
+{
+	regmap_write(rgb->grf, RV1106_VENC_GRF_VOP_IO_WRAPPER,
+		     RV1106_IO_BYPASS_SEL(rgb->data_sync_bypass ? 0x3 : 0x0));
+	regmap_write(rgb->grf, RV1106_VOGRF_VOP_PIPE_BYPASS,
+		     RV1106_VOP_PIPE_BYPASS(rgb->data_sync_bypass ? 0x3 : 0x0));
+}
+
+static const struct rockchip_rgb_funcs rv1106_rgb_funcs = {
+	.prepare = rv1106_rgb_prepare,
+};
+
 static void rv1126_rgb_prepare(struct rockchip_rgb *rgb, int pipe)
 {
 	regmap_write(rgb->grf, RV1126_GRF_IOFUNC_CON3,
@@ -206,11 +210,6 @@ static const struct rockchip_rgb_funcs rv1126_rgb_funcs = {
 	.prepare = rv1126_rgb_prepare,
 };
 
-static const struct rockchip_connector rv1126_rgb_driver_data = {
-	 .funcs = &rockchip_rgb_connector_funcs,
-	 .data = &rv1126_rgb_funcs,
-};
-
 static void px30_rgb_prepare(struct rockchip_rgb *rgb, int pipe)
 {
 	regmap_write(rgb->grf, PX30_GRF_PD_VO_CON1, PX30_RGB_VOP_SEL(pipe) |
@@ -221,11 +220,6 @@ static const struct rockchip_rgb_funcs px30_rgb_funcs = {
 	.prepare = px30_rgb_prepare,
 };
 
-static const struct rockchip_connector px30_rgb_driver_data = {
-	 .funcs = &rockchip_rgb_connector_funcs,
-	 .data = &px30_rgb_funcs,
-};
-
 static void rk1808_rgb_prepare(struct rockchip_rgb *rgb, int pipe)
 {
 	regmap_write(rgb->grf, RK1808_GRF_PD_VO_CON1,
@@ -236,11 +230,6 @@ static const struct rockchip_rgb_funcs rk1808_rgb_funcs = {
 	.prepare = rk1808_rgb_prepare,
 };
 
-static const struct rockchip_connector rk1808_rgb_driver_data = {
-	.funcs = &rockchip_rgb_connector_funcs,
-	.data = &rk1808_rgb_funcs,
-};
-
 static void rk3288_rgb_prepare(struct rockchip_rgb *rgb, int pipe)
 {
 	regmap_write(rgb->grf, RK3288_GRF_SOC_CON6, RK3288_LVDS_LCDC_SEL(pipe));
@@ -262,11 +251,6 @@ static const struct rockchip_rgb_funcs rk3288_rgb_funcs = {
 	.unprepare = rk3288_rgb_unprepare,
 };
 
-static const struct rockchip_connector rk3288_rgb_driver_data = {
-	.funcs = &rockchip_rgb_connector_funcs,
-	.data = &rk3288_rgb_funcs,
-};
-
 static void rk3368_rgb_prepare(struct rockchip_rgb *rgb, int pipe)
 {
 	regmap_write(rgb->grf, RK3368_GRF_SOC_CON15, RK3368_FORCE_JETAG(0));
@@ -276,11 +260,6 @@ static const struct rockchip_rgb_funcs rk3368_rgb_funcs = {
 	.prepare = rk3368_rgb_prepare,
 };
 
-static const struct rockchip_connector rk3368_rgb_driver_data = {
-	.funcs = &rockchip_rgb_connector_funcs,
-	.data = &rk3368_rgb_funcs,
-};
-
 static void rk3568_rgb_prepare(struct rockchip_rgb *rgb, int pipe)
 {
 	regmap_write(rgb->grf, RK3568_GRF_VO_CON1, RK3568_RGB_DATA_BYPASS(rgb->data_sync_bypass));
@@ -290,55 +269,46 @@ static const struct rockchip_rgb_funcs rk3568_rgb_funcs = {
 	.prepare = rk3568_rgb_prepare,
 };
 
-static const struct rockchip_connector rk3568_rgb_driver_data = {
-	.funcs = &rockchip_rgb_connector_funcs,
-	.data = &rk3568_rgb_funcs,
-};
-
-static const struct rockchip_connector rockchip_rgb_driver_data = {
-	.funcs = &rockchip_rgb_connector_funcs,
-};
-
 static const struct udevice_id rockchip_rgb_ids[] = {
 	{
 		.compatible = "rockchip,px30-rgb",
-		.data = (ulong)&px30_rgb_driver_data,
+		.data = (ulong)&px30_rgb_funcs,
 	},
 	{
 		.compatible = "rockchip,rk1808-rgb",
-		.data = (ulong)&rk1808_rgb_driver_data,
+		.data = (ulong)&rk1808_rgb_funcs,
 	},
 	{
 		.compatible = "rockchip,rk3066-rgb",
-		.data = (ulong)&rockchip_rgb_driver_data,
 	},
 	{
 		.compatible = "rockchip,rk3128-rgb",
-		.data = (ulong)&rockchip_rgb_driver_data,
 	},
 	{
 		.compatible = "rockchip,rk3288-rgb",
-		.data = (ulong)&rk3288_rgb_driver_data,
+		.data = (ulong)&rk3288_rgb_funcs,
 	},
 	{
 		.compatible = "rockchip,rk3308-rgb",
-		.data = (ulong)&rockchip_rgb_driver_data,
 	},
 	{
 		.compatible = "rockchip,rk3368-rgb",
-		.data = (ulong)&rk3368_rgb_driver_data,
+		.data = (ulong)&rk3368_rgb_funcs,
 	},
 	{
 		.compatible = "rockchip,rk3568-rgb",
-		.data = (ulong)&rk3568_rgb_driver_data,
+		.data = (ulong)&rk3568_rgb_funcs,
+	},
+	{
+		.compatible = "rockchip,rv1106-rgb",
+		.data = (ulong)&rv1106_rgb_funcs,
 	},
 	{
 		.compatible = "rockchip,rv1108-rgb",
-		.data = (ulong)&rockchip_rgb_driver_data,
 	},
 	{
 		.compatible = "rockchip,rv1126-rgb",
-		.data = (ulong)&rv1126_rgb_driver_data,
+		.data = (ulong)&rv1126_rgb_funcs,
 	},
 	{}
 };
diff --git a/drivers/video/drm/rockchip_vop.c b/drivers/video/drm/rockchip_vop.c
index 073a33d..e0ce7cf 100644
--- a/drivers/video/drm/rockchip_vop.c
+++ b/drivers/video/drm/rockchip_vop.c
@@ -299,6 +299,9 @@ static int rockchip_vop_init(struct display_state *state)
 	VOP_CTRL_SET(vop, dsp_blank, 0);
 
 	dclk_inv = (mode->flags & DRM_MODE_FLAG_PPIXDATA) ? 0 : 1;
+	/* For improving signal quality, dclk need to be inverted by default on rv1106. */
+	if ((VOP_MAJOR(vop->version) == 2 && VOP_MINOR(vop->version) == 12))
+		dclk_inv = !dclk_inv;
 	VOP_CTRL_SET(vop, dclk_pol, dclk_inv);
 
 	val = 0x8;
@@ -843,6 +846,48 @@ static int rockchip_vop_send_mcu_cmd(struct display_state *state,
 	return 0;
 }
 
+static int rockchip_vop_mode_valid(struct display_state *state)
+{
+	struct connector_state *conn_state = &state->conn_state;
+	struct drm_display_mode *mode = &conn_state->mode;
+	struct videomode vm;
+
+	drm_display_mode_to_videomode(mode, &vm);
+
+	if (vm.hactive < 32 || vm.vactive < 32 ||
+	    (vm.hfront_porch * vm.hsync_len * vm.hback_porch *
+	     vm.vfront_porch * vm.vsync_len * vm.vback_porch == 0)) {
+		printf("ERROR: unsupported display timing\n");
+		return -EINVAL;
+	}
+
+	return 0;
+}
+
+static int rockchip_vop_plane_check(struct display_state *state)
+{
+	struct crtc_state *crtc_state = &state->crtc_state;
+	const struct rockchip_crtc *crtc = crtc_state->crtc;
+	const struct vop_data *vop_data = crtc->data;
+	const struct vop_win *win = vop_data->win;
+	struct display_rect *src = &crtc_state->src_rect;
+	struct display_rect *dst = &crtc_state->crtc_rect;
+	int min_scale, max_scale;
+	int hscale, vscale;
+
+	min_scale = win->scl ? FRAC_16_16(1, 8) : VOP_PLANE_NO_SCALING;
+	max_scale = win->scl ? FRAC_16_16(8, 1) : VOP_PLANE_NO_SCALING;
+
+	hscale = display_rect_calc_hscale(src, dst, min_scale, max_scale);
+	vscale = display_rect_calc_vscale(src, dst, min_scale, max_scale);
+	if (hscale < 0 || vscale < 0) {
+		printf("ERROR: scale factor is out of range\n");
+		return -ERANGE;
+	}
+
+	return 0;
+}
+
 const struct rockchip_crtc_funcs rockchip_vop_funcs = {
 	.preinit = rockchip_vop_preinit,
 	.init = rockchip_vop_init,
@@ -852,4 +897,6 @@ const struct rockchip_crtc_funcs rockchip_vop_funcs = {
 	.disable = rockchip_vop_disable,
 	.fixup_dts = rockchip_vop_fixup_dts,
 	.send_mcu_cmd = rockchip_vop_send_mcu_cmd,
+	.mode_valid = rockchip_vop_mode_valid,
+	.plane_check = rockchip_vop_plane_check,
 };
diff --git a/drivers/video/drm/rockchip_vop.h b/drivers/video/drm/rockchip_vop.h
index abf9bff..c75550d 100644
--- a/drivers/video/drm/rockchip_vop.h
+++ b/drivers/video/drm/rockchip_vop.h
@@ -157,6 +157,8 @@ enum vop_csc_format {
 #define SCL_MAX_VSKIPLINES		4
 #define MIN_SCL_FT_AFTER_VSKIP		1
 
+#define VOP_PLANE_NO_SCALING	BIT(16)
+
 static inline uint16_t scl_cal_scale(int src, int dst, int shift)
 {
 	return ((src * 2 - 3) << (shift - 1)) / (dst - 1);
@@ -356,6 +358,12 @@ struct vop_ctrl {
 	struct vop_reg mcu_type;
 	struct vop_reg mcu_rw_bypass_port;
 
+	/* bt1120 */
+	struct vop_reg bt1120_yc_swap;
+	struct vop_reg bt1120_en;
+
+	/* bt656 */
+	struct vop_reg bt656_en;
 
 	struct vop_reg cfg_done;
 };
@@ -399,6 +407,7 @@ struct vop_win {
 	struct vop_reg gate;
 	struct vop_reg enable;
 	struct vop_reg format;
+	struct vop_reg interlace_read;
 	struct vop_reg ymirror;
 	struct vop_reg rb_swap;
 	struct vop_reg act_info;
diff --git a/drivers/video/drm/rockchip_vop2.c b/drivers/video/drm/rockchip_vop2.c
index 715888d..ba892dd 100644
--- a/drivers/video/drm/rockchip_vop2.c
+++ b/drivers/video/drm/rockchip_vop2.c
@@ -81,6 +81,9 @@
 #define LVDS_DUAL_EN_SHIFT			0
 #define LVDS_DUAL_LEFT_RIGHT_EN_SHIFT		1
 #define LVDS_DUAL_SWAP_EN_SHIFT			2
+#define RK3588_HDMI_DUAL_EN_SHIFT		8
+#define RK3588_EDP_DUAL_EN_SHIFT		8
+#define RK3588_DP_DUAL_EN_SHIFT			9
 #define RK3568_MIPI_DUAL_EN_SHIFT		10
 #define RK3588_MIPI_DSI0_MODE_SEL_SHIFT		11
 #define RK3588_MIPI_DSI1_MODE_SEL_SHIFT		12
@@ -254,6 +257,7 @@
 #define P2I_EN_SHIFT				5
 #define DSP_FILED_POL				6
 #define INTERLACE_EN_SHIFT			7
+#define DSP_X_MIR_EN_SHIFT			13
 #define POST_DSP_OUT_R2Y_SHIFT			15
 #define PRE_DITHER_DOWN_EN_SHIFT		16
 #define DITHER_DOWN_EN_SHIFT			17
@@ -762,6 +766,8 @@
 #define VOP2_PD_DSC_4K				BIT(6)
 #define VOP2_PD_ESMART				BIT(7)
 
+#define VOP2_PLANE_NO_SCALING			BIT(16)
+
 enum vop2_csc_format {
 	CSC_BT601L,
 	CSC_BT709L,
@@ -884,6 +890,8 @@ struct vop2_win_data {
 	u8 splice_win_id;
 	u8 pd_id;
 	u32 reg_offset;
+	u32 max_upscale_factor;
+	u32 max_downscale_factor;
 	bool splice_mode_right;
 };
 
@@ -1934,7 +1942,7 @@ static unsigned long vop2_calc_cru_cfg(struct display_state *state,
 	struct connector_state *conn_state = &state->conn_state;
 	struct drm_display_mode *mode = &conn_state->mode;
 	struct vop2 *vop2 = cstate->private;
-	unsigned long v_pixclk = mode->clock;
+	unsigned long v_pixclk = mode->crtc_clock;
 	unsigned long dclk_core_rate = v_pixclk >> 2;
 	unsigned long dclk_rate = v_pixclk;
 	unsigned long dclk_out_rate;
@@ -1944,12 +1952,23 @@ static unsigned long vop2_calc_cru_cfg(struct display_state *state,
 	int output_mode = conn_state->output_mode;
 	int K = 1;
 
+	if (conn_state->output_flags & ROCKCHIP_OUTPUT_DUAL_CHANNEL_LEFT_RIGHT_MODE &&
+	    output_mode == ROCKCHIP_OUT_MODE_YUV420) {
+		printf("Dual channel and YUV420 can't work together\n");
+		return -EINVAL;
+	}
+
+	if (conn_state->output_flags & ROCKCHIP_OUTPUT_DUAL_CHANNEL_LEFT_RIGHT_MODE ||
+	    output_mode == ROCKCHIP_OUT_MODE_YUV420)
+		K = 2;
+
 	if (output_type == DRM_MODE_CONNECTOR_HDMIA) {
 		/*
 		 * K = 2: dclk_core = if_pixclk_rate > if_dclk_rate
 		 * K = 1: dclk_core = hdmie_edp_dclk > if_pixclk_rate
 		 */
-		if (output_mode == ROCKCHIP_OUT_MODE_YUV420) {
+		if (conn_state->output_flags & ROCKCHIP_OUTPUT_DUAL_CHANNEL_LEFT_RIGHT_MODE ||
+		    output_mode == ROCKCHIP_OUT_MODE_YUV420) {
 			dclk_rate = dclk_rate >> 1;
 			K = 2;
 		}
@@ -1983,10 +2002,8 @@ static unsigned long vop2_calc_cru_cfg(struct display_state *state,
 		*if_pixclk_div = dclk_rate / if_pixclk_rate;
 		*if_dclk_div = *if_pixclk_div;
 	} else if (output_type == DRM_MODE_CONNECTOR_DisplayPort) {
-		if (output_mode == ROCKCHIP_OUT_MODE_YUV420)
-			dclk_out_rate = v_pixclk >> 3;
-		else
-			dclk_out_rate = v_pixclk >> 2;
+		dclk_out_rate = v_pixclk >> 2;
+		dclk_out_rate = dclk_out_rate / K;
 
 		dclk_rate = vop2_calc_dclk(dclk_out_rate, vop2->data->vp_data->max_dclk);
 		if (!dclk_rate) {
@@ -1996,7 +2013,6 @@ static unsigned long vop2_calc_cru_cfg(struct display_state *state,
 		}
 		*dclk_out_div = dclk_rate / dclk_out_rate;
 		*dclk_core_div = dclk_rate / dclk_core_rate;
-
 	} else if (output_type == DRM_MODE_CONNECTOR_DSI) {
 		if (conn_state->output_flags & ROCKCHIP_OUTPUT_DUAL_CHANNEL_LEFT_RIGHT_MODE)
 			K = 2;
@@ -2057,9 +2073,11 @@ static int vop2_calc_dsc_clk(struct display_state *state)
 	/* dsc_cds = crtc_clock / (cds_dat_width / bits_per_pixel)
 	 * cds_dat_width = 96;
 	 * bits_per_pixel = [8-12];
-	 * As only support 1/2/4 div, so we set dsc_cds = crtc_clock / 8;
+	 * As cds clk is div from txp clk and only support 1/2/4 div,
+	 * so when txp_clk is equal to v_pixclk, we set dsc_cds = crtc_clock / 4,
+	 * otherwise dsc_cds = crtc_clock / 8;
 	 */
-	cstate->dsc_cds_clk_rate = v_pixclk / 8;
+	cstate->dsc_cds_clk_rate = v_pixclk / (cstate->dsc_txp_clk_rate == v_pixclk ? 4 : 8);
 
 	return 0;
 }
@@ -2074,8 +2092,6 @@ static unsigned long rk3588_vop2_if_cfg(struct display_state *state)
 	u32 vp_offset = (cstate->crtc_id * 0x100);
 	u16 hdisplay = mode->crtc_hdisplay;
 	int output_if = conn_state->output_if;
-	int dclk_core_div = 0;
-	int dclk_out_div = 0;
 	int if_pixclk_div = 0;
 	int if_dclk_div = 0;
 	unsigned long dclk_rate;
@@ -2110,7 +2126,7 @@ static unsigned long rk3588_vop2_if_cfg(struct display_state *state)
 		       dsc_sink_cap->slice_height, cstate->dsc_slice_num);
 	}
 
-	dclk_rate = vop2_calc_cru_cfg(state, &dclk_core_div, &dclk_out_div, &if_pixclk_div, &if_dclk_div);
+	dclk_rate = vop2_calc_cru_cfg(state, &cstate->dclk_core_div, &cstate->dclk_out_div, &if_pixclk_div, &if_dclk_div);
 
 	if (output_if & VOP_OUTPUT_IF_RGB) {
 		vop2_mask_write(vop2, RK3568_DSP_IF_EN, 0x7, RK3588_RGB_EN_SHIFT,
@@ -2185,14 +2201,32 @@ static unsigned long rk3588_vop2_if_cfg(struct display_state *state)
 	}
 
 	if (conn_state->output_flags & ROCKCHIP_OUTPUT_DUAL_CHANNEL_LEFT_RIGHT_MODE) {
-		vop2_mask_write(vop2, RK3568_DSP_IF_CTRL, EN_MASK,
-				RK3568_MIPI_DUAL_EN_SHIFT, 1, false);
 		vop2_mask_write(vop2, RK3568_VP0_MIPI_CTRL + vp_offset, EN_MASK,
 				MIPI_DUAL_EN_SHIFT, 1, false);
 		if (conn_state->output_flags & ROCKCHIP_OUTPUT_DATA_SWAP)
 			vop2_mask_write(vop2, RK3568_VP0_MIPI_CTRL + vp_offset,
 					EN_MASK, MIPI_DUAL_SWAP_EN_SHIFT, 1,
 					false);
+		switch (conn_state->type) {
+		case DRM_MODE_CONNECTOR_DisplayPort:
+			vop2_mask_write(vop2, RK3568_DSP_IF_CTRL, EN_MASK,
+					RK3588_DP_DUAL_EN_SHIFT, 1, false);
+			break;
+		case DRM_MODE_CONNECTOR_eDP:
+			vop2_mask_write(vop2, RK3568_DSP_IF_CTRL, EN_MASK,
+					RK3588_EDP_DUAL_EN_SHIFT, 1, false);
+			break;
+		case DRM_MODE_CONNECTOR_HDMIA:
+			vop2_mask_write(vop2, RK3568_DSP_IF_CTRL, EN_MASK,
+					RK3588_HDMI_DUAL_EN_SHIFT, 1, false);
+			break;
+		case DRM_MODE_CONNECTOR_DSI:
+			vop2_mask_write(vop2, RK3568_DSP_IF_CTRL, EN_MASK,
+					RK3568_MIPI_DUAL_EN_SHIFT, 1, false);
+			break;
+		default:
+			break;
+		}
 	}
 
 	if (output_if & VOP_OUTPUT_IF_eDP0) {
@@ -2280,9 +2314,9 @@ static unsigned long rk3588_vop2_if_cfg(struct display_state *state)
 	}
 
 	vop2_mask_write(vop2, RK3588_VP0_CLK_CTRL + vp_offset, 0x3,
-			DCLK_CORE_DIV_SHIFT, dclk_core_div, false);
+			DCLK_CORE_DIV_SHIFT, cstate->dclk_core_div, false);
 	vop2_mask_write(vop2, RK3588_VP0_CLK_CTRL + vp_offset, 0x3,
-			DCLK_OUT_DIV_SHIFT, dclk_out_div, false);
+			DCLK_OUT_DIV_SHIFT, cstate->dclk_out_div, false);
 
 	return dclk_rate;
 }
@@ -2592,6 +2626,10 @@ static void vop2_dsc_enable(struct display_state *state, struct vop2 *vop2, u8 d
 		u64 dsc_cds_rate = cstate->dsc_cds_clk_rate;
 		u32 v_pixclk_mhz = mode->crtc_clock / 1000; /* video timing pixclk */
 		u32 dly_num, dsc_cds_rate_mhz, val = 0;
+		int k = 1;
+
+		if (conn_state->output_flags & ROCKCHIP_OUTPUT_DUAL_CHANNEL_LEFT_RIGHT_MODE)
+			k = 2;
 
 		if (target_bpp >> 4 < dsc_data->min_bits_per_pixel)
 			printf("Unsupported bpp less than: %d\n", dsc_data->min_bits_per_pixel);
@@ -2615,13 +2653,24 @@ static void vop2_dsc_enable(struct display_state *state, struct vop2 *vop2, u8 d
 				DSC_INIT_DLY_NUM_SHIFT, dly_num, false);
 
 		dsc_hsync = hsync_len / 2;
-		dsc_htotal = htotal / (1 << dsc_cds_clk_div);
+		/*
+		 * htotal / dclk_core = dsc_htotal /cds_clk
+		 *
+		 * dclk_core = DCLK / (1 << dclk_core->div_val)
+		 * cds_clk = txp_clk / (1 << dsc_cds_clk->div_val)
+		 * txp_clk = DCLK / (1 << dsc_txp_clk->div_val)
+		 *
+		 * dsc_htotal = htotal * (1 << dclk_core->div_val) /
+		 *              ((1 << dsc_txp_clk->div_val) * (1 << dsc_cds_clk->div_val))
+		 */
+		dsc_htotal = htotal * (1 << cstate->dclk_core_div) /
+			     ((1 << dsc_txp_clk_div) * (1 << dsc_cds_clk_div));
 		val = dsc_htotal << 16 | dsc_hsync;
 		vop2_mask_write(vop2, RK3588_DSC_8K_HTOTAL_HS_END + ctrl_regs_offset, DSC_HTOTAL_PW_MASK,
 				DSC_HTOTAL_PW_SHIFT, val, false);
 
 		dsc_hact_st = hact_st / 2;
-		dsc_hact_end = (hdisplay * target_bpp >> 4) / 24 + dsc_hact_st;
+		dsc_hact_end = (hdisplay / k * target_bpp >> 4) / 24 + dsc_hact_st;
 		val = dsc_hact_end << 16 | dsc_hact_st;
 		vop2_mask_write(vop2, RK3588_DSC_8K_HACT_ST_END + ctrl_regs_offset, DSC_HACT_ST_END_MASK,
 				DSC_HACT_ST_END_SHIFT, val, false);
@@ -2685,19 +2734,19 @@ static bool is_extend_pll(struct display_state *state, struct udevice **clk_dev)
 
 	sprintf(vp_name, "port@%d", cstate->crtc_id);
 	if (uclass_find_device_by_name(UCLASS_VIDEO_CRTC, vp_name, &vp_dev)) {
-		printf("warn: can't get vp device\n");
+		debug("warn: can't get vp device\n");
 		return false;
 	}
 
 	ret = dev_read_phandle_with_args(vp_dev, "assigned-clock-parents", "#clock-cells", 0,
 					 0, &args);
 	if (ret) {
-		printf("warn: can't get assigned-clock-parents's node\n");
+		debug("assigned-clock-parents's node not define\n");
 		return false;
 	}
 
 	if (uclass_find_device_by_ofnode(UCLASS_CLK, args.node, &dev)) {
-		printf("warn: can't get clk device\n");
+		debug("warn: can't get clk device\n");
 		return false;
 	}
 
@@ -2714,6 +2763,7 @@ static bool is_extend_pll(struct display_state *state, struct udevice **clk_dev)
 static int rockchip_vop2_init(struct display_state *state)
 {
 	struct crtc_state *cstate = &state->crtc_state;
+	struct rockchip_vp *vp = &cstate->crtc->vps[cstate->crtc_id];
 	struct connector_state *conn_state = &state->conn_state;
 	struct drm_display_mode *mode = &conn_state->mode;
 	struct vop2 *vop2 = cstate->private;
@@ -2728,12 +2778,12 @@ static int rockchip_vop2_init(struct display_state *state)
 	u16 vact_st = mode->crtc_vtotal - mode->crtc_vsync_start;
 	u16 vact_end = vact_st + vdisplay;
 	bool yuv_overlay = false;
-	bool splice_en = false;
 	u32 vp_offset = (cstate->crtc_id * 0x100);
 	u32 line_flag_offset = (cstate->crtc_id * 4);
 	u32 val, act_end;
 	u8 dither_down_en = 0;
 	u8 pre_dither_down_en = 0;
+	u8 dclk_div_factor = 0;
 	char output_type_name[30] = {0};
 	char dclk_name[9];
 	struct clk dclk;
@@ -2745,21 +2795,23 @@ static int rockchip_vop2_init(struct display_state *state)
 	int ret;
 
 	printf("VOP update mode to: %dx%d%s%d, type:%s for VP%d\n",
-	       mode->hdisplay, mode->vdisplay,
+	       mode->crtc_hdisplay, mode->crtc_vdisplay,
 	       mode->flags & DRM_MODE_FLAG_INTERLACE ? "i" : "p",
-	       mode->vscan,
+	       mode->vrefresh,
 	       get_output_if_name(conn_state->output_if, output_type_name),
 	       cstate->crtc_id);
 
 	if (mode->hdisplay > VOP2_MAX_VP_OUTPUT_WIDTH) {
 		cstate->splice_mode = true;
-		splice_en = true;
 		cstate->splice_crtc_id = vop2->data->vp_data[cstate->crtc_id].splice_vp_id;
 		if (!cstate->splice_crtc_id) {
 			printf("%s: Splice mode is unsupported by vp%d\n",
 			       __func__, cstate->crtc_id);
 			return -EINVAL;
 		}
+
+		vop2_mask_write(vop2, RK3568_SYS_LUT_PORT_SEL, EN_MASK,
+				PORT_MERGE_EN_SHIFT, 1, false);
 	}
 
 	vop2_initial(vop2, state);
@@ -2818,9 +2870,6 @@ static int rockchip_vop2_init(struct display_state *state)
 
 	cstate->yuv_overlay = yuv_overlay;
 
-	vop2_mask_write(vop2, RK3568_SYS_LUT_PORT_SEL, EN_MASK,
-			PORT_MERGE_EN_SHIFT, splice_en, false);
-
 	vop2_writel(vop2, RK3568_VP0_DSP_HTOTAL_HS_END + vp_offset,
 		    (htotal << 16) | hsync_len);
 	val = hact_st << 16;
@@ -2882,7 +2931,7 @@ static int rockchip_vop2_init(struct display_state *state)
 	else
 		val = 0;
 	vop2_writel(vop2, RK3568_VP0_DSP_BG + vp_offset, val);
-	if (splice_en) {
+	if (cstate->splice_mode) {
 		vop2_mask_write(vop2, RK3568_OVL_CTRL, OVL_MODE_SEL_MASK,
 				OVL_MODE_SEL_SHIFT + cstate->splice_crtc_id,
 				yuv_overlay, false);
@@ -2892,6 +2941,10 @@ static int rockchip_vop2_init(struct display_state *state)
 	vop2_mask_write(vop2, RK3568_VP0_DSP_CTRL + vp_offset, EN_MASK,
 			POST_DSP_OUT_R2Y_SHIFT, yuv_overlay, false);
 
+	if (vp->xmirror_en)
+		vop2_mask_write(vop2, RK3568_VP0_DSP_CTRL + vp_offset, EN_MASK,
+				DSP_X_MIR_EN_SHIFT, 1, false);
+
 	vop2_tv_config_update(state, vop2);
 	vop2_post_config(state, vop2);
 
@@ -2915,17 +2968,17 @@ static int rockchip_vop2_init(struct display_state *state)
 	if (!ret) {
 		ret = clk_get_by_name(disp_dev, "hdmi0_phy_pll", &hdmi0_phy_pll);
 		if (ret)
-			printf("%s: Failed to get hdmi0_phy_pll ret=%d\n", __func__, ret);
+			debug("%s: hdmi0_phy_pll may not define\n", __func__);
 		ret = clk_get_by_name(disp_dev, "hdmi1_phy_pll", &hdmi1_phy_pll);
 		if (ret)
-			printf("%s: Failed to get hdmi1_phy_pll ret=%d\n", __func__, ret);
+			debug("%s: hdmi1_phy_pll may not define\n", __func__);
 	} else {
 		hdmi0_phy_pll.dev = NULL;
 		hdmi1_phy_pll.dev = NULL;
-		printf("%s: Faile to find display-subsystem node\n", __func__);
+		debug("%s: Faile to find display-subsystem node\n", __func__);
 	}
 
-	if (mode->clock < VOP2_MAX_DCLK_RATE) {
+	if (mode->crtc_clock < VOP2_MAX_DCLK_RATE) {
 		if (conn_state->output_if & VOP_OUTPUT_IF_HDMI0)
 			vop2_clk_set_parent(&dclk, &hdmi0_phy_pll);
 		else if (conn_state->output_if & VOP_OUTPUT_IF_HDMI1)
@@ -2947,33 +3000,21 @@ static int rockchip_vop2_init(struct display_state *state)
 			else
 				ret = vop2_clk_set_rate(&dclk, dclk_rate * 1000);
 		}
-
-		if (IS_ERR_VALUE(ret)) {
-			printf("%s: Failed to set vp%d dclk[%ld KHZ] ret=%d\n",
-			       __func__, cstate->crtc_id, dclk_rate, ret);
-			return ret;
-		} else {
-			if (mode->flags & DRM_MODE_FLAG_DBLCLK)
-				mode->crtc_clock = ret * 2 / 1000;
-			else
-				mode->crtc_clock = ret / 1000;
-		}
 	} else {
 		if (is_extend_pll(state, &hdmi_phy_pll.dev))
 			ret = vop2_clk_set_rate(&hdmi_phy_pll, dclk_rate * 1000);
 		else
 			ret = vop2_clk_set_rate(&dclk, dclk_rate * 1000);
+	}
 
-		if (IS_ERR_VALUE(ret)) {
-			printf("%s: Failed to set vp%d dclk[%ld KHZ] ret=%d\n",
-			       __func__, cstate->crtc_id, dclk_rate, ret);
-			return ret;
-		} else {
-			if (mode->flags & DRM_MODE_FLAG_DBLCLK)
-				mode->crtc_clock = ret * 2 / 1000;
-			else
-				mode->crtc_clock = ret / 1000;
-		}
+	if (IS_ERR_VALUE(ret)) {
+		printf("%s: Failed to set vp%d dclk[%ld KHZ] ret=%d\n",
+		       __func__, cstate->crtc_id, dclk_rate, ret);
+		return ret;
+	} else {
+		dclk_div_factor = mode->clock / dclk_rate;
+		mode->crtc_clock = ret * dclk_div_factor / 1000;
+		printf("VP%d set crtc_clock to %dKHz\n", cstate->crtc_id, mode->crtc_clock);
 	}
 
 	vop2_mask_write(vop2, RK3568_SYS_CTRL_LINE_FLAG0 + line_flag_offset, LINE_FLAG_NUM_MASK,
@@ -3266,41 +3307,6 @@ static void vop2_set_smart_win(struct display_state *state, struct vop2_win_data
 	vop2_writel(vop2, RK3568_REG_CFG_DONE, cfg_done);
 }
 
-static int display_rect_calc_scale(int src, int dst)
-{
-	int scale = 0;
-
-	if (WARN_ON(src < 0 || dst < 0))
-		return -EINVAL;
-
-	if (dst == 0)
-		return 0;
-
-	if (src > (dst << 16))
-		return DIV_ROUND_UP(src, dst);
-
-	scale = src / dst;
-
-	return scale;
-}
-
-static int display_rect_calc_hscale(const struct display_rect *src,
-				    const struct display_rect *dst,
-				    int min_hscale, int max_hscale)
-{
-	int src_w = src->w;
-	int dst_w = dst->w;
-	int hscale = display_rect_calc_scale(src_w, dst_w);
-
-	if (hscale < 0 || dst_w == 0)
-		return hscale;
-
-	if (hscale < min_hscale || hscale > max_hscale)
-		return -ERANGE;
-
-	return hscale;
-}
-
 static void vop2_calc_display_rect_for_splice(struct display_state *state)
 {
 	struct crtc_state *cstate = &state->crtc_state;
@@ -3310,7 +3316,6 @@ static void vop2_calc_display_rect_for_splice(struct display_state *state)
 	struct display_rect *dst_rect = &cstate->crtc_rect;
 	struct display_rect left_src, left_dst, right_src, right_dst;
 	u16 half_hdisplay = mode->crtc_hdisplay >> 1;
-	int hscale = display_rect_calc_hscale(src_rect, dst_rect, 0, INT_MAX);
 	int left_src_w, left_dst_w, right_dst_w;
 
 	left_dst_w = min_t(u16, half_hdisplay, dst_rect->x + dst_rect->w) - dst_rect->x;
@@ -3321,7 +3326,7 @@ static void vop2_calc_display_rect_for_splice(struct display_state *state)
 	if (!right_dst_w)
 		left_src_w = src_rect->w;
 	else
-		left_src_w = left_dst_w * hscale;
+		left_src_w = src_rect->x + src_rect->w - src_rect->w / 2;
 
 	left_src.x = src_rect->x;
 	left_src.w = left_src_w;
@@ -3556,6 +3561,74 @@ static int rockchip_vop2_fixup_dts(struct display_state *state, void *blob)
 	return 0;
 }
 
+static int rockchip_vop2_check(struct display_state *state)
+{
+	struct crtc_state *cstate = &state->crtc_state;
+	struct rockchip_crtc *crtc = cstate->crtc;
+
+	if (crtc->splice_mode && cstate->crtc_id == crtc->splice_crtc_id) {
+		printf("WARN: VP%d is busy in splice mode\n", cstate->crtc_id);
+		return -ENOTSUPP;
+	}
+
+	if (cstate->splice_mode) {
+		crtc->splice_mode = true;
+		crtc->splice_crtc_id = cstate->splice_crtc_id;
+	}
+
+	return 0;
+}
+
+static int rockchip_vop2_mode_valid(struct display_state *state)
+{
+	struct connector_state *conn_state = &state->conn_state;
+	struct crtc_state *cstate = &state->crtc_state;
+	struct drm_display_mode *mode = &conn_state->mode;
+	struct videomode vm;
+
+	drm_display_mode_to_videomode(mode, &vm);
+
+	if (vm.hactive < 32 || vm.vactive < 32 ||
+	    (vm.hfront_porch * vm.hsync_len * vm.hback_porch *
+	     vm.vfront_porch * vm.vsync_len * vm.vback_porch == 0)) {
+		printf("ERROR: VP%d: unsupported display timing\n", cstate->crtc_id);
+		return -EINVAL;
+	}
+
+	return 0;
+}
+
+#define FRAC_16_16(mult, div)	(((mult) << 16) / (div))
+
+static int rockchip_vop2_plane_check(struct display_state *state)
+{
+	struct crtc_state *cstate = &state->crtc_state;
+	struct vop2 *vop2 = cstate->private;
+	struct display_rect *src = &cstate->src_rect;
+	struct display_rect *dst = &cstate->crtc_rect;
+	struct vop2_win_data *win_data;
+	int min_scale, max_scale;
+	int hscale, vscale;
+	u8 primary_plane_id = vop2->vp_plane_mask[cstate->crtc_id].primary_plane_id;
+
+	win_data = vop2_find_win_by_phys_id(vop2, primary_plane_id);
+	if (!win_data) {
+		printf("ERROR: invalid win id %d\n", primary_plane_id);
+		return -ENODEV;
+	}
+
+	min_scale = FRAC_16_16(1, win_data->max_downscale_factor);
+	max_scale = FRAC_16_16(win_data->max_upscale_factor, 1);
+
+	hscale = display_rect_calc_hscale(src, dst, min_scale, max_scale);
+	vscale = display_rect_calc_vscale(src, dst, min_scale, max_scale);
+	if (hscale < 0 || vscale < 0) {
+		printf("ERROR: VP%d %s: scale factor is out of range\n", cstate->crtc_id, win_data->name);
+		return -ERANGE;
+	}
+
+	return 0;
+}
 static struct vop2_plane_table rk356x_plane_table[ROCKCHIP_VOP2_LAYER_MAX] = {
 	{ROCKCHIP_VOP2_CLUSTER0, CLUSTER_LAYER},
 	{ROCKCHIP_VOP2_CLUSTER1, CLUSTER_LAYER},
@@ -3637,6 +3710,8 @@ static struct vop2_win_data rk3568_win_data[6] = {
 		.win_sel_port_offset = 0,
 		.layer_sel_win_id = 0,
 		.reg_offset = 0,
+		.max_upscale_factor = 4,
+		.max_downscale_factor = 4,
 	},
 
 	{
@@ -3646,6 +3721,8 @@ static struct vop2_win_data rk3568_win_data[6] = {
 		.win_sel_port_offset = 1,
 		.layer_sel_win_id = 1,
 		.reg_offset = 0x200,
+		.max_upscale_factor = 4,
+		.max_downscale_factor = 4,
 	},
 
 	{
@@ -3655,6 +3732,8 @@ static struct vop2_win_data rk3568_win_data[6] = {
 		.win_sel_port_offset = 4,
 		.layer_sel_win_id = 2,
 		.reg_offset = 0,
+		.max_upscale_factor = 8,
+		.max_downscale_factor = 8,
 	},
 
 	{
@@ -3664,6 +3743,8 @@ static struct vop2_win_data rk3568_win_data[6] = {
 		.win_sel_port_offset = 5,
 		.layer_sel_win_id = 6,
 		.reg_offset = 0x200,
+		.max_upscale_factor = 8,
+		.max_downscale_factor = 8,
 	},
 
 	{
@@ -3673,6 +3754,8 @@ static struct vop2_win_data rk3568_win_data[6] = {
 		.win_sel_port_offset = 6,
 		.layer_sel_win_id = 3,
 		.reg_offset = 0x400,
+		.max_upscale_factor = 8,
+		.max_downscale_factor = 8,
 	},
 
 	{
@@ -3682,6 +3765,8 @@ static struct vop2_win_data rk3568_win_data[6] = {
 		.win_sel_port_offset = 7,
 		.layer_sel_win_id = 7,
 		.reg_offset = 0x600,
+		.max_upscale_factor = 8,
+		.max_downscale_factor = 8,
 	},
 };
 
@@ -3831,6 +3916,8 @@ static struct vop2_win_data rk3588_win_data[8] = {
 		.axi_yrgb_id = 2,
 		.axi_uv_id = 3,
 		.pd_id = VOP2_PD_CLUSTER0,
+		.max_upscale_factor = 4,
+		.max_downscale_factor = 4,
 	},
 
 	{
@@ -3844,6 +3931,8 @@ static struct vop2_win_data rk3588_win_data[8] = {
 		.axi_yrgb_id = 6,
 		.axi_uv_id = 7,
 		.pd_id = VOP2_PD_CLUSTER1,
+		.max_upscale_factor = 4,
+		.max_downscale_factor = 4,
 	},
 
 	{
@@ -3858,6 +3947,8 @@ static struct vop2_win_data rk3588_win_data[8] = {
 		.axi_yrgb_id = 2,
 		.axi_uv_id = 3,
 		.pd_id = VOP2_PD_CLUSTER2,
+		.max_upscale_factor = 4,
+		.max_downscale_factor = 4,
 	},
 
 	{
@@ -3871,6 +3962,8 @@ static struct vop2_win_data rk3588_win_data[8] = {
 		.axi_yrgb_id = 6,
 		.axi_uv_id = 7,
 		.pd_id = VOP2_PD_CLUSTER3,
+		.max_upscale_factor = 4,
+		.max_downscale_factor = 4,
 	},
 
 	{
@@ -3884,6 +3977,8 @@ static struct vop2_win_data rk3588_win_data[8] = {
 		.axi_id = 0,
 		.axi_yrgb_id = 0x0a,
 		.axi_uv_id = 0x0b,
+		.max_upscale_factor = 8,
+		.max_downscale_factor = 8,
 	},
 
 	{
@@ -3897,6 +3992,8 @@ static struct vop2_win_data rk3588_win_data[8] = {
 		.axi_yrgb_id = 0x0c,
 		.axi_uv_id = 0x0d,
 		.pd_id = VOP2_PD_ESMART,
+		.max_upscale_factor = 8,
+		.max_downscale_factor = 8,
 	},
 
 	{
@@ -3911,6 +4008,8 @@ static struct vop2_win_data rk3588_win_data[8] = {
 		.axi_yrgb_id = 0x0a,
 		.axi_uv_id = 0x0b,
 		.pd_id = VOP2_PD_ESMART,
+		.max_upscale_factor = 8,
+		.max_downscale_factor = 8,
 	},
 
 	{
@@ -3924,6 +4023,8 @@ static struct vop2_win_data rk3588_win_data[8] = {
 		.axi_yrgb_id = 0x0c,
 		.axi_uv_id = 0x0d,
 		.pd_id = VOP2_PD_ESMART,
+		.max_upscale_factor = 8,
+		.max_downscale_factor = 8,
 	},
 };
 
@@ -3982,7 +4083,7 @@ static struct vop2_dsc_data rk3588_dsc_data[] = {
 		.pd_id = VOP2_PD_DSC_8K,
 		.max_slice_num = 8,
 		.max_linebuf_depth = 11,
-		.min_bits_per_pixel = 9,
+		.min_bits_per_pixel = 8,
 		.dsc_txp_clk_src_name = "dsc_8k_txp_clk_src",
 		.dsc_txp_clk_name = "dsc_8k_txp_clk",
 		.dsc_pxl_clk_name = "dsc_8k_pxl_clk",
@@ -3994,7 +4095,7 @@ static struct vop2_dsc_data rk3588_dsc_data[] = {
 		.pd_id = VOP2_PD_DSC_4K,
 		.max_slice_num = 2,
 		.max_linebuf_depth = 11,
-		.min_bits_per_pixel = 9,
+		.min_bits_per_pixel = 8,
 		.dsc_txp_clk_src_name = "dsc_4k_txp_clk_src",
 		.dsc_txp_clk_name = "dsc_4k_txp_clk",
 		.dsc_pxl_clk_name = "dsc_4k_pxl_clk",
@@ -4094,4 +4195,7 @@ const struct rockchip_crtc_funcs rockchip_vop2_funcs = {
 	.enable = rockchip_vop2_enable,
 	.disable = rockchip_vop2_disable,
 	.fixup_dts = rockchip_vop2_fixup_dts,
+	.check = rockchip_vop2_check,
+	.mode_valid = rockchip_vop2_mode_valid,
+	.plane_check = rockchip_vop2_plane_check,
 };
diff --git a/drivers/video/drm/rockchip_vop_reg.c b/drivers/video/drm/rockchip_vop_reg.c
index 55ea2a8..710ba20 100644
--- a/drivers/video/drm/rockchip_vop_reg.c
+++ b/drivers/video/drm/rockchip_vop_reg.c
@@ -804,3 +804,95 @@ const struct vop_data rv1126_vop = {
 	.line_flag = &rk3366_vop_lite_line_flag,
 	.reg_len = RK3366_LIT_FLAG_REG * 4,
 };
+
+static const struct vop_ctrl rv1106_ctrl_data = {
+	.standby = VOP_REG(RK3366_LIT_SYS_CTRL2, 0x1, 1),
+	.axi_outstanding_max_num = VOP_REG(RK3366_LIT_SYS_CTRL1, 0x1f, 16),
+	.axi_max_outstanding_en = VOP_REG(RK3366_LIT_SYS_CTRL1, 0x1, 12),
+	.htotal_pw = VOP_REG(RK3366_LIT_DSP_HTOTAL_HS_END, 0x0fff0fff, 0),
+	.hact_st_end = VOP_REG(RK3366_LIT_DSP_HACT_ST_END, 0x0fff0fff, 0),
+	.vtotal_pw = VOP_REG(RK3366_LIT_DSP_VTOTAL_VS_END, 0x0fff0fff, 0),
+	.vact_st_end = VOP_REG(RK3366_LIT_DSP_VACT_ST_END, 0x0fff0fff, 0),
+	.vact_st_end_f1 = VOP_REG(RK3366_LIT_DSP_VACT_ST_END_F1, 0x0fff0fff, 0),
+	.vs_st_end_f1 = VOP_REG(RK3366_LIT_DSP_VS_ST_END_F1, 0x0fff0fff, 0),
+	.dsp_interlace = VOP_REG(RK3366_LIT_DSP_CTRL2, 0x1, 0),
+	.auto_gate_en = VOP_REG(RK3366_LIT_SYS_CTRL2, 0x1, 0),
+	.overlay_mode = VOP_REG(RK3366_LIT_DSP_CTRL2, 0x1, 4),
+	.core_dclk_div = VOP_REG(RK3366_LIT_DSP_CTRL0, 0x1, 13),
+	.dclk_ddr = VOP_REG(RK3366_LIT_DSP_CTRL0, 0x1, 14),
+	.rgb_en = VOP_REG(RK3366_LIT_DSP_CTRL0, 0x1, 0),
+	.rgb_dclk_pol = VOP_REG(RK3366_LIT_DSP_CTRL0, 0x1, 1),
+	.rgb_pin_pol = VOP_REG(RK3366_LIT_DSP_CTRL0, 0x7, 2),
+	.dither_down = VOP_REG(RK3366_LIT_DSP_CTRL2, 0x1, 8),
+	.dither_up = VOP_REG(RK3366_LIT_DSP_CTRL2, 0x1, 2),
+	.dsp_data_swap = VOP_REG(RK3366_LIT_DSP_CTRL2, 0x1f, 9),
+	.dsp_black = VOP_REG(RK3366_LIT_DSP_CTRL2, 0x1, 15),
+	.dsp_blank = VOP_REG(RK3366_LIT_DSP_CTRL2, 0x1, 14),
+	.dsp_outzero = VOP_REG(RK3366_LIT_SYS_CTRL2, 0x1, 3),
+	.out_mode = VOP_REG(RK3366_LIT_DSP_CTRL2, 0xf, 16),
+	.dsp_background = VOP_REG(RK3366_LIT_DSP_BG, 0x00ffffff, 0),
+	.cfg_done = VOP_REG(RK3366_LIT_REG_CFG_DONE, 0x1, 0),
+
+	.bcsh_en = VOP_REG(RK3366_LIT_BCSH_CTRL, 0x1, 0),
+	.bcsh_r2y_csc_mode = VOP_REG(RK3366_LIT_BCSH_CTRL, 0x1, 1),
+	.bcsh_out_mode = VOP_REG(RK3366_LIT_BCSH_CTRL, 0x3, 2),
+	.bcsh_y2r_csc_mode = VOP_REG(RK3366_LIT_BCSH_CTRL, 0x3, 4),
+	.bcsh_y2r_en = VOP_REG(RK3366_LIT_BCSH_CTRL, 0x1, 6),
+	.bcsh_r2y_en = VOP_REG(RK3366_LIT_BCSH_CTRL, 0x1, 7),
+	.bcsh_color_bar = VOP_REG(RK3366_LIT_BCSH_COL_BAR, 0xffffff, 0),
+	.bcsh_brightness = VOP_REG(RK3366_LIT_BCSH_BCS, 0xff, 0),
+	.bcsh_contrast = VOP_REG(RK3366_LIT_BCSH_BCS, 0x1ff, 8),
+	.bcsh_sat_con = VOP_REG(RK3366_LIT_BCSH_BCS, 0x3ff, 20),
+	.bcsh_sin_hue = VOP_REG(RK3366_LIT_BCSH_H, 0x1ff, 0),
+	.bcsh_cos_hue = VOP_REG(RK3366_LIT_BCSH_H, 0x1ff, 16),
+
+	.mcu_pix_total = VOP_REG(RK3366_LIT_MCU_CTRL, 0x3f, 0),
+	.mcu_cs_pst = VOP_REG(RK3366_LIT_MCU_CTRL, 0xf, 6),
+	.mcu_cs_pend = VOP_REG(RK3366_LIT_MCU_CTRL, 0x3f, 10),
+	.mcu_rw_pst = VOP_REG(RK3366_LIT_MCU_CTRL, 0xf, 16),
+	.mcu_rw_pend = VOP_REG(RK3366_LIT_MCU_CTRL, 0x3f, 20),
+	.mcu_clk_sel = VOP_REG(RK3366_LIT_MCU_CTRL, 0x1, 26),
+	.mcu_hold_mode = VOP_REG(RK3366_LIT_MCU_CTRL, 0x1, 27),
+	.mcu_frame_st = VOP_REG(RK3366_LIT_MCU_CTRL, 0x1, 28),
+	.mcu_rs = VOP_REG(RK3366_LIT_MCU_CTRL, 0x1, 29),
+	.mcu_bypass = VOP_REG(RK3366_LIT_MCU_CTRL, 0x1, 30),
+	.mcu_type = VOP_REG(RK3366_LIT_MCU_CTRL, 0x1, 31),
+	.mcu_rw_bypass_port = VOP_REG(RK3366_LIT_MCU_RW_BYPASS_PORT,
+				      0xffffffff, 0),
+	.bt1120_yc_swap = VOP_REG(RK3366_LIT_DSP_CTRL0, 0x1, 30),
+	.bt1120_en = VOP_REG(RK3366_LIT_DSP_CTRL0, 0x1, 31),
+	.bt656_en = VOP_REG(RK3366_LIT_DSP_CTRL0, 0x1, 6),
+};
+
+static const struct vop_grf_ctrl rv1106_grf_ctrl = {
+	.grf_dclk_inv = VOP_REG(0x1000c, 0x1, 2),
+};
+
+static const struct vop_win rv1106_win1_data = {
+	.enable = VOP_REG(RK3366_LIT_WIN1_CTRL0, 0x1, 0),
+	.format = VOP_REG(RK3366_LIT_WIN1_CTRL0, 0x7, 4),
+	.interlace_read = VOP_REG(RK3366_LIT_WIN1_CTRL0, 0x1, 8),
+	.rb_swap = VOP_REG(RK3366_LIT_WIN1_CTRL0, 0x1, 12),
+	.dsp_info = VOP_REG(RK3366_LIT_WIN1_DSP_INFO, 0x0fff0fff, 0),
+	.dsp_st = VOP_REG(RK3366_LIT_WIN1_DSP_ST, 0xffffffff, 0),
+	.yrgb_mst = VOP_REG(RK3366_LIT_WIN1_MST, 0xffffffff, 0),
+	.yrgb_vir = VOP_REG(RK3366_LIT_WIN1_VIR, 0x1fff, 0),
+
+	.alpha_mode = VOP_REG(RK3366_LIT_WIN1_ALPHA_CTRL, 0x1, 1),
+	.alpha_en = VOP_REG(RK3366_LIT_WIN1_ALPHA_CTRL, 0x1, 0),
+};
+
+static const struct vop_line_flag rv1106_vop_lite_line_flag = {
+	.line_flag_num[0] = VOP_REG(RK3366_LIT_LINE_FLAG, 0xfff, 0),
+	.line_flag_num[1] = VOP_REG(RK3366_LIT_LINE_FLAG, 0xfff, 16),
+};
+
+const struct vop_data rv1106_vop = {
+	.version = VOP_VERSION(2, 12),
+	.max_output = {1280, 1280},
+	.ctrl = &rv1106_ctrl_data,
+	.grf_ctrl = &rv1106_grf_ctrl,
+	.win = &rv1106_win1_data,
+	.line_flag = &rv1106_vop_lite_line_flag,
+	.reg_len = RK3366_LIT_FLAG_REG * 4,
+};
diff --git a/drivers/video/drm/rohm-bu18rl82.c b/drivers/video/drm/rohm-bu18rl82.c
new file mode 100644
index 0000000..020d369
--- /dev/null
+++ b/drivers/video/drm/rohm-bu18rl82.c
@@ -0,0 +1,212 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * (C) Copyright 2022 Rockchip Electronics Co., Ltd
+ */
+
+#include <common.h>
+#include <dm.h>
+#include <errno.h>
+#include <i2c.h>
+#include <video_bridge.h>
+#include <asm/unaligned.h>
+#include <linux/media-bus-format.h>
+#include <power/regulator.h>
+
+#include "rockchip_bridge.h"
+#include "rockchip_display.h"
+#include "rockchip_panel.h"
+
+#define BU18RL82_REG_RESET 0X000E
+
+#define BU18RL82_SWRST_REG BIT(0)
+#define BU18RL82_SWRST_EXCREG BIT(1)
+#define BU18RL82_SWRST_ALL BIT(7)
+
+struct des_reg_sequence {
+	uint reg;
+	uint def;
+};
+
+struct serdes_init_seq {
+	struct des_reg_sequence *reg_sequence;
+	uint reg_seq_cnt;
+};
+
+struct bu18rl82_priv {
+	struct udevice *dev;
+	struct serdes_init_seq *serdes_init_seq;
+};
+
+static void bu18rl82_bridge_reset(struct rockchip_bridge *bridge)
+{
+	int ret = 0;
+	struct udevice *dev = bridge->dev;
+	struct udevice *bus = dev_get_parent(dev);
+
+	ret = dm_i2c_reg_write(dev, BU18RL82_REG_RESET,
+			       (BU18RL82_SWRST_REG | BU18RL82_SWRST_EXCREG | BU18RL82_SWRST_ALL));
+	if (ret < 0)
+		printf("failed to reset bu18rl82(%s) ret=%d\n", bus->name, ret);
+}
+
+static int bu18rl82_serdes_init_sequence_write(struct bu18rl82_priv *priv)
+{
+	struct serdes_init_seq *serdes_init_seq = priv->serdes_init_seq;
+	struct des_reg_sequence *reg_sequence =  serdes_init_seq->reg_sequence;
+	uint cnt = serdes_init_seq->reg_seq_cnt;
+	struct udevice *dev = priv->dev;
+	uint i;
+	int ret = 0;
+
+	for (i = 0; i < cnt; i++) {
+		ret = dm_i2c_reg_write(dev, reg_sequence[i].reg, reg_sequence[i].def);
+		if (ret < 0) {
+			dev_err(priv->dev, "failed write reg: 0x%04x value: 0x%04x\n",
+				reg_sequence[i].reg, reg_sequence[i].def);
+			break;
+		}
+	}
+
+	return ret;
+}
+
+static void bu18rl82_bridge_enable(struct rockchip_bridge *bridge)
+{
+	struct udevice *dev = bridge->dev;
+	struct bu18rl82_priv *priv = dev_get_priv(dev);
+	struct udevice *bus = dev_get_parent(dev);
+	int i;
+	int ret;
+
+	for (i = 0; i < 10; i++) {
+		ret = bu18rl82_serdes_init_sequence_write(priv);
+		if (ret < 0) {
+			dev_err(priv->dev, "%s ret=%d\n", bus->name, ret);
+			continue;
+		}
+
+		break;
+	}
+}
+
+static const struct rockchip_bridge_funcs bu18rl82_bridge_funcs = {
+	.enable = bu18rl82_bridge_enable,
+};
+
+static int bu18rl82_parse_init_seq(struct udevice *dev, const u16 *data,
+				   int length, struct serdes_init_seq *seq)
+{
+	struct des_reg_sequence *reg_sequence;
+	u16 *buf, *d;
+	unsigned int i, cnt;
+	int ret;
+
+	if (!seq)
+		return -EINVAL;
+
+	buf = calloc(1, length);
+	if (!buf)
+		return -ENOMEM;
+
+	memcpy(buf, data, length);
+
+	d = buf;
+	cnt = length / 4;
+	seq->reg_seq_cnt = cnt;
+
+	seq->reg_sequence = calloc(cnt, sizeof(struct des_reg_sequence));
+	if (!seq->reg_sequence) {
+		ret = -ENOMEM;
+		goto free_buf;
+	}
+
+	for (i = 0; i < cnt; i++) {
+		reg_sequence = &seq->reg_sequence[i];
+		reg_sequence->reg = get_unaligned_be16(&d[0]);
+		reg_sequence->def = get_unaligned_be16(&d[1]);
+		d += 2;
+	}
+
+	return 0;
+
+free_buf:
+	free(buf);
+
+	return ret;
+}
+
+static int bu18rl82_get_init_seq(struct bu18rl82_priv *priv)
+{
+	const void *data = NULL;
+	int len, err;
+
+	data = dev_read_prop(priv->dev, "serdes-init-sequence", &len);
+	if (!data) {
+		printf("failed to get serdes-init-sequence\n");
+		return -EINVAL;
+	}
+
+	priv->serdes_init_seq = calloc(1, sizeof(*priv->serdes_init_seq));
+	if (!priv->serdes_init_seq)
+		return -ENOMEM;
+
+	err = bu18rl82_parse_init_seq(priv->dev, data, len, priv->serdes_init_seq);
+	if (err) {
+		printf("failed to parse serdes-init-sequence\n");
+		goto free_init_seq;
+	}
+
+	return 0;
+
+free_init_seq:
+	free(priv->serdes_init_seq);
+
+	return err;
+}
+
+static int bu18rl82_probe(struct udevice *dev)
+{
+	struct bu18rl82_priv *priv = dev_get_priv(dev);
+	struct rockchip_bridge *bridge;
+	int ret;
+
+	ret = i2c_set_chip_offset_len(dev, 2);
+	if (ret)
+		return ret;
+
+	priv->dev = dev;
+
+	bridge = calloc(1, sizeof(*bridge));
+	if (!bridge)
+		return -ENOMEM;
+
+	ret = bu18rl82_get_init_seq(priv);
+	if (ret)
+		goto free_bridge;
+
+	dev->driver_data = (ulong)bridge;
+	bridge->dev = dev;
+	bridge->funcs = &bu18rl82_bridge_funcs;
+
+	bu18rl82_bridge_reset(bridge);
+
+	return 0;
+
+free_bridge:
+	free(bridge);
+
+	return ret;
+}
+
+static const struct udevice_id bu18rl82_of_match[] = {
+	{ .compatible = "rohm,bu18rl82", },
+	{}
+};
+
+U_BOOT_DRIVER(bu18rl82) = {
+	.name = "bu18rl82",
+	.id = UCLASS_VIDEO_BRIDGE,
+	.of_match = bu18rl82_of_match,
+	.probe = bu18rl82_probe,
+	.priv_auto_alloc_size = sizeof(struct bu18rl82_priv),
+};
diff --git a/drivers/video/drm/rohm-bu18tl82.c b/drivers/video/drm/rohm-bu18tl82.c
new file mode 100644
index 0000000..bda247e
--- /dev/null
+++ b/drivers/video/drm/rohm-bu18tl82.c
@@ -0,0 +1,253 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * (C) Copyright 2022 Rockchip Electronics Co., Ltd
+ */
+
+#include <common.h>
+#include <dm.h>
+#include <errno.h>
+#include <i2c.h>
+#include <video_bridge.h>
+#include <asm/unaligned.h>
+#include <linux/media-bus-format.h>
+#include <power/regulator.h>
+
+#include "rockchip_bridge.h"
+#include "rockchip_display.h"
+#include "rockchip_panel.h"
+
+struct ser_reg_sequence {
+	uint reg;
+	uint def;
+};
+
+struct serdes_init_seq {
+	struct ser_reg_sequence *reg_sequence;
+	uint reg_seq_cnt;
+};
+
+struct bu18tl82_priv {
+	struct udevice *dev;
+	struct udevice *power_supply;
+	struct gpio_desc enable_gpio;
+	struct serdes_init_seq *serdes_init_seq;
+};
+
+static void bu18tl82_bridge_reset(struct rockchip_bridge *bridge)
+{
+	int ret = 0;
+	struct udevice *dev = bridge->dev;
+	struct udevice *bus = dev_get_parent(dev);
+
+	ret = dm_i2c_reg_write(dev, 0x0011, 0x007f);
+	if (ret < 0)
+		printf("%s: failed to reset bu18tl82(%s) 0x11 ret=%d\n", __func__, bus->name, ret);
+
+	ret = dm_i2c_reg_write(dev, 0x0012, 0x0003);
+	if (ret < 0)
+		printf("%s: failed to reset bu18tl82(%s) 0x12 ret=%d\n", __func__, bus->name, ret);
+
+	mdelay(10);
+}
+
+static int bu18tl82_serdes_init_sequence_write(struct bu18tl82_priv *priv)
+{
+	struct serdes_init_seq *serdes_init_seq = priv->serdes_init_seq;
+	struct ser_reg_sequence *reg_sequence =  serdes_init_seq->reg_sequence;
+	uint cnt = serdes_init_seq->reg_seq_cnt;
+	struct udevice *dev = priv->dev;
+	uint i;
+	int ret = 0;
+
+	for (i = 0; i < cnt; i++) {
+		ret = dm_i2c_reg_write(dev, reg_sequence[i].reg, reg_sequence[i].def);
+		if (ret < 0) {
+			dev_err(priv->dev, "failed to write reg: 0x%04x\n", reg_sequence[i].reg);
+			return ret;
+		}
+	}
+
+	return ret;
+}
+
+static void bu18tl82_serdes_init(struct rockchip_bridge *bridge)
+{
+	struct udevice *dev = bridge->dev;
+	struct bu18tl82_priv *priv = dev_get_priv(dev);
+	uint i;
+	int ret;
+
+	for (i = 0; i < 10; i++) {
+		ret = bu18tl82_serdes_init_sequence_write(priv);
+		if (ret < 0) {
+			mdelay(100);
+			continue;
+		}
+
+		break;
+	}
+}
+
+static void bu18tl82_bridge_enable(struct rockchip_bridge *bridge)
+{
+}
+
+static void bu18tl82_bridge_disable(struct rockchip_bridge *bridge)
+{
+}
+
+static void bu18tl82_bridge_init(struct rockchip_bridge *bridge)
+{
+	struct udevice *dev = bridge->dev;
+	struct bu18tl82_priv *priv = dev_get_priv(dev);
+
+	if (priv->power_supply)
+		regulator_set_enable(priv->power_supply, true);
+
+	if (dm_gpio_is_valid(&priv->enable_gpio))
+		dm_gpio_set_value(&priv->enable_gpio, 1);
+
+	mdelay(5);
+
+	video_bridge_set_active(priv->dev, true);
+
+	bu18tl82_serdes_init(bridge);
+}
+
+static const struct rockchip_bridge_funcs bu18tl82_bridge_funcs = {
+	.enable = bu18tl82_bridge_enable,
+	.disable = bu18tl82_bridge_disable,
+};
+
+static int bu18tl82_parse_init_seq(struct udevice *dev, const u16 *data,
+				   int length, struct serdes_init_seq *seq)
+{
+	struct ser_reg_sequence *reg_sequence;
+	u16 *buf, *d;
+	unsigned int i, cnt;
+	int ret;
+
+	if (!seq)
+		return -EINVAL;
+
+	buf = calloc(1, length);
+	if (!buf)
+		return -ENOMEM;
+
+	memcpy(buf, data, length);
+
+	d = buf;
+	cnt = length / 4;
+	seq->reg_seq_cnt = cnt;
+
+	seq->reg_sequence = calloc(cnt, sizeof(struct ser_reg_sequence));
+	if (!seq->reg_sequence) {
+		ret = -ENOMEM;
+		goto free_buf;
+	}
+
+	for (i = 0; i < cnt; i++) {
+		reg_sequence = &seq->reg_sequence[i];
+		reg_sequence->reg = get_unaligned_be16(&d[0]);
+		reg_sequence->def = get_unaligned_be16(&d[1]);
+		d += 2;
+	}
+
+	return 0;
+
+free_buf:
+	free(buf);
+
+	return ret;
+}
+
+static int bu18tl82_get_init_seq(struct bu18tl82_priv *priv)
+{
+	const void *data = NULL;
+	int len, err;
+
+	data = dev_read_prop(priv->dev, "serdes-init-sequence", &len);
+	if (!data) {
+		printf("failed to get serdes-init-sequence\n");
+		return -EINVAL;
+	}
+
+	priv->serdes_init_seq = calloc(1, sizeof(*priv->serdes_init_seq));
+	if (!priv->serdes_init_seq)
+		return -ENOMEM;
+
+	err = bu18tl82_parse_init_seq(priv->dev, data, len, priv->serdes_init_seq);
+	if (err) {
+		printf("failed to parse serdes-init-sequence\n");
+		goto free_init_seq;
+	}
+
+	return 0;
+
+free_init_seq:
+	free(priv->serdes_init_seq);
+
+	return err;
+}
+
+static int bu18tl82_probe(struct udevice *dev)
+{
+	struct bu18tl82_priv *priv = dev_get_priv(dev);
+	struct rockchip_bridge *bridge;
+	int ret;
+
+	ret = i2c_set_chip_offset_len(dev, 2);
+	if (ret)
+		return ret;
+
+	priv->dev = dev;
+
+	ret = uclass_get_device_by_phandle(UCLASS_REGULATOR, dev,
+					   "power-supply", &priv->power_supply);
+	if (ret && ret != -ENOENT) {
+		printf("%s: Cannot get power supply: %d\n", __func__, ret);
+		return ret;
+	}
+
+	ret = gpio_request_by_name(dev, "enable-gpios", 0,
+				   &priv->enable_gpio, GPIOD_IS_OUT);
+	if (ret && ret != -ENOENT) {
+		dev_err(dev, "%s: failed to get enable GPIO: %d\n", __func__, ret);
+		return ret;
+	}
+
+	bridge = calloc(1, sizeof(*bridge));
+	if (!bridge)
+		return -ENOMEM;
+
+	ret = bu18tl82_get_init_seq(priv);
+	if (ret)
+		goto free_bridge;
+
+	dev->driver_data = (ulong)bridge;
+	bridge->dev = dev;
+	bridge->funcs = &bu18tl82_bridge_funcs;
+
+	bu18tl82_bridge_reset(bridge);
+	bu18tl82_bridge_init(bridge);
+
+	return 0;
+
+free_bridge:
+	free(bridge);
+
+	return ret;
+}
+
+static const struct udevice_id bu18tl82_of_match[] = {
+	{ .compatible = "rohm,bu18tl82", },
+	{}
+};
+
+U_BOOT_DRIVER(bu18tl82) = {
+	.name = "bu18tl82",
+	.id = UCLASS_VIDEO_BRIDGE,
+	.of_match = bu18tl82_of_match,
+	.probe = bu18tl82_probe,
+	.priv_auto_alloc_size = sizeof(struct bu18tl82_priv),
+};
diff --git a/env/Kconfig b/env/Kconfig
index dae0c38..5b5b64a 100644
--- a/env/Kconfig
+++ b/env/Kconfig
@@ -43,7 +43,6 @@ config ENV_IS_NOWHERE
 config ENVF
 	bool "Environment fragment is store in envf partition"
 	depends on ENV_IS_NOWHERE
-	select ENV_PARTITION
 	help
 	  Use this if you want to add a env fragment partition to overlay/store
 	  some specific environments.
@@ -52,7 +51,6 @@ config SPL_ENVF
 	bool "Environment fragment is store in envf partition in SPL"
 	depends on ENVF && SPL
 	default y
-	select SPL_ENV_PARTITION
 	help
 	  Use this if you want to add a env fragment partition to overlay/store
 	  some specific environments in SPL. But now only parse env partition
diff --git a/env/envf.c b/env/envf.c
index fe43dc3..b469bd2 100644
--- a/env/envf.c
+++ b/env/envf.c
@@ -25,7 +25,10 @@ DECLARE_GLOBAL_DATA_PTR;
 #define ENVF_MAX		64
 
 static ulong env_size, env_offset, env_offset_redund;
+
+#if CONFIG_IS_ENABLED(ENV_PARTITION)
 static const char *part_type[] = { "mtdparts", "blkdevparts", };
+#endif
 
 /*
  * In case of env and env-backup partitions are too large that exceeds the limit
@@ -80,33 +83,6 @@ static int can_find_pmbr(struct blk_desc *dev_desc)
 }
 #endif
 
-static const char *env_get_string(env_t *env, u32 size, const char *str)
-{
-	const char *dp;
-	u32 env_size;
-
-	dp = (const char *)env->data;
-	env_size = size - ENV_HEADER_SIZE;
-	do {
-		/* skip leading white space */
-		while (*dp == ' ' || *dp == '\t')
-			++dp;
-
-		debug("ENTRY: %s\n", dp);
-		if (strstr(dp, str)) {
-			debug("FIND: %s\n", dp);
-			return dp;
-		}
-
-		/* point to next ENTRY */
-		dp += strlen(dp) + 1;
-	} while (((ulong)dp < (ulong)env->data + env_size) && *dp);
-
-	debug("NOT-FIND: %s\n", str);
-
-	return NULL;
-}
-
 static void envf_init_location(struct blk_desc *desc)
 {
 	/* eMMC (default) */
@@ -175,7 +151,7 @@ fail:
 	return ret;
 }
 
-static env_t *envf_read(struct blk_desc *desc)
+static __maybe_unused env_t *envf_read(struct blk_desc *desc)
 {
 	env_t *env = NULL;
 	int ret;
@@ -200,6 +176,34 @@ static env_t *envf_read(struct blk_desc *desc)
 	return env;
 }
 
+#if CONFIG_IS_ENABLED(ENV_PARTITION)
+static const char *env_get_string(env_t *env, u32 size, const char *str)
+{
+	const char *dp;
+	u32 env_size;
+
+	dp = (const char *)env->data;
+	env_size = size - ENV_HEADER_SIZE;
+	do {
+		/* skip leading white space */
+		while (*dp == ' ' || *dp == '\t')
+			++dp;
+
+		debug("ENTRY: %s\n", dp);
+		if (strstr(dp, str)) {
+			debug("FIND: %s\n", dp);
+			return dp;
+		}
+
+		/* point to next ENTRY */
+		dp += strlen(dp) + 1;
+	} while (((ulong)dp < (ulong)env->data + env_size) && *dp);
+
+	debug("NOT-FIND: %s\n", str);
+
+	return NULL;
+}
+
 char *envf_get_part_table(struct blk_desc *desc)
 {
 	const char *list = NULL;
@@ -227,6 +231,7 @@ char *envf_get_part_table(struct blk_desc *desc)
 out:
 	return (char *)list;
 }
+#endif
 
 #ifndef CONFIG_SPL_BUILD
 static int envf_init_vars(void)
@@ -243,15 +248,22 @@ static int envf_init_vars(void)
 		if (!strcmp(p, "bootargs")) {
 			printf("%s\n", EMSG_ARGS);
 			run_command("download", 0);
+#ifdef CONFIG_FIT_SIGNATURE
+		} else if (!strcmp(p, "sys_bootargs")) {
+			/* Do nothing, ignore 'sys_bootargs' from env.img */
+#endif
+		} else {
+			envf_list[envf_num++] = p;
 		}
-		envf_list[envf_num++] = p;
+
 		p = strtok(NULL, " ");
 	}
 
 	return envf_num;
 }
 
-static int envf_add_bootargs(void)
+#ifdef CONFIG_ENV_PARTITION
+static int envf_add_partition_bootargs(void)
 {
 	char *part_list;
 	char *bootargs;
@@ -277,6 +289,7 @@ static int envf_add_bootargs(void)
 
 	return 0;
 }
+#endif
 
 static int envf_load(void)
 {
@@ -301,7 +314,9 @@ static int envf_load(void)
 		}
 	}
 
-	envf_add_bootargs();
+#ifdef CONFIG_ENV_PARTITION
+	envf_add_partition_bootargs();
+#endif
 
 	return 0;
 }
diff --git a/include/android_avb/rk_avb_ops_user.h b/include/android_avb/rk_avb_ops_user.h
index 024019a..97a6967 100644
--- a/include/android_avb/rk_avb_ops_user.h
+++ b/include/android_avb/rk_avb_ops_user.h
@@ -15,25 +15,25 @@ extern "C" {
 #endif
 
 /* rk used */
-#define PERM_ATTR_DIGEST_SIZE 32
-#define PERM_ATTR_TOTAL_SIZE  1052
-#define VBOOT_KEY_HASH_SIZE   32
-#define ANDROID_VBOOT_LOCK 0
-#define ANDROID_VBOOT_UNLOCK 1
-#define SLOT_NUM 2
-#define CURR_SYSTEM_SLOT_SUFFIX "ab"
-#define VBMETA_MAX_SIZE 65536
-#define ROLLBACK_MAX_SIZE 20
-#define LOCK_MASK 0x1
-#define UNLOCK_DISABLE_MASK 0x2
-#define VBOOT_STATE_SIZE    1000
-#define PERM_ATTR_SUCCESS_FLAG 1
+#define PERM_ATTR_DIGEST_SIZE		32
+#define PERM_ATTR_TOTAL_SIZE		1052
+#define VBOOT_KEY_HASH_SIZE		32
+#define ANDROID_VBOOT_LOCK		0
+#define ANDROID_VBOOT_UNLOCK		1
+#define SLOT_NUM			2
+#define CURR_SYSTEM_SLOT_SUFFIX		"ab"
+#define VBMETA_MAX_SIZE			65536
+#define ROLLBACK_MAX_SIZE		20
+#define LOCK_MASK			(1 << 0)
+#define UNLOCK_DISABLE_MASK		(1 << 1)
+#define VBOOT_STATE_SIZE		1000
+#define PERM_ATTR_SUCCESS_FLAG		1
 /* soc-v use the rsa2048 */
-#define VBOOT_KEY_SIZE   256
-#define RPMB_BASE_ADDR		(64*1024/256)
-#define UBOOT_RB_INDEX_OFFSET 24
-#define TRUST_RB_INDEX_OFFSET 28
-#define ROCHCHIP_RSA_PARAMETER_SIZE 64
+#define VBOOT_KEY_SIZE			256
+#define RPMB_BASE_ADDR			(64*1024/256)
+#define UBOOT_RB_INDEX_OFFSET		24
+#define TRUST_RB_INDEX_OFFSET		28
+#define ROCHCHIP_RSA_PARAMETER_SIZE	64
 
 struct rk_pub_key {
 	u_int32_t rsa_n[ROCHCHIP_RSA_PARAMETER_SIZE];
diff --git a/include/asm-generic/global_data.h b/include/asm-generic/global_data.h
index fc73aab..16766fb 100644
--- a/include/asm-generic/global_data.h
+++ b/include/asm-generic/global_data.h
@@ -148,6 +148,10 @@ typedef struct global_data {
 #if CONFIG_IS_ENABLED(FIT_ROLLBACK_PROTECT)
 	u32 rollback_index;
 #endif
+#ifdef CONFIG_PSTORE
+	u64 pstore_addr;
+	u32 pstore_size;
+#endif
 } gd_t;
 #endif
 
diff --git a/include/asm-generic/gpio.h b/include/asm-generic/gpio.h
index bf230c1..88180f9 100644
--- a/include/asm-generic/gpio.h
+++ b/include/asm-generic/gpio.h
@@ -349,6 +349,23 @@ const char *gpio_get_bank_info(struct udevice *dev, int *offset_count);
 int dm_gpio_lookup_name(const char *name, struct gpio_desc *desc);
 
 /**
+ * gpio_hog_lookup_name() - Look up a named GPIO and return the gpio descr.
+ *
+ * @name:	Name to look up
+ * @desc:	Returns GPIO description, on success, else NULL
+ * @return:	Returns 0 if OK, else -ENODEV
+ */
+int gpio_hog_lookup_name(const char *name, struct gpio_desc **desc);
+
+/**
+ * gpio_hog_probe_all() - probe all gpio devices with
+ * gpio-hog subnodes.
+ *
+ * @return:	Returns return value from device_probe()
+ */
+int gpio_hog_probe_all(void);
+
+/**
  * gpio_lookup_name - Look up a GPIO name and return its details
  *
  * This is used to convert a named GPIO into a device, offset and GPIO
@@ -504,6 +521,23 @@ int gpio_request_list_by_name_nodev(ofnode node, const char *list_name,
 				    int flags);
 
 /**
+ * gpio_dev_request_index() - request single GPIO from gpio device
+ *
+ * @dev:	GPIO device
+ * @nodename:	Name of node for which gpio gets requested, used
+ *		for the gpio label name
+ * @list_name:	Name of GPIO list (e.g. "board-id-gpios")
+ * @index:	Index number of the GPIO in that list use request (0=first)
+ * @flags:	GPIOD_* flags
+ * @dtflags:	GPIO flags read from DT defined see GPIOD_*
+ * @desc:	returns GPIO descriptor filled from this function
+ * @return:	return value from gpio_request_tail()
+ */
+int gpio_dev_request_index(struct udevice *dev, const char *nodename,
+			   char *list_name, int index, int flags,
+			   int dtflags, struct gpio_desc *desc);
+
+/**
  * dm_gpio_free() - Free a single GPIO
  *
  * This frees a single GPIOs previously returned from gpio_request_by_name().
diff --git a/include/atf_common.h b/include/atf_common.h
index 8c513e7..b22c8d8 100644
--- a/include/atf_common.h
+++ b/include/atf_common.h
@@ -28,6 +28,7 @@
 	(_p)->h.attr = (uint32_t)(_attr) ; \
 	} while (0)
 
+/* ARM64 */
 #define MODE_RW_SHIFT	0x4
 #define MODE_RW_MASK	0x1
 #define MODE_RW_64	0x0
@@ -67,6 +68,34 @@
 #define DISABLE_ALL_EXECPTIONS	\
 	(DAIF_FIQ_BIT | DAIF_IRQ_BIT | DAIF_ABT_BIT | DAIF_DBG_BIT)
 
+/* ARM */
+#define MODE32_SHIFT		0
+#define MODE32_MASK		0x1f
+#define MODE32_svc		0x13
+
+#define SPSR_FIQ_BIT		(1 << 0)
+#define SPSR_IRQ_BIT		(1 << 1)
+#define SPSR_ABT_BIT		(1 << 2)
+#define SPSR_AIF_SHIFT		6
+#define SPSR_AIF_MASK		0x7
+
+#define EP_EE_LITTLE		0x0
+#define SPSR_E_SHIFT		9
+#define SPSR_E_MASK		0x1
+#define SPSR_T_SHIFT		5
+#define SPSR_T_MASK		0x1
+#define SPSR_T_ARM		0
+
+#define DISABLE_ALL_EXECPTIONS_32 \
+	(SPSR_FIQ_BIT | SPSR_IRQ_BIT | SPSR_ABT_BIT)
+
+#define SPSR_32(mode, isa, endian, aif)			\
+	(MODE_RW_32 << MODE_RW_SHIFT |			\
+	((mode) & MODE32_MASK) << MODE32_SHIFT |	\
+	((isa) & SPSR_T_MASK) << SPSR_T_SHIFT | 	\
+	((endian) & SPSR_E_MASK) << SPSR_E_SHIFT |	\
+	((aif) & SPSR_AIF_MASK) << SPSR_AIF_SHIFT)
+
 #ifndef __ASSEMBLY__
 
 /*******************************************************************************
diff --git a/include/boot_rkimg.h b/include/boot_rkimg.h
index 64d36f6..cb57818 100644
--- a/include/boot_rkimg.h
+++ b/include/boot_rkimg.h
@@ -62,6 +62,7 @@ struct rockchip_image {
 #define PART_SYSTEM			"system"
 #define PART_METADATA			"metadata"
 #define PART_USERDATA			"userdata"
+#define PART_META			"meta"
 
 struct blk_desc *rockchip_get_bootdev(void);
 void rockchip_set_bootdev(struct blk_desc *desc);
@@ -72,6 +73,7 @@ int rockchip_read_dtb_file(void *fdt_addr);
 int rockchip_ram_read_dtb_file(void *img, void *fdt_addr);
 int init_kernel_dtb(void);
 int fit_write_trusty_rollback_index(u32 trusty_index);
+int arch_fpga_init(void);
 
 #ifndef CONFIG_SPL_BUILD
 int rockchip_get_boot_mode(void);
diff --git a/include/common.h b/include/common.h
index 4cbc7b7..f32cd28 100644
--- a/include/common.h
+++ b/include/common.h
@@ -537,8 +537,6 @@ int	is_core_valid (unsigned int);
  */
 int arch_cpu_init(void);
 
-int arch_fpga_init(void);
-
 void s_init(void);
 
 int	checkcpu      (void);
diff --git a/include/configs/rk3308_common.h b/include/configs/rk3308_common.h
index b80059e..a509f36 100644
--- a/include/configs/rk3308_common.h
+++ b/include/configs/rk3308_common.h
@@ -75,10 +75,10 @@
 #define ENV_MEM_LAYOUT_SETTINGS \
 	"scriptaddr=0x00500000\0" \
 	"pxefile_addr_r=0x00600000\0" \
-	"fdt_addr_r=0x02f00000\0" \
+	"fdt_addr_r=0x02800000\0" \
 	"kernel_addr_r=0x00058000\0" \
 	"kernel_addr_c=0x2008000\0" \
-	"ramdisk_addr_r=0x02880000\0"
+	"ramdisk_addr_r=0x02900000\0"
 #endif
 
 #include <config_distro_bootcmd.h>
diff --git a/include/configs/rk3568_common.h b/include/configs/rk3568_common.h
index 22e5fb1..feeca0b 100644
--- a/include/configs/rk3568_common.h
+++ b/include/configs/rk3568_common.h
@@ -74,7 +74,7 @@
 #define ENV_MEM_LAYOUT_SETTINGS \
 	"scriptaddr=0x00c00000\0" \
 	"pxefile_addr_r=0x00e00000\0" \
-	"fdt_addr_r=0x0a100000\0" \
+	"fdt_addr_r=0x08300000\0" \
 	"kernel_addr_r=0x00280000\0" \
 	"kernel_addr_c=0x04080000\0" \
 	"ramdisk_addr_r=0x0a200000\0"
diff --git a/include/configs/rk3588_common.h b/include/configs/rk3588_common.h
index de25351..5bb057a 100644
--- a/include/configs/rk3588_common.h
+++ b/include/configs/rk3588_common.h
@@ -57,12 +57,12 @@
  *	the image header will use the 0x180000~0x200000, which is
  *	overlap with share memory region 0x100000~0x200000.
  *
- * compressed kernel:   84M ~ 131M
+ * compressed kernel:   84M ~ 130M
  */
 #define ENV_MEM_LAYOUT_SETTINGS \
 	"scriptaddr=0x00500000\0" \
 	"pxefile_addr_r=0x00600000\0" \
-	"fdt_addr_r=0x0a100000\0" \
+	"fdt_addr_r=0x08300000\0" \
 	"kernel_addr_r=0x00400000\0" \
 	"kernel_addr_c=0x05480000\0" \
 	"ramdisk_addr_r=0x0a200000\0"
diff --git a/include/configs/rockchip-common.h b/include/configs/rockchip-common.h
index 393280e..db94bce 100644
--- a/include/configs/rockchip-common.h
+++ b/include/configs/rockchip-common.h
@@ -198,5 +198,6 @@
 
 #define CONFIG_DISPLAY_BOARDINFO_LATE
 #define CONFIG_SYS_AUTOLOAD	"no"
+#define CONFIG_SPL_LOAD_FIT_ADDRESS		0x2000000
 
 #endif /* _ROCKCHIP_COMMON_H_ */
diff --git a/include/drm_modes.h b/include/drm_modes.h
index 2421cf1..eda5c94 100644
--- a/include/drm_modes.h
+++ b/include/drm_modes.h
@@ -7,6 +7,8 @@
 #ifndef _DRM_MODES_H
 #define _DRM_MODES_H
 
+#include "fdtdec.h"
+
 #define DRM_DISPLAY_INFO_LEN	32
 #define DRM_CONNECTOR_NAME_LEN	32
 #define DRM_DISPLAY_MODE_LEN	32
@@ -37,6 +39,20 @@
 #define DRM_MODE_FLAG_DBLCLK			(1 << 12)
 #define DRM_MODE_FLAG_CLKDIV2			(1 << 13)
 #define DRM_MODE_FLAG_PPIXDATA			BIT(31)
+/*
+ * When adding a new stereo mode don't forget to adjust DRM_MODE_FLAGS_3D_MAX
+ * (define not exposed to user space).
+ */
+#define DRM_MODE_FLAG_3D_MASK			(0x1f << 14)
+#define  DRM_MODE_FLAG_3D_NONE			(0 << 14)
+#define  DRM_MODE_FLAG_3D_FRAME_PACKING		(1 << 14)
+#define  DRM_MODE_FLAG_3D_FIELD_ALTERNATIVE	(2 << 14)
+#define  DRM_MODE_FLAG_3D_LINE_ALTERNATIVE	(3 << 14)
+#define  DRM_MODE_FLAG_3D_SIDE_BY_SIDE_FULL	(4 << 14)
+#define  DRM_MODE_FLAG_3D_L_DEPTH		(5 << 14)
+#define  DRM_MODE_FLAG_3D_L_DEPTH_GFX_GFX_DEPTH	(6 << 14)
+#define  DRM_MODE_FLAG_3D_TOP_AND_BOTTOM	(7 << 14)
+#define  DRM_MODE_FLAG_3D_SIDE_BY_SIDE_HALF	(8 << 14)
 
 /* Panel Mirror control */
 #define DRM_MODE_FLAG_XMIRROR			(1<<28)
@@ -155,6 +171,12 @@ enum v4l2_colorspace {
 
 #define DRM_MODE_FLAG_3D_MAX	DRM_MODE_FLAG_3D_SIDE_BY_SIDE_HALF
 
+#define DRM_MODE_MATCH_TIMINGS		(1 << 0)
+#define DRM_MODE_MATCH_CLOCK		(1 << 1)
+#define DRM_MODE_MATCH_FLAGS		(1 << 2)
+#define DRM_MODE_MATCH_3D_FLAGS		(1 << 3)
+#define DRM_MODE_MATCH_ASPECT_RATIO	(1 << 4)
+
 struct drm_display_mode {
 	/* Proposed mode values */
 	int clock;		/* in kHz */
@@ -190,4 +212,34 @@ struct drm_display_mode {
 	bool invalid;
 };
 
+/*
+ * Subsystem independent description of a videomode.
+ * Can be generated from struct display_timing.
+ */
+struct videomode {
+	unsigned long pixelclock;	/* pixelclock in Hz */
+
+	u32 hactive;
+	u32 hfront_porch;
+	u32 hback_porch;
+	u32 hsync_len;
+
+	u32 vactive;
+	u32 vfront_porch;
+	u32 vback_porch;
+	u32 vsync_len;
+
+	enum display_flags flags; /* display flags */
+};
+
+struct drm_display_mode *drm_mode_create(void);
+void drm_mode_destroy(struct drm_display_mode *mode);
+bool drm_mode_match(const struct drm_display_mode *mode1,
+		    const struct drm_display_mode *mode2,
+		    unsigned int match_flags);
+bool drm_mode_equal(const struct drm_display_mode *mode1,
+		    const struct drm_display_mode *mode2);
+void drm_display_mode_to_videomode(const struct drm_display_mode *dmode,
+				   struct videomode *vm);
+
 #endif
diff --git a/include/edid.h b/include/edid.h
index 72af032..6cfc308 100644
--- a/include/edid.h
+++ b/include/edid.h
@@ -46,17 +46,6 @@
 #define  DRM_MODE_FLAG_420			BIT(23)
 #define  DRM_MODE_FLAG_420_ONLY			BIT(24)
 
-#define DRM_MODE_FLAG_3D_MASK                  (0x1f << 14)
-#define  DRM_MODE_FLAG_3D_NONE                 (0 << 14)
-#define  DRM_MODE_FLAG_3D_FRAME_PACKING                BIT(14)
-#define  DRM_MODE_FLAG_3D_FIELD_ALTERNATIVE    (2 << 14)
-#define  DRM_MODE_FLAG_3D_LINE_ALTERNATIVE     (3 << 14)
-#define  DRM_MODE_FLAG_3D_SIDE_BY_SIDE_FULL    (4 << 14)
-#define  DRM_MODE_FLAG_3D_L_DEPTH              (5 << 14)
-#define  DRM_MODE_FLAG_3D_L_DEPTH_GFX_GFX_DEPTH        (6 << 14)
-#define  DRM_MODE_FLAG_3D_TOP_AND_BOTTOM       (7 << 14)
-#define  DRM_MODE_FLAG_3D_SIDE_BY_SIDE_HALF    (8 << 14)
-
 #define BITS_PER_BYTE         8
 #define BITS_TO_LONGS(nr)     DIV_ROUND_UP(nr, BITS_PER_BYTE * sizeof(long))
 #define GET_BIT(_x, _pos) \
@@ -697,6 +686,9 @@ struct drm_hdmi_info {
 	/** @max_lanes: supported by sink */
 	u8 max_lanes;
 
+	/* @add_func: support hdmi2.1 function */
+	u8 add_func;
+
 	/** @dsc_cap: DSC capabilities of the sink */
 	struct drm_hdmi_dsc_cap dsc_cap;
 };
diff --git a/include/linux/dw_hdmi.h b/include/linux/dw_hdmi.h
index b769054..18433ea 100644
--- a/include/linux/dw_hdmi.h
+++ b/include/linux/dw_hdmi.h
@@ -132,20 +132,21 @@ struct dw_hdmi_phy_config {
 	u16 vlev_ctr;   /* voltage level control */
 };
 
+struct rockchip_connector;
 struct dw_hdmi_phy_ops {
-	int (*init)(struct dw_hdmi *hdmi, void *data);
-	void (*disable)(struct dw_hdmi *hdmi, void *data);
+	int (*init)(struct rockchip_connector *conn, struct dw_hdmi *hdmi, void *data);
+	void (*disable)(struct rockchip_connector *conn, struct dw_hdmi *hdmi, void *data);
 	enum drm_connector_status (*read_hpd)(struct dw_hdmi *hdmi,
 					      void *data);
-	void (*mode_valid)(struct dw_hdmi *hdmi, void *data);
+	void (*mode_valid)(struct rockchip_connector *conn, struct dw_hdmi *hdmi, void *data);
 };
 
 struct dw_hdmi_qp_phy_ops {
-	int (*init)(void *hdmi, void *data);
-	void (*disable)(void *hdmi, void *data);
+	int (*init)(struct rockchip_connector *conn, void *hdmi, void *data);
+	void (*disable)(struct rockchip_connector *conn, void *hdmi, void *data);
 	enum drm_connector_status (*read_hpd)(void *data);
 	void (*mode_valid)(void *hdmi, void *data);
-	void (*set_pll)(void *hdmi, void *data);
+	void (*set_pll)(struct rockchip_connector *conn, void *hdmi, void *data);
 };
 
 struct dw_hdmi_link_config {
@@ -154,6 +155,7 @@ struct dw_hdmi_link_config {
 	int frl_lanes;
 	int rate_per_lane;
 	int hcactive;
+	bool allm_en;
 	u8 pps_payload[128];
 };
 
diff --git a/include/max96745.h b/include/max96745.h
index d7e811e..b69e011 100644
--- a/include/max96745.h
+++ b/include/max96745.h
@@ -17,9 +17,6 @@
 #define RESET_ALL		BIT(7)
 #define SLEEP			BIT(3)
 
-/* 002Ah, 0034h */
-#define LINK_LOCKED		BIT(0)
-
 /* 0076h, 0086h */
 #define DIS_REM_CC		BIT(7)
 
diff --git a/include/max96752f.h b/include/max96752f.h
index 9420bee..cda7291 100644
--- a/include/max96752f.h
+++ b/include/max96752f.h
@@ -61,4 +61,6 @@
 #define OLDI_SPL_MODE		GENMASK(2, 1)
 #define OLDI_SPL_POL		BIT(0)
 
+void max96752f_init(struct udevice *dev);
+
 #endif
diff --git a/include/max96755f.h b/include/max96755f.h
index 8a4c067..deea4ce 100644
--- a/include/max96755f.h
+++ b/include/max96755f.h
@@ -180,6 +180,7 @@ struct max96755f_priv {
 	bool dpi_deskew_en;
 	struct drm_display_mode mode;
 	u32 num_lanes;
+	struct gpio_desc lock_gpio;
 };
 
 #endif
diff --git a/include/power/fuel_gauge.h b/include/power/fuel_gauge.h
index 0685a33..dbdf4c7 100644
--- a/include/power/fuel_gauge.h
+++ b/include/power/fuel_gauge.h
@@ -17,7 +17,13 @@ struct dm_fuel_gauge_ops {
 	int (*get_soc)(struct udevice *dev);
 	int (*get_voltage)(struct udevice *dev);
 	int (*get_current)(struct udevice *dev);
+	int (*get_temperature)(struct udevice *dev, int *temp);
 	bool (*get_chrg_online)(struct udevice *dev);
+	int (*set_charger_voltage)(struct udevice *dev, int uV);
+	int (*set_charger_enable)(struct udevice *dev);
+	int (*set_charger_disable)(struct udevice *dev);
+	int (*set_iprechg_current)(struct udevice *dev, int iprechrg_uA);
+	int (*set_charger_current)(struct udevice *dev, int ichrg_uA);
 };
 
 int fuel_gauge_capability(struct udevice *dev);
@@ -26,5 +32,11 @@ int fuel_gauge_update_get_soc(struct udevice *dev);
 int fuel_gauge_get_voltage(struct udevice *dev);
 int fuel_gauge_get_current(struct udevice *dev);
 bool fuel_gauge_get_chrg_online(struct udevice *dev);
+int fuel_gauge_get_temperature(struct udevice *dev, int *temp);
+int charger_set_charger_voltage(struct udevice *dev, int uV);
+int charger_set_iprechg_current(struct udevice *dev, int iprechrg_uA);
+int charger_set_current(struct udevice *dev, int ichrg_uA);
+int charger_set_enable(struct udevice *dev);
+int charger_set_disable(struct udevice *dev);
 
 #endif
diff --git a/include/rockusb.h b/include/rockusb.h
index 15c3035..81daabf 100644
--- a/include/rockusb.h
+++ b/include/rockusb.h
@@ -52,8 +52,12 @@ enum rkusb_rc {
 	RKUSB_RC_UNKNOWN_CMND	= 2,
 };
 
+struct fsg_common;
+
 #ifdef CONFIG_CMD_ROCKUSB
 #define IS_RKUSB_UMS_DNL(name)	(!strncmp((name), "rkusb_ums_dnl", 13))
+
+int rkusb_do_check_parity(struct fsg_common *common);
 #else
 #define IS_RKUSB_UMS_DNL(name)	0
 
@@ -70,6 +74,11 @@ static inline int rkusb_cmd_process(struct fsg_common *common,
 {
 	return -EPERM;
 }
+
+static inline int rkusb_do_check_parity(struct fsg_common *common)
+{
+	return -EOPNOTSUPP;
+}
 #endif
 
 /* Wait at maximum 60 seconds for cable connection */
diff --git a/include/spi.h b/include/spi.h
index 2442559..df99ec5 100644
--- a/include/spi.h
+++ b/include/spi.h
@@ -33,7 +33,7 @@
 #define SPI_RX_QUAD	BIT(13)			/* receive with 4 wires */
 #define SPI_TX_OCTAL	BIT(14)			/* transmit with 8 wires */
 #define SPI_RX_OCTAL	BIT(15)			/* receive with 8 wires */
-#define SPI_DMA_PREPARE	BIT(24)			/* dma transfer skip waiting idle */
+#define SPI_DMA_PREPARE	BIT(24)			/* dma transfer skip waiting idle, read without cache invalid */
 
 /* Header byte that marks the start of the message */
 #define SPI_PREAMBLE_END_BYTE	0xec
diff --git a/lib/avb/libavb_user/avb_ops_user.c b/lib/avb/libavb_user/avb_ops_user.c
index d2151c3..f7b2ac7 100644
--- a/lib/avb/libavb_user/avb_ops_user.c
+++ b/lib/avb/libavb_user/avb_ops_user.c
@@ -381,7 +381,7 @@ AvbIOResult avb_read_perm_attr_hash(AvbAtxOps *atx_ops,
 				       AVB_SHA256_DIGEST_SIZE / 4))
 		return -1;
 #else
-	avb_error("Please open the macro!\n");
+	printf("Please open the macro!\n");
 	return -1;
 #endif
 #endif
diff --git a/lib/avb/rk_avb_user/rk_avb_ops_user.c b/lib/avb/rk_avb_user/rk_avb_ops_user.c
index 9385305..a536fd9 100644
--- a/lib/avb/rk_avb_user/rk_avb_ops_user.c
+++ b/lib/avb/rk_avb_user/rk_avb_ops_user.c
@@ -109,7 +109,7 @@ int rk_avb_read_flash_lock_state(uint8_t *flash_lock_state)
 	case TEE_ERROR_ITEM_NOT_FOUND:
 		*flash_lock_state = 1;
 		if (trusty_write_flash_lock_state(*flash_lock_state)) {
-			avb_error("trusty_write_flash_lock_state error!");
+			printf("trusty_write_flash_lock_state error!");
 			ret = -1;
 		} else {
 			ret = trusty_read_flash_lock_state(flash_lock_state);
@@ -169,7 +169,7 @@ int rk_avb_read_lock_state(uint8_t *lock_state)
 	case TEE_ERROR_ITEM_NOT_FOUND:
 		*lock_state = 1;
 		if (rk_avb_write_lock_state(*lock_state)) {
-			avb_error("avb_write_lock_state error!");
+			printf("avb_write_lock_state error!");
 			ret = -1;
 		} else {
 			ret = trusty_read_lock_state(lock_state);
@@ -213,7 +213,7 @@ int rk_avb_read_perm_attr_flag(uint8_t *flag)
 	case TEE_ERROR_ITEM_NOT_FOUND:
 		*flag = 0;
 		if (rk_avb_write_perm_attr_flag(*flag)) {
-			avb_error("avb_write_perm_attr_flag error!");
+			printf("avb_write_perm_attr_flag error!");
 			ret = -1;
 		} else {
 			ret = trusty_read_permanent_attributes_flag(flag);
@@ -334,7 +334,7 @@ int rk_avb_read_all_rollback_index(char *buffer)
 					 AVB_ATX_PIK_VERSION_LOCATION,
 					 &stored_rollback_index);
 	if (io_ret != AVB_IO_RESULT_OK) {
-		avb_error("Failed to read PIK minimum version.\n");
+		printf("Failed to read PIK minimum version.\n");
 		goto out;
 	}
 	/* PIK rollback index */
@@ -348,7 +348,7 @@ int rk_avb_read_all_rollback_index(char *buffer)
 					  AVB_ATX_PSK_VERSION_LOCATION,
 					  &stored_rollback_index);
 	if (io_ret != AVB_IO_RESULT_OK) {
-		avb_error("Failed to read PSK minimum version.\n");
+		printf("Failed to read PSK minimum version.\n");
 		goto out;
 	}
 	/* PSK rollback index */
@@ -395,7 +395,7 @@ int rk_bootloader_rollback_index_read(uint32_t offset, uint32_t bytes,
 		if (get_mmc_num() > 0)
 			curr_device = 0;
 		else {
-			avb_error("No MMC device available");
+			printf("No MMC device available");
 			return -1;
 		}
 	}
@@ -432,7 +432,7 @@ int rk_avb_get_bootloader_min_version(char *buffer)
 
 	if (rk_bootloader_rollback_index_read(UBOOT_RB_INDEX_OFFSET,
 					      sizeof(uint32_t), &rb_index)) {
-		avb_error("Can not read uboot rollback index");
+		printf("Can not read uboot rollback index");
 		return -1;
 	}
 	snprintf(temp, sizeof(int) + 1, "%d", 0);
@@ -444,7 +444,7 @@ int rk_avb_get_bootloader_min_version(char *buffer)
 
 	if (rk_bootloader_rollback_index_read(TRUST_RB_INDEX_OFFSET,
 					      sizeof(uint32_t), &rb_index)) {
-		avb_error("Can not read trust rollback index");
+		printf("Can not read trust rollback index");
 		return -1;
 	}
 
@@ -470,7 +470,7 @@ void rk_avb_get_at_vboot_state(char *buf)
 	int n;
 
 	if (rk_avb_read_perm_attr_flag((uint8_t *)&temp_flag)) {
-		avb_error("Can not read perm_attr_flag!");
+		printf("Can not read perm_attr_flag!");
 		perm_attr_flag = "";
 	} else {
 		perm_attr_flag = temp_flag ? "1" : "0";
@@ -478,7 +478,7 @@ void rk_avb_get_at_vboot_state(char *buf)
 
 	temp_flag = 0;
 	if (rk_avb_read_lock_state((uint8_t *)&temp_flag)) {
-		avb_error("Can not read lock state!");
+		printf("Can not read lock state!");
 		lock_val = "";
 		unlock_dis_val = "";
 	} else {
@@ -488,7 +488,7 @@ void rk_avb_get_at_vboot_state(char *buf)
 
 	temp_flag = 0;
 	if (rk_avb_read_bootloader_locked_flag((uint8_t *)&temp_flag)) {
-		avb_error("Can not read bootloader locked flag!");
+		printf("Can not read bootloader locked flag!");
 		bootloader_locked_flag = "";
 	} else {
 		bootloader_locked_flag = temp_flag ? "1" : "0";
@@ -496,17 +496,17 @@ void rk_avb_get_at_vboot_state(char *buf)
 
 	rollback_indices = malloc(VBOOT_STATE_SIZE);
 	if (!rollback_indices) {
-		avb_error("No buff to malloc!");
+		printf("No buff to malloc!");
 		return;
 	}
 
 	memset(rollback_indices, 0, VBOOT_STATE_SIZE);
 	if (rk_avb_read_all_rollback_index(rollback_indices))
-		avb_error("Can not read avb_min_ver!");
+		printf("Can not read avb_min_ver!");
 #ifdef CONFIG_SUPPORT_EMMC_RPMB
 	/* bootloader-min-versions */
 	if (rk_avb_get_bootloader_min_version(min_versions))
-		avb_error("Call rk_avb_get_bootloader_min_version error!");
+		printf("Call rk_avb_get_bootloader_min_version error!");
 #endif
 	n = snprintf(buf, VBOOT_STATE_SIZE - 1,
 		     "avb-perm-attr-set=%s\n"
@@ -522,7 +522,7 @@ void rk_avb_get_at_vboot_state(char *buf)
 		     rollback_indices,
 		     min_versions);
 	if (n >= VBOOT_STATE_SIZE) {
-		avb_error("The VBOOT_STATE buf is truncated\n");
+		printf("The VBOOT_STATE buf is truncated\n");
 		buf[VBOOT_STATE_SIZE - 1] = 0;
 	}
 	debug("The vboot state buf is %s\n", buf);
@@ -543,7 +543,7 @@ int rk_avb_get_ab_info(AvbABData* ab_data)
 
 	io_ret = ops->ab_ops->read_ab_metadata(ops->ab_ops, ab_data);
 	if (io_ret != AVB_IO_RESULT_OK) {
-		avb_error("I/O error while loading A/B metadata.\n");
+		printf("I/O error while loading A/B metadata.\n");
 		ret = -1;
 	}
 
@@ -598,7 +598,7 @@ int rk_auth_unlock(void *buffer, char *out_is_trusted)
 
 	ops = avb_ops_user_new();
 	if (ops == NULL) {
-		avb_error("avb_ops_user_new() failed!");
+		printf("avb_ops_user_new() failed!");
 		return -1;
 	}
 
@@ -622,7 +622,7 @@ int rk_generate_unlock_challenge(void *buffer, uint32_t *challenge_len)
 
 	ops = avb_ops_user_new();
 	if (ops == NULL) {
-		avb_error("avb_ops_user_new() failed!");
+		printf("avb_ops_user_new() failed!");
 		return -1;
 	}
 
diff --git a/lib/sysmem.c b/lib/sysmem.c
index ce512dd..6507361 100644
--- a/lib/sysmem.c
+++ b/lib/sysmem.c
@@ -514,7 +514,7 @@ static void *sysmem_alloc_align_base(enum memblk_id id,
 			}
 		} else {
 			SYSMEM_E("Failed to alloc \"%s\" expect at 0x%08lx - 0x%08lx "
-				 "but at 0x%08lx - x%08lx\n",
+				 "but at 0x%08lx - 0x%08lx\n",
 				 name, (ulong)base, (ulong)(base + size),
 				 (ulong)paddr, (ulong)(paddr + size));
 			/* Free what we don't want allocated region */
diff --git a/scripts/README.rockchip b/scripts/README.rockchip
index c1f75ff..907e376 100644
--- a/scripts/README.rockchip
+++ b/scripts/README.rockchip
@@ -32,6 +32,9 @@ Example usage of scripts/tools for Rockchip
 		./scripts/stacktrace.sh dump.txt spl
 		./scripts/stacktrace.sh dump.txt tpl
 
+	# avbtool.py
+		./avbtool.py info_image --image vbmeta.img
+
 [tools]
 	# resource_tool
 		./tools/resource_tool rk-kernel.dtb logo_kernel.bmp logo.bmp
diff --git a/scripts/avbtool.py b/scripts/avbtool.py
new file mode 100755
index 0000000..f944af4
--- /dev/null
+++ b/scripts/avbtool.py
@@ -0,0 +1,4925 @@
+#!/usr/bin/env python3
+
+# Copyright 2016, The Android Open Source Project
+#
+# Permission is hereby granted, free of charge, to any person
+# obtaining a copy of this software and associated documentation
+# files (the "Software"), to deal in the Software without
+# restriction, including without limitation the rights to use, copy,
+# modify, merge, publish, distribute, sublicense, and/or sell copies
+# of the Software, and to permit persons to whom the Software is
+# furnished to do so, subject to the following conditions:
+#
+# The above copyright notice and this permission notice shall be
+# included in all copies or substantial portions of the Software.
+#
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
+# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
+# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+# SOFTWARE.
+#
+"""Command-line tool for working with Android Verified Boot images."""
+
+import argparse
+import binascii
+import bisect
+import hashlib
+import json
+import math
+import os
+import struct
+import subprocess
+import sys
+import tempfile
+import time
+
+# Keep in sync with libavb/avb_version.h.
+AVB_VERSION_MAJOR = 1
+AVB_VERSION_MINOR = 2
+AVB_VERSION_SUB = 0
+
+# Keep in sync with libavb/avb_footer.h.
+AVB_FOOTER_VERSION_MAJOR = 1
+AVB_FOOTER_VERSION_MINOR = 0
+
+AVB_VBMETA_IMAGE_FLAGS_HASHTREE_DISABLED = 1
+
+# Configuration for enabling logging of calls to avbtool.
+AVB_INVOCATION_LOGFILE = os.environ.get('AVB_INVOCATION_LOGFILE')
+
+
+class AvbError(Exception):
+  """Application-specific errors.
+
+  These errors represent issues for which a stack-trace should not be
+  presented.
+
+  Attributes:
+    message: Error message.
+  """
+
+  def __init__(self, message):
+    Exception.__init__(self, message)
+
+
+class Algorithm(object):
+  """Contains details about an algorithm.
+
+  See the avb_vbmeta_image.h file for more details about algorithms.
+
+  The constant |ALGORITHMS| is a dictionary from human-readable
+  names (e.g 'SHA256_RSA2048') to instances of this class.
+
+  Attributes:
+    algorithm_type: Integer code corresponding to |AvbAlgorithmType|.
+    hash_name: Empty or a name from |hashlib.algorithms|.
+    hash_num_bytes: Number of bytes used to store the hash.
+    signature_num_bytes: Number of bytes used to store the signature.
+    public_key_num_bytes: Number of bytes used to store the public key.
+    padding: Padding used for signature as bytes, if any.
+  """
+
+  def __init__(self, algorithm_type, hash_name, hash_num_bytes,
+               signature_num_bytes, public_key_num_bytes, padding):
+    self.algorithm_type = algorithm_type
+    self.hash_name = hash_name
+    self.hash_num_bytes = hash_num_bytes
+    self.signature_num_bytes = signature_num_bytes
+    self.public_key_num_bytes = public_key_num_bytes
+    self.padding = padding
+
+
+# This must be kept in sync with the avb_crypto.h file.
+#
+# The PKC1-v1.5 padding is a blob of binary DER of ASN.1 and is
+# obtained from section 5.2.2 of RFC 4880.
+ALGORITHMS = {
+    'NONE': Algorithm(
+        algorithm_type=0,        # AVB_ALGORITHM_TYPE_NONE
+        hash_name='',
+        hash_num_bytes=0,
+        signature_num_bytes=0,
+        public_key_num_bytes=0,
+        padding=b''),
+    'SHA256_RSA2048': Algorithm(
+        algorithm_type=1,        # AVB_ALGORITHM_TYPE_SHA256_RSA2048
+        hash_name='sha256',
+        hash_num_bytes=32,
+        signature_num_bytes=256,
+        public_key_num_bytes=8 + 2*2048//8,
+        padding=bytes(bytearray([
+            # PKCS1-v1_5 padding
+            0x00, 0x01] + [0xff]*202 + [0x00] + [
+                # ASN.1 header
+                0x30, 0x31, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86,
+                0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x05,
+                0x00, 0x04, 0x20,
+            ]))),
+    'SHA256_RSA4096': Algorithm(
+        algorithm_type=2,        # AVB_ALGORITHM_TYPE_SHA256_RSA4096
+        hash_name='sha256',
+        hash_num_bytes=32,
+        signature_num_bytes=512,
+        public_key_num_bytes=8 + 2*4096//8,
+        padding=bytes(bytearray([
+            # PKCS1-v1_5 padding
+            0x00, 0x01] + [0xff]*458 + [0x00] + [
+                # ASN.1 header
+                0x30, 0x31, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86,
+                0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x05,
+                0x00, 0x04, 0x20,
+            ]))),
+    'SHA256_RSA8192': Algorithm(
+        algorithm_type=3,        # AVB_ALGORITHM_TYPE_SHA256_RSA8192
+        hash_name='sha256',
+        hash_num_bytes=32,
+        signature_num_bytes=1024,
+        public_key_num_bytes=8 + 2*8192//8,
+        padding=bytes(bytearray([
+            # PKCS1-v1_5 padding
+            0x00, 0x01] + [0xff]*970 + [0x00] + [
+                # ASN.1 header
+                0x30, 0x31, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86,
+                0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x05,
+                0x00, 0x04, 0x20,
+            ]))),
+    'SHA512_RSA2048': Algorithm(
+        algorithm_type=4,        # AVB_ALGORITHM_TYPE_SHA512_RSA2048
+        hash_name='sha512',
+        hash_num_bytes=64,
+        signature_num_bytes=256,
+        public_key_num_bytes=8 + 2*2048//8,
+        padding=bytes(bytearray([
+            # PKCS1-v1_5 padding
+            0x00, 0x01] + [0xff]*170 + [0x00] + [
+                # ASN.1 header
+                0x30, 0x51, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86,
+                0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x03, 0x05,
+                0x00, 0x04, 0x40
+            ]))),
+    'SHA512_RSA4096': Algorithm(
+        algorithm_type=5,        # AVB_ALGORITHM_TYPE_SHA512_RSA4096
+        hash_name='sha512',
+        hash_num_bytes=64,
+        signature_num_bytes=512,
+        public_key_num_bytes=8 + 2*4096//8,
+        padding=bytes(bytearray([
+            # PKCS1-v1_5 padding
+            0x00, 0x01] + [0xff]*426 + [0x00] + [
+                # ASN.1 header
+                0x30, 0x51, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86,
+                0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x03, 0x05,
+                0x00, 0x04, 0x40
+            ]))),
+    'SHA512_RSA8192': Algorithm(
+        algorithm_type=6,        # AVB_ALGORITHM_TYPE_SHA512_RSA8192
+        hash_name='sha512',
+        hash_num_bytes=64,
+        signature_num_bytes=1024,
+        public_key_num_bytes=8 + 2*8192//8,
+        padding=bytes(bytearray([
+            # PKCS1-v1_5 padding
+            0x00, 0x01] + [0xff]*938 + [0x00] + [
+                # ASN.1 header
+                0x30, 0x51, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86,
+                0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x03, 0x05,
+                0x00, 0x04, 0x40
+            ]))),
+}
+
+
+def get_release_string():
+  """Calculates the release string to use in the VBMeta struct."""
+  # Keep in sync with libavb/avb_version.c:avb_version_string().
+  return 'avbtool {}.{}.{}'.format(AVB_VERSION_MAJOR,
+                                   AVB_VERSION_MINOR,
+                                   AVB_VERSION_SUB)
+
+
+def round_to_multiple(number, size):
+  """Rounds a number up to nearest multiple of another number.
+
+  Arguments:
+    number: The number to round up.
+    size: The multiple to round up to.
+
+  Returns:
+    If |number| is a multiple of |size|, returns |number|, otherwise
+    returns |number| + |size|.
+  """
+  remainder = number % size
+  if remainder == 0:
+    return number
+  return number + size - remainder
+
+
+def round_to_pow2(number):
+  """Rounds a number up to the next power of 2.
+
+  Arguments:
+    number: The number to round up.
+
+  Returns:
+    If |number| is already a power of 2 then |number| is
+    returned. Otherwise the smallest power of 2 greater than |number|
+    is returned.
+  """
+  return 2**((number - 1).bit_length())
+
+
+def encode_long(num_bits, value):
+  """Encodes a long to a bytearray() using a given amount of bits.
+
+  This number is written big-endian, e.g. with the most significant
+  bit first.
+
+  This is the reverse of decode_long().
+
+  Arguments:
+    num_bits: The number of bits to write, e.g. 2048.
+    value: The value to write.
+
+  Returns:
+    A bytearray() with the encoded long.
+  """
+  ret = bytearray()
+  for bit_pos in range(num_bits, 0, -8):
+    octet = (value >> (bit_pos - 8)) & 0xff
+    ret.extend(struct.pack('!B', octet))
+  return ret
+
+
+def decode_long(blob):
+  """Decodes a long from a bytearray() using a given amount of bits.
+
+  This number is expected to be in big-endian, e.g. with the most
+  significant bit first.
+
+  This is the reverse of encode_long().
+
+  Arguments:
+    blob: A bytearray() with the encoded long.
+
+  Returns:
+    The decoded value.
+  """
+  ret = 0
+  for b in bytearray(blob):
+    ret *= 256
+    ret += b
+  return ret
+
+
+def egcd(a, b):
+  """Calculate greatest common divisor of two numbers.
+
+  This implementation uses a recursive version of the extended
+  Euclidian algorithm.
+
+  Arguments:
+    a: First number.
+    b: Second number.
+
+  Returns:
+    A tuple (gcd, x, y) that where |gcd| is the greatest common
+    divisor of |a| and |b| and |a|*|x| + |b|*|y| = |gcd|.
+  """
+  if a == 0:
+    return (b, 0, 1)
+  g, y, x = egcd(b % a, a)
+  return (g, x - (b // a) * y, y)
+
+
+def modinv(a, m):
+  """Calculate modular multiplicative inverse of |a| modulo |m|.
+
+  This calculates the number |x| such that |a| * |x| == 1 (modulo
+  |m|). This number only exists if |a| and |m| are co-prime - |None|
+  is returned if this isn't true.
+
+  Arguments:
+    a: The number to calculate a modular inverse of.
+    m: The modulo to use.
+
+  Returns:
+    The modular multiplicative inverse of |a| and |m| or |None| if
+    these numbers are not co-prime.
+  """
+  gcd, x, _ = egcd(a, m)
+  if gcd != 1:
+    return None  # modular inverse does not exist
+  return x % m
+
+
+def parse_number(string):
+  """Parse a string as a number.
+
+  This is just a short-hand for int(string, 0) suitable for use in the
+  |type| parameter of |ArgumentParser|'s add_argument() function. An
+  improvement to just using type=int is that this function supports
+  numbers in other bases, e.g. "0x1234".
+
+  Arguments:
+    string: The string to parse.
+
+  Returns:
+    The parsed integer.
+
+  Raises:
+    ValueError: If the number could not be parsed.
+  """
+  return int(string, 0)
+
+
+class RSAPublicKey(object):
+  """Data structure used for a RSA public key.
+
+  Attributes:
+    exponent: The key exponent.
+    modulus: The key modulus.
+    num_bits: The key size.
+    key_path: The path to a key file.
+  """
+
+  MODULUS_PREFIX = b'modulus='
+
+  def __init__(self, key_path):
+    """Loads and parses an RSA key from either a private or public key file.
+
+    Arguments:
+      key_path: The path to a key file.
+
+    Raises:
+      AvbError: If RSA key parameters could not be read from file.
+    """
+    # We used to have something as simple as this:
+    #
+    #  key = Crypto.PublicKey.RSA.importKey(open(key_path).read())
+    #  self.exponent = key.e
+    #  self.modulus = key.n
+    #  self.num_bits = key.size() + 1
+    #
+    # but unfortunately PyCrypto is not available in the builder. So
+    # instead just parse openssl(1) output to get this
+    # information. It's ugly but...
+    args = ['openssl', 'rsa', '-in', key_path, '-modulus', '-noout']
+    p = subprocess.Popen(args,
+                         stdin=subprocess.PIPE,
+                         stdout=subprocess.PIPE,
+                         stderr=subprocess.PIPE)
+    (pout, perr) = p.communicate()
+    if p.wait() != 0:
+      # Could be just a public key is passed, try that.
+      args.append('-pubin')
+      p = subprocess.Popen(args,
+                           stdin=subprocess.PIPE,
+                           stdout=subprocess.PIPE,
+                           stderr=subprocess.PIPE)
+      (pout, perr) = p.communicate()
+      if p.wait() != 0:
+        raise AvbError('Error getting public key: {}'.format(perr))
+
+    if not pout.lower().startswith(self.MODULUS_PREFIX):
+      raise AvbError('Unexpected modulus output')
+
+    modulus_hexstr = pout[len(self.MODULUS_PREFIX):]
+
+    # The exponent is assumed to always be 65537 and the number of
+    # bits can be derived from the modulus by rounding up to the
+    # nearest power of 2.
+    self.key_path = key_path
+    self.modulus = int(modulus_hexstr, 16)
+    self.num_bits = round_to_pow2(int(math.ceil(math.log(self.modulus, 2))))
+    self.exponent = 65537
+
+  def encode(self):
+    """Encodes the public RSA key in |AvbRSAPublicKeyHeader| format.
+
+    This creates a |AvbRSAPublicKeyHeader| as well as the two large
+    numbers (|key_num_bits| bits long) following it.
+
+    Returns:
+      The |AvbRSAPublicKeyHeader| followed by two large numbers as bytes.
+
+    Raises:
+      AvbError: If given RSA key exponent is not 65537.
+    """
+    if self.exponent != 65537:
+      raise AvbError('Only RSA keys with exponent 65537 are supported.')
+    ret = bytearray()
+    # Calculate n0inv = -1/n[0] (mod 2^32)
+    b = 2 ** 32
+    n0inv = b - modinv(self.modulus, b)
+    # Calculate rr = r^2 (mod N), where r = 2^(# of key bits)
+    r = 2 ** self.modulus.bit_length()
+    rrmodn = r * r % self.modulus
+    ret.extend(struct.pack('!II', self.num_bits, n0inv))
+    ret.extend(encode_long(self.num_bits, self.modulus))
+    ret.extend(encode_long(self.num_bits, rrmodn))
+    return bytes(ret)
+
+  def sign(self, algorithm_name, data_to_sign, signing_helper=None,
+           signing_helper_with_files=None):
+    """Sign given data using |signing_helper| or openssl.
+
+    openssl is used if neither the parameters signing_helper nor
+    signing_helper_with_files are given.
+
+    Arguments:
+      algorithm_name: The algorithm name as per the ALGORITHMS dict.
+      data_to_sign: Data to sign as bytes or bytearray.
+      signing_helper: Program which signs a hash and returns the signature.
+      signing_helper_with_files: Same as signing_helper but uses files instead.
+
+    Returns:
+      The signature as bytes.
+
+    Raises:
+      AvbError: If an error occurred during signing.
+    """
+    # Checks requested algorithm for validity.
+    algorithm = ALGORITHMS.get(algorithm_name)
+    if not algorithm:
+      raise AvbError('Algorithm with name {} is not supported.'
+                     .format(algorithm_name))
+
+    if self.num_bits != (algorithm.signature_num_bytes * 8):
+      raise AvbError('Key size of key ({} bits) does not match key size '
+                     '({} bits) of given algorithm {}.'
+                     .format(self.num_bits, algorithm.signature_num_bytes * 8,
+                             algorithm_name))
+
+    # Hashes the data.
+    hasher = hashlib.new(algorithm.hash_name)
+    hasher.update(data_to_sign)
+    digest = hasher.digest()
+
+    # Calculates the signature.
+    padding_and_hash = algorithm.padding + digest
+    p = None
+    if signing_helper_with_files is not None:
+      with tempfile.NamedTemporaryFile() as signing_file:
+        signing_file.write(padding_and_hash)
+        signing_file.flush()
+        p = subprocess.Popen([signing_helper_with_files, algorithm_name,
+                              self.key_path, signing_file.name])
+        retcode = p.wait()
+        if retcode != 0:
+          raise AvbError('Error signing')
+        signing_file.seek(0)
+        signature = signing_file.read()
+    else:
+      if signing_helper is not None:
+        p = subprocess.Popen(
+            [signing_helper, algorithm_name, self.key_path],
+            stdin=subprocess.PIPE,
+            stdout=subprocess.PIPE,
+            stderr=subprocess.PIPE)
+      else:
+        p = subprocess.Popen(
+            ['openssl', 'rsautl', '-sign', '-inkey', self.key_path, '-raw'],
+            stdin=subprocess.PIPE,
+            stdout=subprocess.PIPE,
+            stderr=subprocess.PIPE)
+      (pout, perr) = p.communicate(padding_and_hash)
+      retcode = p.wait()
+      if retcode != 0:
+        raise AvbError('Error signing: {}'.format(perr))
+      signature = pout
+    if len(signature) != algorithm.signature_num_bytes:
+      raise AvbError('Error signing: Invalid length of signature')
+    return signature
+
+
+def lookup_algorithm_by_type(alg_type):
+  """Looks up algorithm by type.
+
+  Arguments:
+    alg_type: The integer representing the type.
+
+  Returns:
+    A tuple with the algorithm name and an |Algorithm| instance.
+
+  Raises:
+    Exception: If the algorithm cannot be found
+  """
+  for alg_name in ALGORITHMS:
+    alg_data = ALGORITHMS[alg_name]
+    if alg_data.algorithm_type == alg_type:
+      return (alg_name, alg_data)
+  raise AvbError('Unknown algorithm type {}'.format(alg_type))
+
+
+def lookup_hash_size_by_type(alg_type):
+  """Looks up hash size by type.
+
+  Arguments:
+    alg_type: The integer representing the type.
+
+  Returns:
+    The corresponding hash size.
+
+  Raises:
+    AvbError: If the algorithm cannot be found.
+  """
+  for alg_name in ALGORITHMS:
+    alg_data = ALGORITHMS[alg_name]
+    if alg_data.algorithm_type == alg_type:
+      return alg_data.hash_num_bytes
+  raise AvbError('Unsupported algorithm type {}'.format(alg_type))
+
+
+def verify_vbmeta_signature(vbmeta_header, vbmeta_blob):
+  """Checks that signature in a vbmeta blob was made by the embedded public key.
+
+  Arguments:
+    vbmeta_header: A AvbVBMetaHeader.
+    vbmeta_blob: The whole vbmeta blob, including the header as bytes or
+        bytearray.
+
+  Returns:
+    True if the signature is valid and corresponds to the embedded
+    public key. Also returns True if the vbmeta blob is not signed.
+
+  Raises:
+    AvbError: If there errors calling out to openssl command during
+        signature verification.
+  """
+  (_, alg) = lookup_algorithm_by_type(vbmeta_header.algorithm_type)
+  if not alg.hash_name:
+    return True
+  header_blob = vbmeta_blob[0:256]
+  auth_offset = 256
+  aux_offset = auth_offset + vbmeta_header.authentication_data_block_size
+  aux_size = vbmeta_header.auxiliary_data_block_size
+  aux_blob = vbmeta_blob[aux_offset:aux_offset + aux_size]
+  pubkey_offset = aux_offset + vbmeta_header.public_key_offset
+  pubkey_size = vbmeta_header.public_key_size
+  pubkey_blob = vbmeta_blob[pubkey_offset:pubkey_offset + pubkey_size]
+
+  digest_offset = auth_offset + vbmeta_header.hash_offset
+  digest_size = vbmeta_header.hash_size
+  digest_blob = vbmeta_blob[digest_offset:digest_offset + digest_size]
+
+  sig_offset = auth_offset + vbmeta_header.signature_offset
+  sig_size = vbmeta_header.signature_size
+  sig_blob = vbmeta_blob[sig_offset:sig_offset + sig_size]
+
+  # Now that we've got the stored digest, public key, and signature
+  # all we need to do is to verify. This is the exactly the same
+  # steps as performed in the avb_vbmeta_image_verify() function in
+  # libavb/avb_vbmeta_image.c.
+
+  ha = hashlib.new(alg.hash_name)
+  ha.update(header_blob)
+  ha.update(aux_blob)
+  computed_digest = ha.digest()
+
+  if computed_digest != digest_blob:
+    return False
+
+  padding_and_digest = alg.padding + computed_digest
+
+  (num_bits,) = struct.unpack('!I', pubkey_blob[0:4])
+  modulus_blob = pubkey_blob[8:8 + num_bits//8]
+  modulus = decode_long(modulus_blob)
+  exponent = 65537
+
+  # We used to have this:
+  #
+  #  import Crypto.PublicKey.RSA
+  #  key = Crypto.PublicKey.RSA.construct((modulus, long(exponent)))
+  #  if not key.verify(decode_long(padding_and_digest),
+  #                    (decode_long(sig_blob), None)):
+  #    return False
+  #  return True
+  #
+  # but since 'avbtool verify_image' is used on the builders we don't want
+  # to rely on Crypto.PublicKey.RSA. Instead just use openssl(1) to verify.
+  asn1_str = ('asn1=SEQUENCE:pubkeyinfo\n'
+              '\n'
+              '[pubkeyinfo]\n'
+              'algorithm=SEQUENCE:rsa_alg\n'
+              'pubkey=BITWRAP,SEQUENCE:rsapubkey\n'
+              '\n'
+              '[rsa_alg]\n'
+              'algorithm=OID:rsaEncryption\n'
+              'parameter=NULL\n'
+              '\n'
+              '[rsapubkey]\n'
+              'n=INTEGER:{}\n'
+              'e=INTEGER:{}\n').format(hex(modulus).rstrip('L'),
+                                       hex(exponent).rstrip('L'))
+
+  with tempfile.NamedTemporaryFile() as asn1_tmpfile:
+    asn1_tmpfile.write(asn1_str.encode('ascii'))
+    asn1_tmpfile.flush()
+
+    with tempfile.NamedTemporaryFile() as der_tmpfile:
+      p = subprocess.Popen(
+          ['openssl', 'asn1parse', '-genconf', asn1_tmpfile.name, '-out',
+           der_tmpfile.name, '-noout'])
+      retcode = p.wait()
+      if retcode != 0:
+        raise AvbError('Error generating DER file')
+
+      p = subprocess.Popen(
+          ['openssl', 'rsautl', '-verify', '-pubin', '-inkey', der_tmpfile.name,
+           '-keyform', 'DER', '-raw'],
+          stdin=subprocess.PIPE,
+          stdout=subprocess.PIPE,
+          stderr=subprocess.PIPE)
+      (pout, perr) = p.communicate(sig_blob)
+      retcode = p.wait()
+      if retcode != 0:
+        raise AvbError('Error verifying data: {}'.format(perr))
+      if pout != padding_and_digest:
+        sys.stderr.write('Signature not correct\n')
+        return False
+  return True
+
+
+def create_avb_hashtree_hasher(algorithm, salt):
+  """Create the hasher for AVB hashtree based on the input algorithm."""
+
+  if algorithm.lower() == 'blake2b-256':
+    return hashlib.new('blake2b', salt, digest_size=32)
+
+  return hashlib.new(algorithm, salt)
+
+
+class ImageChunk(object):
+  """Data structure used for representing chunks in Android sparse files.
+
+  Attributes:
+    chunk_type: One of TYPE_RAW, TYPE_FILL, or TYPE_DONT_CARE.
+    chunk_offset: Offset in the sparse file where this chunk begins.
+    output_offset: Offset in de-sparsified file where output begins.
+    output_size: Number of bytes in output.
+    input_offset: Offset in sparse file for data if TYPE_RAW otherwise None.
+    fill_data: Blob with data to fill if TYPE_FILL otherwise None.
+  """
+
+  FORMAT = '<2H2I'
+  TYPE_RAW = 0xcac1
+  TYPE_FILL = 0xcac2
+  TYPE_DONT_CARE = 0xcac3
+  TYPE_CRC32 = 0xcac4
+
+  def __init__(self, chunk_type, chunk_offset, output_offset, output_size,
+               input_offset, fill_data):
+    """Initializes an ImageChunk object.
+
+    Arguments:
+      chunk_type: One of TYPE_RAW, TYPE_FILL, or TYPE_DONT_CARE.
+      chunk_offset: Offset in the sparse file where this chunk begins.
+      output_offset: Offset in de-sparsified file.
+      output_size: Number of bytes in output.
+      input_offset: Offset in sparse file if TYPE_RAW otherwise None.
+      fill_data: Blob as bytes with data to fill if TYPE_FILL otherwise None.
+
+    Raises:
+      ValueError: If given chunk parameters are invalid.
+    """
+    self.chunk_type = chunk_type
+    self.chunk_offset = chunk_offset
+    self.output_offset = output_offset
+    self.output_size = output_size
+    self.input_offset = input_offset
+    self.fill_data = fill_data
+    # Check invariants.
+    if self.chunk_type == self.TYPE_RAW:
+      if self.fill_data is not None:
+        raise ValueError('RAW chunk cannot have fill_data set.')
+      if not self.input_offset:
+        raise ValueError('RAW chunk must have input_offset set.')
+    elif self.chunk_type == self.TYPE_FILL:
+      if self.fill_data is None:
+        raise ValueError('FILL chunk must have fill_data set.')
+      if self.input_offset:
+        raise ValueError('FILL chunk cannot have input_offset set.')
+    elif self.chunk_type == self.TYPE_DONT_CARE:
+      if self.fill_data is not None:
+        raise ValueError('DONT_CARE chunk cannot have fill_data set.')
+      if self.input_offset:
+        raise ValueError('DONT_CARE chunk cannot have input_offset set.')
+    else:
+      raise ValueError('Invalid chunk type')
+
+
+class ImageHandler(object):
+  """Abstraction for image I/O with support for Android sparse images.
+
+  This class provides an interface for working with image files that
+  may be using the Android Sparse Image format. When an instance is
+  constructed, we test whether it's an Android sparse file. If so,
+  operations will be on the sparse file by interpreting the sparse
+  format, otherwise they will be directly on the file. Either way the
+  operations do the same.
+
+  For reading, this interface mimics a file object - it has seek(),
+  tell(), and read() methods. For writing, only truncation
+  (truncate()) and appending is supported (append_raw() and
+  append_dont_care()). Additionally, data can only be written in units
+  of the block size.
+
+  Attributes:
+    filename: Name of file.
+    is_sparse: Whether the file being operated on is sparse.
+    block_size: The block size, typically 4096.
+    image_size: The size of the unsparsified file.
+  """
+  # See system/core/libsparse/sparse_format.h for details.
+  MAGIC = 0xed26ff3a
+  HEADER_FORMAT = '<I4H4I'
+
+  # These are formats and offset of just the |total_chunks| and
+  # |total_blocks| fields.
+  NUM_CHUNKS_AND_BLOCKS_FORMAT = '<II'
+  NUM_CHUNKS_AND_BLOCKS_OFFSET = 16
+
+  def __init__(self, image_filename, read_only=False):
+    """Initializes an image handler.
+
+    Arguments:
+      image_filename: The name of the file to operate on.
+      read_only: True if file is only opened for read-only operations.
+
+    Raises:
+      ValueError: If data in the file is invalid.
+    """
+    self.filename = image_filename
+    self._num_total_blocks = 0
+    self._num_total_chunks = 0
+    self._file_pos = 0
+    self._read_only = read_only
+    self._read_header()
+
+  def _read_header(self):
+    """Initializes internal data structures used for reading file.
+
+    This may be called multiple times and is typically called after
+    modifying the file (e.g. appending, truncation).
+
+    Raises:
+      ValueError: If data in the file is invalid.
+    """
+    self.is_sparse = False
+    self.block_size = 4096
+    self._file_pos = 0
+    if self._read_only:
+      self._image = open(self.filename, 'rb')
+    else:
+      self._image = open(self.filename, 'r+b')
+    self._image.seek(0, os.SEEK_END)
+    self.image_size = self._image.tell()
+
+    self._image.seek(0, os.SEEK_SET)
+    header_bin = self._image.read(struct.calcsize(self.HEADER_FORMAT))
+    (magic, major_version, minor_version, file_hdr_sz, chunk_hdr_sz,
+     block_size, self._num_total_blocks, self._num_total_chunks,
+     _) = struct.unpack(self.HEADER_FORMAT, header_bin)
+    if magic != self.MAGIC:
+      # Not a sparse image, our job here is done.
+      return
+    if not (major_version == 1 and minor_version == 0):
+      raise ValueError('Encountered sparse image format version {}.{} but '
+                       'only 1.0 is supported'.format(major_version,
+                                                      minor_version))
+    if file_hdr_sz != struct.calcsize(self.HEADER_FORMAT):
+      raise ValueError('Unexpected file_hdr_sz value {}.'.
+                       format(file_hdr_sz))
+    if chunk_hdr_sz != struct.calcsize(ImageChunk.FORMAT):
+      raise ValueError('Unexpected chunk_hdr_sz value {}.'.
+                       format(chunk_hdr_sz))
+
+    self.block_size = block_size
+
+    # Build an list of chunks by parsing the file.
+    self._chunks = []
+
+    # Find the smallest offset where only "Don't care" chunks
+    # follow. This will be the size of the content in the sparse
+    # image.
+    offset = 0
+    output_offset = 0
+    for _ in range(1, self._num_total_chunks + 1):
+      chunk_offset = self._image.tell()
+
+      header_bin = self._image.read(struct.calcsize(ImageChunk.FORMAT))
+      (chunk_type, _, chunk_sz, total_sz) = struct.unpack(ImageChunk.FORMAT,
+                                                          header_bin)
+      data_sz = total_sz - struct.calcsize(ImageChunk.FORMAT)
+
+      if chunk_type == ImageChunk.TYPE_RAW:
+        if data_sz != (chunk_sz * self.block_size):
+          raise ValueError('Raw chunk input size ({}) does not match output '
+                           'size ({})'.
+                           format(data_sz, chunk_sz*self.block_size))
+        self._chunks.append(ImageChunk(ImageChunk.TYPE_RAW,
+                                       chunk_offset,
+                                       output_offset,
+                                       chunk_sz*self.block_size,
+                                       self._image.tell(),
+                                       None))
+        self._image.seek(data_sz, os.SEEK_CUR)
+
+      elif chunk_type == ImageChunk.TYPE_FILL:
+        if data_sz != 4:
+          raise ValueError('Fill chunk should have 4 bytes of fill, but this '
+                           'has {}'.format(data_sz))
+        fill_data = self._image.read(4)
+        self._chunks.append(ImageChunk(ImageChunk.TYPE_FILL,
+                                       chunk_offset,
+                                       output_offset,
+                                       chunk_sz*self.block_size,
+                                       None,
+                                       fill_data))
+      elif chunk_type == ImageChunk.TYPE_DONT_CARE:
+        if data_sz != 0:
+          raise ValueError('Don\'t care chunk input size is non-zero ({})'.
+                           format(data_sz))
+        self._chunks.append(ImageChunk(ImageChunk.TYPE_DONT_CARE,
+                                       chunk_offset,
+                                       output_offset,
+                                       chunk_sz*self.block_size,
+                                       None,
+                                       None))
+      elif chunk_type == ImageChunk.TYPE_CRC32:
+        if data_sz != 4:
+          raise ValueError('CRC32 chunk should have 4 bytes of CRC, but '
+                           'this has {}'.format(data_sz))
+        self._image.read(4)
+      else:
+        raise ValueError('Unknown chunk type {}'.format(chunk_type))
+
+      offset += chunk_sz
+      output_offset += chunk_sz*self.block_size
+
+    # Record where sparse data end.
+    self._sparse_end = self._image.tell()
+
+    # Now that we've traversed all chunks, sanity check.
+    if self._num_total_blocks != offset:
+      raise ValueError('The header said we should have {} output blocks, '
+                       'but we saw {}'.format(self._num_total_blocks, offset))
+    junk_len = len(self._image.read())
+    if junk_len > 0:
+      raise ValueError('There were {} bytes of extra data at the end of the '
+                       'file.'.format(junk_len))
+
+    # Assign |image_size|.
+    self.image_size = output_offset
+
+    # This is used when bisecting in read() to find the initial slice.
+    self._chunk_output_offsets = [i.output_offset for i in self._chunks]
+
+    self.is_sparse = True
+
+  def _update_chunks_and_blocks(self):
+    """Helper function to update the image header.
+
+    The the |total_chunks| and |total_blocks| fields in the header
+    will be set to value of the |_num_total_blocks| and
+    |_num_total_chunks| attributes.
+
+    """
+    self._image.seek(self.NUM_CHUNKS_AND_BLOCKS_OFFSET, os.SEEK_SET)
+    self._image.write(struct.pack(self.NUM_CHUNKS_AND_BLOCKS_FORMAT,
+                                  self._num_total_blocks,
+                                  self._num_total_chunks))
+
+  def append_dont_care(self, num_bytes):
+    """Appends a DONT_CARE chunk to the sparse file.
+
+    The given number of bytes must be a multiple of the block size.
+
+    Arguments:
+      num_bytes: Size in number of bytes of the DONT_CARE chunk.
+
+    Raises:
+      OSError: If ImageHandler was initialized in read-only mode.
+    """
+    assert num_bytes % self.block_size == 0
+
+    if self._read_only:
+      raise OSError('ImageHandler is in read-only mode.')
+
+    if not self.is_sparse:
+      self._image.seek(0, os.SEEK_END)
+      # This is more efficient that writing NUL bytes since it'll add
+      # a hole on file systems that support sparse files (native
+      # sparse, not Android sparse).
+      self._image.truncate(self._image.tell() + num_bytes)
+      self._read_header()
+      return
+
+    self._num_total_chunks += 1
+    self._num_total_blocks += num_bytes // self.block_size
+    self._update_chunks_and_blocks()
+
+    self._image.seek(self._sparse_end, os.SEEK_SET)
+    self._image.write(struct.pack(ImageChunk.FORMAT,
+                                  ImageChunk.TYPE_DONT_CARE,
+                                  0,  # Reserved
+                                  num_bytes // self.block_size,
+                                  struct.calcsize(ImageChunk.FORMAT)))
+    self._read_header()
+
+  def append_raw(self, data):
+    """Appends a RAW chunk to the sparse file.
+
+    The length of the given data must be a multiple of the block size.
+
+    Arguments:
+      data: Data to append as bytes.
+
+    Raises:
+      OSError: If ImageHandler was initialized in read-only mode.
+    """
+    assert len(data) % self.block_size == 0
+
+    if self._read_only:
+      raise OSError('ImageHandler is in read-only mode.')
+
+    if not self.is_sparse:
+      self._image.seek(0, os.SEEK_END)
+      self._image.write(data)
+      self._read_header()
+      return
+
+    self._num_total_chunks += 1
+    self._num_total_blocks += len(data) // self.block_size
+    self._update_chunks_and_blocks()
+
+    self._image.seek(self._sparse_end, os.SEEK_SET)
+    self._image.write(struct.pack(ImageChunk.FORMAT,
+                                  ImageChunk.TYPE_RAW,
+                                  0,  # Reserved
+                                  len(data) // self.block_size,
+                                  len(data) +
+                                  struct.calcsize(ImageChunk.FORMAT)))
+    self._image.write(data)
+    self._read_header()
+
+  def append_fill(self, fill_data, size):
+    """Appends a fill chunk to the sparse file.
+
+    The total length of the fill data must be a multiple of the block size.
+
+    Arguments:
+      fill_data: Fill data to append - must be four bytes.
+      size: Number of chunk - must be a multiple of four and the block size.
+
+    Raises:
+      OSError: If ImageHandler was initialized in read-only mode.
+    """
+    assert len(fill_data) == 4
+    assert size % 4 == 0
+    assert size % self.block_size == 0
+
+    if self._read_only:
+      raise OSError('ImageHandler is in read-only mode.')
+
+    if not self.is_sparse:
+      self._image.seek(0, os.SEEK_END)
+      self._image.write(fill_data * (size//4))
+      self._read_header()
+      return
+
+    self._num_total_chunks += 1
+    self._num_total_blocks += size // self.block_size
+    self._update_chunks_and_blocks()
+
+    self._image.seek(self._sparse_end, os.SEEK_SET)
+    self._image.write(struct.pack(ImageChunk.FORMAT,
+                                  ImageChunk.TYPE_FILL,
+                                  0,  # Reserved
+                                  size // self.block_size,
+                                  4 + struct.calcsize(ImageChunk.FORMAT)))
+    self._image.write(fill_data)
+    self._read_header()
+
+  def seek(self, offset):
+    """Sets the cursor position for reading from unsparsified file.
+
+    Arguments:
+      offset: Offset to seek to from the beginning of the file.
+
+    Raises:
+      RuntimeError: If the given offset is negative.
+    """
+    if offset < 0:
+      raise RuntimeError('Seeking with negative offset: {}'.format(offset))
+    self._file_pos = offset
+
+  def read(self, size):
+    """Reads data from the unsparsified file.
+
+    This method may return fewer than |size| bytes of data if the end
+    of the file was encountered.
+
+    The file cursor for reading is advanced by the number of bytes
+    read.
+
+    Arguments:
+      size: Number of bytes to read.
+
+    Returns:
+      The data as bytes.
+    """
+    if not self.is_sparse:
+      self._image.seek(self._file_pos)
+      data = self._image.read(size)
+      self._file_pos += len(data)
+      return data
+
+    # Iterate over all chunks.
+    chunk_idx = bisect.bisect_right(self._chunk_output_offsets,
+                                    self._file_pos) - 1
+    data = bytearray()
+    to_go = size
+    while to_go > 0:
+      chunk = self._chunks[chunk_idx]
+      chunk_pos_offset = self._file_pos - chunk.output_offset
+      chunk_pos_to_go = min(chunk.output_size - chunk_pos_offset, to_go)
+
+      if chunk.chunk_type == ImageChunk.TYPE_RAW:
+        self._image.seek(chunk.input_offset + chunk_pos_offset)
+        data.extend(self._image.read(chunk_pos_to_go))
+      elif chunk.chunk_type == ImageChunk.TYPE_FILL:
+        all_data = chunk.fill_data*(chunk_pos_to_go // len(chunk.fill_data) + 2)
+        offset_mod = chunk_pos_offset % len(chunk.fill_data)
+        data.extend(all_data[offset_mod:(offset_mod + chunk_pos_to_go)])
+      else:
+        assert chunk.chunk_type == ImageChunk.TYPE_DONT_CARE
+        data.extend(b'\0' * chunk_pos_to_go)
+
+      to_go -= chunk_pos_to_go
+      self._file_pos += chunk_pos_to_go
+      chunk_idx += 1
+      # Generate partial read in case of EOF.
+      if chunk_idx >= len(self._chunks):
+        break
+
+    return bytes(data)
+
+  def tell(self):
+    """Returns the file cursor position for reading from unsparsified file.
+
+    Returns:
+      The file cursor position for reading.
+    """
+    return self._file_pos
+
+  def truncate(self, size):
+    """Truncates the unsparsified file.
+
+    Arguments:
+      size: Desired size of unsparsified file.
+
+    Raises:
+      ValueError: If desired size isn't a multiple of the block size.
+      OSError: If ImageHandler was initialized in read-only mode.
+    """
+    if self._read_only:
+      raise OSError('ImageHandler is in read-only mode.')
+
+    if not self.is_sparse:
+      self._image.truncate(size)
+      self._read_header()
+      return
+
+    if size % self.block_size != 0:
+      raise ValueError('Cannot truncate to a size which is not a multiple '
+                       'of the block size')
+
+    if size == self.image_size:
+      # Trivial where there's nothing to do.
+      return
+
+    if size < self.image_size:
+      chunk_idx = bisect.bisect_right(self._chunk_output_offsets, size) - 1
+      chunk = self._chunks[chunk_idx]
+      if chunk.output_offset != size:
+        # Truncation in the middle of a trunk - need to keep the chunk
+        # and modify it.
+        chunk_idx_for_update = chunk_idx + 1
+        num_to_keep = size - chunk.output_offset
+        assert num_to_keep % self.block_size == 0
+        if chunk.chunk_type == ImageChunk.TYPE_RAW:
+          truncate_at = (chunk.chunk_offset +
+                         struct.calcsize(ImageChunk.FORMAT) + num_to_keep)
+          data_sz = num_to_keep
+        elif chunk.chunk_type == ImageChunk.TYPE_FILL:
+          truncate_at = (chunk.chunk_offset +
+                         struct.calcsize(ImageChunk.FORMAT) + 4)
+          data_sz = 4
+        else:
+          assert chunk.chunk_type == ImageChunk.TYPE_DONT_CARE
+          truncate_at = chunk.chunk_offset + struct.calcsize(ImageChunk.FORMAT)
+          data_sz = 0
+        chunk_sz = num_to_keep // self.block_size
+        total_sz = data_sz + struct.calcsize(ImageChunk.FORMAT)
+        self._image.seek(chunk.chunk_offset)
+        self._image.write(struct.pack(ImageChunk.FORMAT,
+                                      chunk.chunk_type,
+                                      0,  # Reserved
+                                      chunk_sz,
+                                      total_sz))
+        chunk.output_size = num_to_keep
+      else:
+        # Truncation at trunk boundary.
+        truncate_at = chunk.chunk_offset
+        chunk_idx_for_update = chunk_idx
+
+      self._num_total_chunks = chunk_idx_for_update
+      self._num_total_blocks = 0
+      for i in range(0, chunk_idx_for_update):
+        self._num_total_blocks += self._chunks[i].output_size // self.block_size
+      self._update_chunks_and_blocks()
+      self._image.truncate(truncate_at)
+
+      # We've modified the file so re-read all data.
+      self._read_header()
+    else:
+      # Truncating to grow - just add a DONT_CARE section.
+      self.append_dont_care(size - self.image_size)
+
+
+class AvbDescriptor(object):
+  """Class for AVB descriptor.
+
+  See the |AvbDescriptor| C struct for more information.
+
+  Attributes:
+    tag: The tag identifying what kind of descriptor this is.
+    data: The data in the descriptor.
+  """
+
+  SIZE = 16
+  FORMAT_STRING = ('!QQ')  # tag, num_bytes_following (descriptor header)
+
+  def __init__(self, data):
+    """Initializes a new property descriptor.
+
+    Arguments:
+      data: If not None, must be a bytearray().
+
+    Raises:
+      LookupError: If the given descriptor is malformed.
+    """
+    assert struct.calcsize(self.FORMAT_STRING) == self.SIZE
+
+    if data:
+      (self.tag, num_bytes_following) = (
+          struct.unpack(self.FORMAT_STRING, data[0:self.SIZE]))
+      self.data = data[self.SIZE:self.SIZE + num_bytes_following]
+    else:
+      self.tag = None
+      self.data = None
+
+  def print_desc(self, o):
+    """Print the descriptor.
+
+    Arguments:
+      o: The object to write the output to.
+    """
+    o.write('    Unknown descriptor:\n')
+    o.write('      Tag:  {}\n'.format(self.tag))
+    if len(self.data) < 256:
+      o.write('      Data: {} ({} bytes)\n'.format(
+          repr(str(self.data)), len(self.data)))
+    else:
+      o.write('      Data: {} bytes\n'.format(len(self.data)))
+
+  def encode(self):
+    """Serializes the descriptor.
+
+    Returns:
+      A bytearray() with the descriptor data.
+    """
+    num_bytes_following = len(self.data)
+    nbf_with_padding = round_to_multiple(num_bytes_following, 8)
+    padding_size = nbf_with_padding - num_bytes_following
+    desc = struct.pack(self.FORMAT_STRING, self.tag, nbf_with_padding)
+    padding = struct.pack(str(padding_size) + 'x')
+    ret = desc + self.data + padding
+    return bytearray(ret)
+
+  def verify(self, image_dir, image_ext, expected_chain_partitions_map,
+             image_containing_descriptor, accept_zeroed_hashtree):
+    """Verifies contents of the descriptor - used in verify_image sub-command.
+
+    Arguments:
+      image_dir: The directory of the file being verified.
+      image_ext: The extension of the file being verified (e.g. '.img').
+      expected_chain_partitions_map: A map from partition name to the
+          tuple (rollback_index_location, key_blob).
+      image_containing_descriptor: The image the descriptor is in.
+      accept_zeroed_hashtree: If True, don't fail if hashtree or FEC data is
+          zeroed out.
+
+    Returns:
+      True if the descriptor verifies, False otherwise.
+    """
+    # Deletes unused parameters to prevent pylint warning unused-argument.
+    del image_dir, image_ext, expected_chain_partitions_map
+    del image_containing_descriptor, accept_zeroed_hashtree
+
+    # Nothing to do.
+    return True
+
+
+class AvbPropertyDescriptor(AvbDescriptor):
+  """A class for property descriptors.
+
+  See the |AvbPropertyDescriptor| C struct for more information.
+
+  Attributes:
+    key: The key as string.
+    value: The value as bytes.
+  """
+
+  TAG = 0
+  SIZE = 32
+  FORMAT_STRING = ('!QQ'  # tag, num_bytes_following (descriptor header)
+                   'Q'    # key size (bytes)
+                   'Q')   # value size (bytes)
+
+  def __init__(self, data=None):
+    """Initializes a new property descriptor.
+
+    Arguments:
+      data: If not None, must be as bytes of size |SIZE|.
+
+    Raises:
+      LookupError: If the given descriptor is malformed.
+    """
+    super().__init__(None)
+    assert struct.calcsize(self.FORMAT_STRING) == self.SIZE
+
+    if data:
+      (tag, num_bytes_following, key_size,
+       value_size) = struct.unpack(self.FORMAT_STRING, data[0:self.SIZE])
+      expected_size = round_to_multiple(
+          self.SIZE - 16 + key_size + 1 + value_size + 1, 8)
+      if tag != self.TAG or num_bytes_following != expected_size:
+        raise LookupError('Given data does not look like a property '
+                          'descriptor.')
+      try:
+        self.key = data[self.SIZE:(self.SIZE + key_size)].decode('utf-8')
+      except UnicodeDecodeError as e:
+        raise LookupError('Key cannot be decoded as UTF-8: {}.'
+                          .format(e)) from e
+      self.value = data[(self.SIZE + key_size + 1):(self.SIZE + key_size + 1 +
+                                                    value_size)]
+    else:
+      self.key = ''
+      self.value = b''
+
+  def print_desc(self, o):
+    """Print the descriptor.
+
+    Arguments:
+      o: The object to write the output to.
+    """
+    # Go forward with python 3, bytes are represented with the 'b' prefix,
+    # e.g. b'foobar'. Thus, we trim off the 'b' to keep the print output
+    # the same between python 2 and python 3.
+    printable_value = repr(self.value)
+    if printable_value.startswith('b\''):
+      printable_value = printable_value[1:]
+
+    if len(self.value) < 256:
+      o.write('    Prop: {} -> {}\n'.format(self.key, printable_value))
+    else:
+      o.write('    Prop: {} -> ({} bytes)\n'.format(self.key, len(self.value)))
+
+  def encode(self):
+    """Serializes the descriptor.
+
+    Returns:
+      The descriptor data as bytes.
+    """
+    key_encoded = self.key.encode('utf-8')
+    num_bytes_following = (
+        self.SIZE + len(key_encoded) + len(self.value) + 2 - 16)
+    nbf_with_padding = round_to_multiple(num_bytes_following, 8)
+    padding_size = nbf_with_padding - num_bytes_following
+    desc = struct.pack(self.FORMAT_STRING, self.TAG, nbf_with_padding,
+                       len(key_encoded), len(self.value))
+    ret = (desc + key_encoded + b'\0' + self.value + b'\0' +
+           padding_size * b'\0')
+    return ret
+
+  def verify(self, image_dir, image_ext, expected_chain_partitions_map,
+             image_containing_descriptor, accept_zeroed_hashtree):
+    """Verifies contents of the descriptor - used in verify_image sub-command.
+
+    Arguments:
+      image_dir: The directory of the file being verified.
+      image_ext: The extension of the file being verified (e.g. '.img').
+      expected_chain_partitions_map: A map from partition name to the
+          tuple (rollback_index_location, key_blob).
+      image_containing_descriptor: The image the descriptor is in.
+      accept_zeroed_hashtree: If True, don't fail if hashtree or FEC data is
+          zeroed out.
+
+    Returns:
+      True if the descriptor verifies, False otherwise.
+    """
+    # Nothing to do.
+    return True
+
+
+class AvbHashtreeDescriptor(AvbDescriptor):
+  """A class for hashtree descriptors.
+
+  See the |AvbHashtreeDescriptor| C struct for more information.
+
+  Attributes:
+    dm_verity_version: dm-verity version used.
+    image_size: Size of the image, after rounding up to |block_size|.
+    tree_offset: Offset of the hash tree in the file.
+    tree_size: Size of the tree.
+    data_block_size: Data block size.
+    hash_block_size: Hash block size.
+    fec_num_roots: Number of roots used for FEC (0 if FEC is not used).
+    fec_offset: Offset of FEC data (0 if FEC is not used).
+    fec_size: Size of FEC data (0 if FEC is not used).
+    hash_algorithm: Hash algorithm used as string.
+    partition_name: Partition name as string.
+    salt: Salt used as bytes.
+    root_digest: Root digest as bytes.
+    flags: Descriptor flags (see avb_hashtree_descriptor.h).
+  """
+
+  TAG = 1
+  RESERVED = 60
+  SIZE = 120 + RESERVED
+  FORMAT_STRING = ('!QQ'  # tag, num_bytes_following (descriptor header)
+                   'L'    # dm-verity version used
+                   'Q'    # image size (bytes)
+                   'Q'    # tree offset (bytes)
+                   'Q'    # tree size (bytes)
+                   'L'    # data block size (bytes)
+                   'L'    # hash block size (bytes)
+                   'L'    # FEC number of roots
+                   'Q'    # FEC offset (bytes)
+                   'Q'    # FEC size (bytes)
+                   '32s'  # hash algorithm used
+                   'L'    # partition name (bytes)
+                   'L'    # salt length (bytes)
+                   'L'    # root digest length (bytes)
+                   'L' +  # flags
+                   str(RESERVED) + 's')  # reserved
+
+  FLAGS_DO_NOT_USE_AB = (1 << 0)
+  FLAGS_CHECK_AT_MOST_ONCE = (1 << 1)
+
+  def __init__(self, data=None):
+    """Initializes a new hashtree descriptor.
+
+    Arguments:
+      data: If not None, must be bytes of size |SIZE|.
+
+    Raises:
+      LookupError: If the given descriptor is malformed.
+    """
+    super().__init__(None)
+    assert struct.calcsize(self.FORMAT_STRING) == self.SIZE
+
+    if data:
+      (tag, num_bytes_following, self.dm_verity_version, self.image_size,
+       self.tree_offset, self.tree_size, self.data_block_size,
+       self.hash_block_size, self.fec_num_roots, self.fec_offset, self.fec_size,
+       self.hash_algorithm, partition_name_len, salt_len,
+       root_digest_len, self.flags, _) = struct.unpack(self.FORMAT_STRING,
+                                                       data[0:self.SIZE])
+      expected_size = round_to_multiple(
+          self.SIZE - 16 + partition_name_len + salt_len + root_digest_len, 8)
+      if tag != self.TAG or num_bytes_following != expected_size:
+        raise LookupError('Given data does not look like a hashtree '
+                          'descriptor.')
+      # Nuke NUL-bytes at the end.
+      self.hash_algorithm = self.hash_algorithm.rstrip(b'\0').decode('ascii')
+      o = 0
+      try:
+        self.partition_name = data[
+            (self.SIZE + o):(self.SIZE + o + partition_name_len)
+        ].decode('utf-8')
+      except UnicodeDecodeError as e:
+        raise LookupError('Partition name cannot be decoded as UTF-8: {}.'
+                          .format(e)) from e
+      o += partition_name_len
+      self.salt = data[(self.SIZE + o):(self.SIZE + o + salt_len)]
+      o += salt_len
+      self.root_digest = data[(self.SIZE + o):(self.SIZE + o + root_digest_len)]
+
+      if root_digest_len != self._hashtree_digest_size():
+        if root_digest_len != 0:
+          raise LookupError('root_digest_len doesn\'t match hash algorithm')
+
+    else:
+      self.dm_verity_version = 0
+      self.image_size = 0
+      self.tree_offset = 0
+      self.tree_size = 0
+      self.data_block_size = 0
+      self.hash_block_size = 0
+      self.fec_num_roots = 0
+      self.fec_offset = 0
+      self.fec_size = 0
+      self.hash_algorithm = ''
+      self.partition_name = ''
+      self.salt = b''
+      self.root_digest = b''
+      self.flags = 0
+
+  def _hashtree_digest_size(self):
+    return len(create_avb_hashtree_hasher(self.hash_algorithm, b'').digest())
+
+  def print_desc(self, o):
+    """Print the descriptor.
+
+    Arguments:
+      o: The object to write the output to.
+    """
+    o.write('    Hashtree descriptor:\n')
+    o.write('      Version of dm-verity:  {}\n'.format(self.dm_verity_version))
+    o.write('      Image Size:            {} bytes\n'.format(self.image_size))
+    o.write('      Tree Offset:           {}\n'.format(self.tree_offset))
+    o.write('      Tree Size:             {} bytes\n'.format(self.tree_size))
+    o.write('      Data Block Size:       {} bytes\n'.format(
+        self.data_block_size))
+    o.write('      Hash Block Size:       {} bytes\n'.format(
+        self.hash_block_size))
+    o.write('      FEC num roots:         {}\n'.format(self.fec_num_roots))
+    o.write('      FEC offset:            {}\n'.format(self.fec_offset))
+    o.write('      FEC size:              {} bytes\n'.format(self.fec_size))
+    o.write('      Hash Algorithm:        {}\n'.format(self.hash_algorithm))
+    o.write('      Partition Name:        {}\n'.format(self.partition_name))
+    o.write('      Salt:                  {}\n'.format(self.salt.hex()))
+    o.write('      Root Digest:           {}\n'.format(self.root_digest.hex()))
+    o.write('      Flags:                 {}\n'.format(self.flags))
+
+  def encode(self):
+    """Serializes the descriptor.
+
+    Returns:
+      The descriptor data as bytes.
+    """
+    hash_algorithm_encoded = self.hash_algorithm.encode('ascii')
+    partition_name_encoded = self.partition_name.encode('utf-8')
+    num_bytes_following = (self.SIZE + len(partition_name_encoded)
+                           + len(self.salt) + len(self.root_digest) - 16)
+    nbf_with_padding = round_to_multiple(num_bytes_following, 8)
+    padding_size = nbf_with_padding - num_bytes_following
+    desc = struct.pack(self.FORMAT_STRING, self.TAG, nbf_with_padding,
+                       self.dm_verity_version, self.image_size,
+                       self.tree_offset, self.tree_size, self.data_block_size,
+                       self.hash_block_size, self.fec_num_roots,
+                       self.fec_offset, self.fec_size, hash_algorithm_encoded,
+                       len(partition_name_encoded), len(self.salt),
+                       len(self.root_digest), self.flags, self.RESERVED * b'\0')
+    ret = (desc + partition_name_encoded + self.salt + self.root_digest +
+           padding_size * b'\0')
+    return ret
+
+  def verify(self, image_dir, image_ext, expected_chain_partitions_map,
+             image_containing_descriptor, accept_zeroed_hashtree):
+    """Verifies contents of the descriptor - used in verify_image sub-command.
+
+    Arguments:
+      image_dir: The directory of the file being verified.
+      image_ext: The extension of the file being verified (e.g. '.img').
+      expected_chain_partitions_map: A map from partition name to the
+          tuple (rollback_index_location, key_blob).
+      image_containing_descriptor: The image the descriptor is in.
+      accept_zeroed_hashtree: If True, don't fail if hashtree or FEC data is
+          zeroed out.
+
+    Returns:
+      True if the descriptor verifies, False otherwise.
+    """
+    if not self.partition_name:
+      image_filename = image_containing_descriptor.filename
+      image = image_containing_descriptor
+    else:
+      image_filename = os.path.join(image_dir, self.partition_name + image_ext)
+      image = ImageHandler(image_filename, read_only=True)
+    # Generate the hashtree and checks that it matches what's in the file.
+    digest_size = self._hashtree_digest_size()
+    digest_padding = round_to_pow2(digest_size) - digest_size
+    (hash_level_offsets, tree_size) = calc_hash_level_offsets(
+        self.image_size, self.data_block_size, digest_size + digest_padding)
+    root_digest, hash_tree = generate_hash_tree(image, self.image_size,
+                                                self.data_block_size,
+                                                self.hash_algorithm, self.salt,
+                                                digest_padding,
+                                                hash_level_offsets,
+                                                tree_size)
+    # The root digest must match unless it is not embedded in the descriptor.
+    if self.root_digest and root_digest != self.root_digest:
+      sys.stderr.write('hashtree of {} does not match descriptor\n'.
+                       format(image_filename))
+      return False
+    # ... also check that the on-disk hashtree matches
+    image.seek(self.tree_offset)
+    hash_tree_ondisk = image.read(self.tree_size)
+    is_zeroed = (self.tree_size == 0) or (hash_tree_ondisk[0:8] == b'ZeRoHaSH')
+    if is_zeroed and accept_zeroed_hashtree:
+      print('{}: skipping verification since hashtree is zeroed and '
+            '--accept_zeroed_hashtree was given'
+            .format(self.partition_name))
+    else:
+      if hash_tree != hash_tree_ondisk:
+        sys.stderr.write('hashtree of {} contains invalid data\n'.
+                         format(image_filename))
+        return False
+      print('{}: Successfully verified {} hashtree of {} for image of {} bytes'
+            .format(self.partition_name, self.hash_algorithm, image.filename,
+                    self.image_size))
+    # TODO(zeuthen): we could also verify that the FEC stored in the image is
+    # correct but this a) currently requires the 'fec' binary; and b) takes a
+    # long time; and c) is not strictly needed for verification purposes as
+    # we've already verified the root hash.
+    return True
+
+
+class AvbHashDescriptor(AvbDescriptor):
+  """A class for hash descriptors.
+
+  See the |AvbHashDescriptor| C struct for more information.
+
+  Attributes:
+    image_size: Image size, in bytes.
+    hash_algorithm: Hash algorithm used as string.
+    partition_name: Partition name as string.
+    salt: Salt used as bytes.
+    digest: The hash value of salt and data combined as bytes.
+    flags: The descriptor flags (see avb_hash_descriptor.h).
+  """
+
+  TAG = 2
+  RESERVED = 60
+  SIZE = 72 + RESERVED
+  FORMAT_STRING = ('!QQ'  # tag, num_bytes_following (descriptor header)
+                   'Q'    # image size (bytes)
+                   '32s'  # hash algorithm used
+                   'L'    # partition name (bytes)
+                   'L'    # salt length (bytes)
+                   'L'    # digest length (bytes)
+                   'L' +  # flags
+                   str(RESERVED) + 's')  # reserved
+
+  def __init__(self, data=None):
+    """Initializes a new hash descriptor.
+
+    Arguments:
+      data: If not None, must be bytes of size |SIZE|.
+
+    Raises:
+      LookupError: If the given descriptor is malformed.
+    """
+    super().__init__(None)
+    assert struct.calcsize(self.FORMAT_STRING) == self.SIZE
+
+    if data:
+      (tag, num_bytes_following, self.image_size, self.hash_algorithm,
+       partition_name_len, salt_len,
+       digest_len, self.flags, _) = struct.unpack(self.FORMAT_STRING,
+                                                  data[0:self.SIZE])
+      expected_size = round_to_multiple(
+          self.SIZE - 16 + partition_name_len + salt_len + digest_len, 8)
+      if tag != self.TAG or num_bytes_following != expected_size:
+        raise LookupError('Given data does not look like a hash descriptor.')
+      # Nuke NUL-bytes at the end.
+      self.hash_algorithm = self.hash_algorithm.rstrip(b'\0').decode('ascii')
+      o = 0
+      try:
+        self.partition_name = data[
+            (self.SIZE + o):(self.SIZE + o + partition_name_len)
+        ].decode('utf-8')
+      except UnicodeDecodeError as e:
+        raise LookupError('Partition name cannot be decoded as UTF-8: {}.'
+                          .format(e)) from e
+      o += partition_name_len
+      self.salt = data[(self.SIZE + o):(self.SIZE + o + salt_len)]
+      o += salt_len
+      self.digest = data[(self.SIZE + o):(self.SIZE + o + digest_len)]
+      if digest_len != len(hashlib.new(self.hash_algorithm).digest()):
+        if digest_len != 0:
+          raise LookupError('digest_len doesn\'t match hash algorithm')
+
+    else:
+      self.image_size = 0
+      self.hash_algorithm = ''
+      self.partition_name = ''
+      self.salt = b''
+      self.digest = b''
+      self.flags = 0
+
+  def print_desc(self, o):
+    """Print the descriptor.
+
+    Arguments:
+      o: The object to write the output to.
+    """
+    o.write('    Hash descriptor:\n')
+    o.write('      Image Size:            {} bytes\n'.format(self.image_size))
+    o.write('      Hash Algorithm:        {}\n'.format(self.hash_algorithm))
+    o.write('      Partition Name:        {}\n'.format(self.partition_name))
+    o.write('      Salt:                  {}\n'.format(self.salt.hex()))
+    o.write('      Digest:                {}\n'.format(self.digest.hex()))
+    o.write('      Flags:                 {}\n'.format(self.flags))
+
+  def encode(self):
+    """Serializes the descriptor.
+
+    Returns:
+      The descriptor data as bytes.
+    """
+    hash_algorithm_encoded = self.hash_algorithm.encode('ascii')
+    partition_name_encoded = self.partition_name.encode('utf-8')
+    num_bytes_following = (self.SIZE + len(partition_name_encoded) +
+                           len(self.salt) + len(self.digest) - 16)
+    nbf_with_padding = round_to_multiple(num_bytes_following, 8)
+    padding_size = nbf_with_padding - num_bytes_following
+    desc = struct.pack(self.FORMAT_STRING, self.TAG, nbf_with_padding,
+                       self.image_size, hash_algorithm_encoded,
+                       len(partition_name_encoded), len(self.salt),
+                       len(self.digest), self.flags, self.RESERVED * b'\0')
+    ret = (desc + partition_name_encoded + self.salt + self.digest +
+           padding_size * b'\0')
+    return ret
+
+  def verify(self, image_dir, image_ext, expected_chain_partitions_map,
+             image_containing_descriptor, accept_zeroed_hashtree):
+    """Verifies contents of the descriptor - used in verify_image sub-command.
+
+    Arguments:
+      image_dir: The directory of the file being verified.
+      image_ext: The extension of the file being verified (e.g. '.img').
+      expected_chain_partitions_map: A map from partition name to the
+          tuple (rollback_index_location, key_blob).
+      image_containing_descriptor: The image the descriptor is in.
+      accept_zeroed_hashtree: If True, don't fail if hashtree or FEC data is
+          zeroed out.
+
+    Returns:
+      True if the descriptor verifies, False otherwise.
+    """
+    if not self.partition_name:
+      image_filename = image_containing_descriptor.filename
+      image = image_containing_descriptor
+    else:
+      image_filename = os.path.join(image_dir, self.partition_name + image_ext)
+      image = ImageHandler(image_filename, read_only=True)
+    data = image.read(self.image_size)
+    ha = hashlib.new(self.hash_algorithm)
+    ha.update(self.salt)
+    ha.update(data)
+    digest = ha.digest()
+    # The digest must match unless there is no digest in the descriptor.
+    if self.digest and digest != self.digest:
+      sys.stderr.write('{} digest of {} does not match digest in descriptor\n'.
+                       format(self.hash_algorithm, image_filename))
+      return False
+    print('{}: Successfully verified {} hash of {} for image of {} bytes'
+          .format(self.partition_name, self.hash_algorithm, image.filename,
+                  self.image_size))
+    return True
+
+
+class AvbKernelCmdlineDescriptor(AvbDescriptor):
+  """A class for kernel command-line descriptors.
+
+  See the |AvbKernelCmdlineDescriptor| C struct for more information.
+
+  Attributes:
+    flags: Flags.
+    kernel_cmdline: The kernel command-line as string.
+  """
+
+  TAG = 3
+  SIZE = 24
+  FORMAT_STRING = ('!QQ'  # tag, num_bytes_following (descriptor header)
+                   'L'    # flags
+                   'L')   # cmdline length (bytes)
+
+  FLAGS_USE_ONLY_IF_HASHTREE_NOT_DISABLED = (1 << 0)
+  FLAGS_USE_ONLY_IF_HASHTREE_DISABLED = (1 << 1)
+
+  def __init__(self, data=None):
+    """Initializes a new kernel cmdline descriptor.
+
+    Arguments:
+      data: If not None, must be bytes of size |SIZE|.
+
+    Raises:
+      LookupError: If the given descriptor is malformed.
+    """
+    super().__init__(None)
+    assert struct.calcsize(self.FORMAT_STRING) == self.SIZE
+
+    if data:
+      (tag, num_bytes_following, self.flags, kernel_cmdline_length) = (
+          struct.unpack(self.FORMAT_STRING, data[0:self.SIZE]))
+      expected_size = round_to_multiple(self.SIZE - 16 + kernel_cmdline_length,
+                                        8)
+      if tag != self.TAG or num_bytes_following != expected_size:
+        raise LookupError('Given data does not look like a kernel cmdline '
+                          'descriptor.')
+      # Nuke NUL-bytes at the end.
+      try:
+        self.kernel_cmdline = data[
+            self.SIZE:(self.SIZE + kernel_cmdline_length)].decode('utf-8')
+      except UnicodeDecodeError as e:
+        raise LookupError('Kernel command-line cannot be decoded as UTF-8: {}.'
+                          .format(e)) from e
+    else:
+      self.flags = 0
+      self.kernel_cmdline = ''
+
+  def print_desc(self, o):
+    """Print the descriptor.
+
+    Arguments:
+      o: The object to write the output to.
+    """
+    o.write('    Kernel Cmdline descriptor:\n')
+    o.write('      Flags:                 {}\n'.format(self.flags))
+    o.write('      Kernel Cmdline:        \'{}\'\n'.format(self.kernel_cmdline))
+
+  def encode(self):
+    """Serializes the descriptor.
+
+    Returns:
+      The descriptor data as bytes.
+    """
+    kernel_cmd_encoded = self.kernel_cmdline.encode('utf-8')
+    num_bytes_following = (self.SIZE + len(kernel_cmd_encoded) - 16)
+    nbf_with_padding = round_to_multiple(num_bytes_following, 8)
+    padding_size = nbf_with_padding - num_bytes_following
+    desc = struct.pack(self.FORMAT_STRING, self.TAG, nbf_with_padding,
+                       self.flags, len(kernel_cmd_encoded))
+    ret = desc + kernel_cmd_encoded + padding_size * b'\0'
+    return ret
+
+  def verify(self, image_dir, image_ext, expected_chain_partitions_map,
+             image_containing_descriptor, accept_zeroed_hashtree):
+    """Verifies contents of the descriptor - used in verify_image sub-command.
+
+    Arguments:
+      image_dir: The directory of the file being verified.
+      image_ext: The extension of the file being verified (e.g. '.img').
+      expected_chain_partitions_map: A map from partition name to the
+          tuple (rollback_index_location, key_blob).
+      image_containing_descriptor: The image the descriptor is in.
+      accept_zeroed_hashtree: If True, don't fail if hashtree or FEC data is
+          zeroed out.
+
+    Returns:
+      True if the descriptor verifies, False otherwise.
+    """
+    # Nothing to verify.
+    return True
+
+
+class AvbChainPartitionDescriptor(AvbDescriptor):
+  """A class for chained partition descriptors.
+
+  See the |AvbChainPartitionDescriptor| C struct for more information.
+
+  Attributes:
+    rollback_index_location: The rollback index location to use.
+    partition_name: Partition name as string.
+    public_key: The public key as bytes.
+  """
+
+  TAG = 4
+  RESERVED = 64
+  SIZE = 28 + RESERVED
+  FORMAT_STRING = ('!QQ'  # tag, num_bytes_following (descriptor header)
+                   'L'    # rollback_index_location
+                   'L'    # partition_name_size (bytes)
+                   'L' +  # public_key_size (bytes)
+                   str(RESERVED) + 's')  # reserved
+
+  def __init__(self, data=None):
+    """Initializes a new chain partition descriptor.
+
+    Arguments:
+      data: If not None, must be a bytearray of size |SIZE|.
+
+    Raises:
+      LookupError: If the given descriptor is malformed.
+    """
+    AvbDescriptor.__init__(self, None)
+    assert struct.calcsize(self.FORMAT_STRING) == self.SIZE
+
+    if data:
+      (tag, num_bytes_following, self.rollback_index_location,
+       partition_name_len,
+       public_key_len, _) = struct.unpack(self.FORMAT_STRING, data[0:self.SIZE])
+      expected_size = round_to_multiple(
+          self.SIZE - 16 + partition_name_len + public_key_len, 8)
+      if tag != self.TAG or num_bytes_following != expected_size:
+        raise LookupError('Given data does not look like a chain partition '
+                          'descriptor.')
+      o = 0
+      try:
+        self.partition_name = data[
+            (self.SIZE + o):(self.SIZE + o + partition_name_len)
+        ].decode('utf-8')
+      except UnicodeDecodeError as e:
+        raise LookupError('Partition name cannot be decoded as UTF-8: {}.'
+                          .format(e)) from e
+      o += partition_name_len
+      self.public_key = data[(self.SIZE + o):(self.SIZE + o + public_key_len)]
+
+    else:
+      self.rollback_index_location = 0
+      self.partition_name = ''
+      self.public_key = b''
+
+  def print_desc(self, o):
+    """Print the descriptor.
+
+    Arguments:
+      o: The object to write the output to.
+    """
+    o.write('    Chain Partition descriptor:\n')
+    o.write('      Partition Name:          {}\n'.format(self.partition_name))
+    o.write('      Rollback Index Location: {}\n'.format(
+        self.rollback_index_location))
+    # Just show the SHA1 of the key, for size reasons.
+    pubkey_digest = hashlib.sha1(self.public_key).hexdigest()
+    o.write('      Public key (sha1):       {}\n'.format(pubkey_digest))
+
+  def encode(self):
+    """Serializes the descriptor.
+
+    Returns:
+      The descriptor data as bytes.
+    """
+    partition_name_encoded = self.partition_name.encode('utf-8')
+    num_bytes_following = (
+        self.SIZE + len(partition_name_encoded) + len(self.public_key) - 16)
+    nbf_with_padding = round_to_multiple(num_bytes_following, 8)
+    padding_size = nbf_with_padding - num_bytes_following
+    desc = struct.pack(self.FORMAT_STRING, self.TAG, nbf_with_padding,
+                       self.rollback_index_location,
+                       len(partition_name_encoded), len(self.public_key),
+                       self.RESERVED * b'\0')
+    ret = desc + partition_name_encoded + self.public_key + padding_size * b'\0'
+    return ret
+
+  def verify(self, image_dir, image_ext, expected_chain_partitions_map,
+             image_containing_descriptor, accept_zeroed_hashtree):
+    """Verifies contents of the descriptor - used in verify_image sub-command.
+
+    Arguments:
+      image_dir: The directory of the file being verified.
+      image_ext: The extension of the file being verified (e.g. '.img').
+      expected_chain_partitions_map: A map from partition name to the
+          tuple (rollback_index_location, key_blob).
+      image_containing_descriptor: The image the descriptor is in.
+      accept_zeroed_hashtree: If True, don't fail if hashtree or FEC data is
+          zeroed out.
+
+    Returns:
+      True if the descriptor verifies, False otherwise.
+    """
+    value = expected_chain_partitions_map.get(self.partition_name)
+    if not value:
+      sys.stderr.write('No expected chain partition for partition {}. Use '
+                       '--expected_chain_partition to specify expected '
+                       'contents or --follow_chain_partitions.\n'.
+                       format(self.partition_name))
+      return False
+    rollback_index_location, pk_blob = value
+
+    if self.rollback_index_location != rollback_index_location:
+      sys.stderr.write('Expected rollback_index_location {} does not '
+                       'match {} in descriptor for partition {}\n'.
+                       format(rollback_index_location,
+                              self.rollback_index_location,
+                              self.partition_name))
+      return False
+
+    if self.public_key != pk_blob:
+      sys.stderr.write('Expected public key blob does not match public '
+                       'key blob in descriptor for partition {}\n'.
+                       format(self.partition_name))
+      return False
+
+    print('{}: Successfully verified chain partition descriptor matches '
+          'expected data'.format(self.partition_name))
+
+    return True
+
+DESCRIPTOR_CLASSES = [
+    AvbPropertyDescriptor, AvbHashtreeDescriptor, AvbHashDescriptor,
+    AvbKernelCmdlineDescriptor, AvbChainPartitionDescriptor
+]
+
+
+def parse_descriptors(data):
+  """Parses a blob of data into descriptors.
+
+  Arguments:
+    data: Encoded descriptors as bytes.
+
+  Returns:
+    A list of instances of objects derived from AvbDescriptor. For
+    unknown descriptors, the class AvbDescriptor is used.
+  """
+  o = 0
+  ret = []
+  while o < len(data):
+    tag, nb_following = struct.unpack('!2Q', data[o:o + 16])
+    if tag < len(DESCRIPTOR_CLASSES):
+      clazz = DESCRIPTOR_CLASSES[tag]
+    else:
+      clazz = AvbDescriptor
+    ret.append(clazz(data[o:o + 16 + nb_following]))
+    o += 16 + nb_following
+  return ret
+
+
+class AvbFooter(object):
+  """A class for parsing and writing footers.
+
+  Footers are stored at the end of partitions and point to where the
+  AvbVBMeta blob is located. They also contain the original size of
+  the image before AVB information was added.
+
+  Attributes:
+    magic: Magic for identifying the footer, see |MAGIC|.
+    version_major: The major version of avbtool that wrote the footer.
+    version_minor: The minor version of avbtool that wrote the footer.
+    original_image_size: Original image size.
+    vbmeta_offset: Offset of where the AvbVBMeta blob is stored.
+    vbmeta_size: Size of the AvbVBMeta blob.
+  """
+
+  MAGIC = b'AVBf'
+  SIZE = 64
+  RESERVED = 28
+  FOOTER_VERSION_MAJOR = AVB_FOOTER_VERSION_MAJOR
+  FOOTER_VERSION_MINOR = AVB_FOOTER_VERSION_MINOR
+  FORMAT_STRING = ('!4s2L'  # magic, 2 x version.
+                   'Q'      # Original image size.
+                   'Q'      # Offset of VBMeta blob.
+                   'Q' +    # Size of VBMeta blob.
+                   str(RESERVED) + 'x')  # padding for reserved bytes
+
+  def __init__(self, data=None):
+    """Initializes a new footer object.
+
+    Arguments:
+      data: If not None, must be bytes of size 4096.
+
+    Raises:
+      LookupError: If the given footer is malformed.
+      struct.error: If the given data has no footer.
+    """
+    assert struct.calcsize(self.FORMAT_STRING) == self.SIZE
+
+    if data:
+      (self.magic, self.version_major, self.version_minor,
+       self.original_image_size, self.vbmeta_offset,
+       self.vbmeta_size) = struct.unpack(self.FORMAT_STRING, data)
+      if self.magic != self.MAGIC:
+        raise LookupError('Given data does not look like a AVB footer.')
+    else:
+      self.magic = self.MAGIC
+      self.version_major = self.FOOTER_VERSION_MAJOR
+      self.version_minor = self.FOOTER_VERSION_MINOR
+      self.original_image_size = 0
+      self.vbmeta_offset = 0
+      self.vbmeta_size = 0
+
+  def encode(self):
+    """Serializes the footer.
+
+    Returns:
+      The footer as bytes.
+    """
+    return struct.pack(self.FORMAT_STRING, self.magic, self.version_major,
+                       self.version_minor, self.original_image_size,
+                       self.vbmeta_offset, self.vbmeta_size)
+
+
+class AvbVBMetaHeader(object):
+  """A class for parsing and writing AVB vbmeta images.
+
+  The attributes correspond to the |AvbVBMetaImageHeader| struct defined in
+  avb_vbmeta_image.h.
+
+  Attributes:
+    magic: Four bytes equal to "AVB0" (AVB_MAGIC).
+    required_libavb_version_major: The major version of libavb required for this
+        header.
+    required_libavb_version_minor: The minor version of libavb required for this
+        header.
+    authentication_data_block_size: The size of the signature block.
+    auxiliary_data_block_size: The size of the auxiliary data block.
+    algorithm_type: The verification algorithm used, see |AvbAlgorithmType|
+        enum.
+    hash_offset: Offset into the "Authentication data" block of hash data.
+    hash_size: Length of the hash data.
+    signature_offset: Offset into the "Authentication data" block of signature
+        data.
+    signature_size: Length of the signature data.
+    public_key_offset: Offset into the "Auxiliary data" block of public key
+        data.
+    public_key_size: Length of the public key data.
+    public_key_metadata_offset: Offset into the "Auxiliary data" block of public
+        key metadata.
+    public_key_metadata_size: Length of the public key metadata. Must be set to
+        zero if there is no public key metadata.
+    descriptors_offset: Offset into the "Auxiliary data" block of descriptor
+        data.
+    descriptors_size: Length of descriptor data.
+    rollback_index: The rollback index which can be used to prevent rollback to
+        older versions.
+    flags: Flags from the AvbVBMetaImageFlags enumeration. This must be set to
+        zero if the vbmeta image is not a top-level image.
+    rollback_index_location: The location of the rollback index defined in this
+        header. Only valid for the main vbmeta. For chained partitions, the
+        rollback index location must be specified in the
+        AvbChainPartitionDescriptor and this value must be set to 0.
+    release_string: The release string from avbtool, e.g. "avbtool 1.0.0" or
+        "avbtool 1.0.0 xyz_board Git-234abde89". Is guaranteed to be NUL
+        terminated. Applications must not make assumptions about how this
+        string is formatted.
+  """
+  MAGIC = b'AVB0'
+  SIZE = 256
+
+  # Keep in sync with |reserved| field of |AvbVBMetaImageHeader|.
+  RESERVED = 80
+
+  # Keep in sync with |AvbVBMetaImageHeader|.
+  FORMAT_STRING = ('!4s2L'   # magic, 2 x version
+                   '2Q'      # 2 x block size
+                   'L'       # algorithm type
+                   '2Q'      # offset, size (hash)
+                   '2Q'      # offset, size (signature)
+                   '2Q'      # offset, size (public key)
+                   '2Q'      # offset, size (public key metadata)
+                   '2Q'      # offset, size (descriptors)
+                   'Q'       # rollback_index
+                   'L'       # flags
+                   'L'       # rollback_index_location
+                   '47sx' +  # NUL-terminated release string
+                   str(RESERVED) + 'x')  # padding for reserved bytes
+
+  def __init__(self, data=None):
+    """Initializes a new header object.
+
+    Arguments:
+      data: If not None, must be a bytearray of size 8192.
+
+    Raises:
+      Exception: If the given data is malformed.
+    """
+    assert struct.calcsize(self.FORMAT_STRING) == self.SIZE
+
+    if data:
+      (self.magic, self.required_libavb_version_major,
+       self.required_libavb_version_minor,
+       self.authentication_data_block_size, self.auxiliary_data_block_size,
+       self.algorithm_type, self.hash_offset, self.hash_size,
+       self.signature_offset, self.signature_size, self.public_key_offset,
+       self.public_key_size, self.public_key_metadata_offset,
+       self.public_key_metadata_size, self.descriptors_offset,
+       self.descriptors_size,
+       self.rollback_index,
+       self.flags,
+       self.rollback_index_location,
+       release_string) = struct.unpack(self.FORMAT_STRING, data)
+      # Nuke NUL-bytes at the end of the string.
+      if self.magic != self.MAGIC:
+        raise AvbError('Given image does not look like a vbmeta image.')
+      self.release_string = release_string.rstrip(b'\0').decode('utf-8')
+    else:
+      self.magic = self.MAGIC
+      # Start by just requiring version 1.0. Code that adds features
+      # in a future version can use bump_required_libavb_version_minor() to
+      # bump the minor.
+      self.required_libavb_version_major = AVB_VERSION_MAJOR
+      self.required_libavb_version_minor = 0
+      self.authentication_data_block_size = 0
+      self.auxiliary_data_block_size = 0
+      self.algorithm_type = 0
+      self.hash_offset = 0
+      self.hash_size = 0
+      self.signature_offset = 0
+      self.signature_size = 0
+      self.public_key_offset = 0
+      self.public_key_size = 0
+      self.public_key_metadata_offset = 0
+      self.public_key_metadata_size = 0
+      self.descriptors_offset = 0
+      self.descriptors_size = 0
+      self.rollback_index = 0
+      self.flags = 0
+      self.rollback_index_location = 0
+      self.release_string = get_release_string()
+
+  def bump_required_libavb_version_minor(self, minor):
+    """Function to bump required_libavb_version_minor.
+
+    Call this when writing data that requires a specific libavb
+    version to parse it.
+
+    Arguments:
+      minor: The minor version of libavb that has support for the feature.
+    """
+    self.required_libavb_version_minor = (
+        max(self.required_libavb_version_minor, minor))
+
+  def encode(self):
+    """Serializes the header.
+
+    Returns:
+      The header as bytes.
+    """
+    release_string_encoded = self.release_string.encode('utf-8')
+    return struct.pack(self.FORMAT_STRING, self.magic,
+                       self.required_libavb_version_major,
+                       self.required_libavb_version_minor,
+                       self.authentication_data_block_size,
+                       self.auxiliary_data_block_size, self.algorithm_type,
+                       self.hash_offset, self.hash_size, self.signature_offset,
+                       self.signature_size, self.public_key_offset,
+                       self.public_key_size, self.public_key_metadata_offset,
+                       self.public_key_metadata_size, self.descriptors_offset,
+                       self.descriptors_size, self.rollback_index, self.flags,
+                       self.rollback_index_location, release_string_encoded)
+
+
+class Avb(object):
+  """Business logic for avbtool command-line tool."""
+
+  # Keep in sync with avb_ab_flow.h.
+  AB_FORMAT_NO_CRC = '!4sBB2xBBBxBBBx12x'
+  AB_MAGIC = b'\0AB0'
+  AB_MAJOR_VERSION = 1
+  AB_MINOR_VERSION = 0
+  AB_MISC_METADATA_OFFSET = 2048
+
+  # Constants for maximum metadata size. These are used to give
+  # meaningful errors if the value passed in via --partition_size is
+  # too small and when --calc_max_image_size is used. We use
+  # conservative figures.
+  MAX_VBMETA_SIZE = 64 * 1024
+  MAX_FOOTER_SIZE = 4096
+
+  def generate_test_image(self, output, image_size, start_byte):
+    """Generates a test image for testing avbtool with known content.
+
+    The content has following pattern: 0x00 0x01 0x02 .. 0xff 0x00 0x01 ..).
+
+    Arguments:
+      output: Write test image to this file.
+      image_size: The size of the requested file in bytes.
+      start_byte: The integer value of the start byte to use for pattern
+          generation.
+    """
+    pattern = bytearray([x & 0xFF for x in range(start_byte, start_byte + 256)])
+    buf = bytearray()
+    c = int(math.ceil(image_size / 256.0))
+    for _ in range(0, c):
+      buf.extend(pattern)
+    output.write(buf[0:image_size])
+
+  def extract_vbmeta_image(self, output, image_filename, padding_size):
+    """Implements the 'extract_vbmeta_image' command.
+
+    Arguments:
+      output: Write vbmeta struct to this file.
+      image_filename: File to extract vbmeta data from (with a footer).
+      padding_size: If not 0, pads output so size is a multiple of the number.
+
+    Raises:
+      AvbError: If there's no footer in the image.
+    """
+    image = ImageHandler(image_filename, read_only=True)
+    (footer, _, _, _) = self._parse_image(image)
+    if not footer:
+      raise AvbError('Given image does not have a footer.')
+
+    image.seek(footer.vbmeta_offset)
+    vbmeta_blob = image.read(footer.vbmeta_size)
+    output.write(vbmeta_blob)
+
+    if padding_size > 0:
+      padded_size = round_to_multiple(len(vbmeta_blob), padding_size)
+      padding_needed = padded_size - len(vbmeta_blob)
+      output.write(b'\0' * padding_needed)
+
+  def erase_footer(self, image_filename, keep_hashtree):
+    """Implements the 'erase_footer' command.
+
+    Arguments:
+      image_filename: File to erase a footer from.
+      keep_hashtree: If True, keep the hashtree and FEC around.
+
+    Raises:
+      AvbError: If there's no footer in the image.
+    """
+    image = ImageHandler(image_filename)
+    (footer, _, descriptors, _) = self._parse_image(image)
+    if not footer:
+      raise AvbError('Given image does not have a footer.')
+
+    new_image_size = None
+    if not keep_hashtree:
+      new_image_size = footer.original_image_size
+    else:
+      # If requested to keep the hashtree, search for a hashtree
+      # descriptor to figure out the location and size of the hashtree
+      # and FEC.
+      for desc in descriptors:
+        if isinstance(desc, AvbHashtreeDescriptor):
+          # The hashtree is always just following the main data so the
+          # new size is easily derived.
+          new_image_size = desc.tree_offset + desc.tree_size
+          # If the image has FEC codes, also keep those.
+          if desc.fec_offset > 0:
+            fec_end = desc.fec_offset + desc.fec_size
+            new_image_size = max(new_image_size, fec_end)
+          break
+      if not new_image_size:
+        raise AvbError('Requested to keep hashtree but no hashtree '
+                       'descriptor was found.')
+
+    # And cut...
+    image.truncate(new_image_size)
+
+  def zero_hashtree(self, image_filename):
+    """Implements the 'zero_hashtree' command.
+
+    Arguments:
+      image_filename: File to zero hashtree and FEC data from.
+
+    Raises:
+      AvbError: If there's no footer in the image.
+    """
+    image = ImageHandler(image_filename)
+    (footer, _, descriptors, _) = self._parse_image(image)
+    if not footer:
+      raise AvbError('Given image does not have a footer.')
+
+    # Search for a hashtree descriptor to figure out the location and
+    # size of the hashtree and FEC.
+    ht_desc = None
+    for desc in descriptors:
+      if isinstance(desc, AvbHashtreeDescriptor):
+        ht_desc = desc
+        break
+
+    if not ht_desc:
+      raise AvbError('No hashtree descriptor was found.')
+
+    zero_ht_start_offset = ht_desc.tree_offset
+    zero_ht_num_bytes = ht_desc.tree_size
+    zero_fec_start_offset = None
+    zero_fec_num_bytes = 0
+    if ht_desc.fec_offset > 0:
+      if ht_desc.fec_offset != ht_desc.tree_offset + ht_desc.tree_size:
+        raise AvbError('Hash-tree and FEC data must be adjacent.')
+      zero_fec_start_offset = ht_desc.fec_offset
+      zero_fec_num_bytes = ht_desc.fec_size
+    zero_end_offset = (zero_ht_start_offset + zero_ht_num_bytes
+                       + zero_fec_num_bytes)
+    image.seek(zero_end_offset)
+    data = image.read(image.image_size - zero_end_offset)
+
+    # Write zeroes all over hashtree and FEC, except for the first eight bytes
+    # where a magic marker - ZeroHaSH - is placed. Place these markers in the
+    # beginning of both hashtree and FEC. (That way, in the future we can add
+    # options to 'avbtool zero_hashtree' so as to zero out only either/or.)
+    #
+    # Applications can use these markers to detect that the hashtree and/or
+    # FEC needs to be recomputed.
+    image.truncate(zero_ht_start_offset)
+    data_zeroed_firstblock = b'ZeRoHaSH' + b'\0' * (image.block_size - 8)
+    image.append_raw(data_zeroed_firstblock)
+    image.append_fill(b'\0\0\0\0', zero_ht_num_bytes - image.block_size)
+    if zero_fec_start_offset:
+      image.append_raw(data_zeroed_firstblock)
+      image.append_fill(b'\0\0\0\0', zero_fec_num_bytes - image.block_size)
+    image.append_raw(data)
+
+  def resize_image(self, image_filename, partition_size):
+    """Implements the 'resize_image' command.
+
+    Arguments:
+      image_filename: File with footer to resize.
+      partition_size: The new size of the image.
+
+    Raises:
+      AvbError: If there's no footer in the image.
+    """
+
+    image = ImageHandler(image_filename)
+    if partition_size % image.block_size != 0:
+      raise AvbError('Partition size of {} is not a multiple of the image '
+                     'block size {}.'.format(partition_size,
+                                             image.block_size))
+    (footer, _, _, _) = self._parse_image(image)
+    if not footer:
+      raise AvbError('Given image does not have a footer.')
+
+    # The vbmeta blob is always at the end of the data so resizing an
+    # image amounts to just moving the footer around.
+    vbmeta_end_offset = footer.vbmeta_offset + footer.vbmeta_size
+    if vbmeta_end_offset % image.block_size != 0:
+      vbmeta_end_offset += image.block_size - (vbmeta_end_offset
+                                               % image.block_size)
+
+    if partition_size < vbmeta_end_offset + 1 * image.block_size:
+      raise AvbError('Requested size of {} is too small for an image '
+                     'of size {}.'
+                     .format(partition_size,
+                             vbmeta_end_offset + 1 * image.block_size))
+
+    # Cut at the end of the vbmeta blob and insert a DONT_CARE chunk
+    # with enough bytes such that the final Footer block is at the end
+    # of partition_size.
+    image.truncate(vbmeta_end_offset)
+    image.append_dont_care(partition_size - vbmeta_end_offset -
+                           1 * image.block_size)
+
+    # Just reuse the same footer - only difference is that we're
+    # writing it in a different place.
+    footer_blob = footer.encode()
+    footer_blob_with_padding = (b'\0' * (image.block_size - AvbFooter.SIZE) +
+                                footer_blob)
+    image.append_raw(footer_blob_with_padding)
+
+  def set_ab_metadata(self, misc_image, slot_data):
+    """Implements the 'set_ab_metadata' command.
+
+    The |slot_data| argument must be of the form 'A_priority:A_tries_remaining:
+    A_successful_boot:B_priority:B_tries_remaining:B_successful_boot'.
+
+    Arguments:
+      misc_image: The misc image to write to.
+      slot_data: Slot data as a string
+
+    Raises:
+      AvbError: If slot data is malformed.
+    """
+    tokens = slot_data.split(':')
+    if len(tokens) != 6:
+      raise AvbError('Malformed slot data "{}".'.format(slot_data))
+    a_priority = int(tokens[0])
+    a_tries_remaining = int(tokens[1])
+    a_success = int(tokens[2]) != 0
+    b_priority = int(tokens[3])
+    b_tries_remaining = int(tokens[4])
+    b_success = int(tokens[5]) != 0
+
+    ab_data_no_crc = struct.pack(self.AB_FORMAT_NO_CRC,
+                                 self.AB_MAGIC,
+                                 self.AB_MAJOR_VERSION, self.AB_MINOR_VERSION,
+                                 a_priority, a_tries_remaining, a_success,
+                                 b_priority, b_tries_remaining, b_success)
+    # Force CRC to be unsigned, see https://bugs.python.org/issue4903 for why.
+    crc_value = binascii.crc32(ab_data_no_crc) & 0xffffffff
+    ab_data = ab_data_no_crc + struct.pack('!I', crc_value)
+    misc_image.seek(self.AB_MISC_METADATA_OFFSET)
+    misc_image.write(ab_data)
+
+  def info_image(self, image_filename, output, atx):
+    """Implements the 'info_image' command.
+
+    Arguments:
+      image_filename: Image file to get information from (file object).
+      output: Output file to write human-readable information to (file object).
+      atx: If True, show information about Android Things eXtension (ATX).
+    """
+    image = ImageHandler(image_filename, read_only=True)
+    o = output
+    (footer, header, descriptors, image_size) = self._parse_image(image)
+
+    # To show the SHA1 of the public key.
+    vbmeta_blob = self._load_vbmeta_blob(image)
+    key_offset = (header.SIZE +
+                  header.authentication_data_block_size +
+                  header.public_key_offset)
+    key_blob = vbmeta_blob[key_offset:key_offset + header.public_key_size]
+
+    if footer:
+      o.write('Footer version:           {}.{}\n'.format(footer.version_major,
+                                                         footer.version_minor))
+      o.write('Image size:               {} bytes\n'.format(image_size))
+      o.write('Original image size:      {} bytes\n'.format(
+          footer.original_image_size))
+      o.write('VBMeta offset:            {}\n'.format(footer.vbmeta_offset))
+      o.write('VBMeta size:              {} bytes\n'.format(footer.vbmeta_size))
+      o.write('--\n')
+
+    (alg_name, _) = lookup_algorithm_by_type(header.algorithm_type)
+
+    o.write('Minimum libavb version:   {}.{}{}\n'.format(
+        header.required_libavb_version_major,
+        header.required_libavb_version_minor,
+        ' (Sparse)' if image.is_sparse else ''))
+    o.write('Header Block:             {} bytes\n'.format(AvbVBMetaHeader.SIZE))
+    o.write('Authentication Block:     {} bytes\n'.format(
+        header.authentication_data_block_size))
+    o.write('Auxiliary Block:          {} bytes\n'.format(
+        header.auxiliary_data_block_size))
+    if key_blob:
+      hexdig = hashlib.sha1(key_blob).hexdigest()
+      o.write('Public key (sha1):        {}\n'.format(hexdig))
+    o.write('Algorithm:                {}\n'.format(alg_name))
+    o.write('Rollback Index:           {}\n'.format(header.rollback_index))
+    o.write('Flags:                    {}\n'.format(header.flags))
+    o.write('Rollback Index Location:  {}\n'.format(
+        header.rollback_index_location))
+    o.write('Release String:           \'{}\'\n'.format(header.release_string))
+
+    # Print descriptors.
+    num_printed = 0
+    o.write('Descriptors:\n')
+    for desc in descriptors:
+      desc.print_desc(o)
+      num_printed += 1
+    if num_printed == 0:
+      o.write('    (none)\n')
+
+    if atx and header.public_key_metadata_size:
+      o.write('Android Things eXtension (ATX):\n')
+      key_metadata_offset = (header.SIZE +
+                             header.authentication_data_block_size +
+                             header.public_key_metadata_offset)
+      key_metadata_blob = vbmeta_blob[key_metadata_offset: key_metadata_offset
+                                      + header.public_key_metadata_size]
+      version, pik, psk = struct.unpack('<I1620s1620s', key_metadata_blob)
+      o.write('    Metadata version:        {}\n'.format(version))
+
+      def print_atx_certificate(cert):
+        version, public_key, subject, usage, key_version, _ = (
+            struct.unpack('<I1032s32s32sQ512s', cert))
+        o.write('      Version:               {}\n'.format(version))
+        o.write('      Public key (sha1):     {}\n'.format(
+            hashlib.sha1(public_key).hexdigest()))
+        o.write('      Subject:               {}\n'.format(subject.hex()))
+        o.write('      Usage:                 {}\n'.format(usage.hex()))
+        o.write('      Key version:           {}\n'.format(key_version))
+
+      o.write('    Product Intermediate Key:\n')
+      print_atx_certificate(pik)
+      o.write('    Product Signing Key:\n')
+      print_atx_certificate(psk)
+
+  def verify_image(self, image_filename, key_path, expected_chain_partitions,
+                   follow_chain_partitions, accept_zeroed_hashtree):
+    """Implements the 'verify_image' command.
+
+    Arguments:
+      image_filename: Image file to get information from (file object).
+      key_path: None or check that embedded public key matches key at given
+          path.
+      expected_chain_partitions: List of chain partitions to check or None.
+      follow_chain_partitions:
+          If True, will follows chain partitions even when not specified with
+          the --expected_chain_partition option
+      accept_zeroed_hashtree: If True, don't fail if hashtree or FEC data is
+          zeroed out.
+
+    Raises:
+      AvbError: If verification of the image fails.
+    """
+    expected_chain_partitions_map = {}
+    if expected_chain_partitions:
+      for cp in expected_chain_partitions:
+        cp_tokens = cp.split(':')
+        if len(cp_tokens) != 3:
+          raise AvbError('Malformed chained partition "{}".'.format(cp))
+        partition_name = cp_tokens[0]
+        rollback_index_location = int(cp_tokens[1])
+        file_path = cp_tokens[2]
+        with open(file_path, 'rb') as f:
+          pk_blob = f.read()
+        expected_chain_partitions_map[partition_name] = (
+            rollback_index_location, pk_blob)
+
+    image_dir = os.path.dirname(image_filename)
+    image_ext = os.path.splitext(image_filename)[1]
+
+    key_blob = None
+    if key_path:
+      print('Verifying image {} using key at {}'.format(image_filename,
+                                                        key_path))
+      key_blob = RSAPublicKey(key_path).encode()
+    else:
+      print('Verifying image {} using embedded public key'.format(
+          image_filename))
+
+    image = ImageHandler(image_filename, read_only=True)
+    (footer, header, descriptors, _) = self._parse_image(image)
+    offset = 0
+    if footer:
+      offset = footer.vbmeta_offset
+
+    image.seek(offset)
+    vbmeta_blob = image.read(header.SIZE
+                             + header.authentication_data_block_size
+                             + header.auxiliary_data_block_size)
+
+    alg_name, _ = lookup_algorithm_by_type(header.algorithm_type)
+    if not verify_vbmeta_signature(header, vbmeta_blob):
+      raise AvbError('Signature check failed for {} vbmeta struct {}'
+                     .format(alg_name, image_filename))
+
+    if key_blob:
+      # The embedded public key is in the auxiliary block at an offset.
+      key_offset = AvbVBMetaHeader.SIZE
+      key_offset += header.authentication_data_block_size
+      key_offset += header.public_key_offset
+      key_blob_in_vbmeta = vbmeta_blob[key_offset:key_offset
+                                       + header.public_key_size]
+      if key_blob != key_blob_in_vbmeta:
+        raise AvbError('Embedded public key does not match given key.')
+
+    if footer:
+      print('vbmeta: Successfully verified footer and {} vbmeta struct in {}'
+            .format(alg_name, image.filename))
+    else:
+      print('vbmeta: Successfully verified {} vbmeta struct in {}'
+            .format(alg_name, image.filename))
+
+    for desc in descriptors:
+      if (isinstance(desc, AvbChainPartitionDescriptor)
+          and follow_chain_partitions
+          and expected_chain_partitions_map.get(desc.partition_name) is None):
+        # In this case we're processing a chain descriptor but don't have a
+        # --expect_chain_partition ... however --follow_chain_partitions was
+        # specified so we shouldn't error out in desc.verify().
+        print('{}: Chained but ROLLBACK_SLOT (which is {}) '
+              'and KEY (which has sha1 {}) not specified'
+              .format(desc.partition_name, desc.rollback_index_location,
+                      hashlib.sha1(desc.public_key).hexdigest()))
+      elif not desc.verify(image_dir, image_ext, expected_chain_partitions_map,
+                           image, accept_zeroed_hashtree):
+        raise AvbError('Error verifying descriptor.')
+      # Honor --follow_chain_partitions - add '--' to make the output more
+      # readable.
+      if (isinstance(desc, AvbChainPartitionDescriptor)
+          and follow_chain_partitions):
+        print('--')
+        chained_image_filename = os.path.join(image_dir,
+                                              desc.partition_name + image_ext)
+        self.verify_image(chained_image_filename, key_path, None, False,
+                          accept_zeroed_hashtree)
+
+  def print_partition_digests(self, image_filename, output, as_json):
+    """Implements the 'print_partition_digests' command.
+
+    Arguments:
+      image_filename: Image file to get information from (file object).
+      output: Output file to write human-readable information to (file object).
+      as_json: If True, print information as JSON
+
+    Raises:
+      AvbError: If getting the partition digests from the image fails.
+    """
+    image_dir = os.path.dirname(image_filename)
+    image_ext = os.path.splitext(image_filename)[1]
+    json_partitions = None
+    if as_json:
+      json_partitions = []
+    self._print_partition_digests(
+        image_filename, output, json_partitions, image_dir, image_ext)
+    if as_json:
+      output.write(json.dumps({'partitions': json_partitions}, indent=2))
+
+  def _print_partition_digests(self, image_filename, output, json_partitions,
+                               image_dir, image_ext):
+    """Helper for printing partitions.
+
+    Arguments:
+      image_filename: Image file to get information from (file object).
+      output: Output file to write human-readable information to (file object).
+      json_partitions: If not None, don't print to output, instead add partition
+          information to this list.
+      image_dir: The directory to use when looking for chained partition files.
+      image_ext: The extension to use for chained partition files.
+
+    Raises:
+      AvbError: If getting the partition digests from the image fails.
+    """
+    image = ImageHandler(image_filename, read_only=True)
+    (_, _, descriptors, _) = self._parse_image(image)
+
+    for desc in descriptors:
+      if isinstance(desc, AvbHashDescriptor):
+        digest = desc.digest.hex()
+        if json_partitions is not None:
+          json_partitions.append({'name': desc.partition_name,
+                                  'digest': digest})
+        else:
+          output.write('{}: {}\n'.format(desc.partition_name, digest))
+      elif isinstance(desc, AvbHashtreeDescriptor):
+        digest = desc.root_digest.hex()
+        if json_partitions is not None:
+          json_partitions.append({'name': desc.partition_name,
+                                  'digest': digest})
+        else:
+          output.write('{}: {}\n'.format(desc.partition_name, digest))
+      elif isinstance(desc, AvbChainPartitionDescriptor):
+        chained_image_filename = os.path.join(image_dir,
+                                              desc.partition_name + image_ext)
+        self._print_partition_digests(
+            chained_image_filename, output, json_partitions, image_dir,
+            image_ext)
+
+  def calculate_vbmeta_digest(self, image_filename, hash_algorithm, output):
+    """Implements the 'calculate_vbmeta_digest' command.
+
+    Arguments:
+      image_filename: Image file to get information from (file object).
+      hash_algorithm: Hash algorithm used.
+      output: Output file to write human-readable information to (file object).
+    """
+
+    image_dir = os.path.dirname(image_filename)
+    image_ext = os.path.splitext(image_filename)[1]
+
+    image = ImageHandler(image_filename, read_only=True)
+    (footer, header, descriptors, _) = self._parse_image(image)
+    offset = 0
+    if footer:
+      offset = footer.vbmeta_offset
+    size = (header.SIZE + header.authentication_data_block_size +
+            header.auxiliary_data_block_size)
+    image.seek(offset)
+    vbmeta_blob = image.read(size)
+
+    hasher = hashlib.new(hash_algorithm)
+    hasher.update(vbmeta_blob)
+
+    for desc in descriptors:
+      if isinstance(desc, AvbChainPartitionDescriptor):
+        ch_image_filename = os.path.join(image_dir,
+                                         desc.partition_name + image_ext)
+        ch_image = ImageHandler(ch_image_filename, read_only=True)
+        (ch_footer, ch_header, _, _) = self._parse_image(ch_image)
+        ch_offset = 0
+        ch_size = (ch_header.SIZE + ch_header.authentication_data_block_size +
+                   ch_header.auxiliary_data_block_size)
+        if ch_footer:
+          ch_offset = ch_footer.vbmeta_offset
+        ch_image.seek(ch_offset)
+        ch_vbmeta_blob = ch_image.read(ch_size)
+        hasher.update(ch_vbmeta_blob)
+
+    digest = hasher.digest()
+    output.write('{}\n'.format(digest.hex()))
+
+  def calculate_kernel_cmdline(self, image_filename, hashtree_disabled, output):
+    """Implements the 'calculate_kernel_cmdline' command.
+
+    Arguments:
+      image_filename: Image file to get information from (file object).
+      hashtree_disabled: If True, returns the cmdline for hashtree disabled.
+      output: Output file to write human-readable information to (file object).
+    """
+
+    image = ImageHandler(image_filename, read_only=True)
+    _, _, descriptors, _ = self._parse_image(image)
+
+    image_dir = os.path.dirname(image_filename)
+    image_ext = os.path.splitext(image_filename)[1]
+
+    cmdline_descriptors = []
+    for desc in descriptors:
+      if isinstance(desc, AvbChainPartitionDescriptor):
+        ch_image_filename = os.path.join(image_dir,
+                                         desc.partition_name + image_ext)
+        ch_image = ImageHandler(ch_image_filename, read_only=True)
+        _, _, ch_descriptors, _ = self._parse_image(ch_image)
+        for ch_desc in ch_descriptors:
+          if isinstance(ch_desc, AvbKernelCmdlineDescriptor):
+            cmdline_descriptors.append(ch_desc)
+      elif isinstance(desc, AvbKernelCmdlineDescriptor):
+        cmdline_descriptors.append(desc)
+
+    kernel_cmdline_snippets = []
+    for desc in cmdline_descriptors:
+      use_cmdline = True
+      if ((desc.flags &
+           AvbKernelCmdlineDescriptor.FLAGS_USE_ONLY_IF_HASHTREE_NOT_DISABLED)
+          != 0):
+        if hashtree_disabled:
+          use_cmdline = False
+      if (desc.flags &
+          AvbKernelCmdlineDescriptor.FLAGS_USE_ONLY_IF_HASHTREE_DISABLED) != 0:
+        if not hashtree_disabled:
+          use_cmdline = False
+      if use_cmdline:
+        kernel_cmdline_snippets.append(desc.kernel_cmdline)
+    output.write(' '.join(kernel_cmdline_snippets))
+
+  def _parse_image(self, image):
+    """Gets information about an image.
+
+    The image can either be a vbmeta or an image with a footer.
+
+    Arguments:
+      image: An ImageHandler (vbmeta or footer) with a hashtree descriptor.
+
+    Returns:
+      A tuple where the first argument is a AvbFooter (None if there
+      is no footer on the image), the second argument is a
+      AvbVBMetaHeader, the third argument is a list of
+      AvbDescriptor-derived instances, and the fourth argument is the
+      size of |image|.
+
+    Raises:
+      AvbError: In case the image cannot be parsed.
+    """
+    assert isinstance(image, ImageHandler)
+    footer = None
+    image.seek(image.image_size - AvbFooter.SIZE)
+    try:
+      footer = AvbFooter(image.read(AvbFooter.SIZE))
+    except (LookupError, struct.error):
+      # Nope, just seek back to the start.
+      image.seek(0)
+
+    vbmeta_offset = 0
+    if footer:
+      vbmeta_offset = footer.vbmeta_offset
+
+    image.seek(vbmeta_offset)
+    h = AvbVBMetaHeader(image.read(AvbVBMetaHeader.SIZE))
+
+    auth_block_offset = vbmeta_offset + AvbVBMetaHeader.SIZE
+    aux_block_offset = auth_block_offset + h.authentication_data_block_size
+    desc_start_offset = aux_block_offset + h.descriptors_offset
+    image.seek(desc_start_offset)
+    descriptors = parse_descriptors(image.read(h.descriptors_size))
+
+    return footer, h, descriptors, image.image_size
+
+  def _load_vbmeta_blob(self, image):
+    """Gets the vbmeta struct and associated sections.
+
+    The image can either be a vbmeta.img or an image with a footer.
+
+    Arguments:
+      image: An ImageHandler (vbmeta or footer).
+
+    Returns:
+      A blob with the vbmeta struct and other sections.
+    """
+    assert isinstance(image, ImageHandler)
+    footer = None
+    image.seek(image.image_size - AvbFooter.SIZE)
+    try:
+      footer = AvbFooter(image.read(AvbFooter.SIZE))
+    except (LookupError, struct.error):
+      # Nope, just seek back to the start.
+      image.seek(0)
+
+    vbmeta_offset = 0
+    if footer:
+      vbmeta_offset = footer.vbmeta_offset
+
+    image.seek(vbmeta_offset)
+    h = AvbVBMetaHeader(image.read(AvbVBMetaHeader.SIZE))
+
+    image.seek(vbmeta_offset)
+    data_size = AvbVBMetaHeader.SIZE
+    data_size += h.authentication_data_block_size
+    data_size += h.auxiliary_data_block_size
+    return image.read(data_size)
+
+  def _get_cmdline_descriptors_for_hashtree_descriptor(self, ht):
+    """Generate kernel cmdline descriptors for dm-verity.
+
+    Arguments:
+      ht: A AvbHashtreeDescriptor
+
+    Returns:
+      A list with two AvbKernelCmdlineDescriptor with dm-verity kernel cmdline
+      instructions. There is one for when hashtree is not disabled and one for
+      when it is.
+
+    """
+    c = 'dm="1 vroot none ro 1,'
+    c += '0'                                                # start
+    c += ' {}'.format((ht.image_size // 512))               # size (# sectors)
+    c += ' verity {}'.format(ht.dm_verity_version)          # type and version
+    c += ' PARTUUID=$(ANDROID_SYSTEM_PARTUUID)'             # data_dev
+    c += ' PARTUUID=$(ANDROID_SYSTEM_PARTUUID)'             # hash_dev
+    c += ' {}'.format(ht.data_block_size)                   # data_block
+    c += ' {}'.format(ht.hash_block_size)                   # hash_block
+    c += ' {}'.format(ht.image_size // ht.data_block_size)  # #blocks
+    c += ' {}'.format(ht.image_size // ht.data_block_size)  # hash_offset
+    c += ' {}'.format(ht.hash_algorithm)                    # hash_alg
+    c += ' {}'.format(ht.root_digest.hex())                 # root_digest
+    c += ' {}'.format(ht.salt.hex())                        # salt
+    if ht.fec_num_roots > 0:
+      if ht.flags & AvbHashtreeDescriptor.FLAGS_CHECK_AT_MOST_ONCE:
+        c += ' 11'  # number of optional args
+        c += ' check_at_most_once'
+      else:
+        c += ' 10'  # number of optional args
+      c += ' $(ANDROID_VERITY_MODE)'
+      c += ' ignore_zero_blocks'
+      c += ' use_fec_from_device PARTUUID=$(ANDROID_SYSTEM_PARTUUID)'
+      c += ' fec_roots {}'.format(ht.fec_num_roots)
+      # Note that fec_blocks is the size that FEC covers, *not* the
+      # size of the FEC data. Since we use FEC for everything up until
+      # the FEC data, it's the same as the offset.
+      c += ' fec_blocks {}'.format(ht.fec_offset // ht.data_block_size)
+      c += ' fec_start {}'.format(ht.fec_offset // ht.data_block_size)
+    else:
+      if ht.flags & AvbHashtreeDescriptor.FLAGS_CHECK_AT_MOST_ONCE:
+        c += ' 3'  # number of optional args
+        c += ' check_at_most_once'
+      else:
+        c += ' 2'  # number of optional args
+      c += ' $(ANDROID_VERITY_MODE)'
+      c += ' ignore_zero_blocks'
+    c += '" root=/dev/dm-0'
+
+    # Now that we have the command-line, generate the descriptor.
+    desc = AvbKernelCmdlineDescriptor()
+    desc.kernel_cmdline = c
+    desc.flags = (
+        AvbKernelCmdlineDescriptor.FLAGS_USE_ONLY_IF_HASHTREE_NOT_DISABLED)
+
+    # The descriptor for when hashtree verification is disabled is a lot
+    # simpler - we just set the root to the partition.
+    desc_no_ht = AvbKernelCmdlineDescriptor()
+    desc_no_ht.kernel_cmdline = 'root=PARTUUID=$(ANDROID_SYSTEM_PARTUUID)'
+    desc_no_ht.flags = (
+        AvbKernelCmdlineDescriptor.FLAGS_USE_ONLY_IF_HASHTREE_DISABLED)
+
+    return [desc, desc_no_ht]
+
+  def _get_cmdline_descriptors_for_dm_verity(self, image):
+    """Generate kernel cmdline descriptors for dm-verity.
+
+    Arguments:
+      image: An ImageHandler (vbmeta or footer) with a hashtree descriptor.
+
+    Returns:
+      A list with two AvbKernelCmdlineDescriptor with dm-verity kernel cmdline
+      instructions. There is one for when hashtree is not disabled and one for
+      when it is.
+
+    Raises:
+      AvbError: If  |image| doesn't have a hashtree descriptor.
+
+    """
+    (_, _, descriptors, _) = self._parse_image(image)
+
+    ht = None
+    for desc in descriptors:
+      if isinstance(desc, AvbHashtreeDescriptor):
+        ht = desc
+        break
+
+    if not ht:
+      raise AvbError('No hashtree descriptor in given image')
+
+    return self._get_cmdline_descriptors_for_hashtree_descriptor(ht)
+
+  def make_vbmeta_image(self, output, chain_partitions, algorithm_name,
+                        key_path, public_key_metadata_path, rollback_index,
+                        flags, rollback_index_location,
+                        props, props_from_file, kernel_cmdlines,
+                        setup_rootfs_from_kernel,
+                        include_descriptors_from_image,
+                        signing_helper,
+                        signing_helper_with_files,
+                        release_string,
+                        append_to_release_string,
+                        print_required_libavb_version,
+                        padding_size):
+    """Implements the 'make_vbmeta_image' command.
+
+    Arguments:
+      output: File to write the image to.
+      chain_partitions: List of partitions to chain or None.
+      algorithm_name: Name of algorithm to use.
+      key_path: Path to key to use or None.
+      public_key_metadata_path: Path to public key metadata or None.
+      rollback_index: The rollback index to use.
+      flags: Flags value to use in the image.
+      rollback_index_location: Location of the main vbmeta rollback index.
+      props: Properties to insert (list of strings of the form 'key:value').
+      props_from_file: Properties to insert (list of strings 'key:<path>').
+      kernel_cmdlines: Kernel cmdlines to insert (list of strings).
+      setup_rootfs_from_kernel: None or file to generate from.
+      include_descriptors_from_image: List of file objects with descriptors.
+      signing_helper: Program which signs a hash and return signature.
+      signing_helper_with_files: Same as signing_helper but uses files instead.
+      release_string: None or avbtool release string to use instead of default.
+      append_to_release_string: None or string to append.
+      print_required_libavb_version: True to only print required libavb version.
+      padding_size: If not 0, pads output so size is a multiple of the number.
+
+    Raises:
+      AvbError: If a chained partition is malformed.
+    """
+    # If we're asked to calculate minimum required libavb version, we're done.
+    tmp_header = AvbVBMetaHeader()
+    if rollback_index_location > 0:
+      tmp_header.bump_required_libavb_version_minor(2)
+    if include_descriptors_from_image:
+      # Use the bump logic in AvbVBMetaHeader to calculate the max required
+      # version of all included descriptors.
+      for image in include_descriptors_from_image:
+        (_, image_header, _, _) = self._parse_image(ImageHandler(
+            image.name, read_only=True))
+        tmp_header.bump_required_libavb_version_minor(
+            image_header.required_libavb_version_minor)
+
+    if print_required_libavb_version:
+      print('1.{}'.format(tmp_header.required_libavb_version_minor))
+      return
+
+    if not output:
+      raise AvbError('No output file given')
+
+    descriptors = []
+    ht_desc_to_setup = None
+    vbmeta_blob = self._generate_vbmeta_blob(
+        algorithm_name, key_path, public_key_metadata_path, descriptors,
+        chain_partitions, rollback_index, flags, rollback_index_location,
+        props, props_from_file,
+        kernel_cmdlines, setup_rootfs_from_kernel, ht_desc_to_setup,
+        include_descriptors_from_image, signing_helper,
+        signing_helper_with_files, release_string,
+        append_to_release_string, tmp_header.required_libavb_version_minor)
+
+    # Write entire vbmeta blob (header, authentication, auxiliary).
+    output.seek(0)
+    output.write(vbmeta_blob)
+
+    if padding_size > 0:
+      padded_size = round_to_multiple(len(vbmeta_blob), padding_size)
+      padding_needed = padded_size - len(vbmeta_blob)
+      output.write(b'\0' * padding_needed)
+
+  def _generate_vbmeta_blob(self, algorithm_name, key_path,
+                            public_key_metadata_path, descriptors,
+                            chain_partitions,
+                            rollback_index, flags, rollback_index_location,
+                            props, props_from_file,
+                            kernel_cmdlines,
+                            setup_rootfs_from_kernel,
+                            ht_desc_to_setup,
+                            include_descriptors_from_image, signing_helper,
+                            signing_helper_with_files,
+                            release_string, append_to_release_string,
+                            required_libavb_version_minor):
+    """Generates a VBMeta blob.
+
+    This blob contains the header (struct AvbVBMetaHeader), the
+    authentication data block (which contains the hash and signature
+    for the header and auxiliary block), and the auxiliary block
+    (which contains descriptors, the public key used, and other data).
+
+    The |key| parameter can |None| only if the |algorithm_name| is
+    'NONE'.
+
+    Arguments:
+      algorithm_name: The algorithm name as per the ALGORITHMS dict.
+      key_path: The path to the .pem file used to sign the blob.
+      public_key_metadata_path: Path to public key metadata or None.
+      descriptors: A list of descriptors to insert or None.
+      chain_partitions: List of partitions to chain or None.
+      rollback_index: The rollback index to use.
+      flags: Flags to use in the image.
+      rollback_index_location: Location of the main vbmeta rollback index.
+      props: Properties to insert (List of strings of the form 'key:value').
+      props_from_file: Properties to insert (List of strings 'key:<path>').
+      kernel_cmdlines: Kernel cmdlines to insert (list of strings).
+      setup_rootfs_from_kernel: None or file to generate
+        dm-verity kernel cmdline from.
+      ht_desc_to_setup: If not None, an AvbHashtreeDescriptor to
+        generate dm-verity kernel cmdline descriptors from.
+      include_descriptors_from_image: List of file objects for which
+        to insert descriptors from.
+      signing_helper: Program which signs a hash and return signature.
+      signing_helper_with_files: Same as signing_helper but uses files instead.
+      release_string: None or avbtool release string.
+      append_to_release_string: None or string to append.
+      required_libavb_version_minor: Use at least this required minor version.
+
+    Returns:
+      The VBMeta blob as bytes.
+
+    Raises:
+      Exception: If the |algorithm_name| is not found, if no key has
+        been given and the given algorithm requires one, or the key is
+        of the wrong size.
+    """
+    try:
+      alg = ALGORITHMS[algorithm_name]
+    except KeyError as e:
+      raise AvbError('Unknown algorithm with name {}'
+                     .format(algorithm_name)) from e
+
+    if not descriptors:
+      descriptors = []
+
+    h = AvbVBMetaHeader()
+    h.bump_required_libavb_version_minor(required_libavb_version_minor)
+
+    # Insert chained partition descriptors, if any
+    if chain_partitions:
+      used_locations = {rollback_index_location: True}
+      for cp in chain_partitions:
+        cp_tokens = cp.split(':')
+        if len(cp_tokens) != 3:
+          raise AvbError('Malformed chained partition "{}".'.format(cp))
+        partition_name = cp_tokens[0]
+        chained_rollback_index_location = int(cp_tokens[1])
+        file_path = cp_tokens[2]
+        # Check that the same rollback location isn't being used by
+        # multiple chained partitions.
+        if used_locations.get(chained_rollback_index_location):
+          raise AvbError('Rollback Index Location {} is already in use.'.format(
+              chained_rollback_index_location))
+        used_locations[chained_rollback_index_location] = True
+        desc = AvbChainPartitionDescriptor()
+        desc.partition_name = partition_name
+        desc.rollback_index_location = chained_rollback_index_location
+        if desc.rollback_index_location < 1:
+          raise AvbError('Rollback index location must be 1 or larger.')
+        with open(file_path, 'rb') as f:
+          desc.public_key = f.read()
+        descriptors.append(desc)
+
+    # Descriptors.
+    encoded_descriptors = bytearray()
+    for desc in descriptors:
+      encoded_descriptors.extend(desc.encode())
+
+    # Add properties.
+    if props:
+      for prop in props:
+        idx = prop.find(':')
+        if idx == -1:
+          raise AvbError('Malformed property "{}".'.format(prop))
+        # pylint: disable=redefined-variable-type
+        desc = AvbPropertyDescriptor()
+        desc.key = prop[0:idx]
+        desc.value = prop[(idx + 1):].encode('utf-8')
+        encoded_descriptors.extend(desc.encode())
+    if props_from_file:
+      for prop in props_from_file:
+        idx = prop.find(':')
+        if idx == -1:
+          raise AvbError('Malformed property "{}".'.format(prop))
+        desc = AvbPropertyDescriptor()
+        desc.key = prop[0:idx]
+        file_path = prop[(idx + 1):]
+        with open(file_path, 'rb') as f:
+          # pylint: disable=attribute-defined-outside-init
+          desc.value = f.read()
+        encoded_descriptors.extend(desc.encode())
+
+    # Add AvbKernelCmdline descriptor for dm-verity from an image, if requested.
+    if setup_rootfs_from_kernel:
+      image_handler = ImageHandler(
+          setup_rootfs_from_kernel.name)
+      cmdline_desc = self._get_cmdline_descriptors_for_dm_verity(image_handler)
+      encoded_descriptors.extend(cmdline_desc[0].encode())
+      encoded_descriptors.extend(cmdline_desc[1].encode())
+
+    # Add AvbKernelCmdline descriptor for dm-verity from desc, if requested.
+    if ht_desc_to_setup:
+      cmdline_desc = self._get_cmdline_descriptors_for_hashtree_descriptor(
+          ht_desc_to_setup)
+      encoded_descriptors.extend(cmdline_desc[0].encode())
+      encoded_descriptors.extend(cmdline_desc[1].encode())
+
+    # Add kernel command-lines.
+    if kernel_cmdlines:
+      for i in kernel_cmdlines:
+        desc = AvbKernelCmdlineDescriptor()
+        desc.kernel_cmdline = i
+        encoded_descriptors.extend(desc.encode())
+
+    # Add descriptors from other images.
+    if include_descriptors_from_image:
+      descriptors_dict = dict()
+      for image in include_descriptors_from_image:
+        image_handler = ImageHandler(image.name, read_only=True)
+        (_, image_vbmeta_header, image_descriptors, _) = self._parse_image(
+            image_handler)
+        # Bump the required libavb version to support all included descriptors.
+        h.bump_required_libavb_version_minor(
+            image_vbmeta_header.required_libavb_version_minor)
+        for desc in image_descriptors:
+          # The --include_descriptors_from_image option is used in some setups
+          # with images A and B where both A and B contain a descriptor
+          # for a partition with the same name. Since it's not meaningful
+          # to include both descriptors, only include the last seen descriptor.
+          # See bug 76386656 for details.
+          if hasattr(desc, 'partition_name'):
+            key = type(desc).__name__ + '_' + desc.partition_name
+            descriptors_dict[key] = desc.encode()
+          else:
+            encoded_descriptors.extend(desc.encode())
+      for key in sorted(descriptors_dict):
+        encoded_descriptors.extend(descriptors_dict[key])
+
+    # Load public key metadata blob, if requested.
+    pkmd_blob = b''
+    if public_key_metadata_path:
+      with open(public_key_metadata_path, 'rb') as f:
+        pkmd_blob = f.read()
+
+    key = None
+    encoded_key = b''
+    if alg.public_key_num_bytes > 0:
+      if not key_path:
+        raise AvbError('Key is required for algorithm {}'.format(
+            algorithm_name))
+      encoded_key = RSAPublicKey(key_path).encode()
+      if len(encoded_key) != alg.public_key_num_bytes:
+        raise AvbError('Key is wrong size for algorithm {}'.format(
+            algorithm_name))
+
+    # Override release string, if requested.
+    if isinstance(release_string, str):
+      h.release_string = release_string
+
+    # Append to release string, if requested. Also insert a space before.
+    if isinstance(append_to_release_string, str):
+      h.release_string += ' ' + append_to_release_string
+
+    # For the Auxiliary data block, descriptors are stored at offset 0,
+    # followed by the public key, followed by the public key metadata blob.
+    h.auxiliary_data_block_size = round_to_multiple(
+        len(encoded_descriptors) + len(encoded_key) + len(pkmd_blob), 64)
+    h.descriptors_offset = 0
+    h.descriptors_size = len(encoded_descriptors)
+    h.public_key_offset = h.descriptors_size
+    h.public_key_size = len(encoded_key)
+    h.public_key_metadata_offset = h.public_key_offset + h.public_key_size
+    h.public_key_metadata_size = len(pkmd_blob)
+
+    # For the Authentication data block, the hash is first and then
+    # the signature.
+    h.authentication_data_block_size = round_to_multiple(
+        alg.hash_num_bytes + alg.signature_num_bytes, 64)
+    h.algorithm_type = alg.algorithm_type
+    h.hash_offset = 0
+    h.hash_size = alg.hash_num_bytes
+    # Signature offset and size - it's stored right after the hash
+    # (in Authentication data block).
+    h.signature_offset = alg.hash_num_bytes
+    h.signature_size = alg.signature_num_bytes
+
+    h.rollback_index = rollback_index
+    h.flags = flags
+    h.rollback_index_location = rollback_index_location
+
+    # Generate Header data block.
+    header_data_blob = h.encode()
+
+    # Generate Auxiliary data block.
+    aux_data_blob = bytearray()
+    aux_data_blob.extend(encoded_descriptors)
+    aux_data_blob.extend(encoded_key)
+    aux_data_blob.extend(pkmd_blob)
+    padding_bytes = h.auxiliary_data_block_size - len(aux_data_blob)
+    aux_data_blob.extend(b'\0' * padding_bytes)
+
+    # Calculate the hash.
+    binary_hash = b''
+    binary_signature = b''
+    if algorithm_name != 'NONE':
+      ha = hashlib.new(alg.hash_name)
+      ha.update(header_data_blob)
+      ha.update(aux_data_blob)
+      binary_hash = ha.digest()
+
+      # Calculate the signature.
+      rsa_key = RSAPublicKey(key_path)
+      data_to_sign = header_data_blob + bytes(aux_data_blob)
+      binary_signature = rsa_key.sign(algorithm_name, data_to_sign,
+                                      signing_helper, signing_helper_with_files)
+
+    # Generate Authentication data block.
+    auth_data_blob = bytearray()
+    auth_data_blob.extend(binary_hash)
+    auth_data_blob.extend(binary_signature)
+    padding_bytes = h.authentication_data_block_size - len(auth_data_blob)
+    auth_data_blob.extend(b'\0' * padding_bytes)
+
+    return header_data_blob + bytes(auth_data_blob) + bytes(aux_data_blob)
+
+  def extract_public_key(self, key_path, output):
+    """Implements the 'extract_public_key' command.
+
+    Arguments:
+      key_path: The path to a RSA private key file.
+      output: The file to write to.
+
+    Raises:
+      AvbError: If the public key could not be extracted.
+    """
+    output.write(RSAPublicKey(key_path).encode())
+
+  def append_vbmeta_image(self, image_filename, vbmeta_image_filename,
+                          partition_size):
+    """Implementation of the append_vbmeta_image command.
+
+    Arguments:
+      image_filename: File to add the footer to.
+      vbmeta_image_filename: File to get vbmeta struct from.
+      partition_size: Size of partition.
+
+    Raises:
+      AvbError: If an argument is incorrect or if appending VBMeta image fialed.
+    """
+    image = ImageHandler(image_filename)
+
+    if partition_size % image.block_size != 0:
+      raise AvbError('Partition size of {} is not a multiple of the image '
+                     'block size {}.'.format(partition_size,
+                                             image.block_size))
+
+    # If there's already a footer, truncate the image to its original
+    # size. This way 'avbtool append_vbmeta_image' is idempotent.
+    if image.image_size >= AvbFooter.SIZE:
+      image.seek(image.image_size - AvbFooter.SIZE)
+      try:
+        footer = AvbFooter(image.read(AvbFooter.SIZE))
+        # Existing footer found. Just truncate.
+        original_image_size = footer.original_image_size
+        image.truncate(footer.original_image_size)
+      except (LookupError, struct.error):
+        original_image_size = image.image_size
+    else:
+      # Image size is too small to possibly contain a footer.
+      original_image_size = image.image_size
+
+    # If anything goes wrong from here-on, restore the image back to
+    # its original size.
+    try:
+      vbmeta_image_handler = ImageHandler(vbmeta_image_filename)
+      vbmeta_blob = self._load_vbmeta_blob(vbmeta_image_handler)
+
+      # If the image isn't sparse, its size might not be a multiple of
+      # the block size. This will screw up padding later so just grow it.
+      if image.image_size % image.block_size != 0:
+        assert not image.is_sparse
+        padding_needed = image.block_size - (image.image_size%image.block_size)
+        image.truncate(image.image_size + padding_needed)
+
+      # The append_raw() method requires content with size being a
+      # multiple of |block_size| so add padding as needed. Also record
+      # where this is written to since we'll need to put that in the
+      # footer.
+      vbmeta_offset = image.image_size
+      padding_needed = (round_to_multiple(len(vbmeta_blob), image.block_size) -
+                        len(vbmeta_blob))
+      vbmeta_blob_with_padding = vbmeta_blob + b'\0' * padding_needed
+
+      # Append vbmeta blob and footer
+      image.append_raw(vbmeta_blob_with_padding)
+      vbmeta_end_offset = vbmeta_offset + len(vbmeta_blob_with_padding)
+
+      # Now insert a DONT_CARE chunk with enough bytes such that the
+      # final Footer block is at the end of partition_size..
+      image.append_dont_care(partition_size - vbmeta_end_offset -
+                             1 * image.block_size)
+
+      # Generate the Footer that tells where the VBMeta footer
+      # is. Also put enough padding in the front of the footer since
+      # we'll write out an entire block.
+      footer = AvbFooter()
+      footer.original_image_size = original_image_size
+      footer.vbmeta_offset = vbmeta_offset
+      footer.vbmeta_size = len(vbmeta_blob)
+      footer_blob = footer.encode()
+      footer_blob_with_padding = (b'\0' * (image.block_size - AvbFooter.SIZE) +
+                                  footer_blob)
+      image.append_raw(footer_blob_with_padding)
+
+    except Exception as e:
+      # Truncate back to original size, then re-raise.
+      image.truncate(original_image_size)
+      raise AvbError('Appending VBMeta image failed: {}.'.format(e)) from e
+
+  def add_hash_footer(self, image_filename, partition_size,
+                      dynamic_partition_size, partition_name,
+                      hash_algorithm, salt, chain_partitions, algorithm_name,
+                      key_path,
+                      public_key_metadata_path, rollback_index, flags,
+                      rollback_index_location, props,
+                      props_from_file, kernel_cmdlines,
+                      setup_rootfs_from_kernel,
+                      include_descriptors_from_image, calc_max_image_size,
+                      signing_helper, signing_helper_with_files,
+                      release_string, append_to_release_string,
+                      output_vbmeta_image, do_not_append_vbmeta_image,
+                      print_required_libavb_version, use_persistent_digest,
+                      do_not_use_ab):
+    """Implementation of the add_hash_footer on unsparse images.
+
+    Arguments:
+      image_filename: File to add the footer to.
+      partition_size: Size of partition.
+      dynamic_partition_size: Calculate partition size based on image size.
+      partition_name: Name of partition (without A/B suffix).
+      hash_algorithm: Hash algorithm to use.
+      salt: Salt to use as a hexadecimal string or None to use /dev/urandom.
+      chain_partitions: List of partitions to chain.
+      algorithm_name: Name of algorithm to use.
+      key_path: Path to key to use or None.
+      public_key_metadata_path: Path to public key metadata or None.
+      rollback_index: Rollback index.
+      flags: Flags value to use in the image.
+      rollback_index_location: Location of the main vbmeta rollback index.
+      props: Properties to insert (List of strings of the form 'key:value').
+      props_from_file: Properties to insert (List of strings 'key:<path>').
+      kernel_cmdlines: Kernel cmdlines to insert (list of strings).
+      setup_rootfs_from_kernel: None or file to generate
+        dm-verity kernel cmdline from.
+      include_descriptors_from_image: List of file objects for which
+        to insert descriptors from.
+      calc_max_image_size: Don't store the footer - instead calculate the
+        maximum image size leaving enough room for metadata with the
+        given |partition_size|.
+      signing_helper: Program which signs a hash and return signature.
+      signing_helper_with_files: Same as signing_helper but uses files instead.
+      release_string: None or avbtool release string.
+      append_to_release_string: None or string to append.
+      output_vbmeta_image: If not None, also write vbmeta struct to this file.
+      do_not_append_vbmeta_image: If True, don't append vbmeta struct.
+      print_required_libavb_version: True to only print required libavb version.
+      use_persistent_digest: Use a persistent digest on device.
+      do_not_use_ab: This partition does not use A/B.
+
+    Raises:
+      AvbError: If an argument is incorrect of if adding of hash_footer failed.
+    """
+    if not partition_size and not dynamic_partition_size:
+      raise AvbError('--dynamic_partition_size required when not specifying a '
+                     'partition size')
+
+    if dynamic_partition_size and calc_max_image_size:
+      raise AvbError('--calc_max_image_size not supported with '
+                     '--dynamic_partition_size')
+
+    required_libavb_version_minor = 0
+    if use_persistent_digest or do_not_use_ab:
+      required_libavb_version_minor = 1
+    if rollback_index_location > 0:
+      required_libavb_version_minor = 2
+
+    # If we're asked to calculate minimum required libavb version, we're done.
+    if print_required_libavb_version:
+      print('1.{}'.format(required_libavb_version_minor))
+      return
+
+    # First, calculate the maximum image size such that an image
+    # this size + metadata (footer + vbmeta struct) fits in
+    # |partition_size|.
+    max_metadata_size = self.MAX_VBMETA_SIZE + self.MAX_FOOTER_SIZE
+    if not dynamic_partition_size and partition_size < max_metadata_size:
+      raise AvbError('Parition size of {} is too small. '
+                     'Needs to be at least {}'.format(
+                         partition_size, max_metadata_size))
+
+    # If we're asked to only calculate the maximum image size, we're done.
+    if calc_max_image_size:
+      print('{}'.format(partition_size - max_metadata_size))
+      return
+
+    image = ImageHandler(image_filename)
+
+    # If there's already a footer, truncate the image to its original
+    # size. This way 'avbtool add_hash_footer' is idempotent (modulo
+    # salts).
+    if image.image_size >= AvbFooter.SIZE:
+      image.seek(image.image_size - AvbFooter.SIZE)
+      try:
+        footer = AvbFooter(image.read(AvbFooter.SIZE))
+        # Existing footer found. Just truncate.
+        original_image_size = footer.original_image_size
+        image.truncate(footer.original_image_size)
+      except (LookupError, struct.error):
+        original_image_size = image.image_size
+    else:
+      # Image size is too small to possibly contain a footer.
+      original_image_size = image.image_size
+
+    if dynamic_partition_size:
+      partition_size = round_to_multiple(
+          original_image_size + max_metadata_size, image.block_size)
+
+    max_image_size = partition_size - max_metadata_size
+    if partition_size % image.block_size != 0:
+      raise AvbError('Partition size of {} is not a multiple of the image '
+                     'block size {}.'.format(partition_size,
+                                             image.block_size))
+
+    # If anything goes wrong from here-on, restore the image back to
+    # its original size.
+    try:
+      # If image size exceeds the maximum image size, fail.
+      if image.image_size > max_image_size:
+        raise AvbError('Image size of {} exceeds maximum image '
+                       'size of {} in order to fit in a partition '
+                       'size of {}.'.format(image.image_size, max_image_size,
+                                            partition_size))
+
+      digest_size = len(hashlib.new(hash_algorithm).digest())
+      if salt:
+        salt = binascii.unhexlify(salt)
+      elif salt is None and not use_persistent_digest:
+        # If salt is not explicitly specified, choose a hash that's the same
+        # size as the hash size. Don't populate a random salt if this
+        # descriptor is being created to use a persistent digest on device.
+        hash_size = digest_size
+        with open('/dev/urandom', 'rb') as f:
+          salt = f.read(hash_size)
+      else:
+        salt = b''
+
+      hasher = hashlib.new(hash_algorithm, salt)
+      # TODO(zeuthen): might want to read this in chunks to avoid
+      # memory pressure, then again, this is only supposed to be used
+      # on kernel/initramfs partitions. Possible optimization.
+      image.seek(0)
+      hasher.update(image.read(image.image_size))
+      digest = hasher.digest()
+
+      h_desc = AvbHashDescriptor()
+      h_desc.image_size = image.image_size
+      h_desc.hash_algorithm = hash_algorithm
+      h_desc.partition_name = partition_name
+      h_desc.salt = salt
+      h_desc.flags = 0
+      if do_not_use_ab:
+        h_desc.flags |= 1  # AVB_HASH_DESCRIPTOR_FLAGS_DO_NOT_USE_AB
+      if not use_persistent_digest:
+        h_desc.digest = digest
+
+      # Generate the VBMeta footer.
+      ht_desc_to_setup = None
+      vbmeta_blob = self._generate_vbmeta_blob(
+          algorithm_name, key_path, public_key_metadata_path, [h_desc],
+          chain_partitions, rollback_index, flags, rollback_index_location,
+          props, props_from_file,
+          kernel_cmdlines, setup_rootfs_from_kernel, ht_desc_to_setup,
+          include_descriptors_from_image, signing_helper,
+          signing_helper_with_files, release_string,
+          append_to_release_string, required_libavb_version_minor)
+
+      # Write vbmeta blob, if requested.
+      if output_vbmeta_image:
+        output_vbmeta_image.write(vbmeta_blob)
+
+      # Append vbmeta blob and footer, unless requested not to.
+      if not do_not_append_vbmeta_image:
+        # If the image isn't sparse, its size might not be a multiple of
+        # the block size. This will screw up padding later so just grow it.
+        if image.image_size % image.block_size != 0:
+          assert not image.is_sparse
+          padding_needed = image.block_size - (
+              image.image_size % image.block_size)
+          image.truncate(image.image_size + padding_needed)
+
+        # The append_raw() method requires content with size being a
+        # multiple of |block_size| so add padding as needed. Also record
+        # where this is written to since we'll need to put that in the
+        # footer.
+        vbmeta_offset = image.image_size
+        padding_needed = (
+            round_to_multiple(len(vbmeta_blob), image.block_size) -
+            len(vbmeta_blob))
+        vbmeta_blob_with_padding = vbmeta_blob + b'\0' * padding_needed
+
+        image.append_raw(vbmeta_blob_with_padding)
+        vbmeta_end_offset = vbmeta_offset + len(vbmeta_blob_with_padding)
+
+        # Now insert a DONT_CARE chunk with enough bytes such that the
+        # final Footer block is at the end of partition_size..
+        image.append_dont_care(partition_size - vbmeta_end_offset -
+                               1 * image.block_size)
+
+        # Generate the Footer that tells where the VBMeta footer
+        # is. Also put enough padding in the front of the footer since
+        # we'll write out an entire block.
+        footer = AvbFooter()
+        footer.original_image_size = original_image_size
+        footer.vbmeta_offset = vbmeta_offset
+        footer.vbmeta_size = len(vbmeta_blob)
+        footer_blob = footer.encode()
+        footer_blob_with_padding = (
+            b'\0' * (image.block_size - AvbFooter.SIZE) + footer_blob)
+        image.append_raw(footer_blob_with_padding)
+    except Exception as e:
+      # Truncate back to original size, then re-raise.
+      image.truncate(original_image_size)
+      raise AvbError('Adding hash_footer failed: {}.'.format(e)) from e
+
+  def add_hashtree_footer(self, image_filename, partition_size, partition_name,
+                          generate_fec, fec_num_roots, hash_algorithm,
+                          block_size, salt, chain_partitions, algorithm_name,
+                          key_path,
+                          public_key_metadata_path, rollback_index, flags,
+                          rollback_index_location,
+                          props, props_from_file, kernel_cmdlines,
+                          setup_rootfs_from_kernel,
+                          setup_as_rootfs_from_kernel,
+                          include_descriptors_from_image,
+                          calc_max_image_size, signing_helper,
+                          signing_helper_with_files,
+                          release_string, append_to_release_string,
+                          output_vbmeta_image, do_not_append_vbmeta_image,
+                          print_required_libavb_version,
+                          use_persistent_root_digest, do_not_use_ab,
+                          no_hashtree, check_at_most_once):
+    """Implements the 'add_hashtree_footer' command.
+
+    See https://gitlab.com/cryptsetup/cryptsetup/wikis/DMVerity for
+    more information about dm-verity and these hashes.
+
+    Arguments:
+      image_filename: File to add the footer to.
+      partition_size: Size of partition or 0 to put it right at the end.
+      partition_name: Name of partition (without A/B suffix).
+      generate_fec: If True, generate FEC codes.
+      fec_num_roots: Number of roots for FEC.
+      hash_algorithm: Hash algorithm to use.
+      block_size: Block size to use.
+      salt: Salt to use as a hexadecimal string or None to use /dev/urandom.
+      chain_partitions: List of partitions to chain.
+      algorithm_name: Name of algorithm to use.
+      key_path: Path to key to use or None.
+      public_key_metadata_path: Path to public key metadata or None.
+      rollback_index: Rollback index.
+      flags: Flags value to use in the image.
+      rollback_index_location: Location of the main vbmeta rollback index.
+      props: Properties to insert (List of strings of the form 'key:value').
+      props_from_file: Properties to insert (List of strings 'key:<path>').
+      kernel_cmdlines: Kernel cmdlines to insert (list of strings).
+      setup_rootfs_from_kernel: None or file to generate
+        dm-verity kernel cmdline from.
+      setup_as_rootfs_from_kernel: If True, generate dm-verity kernel
+        cmdline to set up rootfs.
+      include_descriptors_from_image: List of file objects for which
+        to insert descriptors from.
+      calc_max_image_size: Don't store the hashtree or footer - instead
+        calculate the maximum image size leaving enough room for hashtree
+        and metadata with the given |partition_size|.
+      signing_helper: Program which signs a hash and return signature.
+      signing_helper_with_files: Same as signing_helper but uses files instead.
+      release_string: None or avbtool release string.
+      append_to_release_string: None or string to append.
+      output_vbmeta_image: If not None, also write vbmeta struct to this file.
+      do_not_append_vbmeta_image: If True, don't append vbmeta struct.
+      print_required_libavb_version: True to only print required libavb version.
+      use_persistent_root_digest: Use a persistent root digest on device.
+      do_not_use_ab: The partition does not use A/B.
+      no_hashtree: Do not append hashtree. Set size in descriptor as zero.
+      check_at_most_once: Set to verify data blocks only the first time they
+        are read from the data device.
+
+    Raises:
+      AvbError: If an argument is incorrect or adding the hashtree footer
+          failed.
+    """
+    required_libavb_version_minor = 0
+    if use_persistent_root_digest or do_not_use_ab or check_at_most_once:
+      required_libavb_version_minor = 1
+    if rollback_index_location > 0:
+      required_libavb_version_minor = 2
+
+    # If we're asked to calculate minimum required libavb version, we're done.
+    if print_required_libavb_version:
+      print('1.{}'.format(required_libavb_version_minor))
+      return
+
+    digest_size = len(create_avb_hashtree_hasher(hash_algorithm, b'')
+                      .digest())
+    digest_padding = round_to_pow2(digest_size) - digest_size
+
+    # If |partition_size| is given (e.g. not 0), calculate the maximum image
+    # size such that an image this size + the hashtree + metadata (footer +
+    # vbmeta struct) fits in |partition_size|. We use very conservative figures
+    # for metadata.
+    if partition_size > 0:
+      max_tree_size = 0
+      max_fec_size = 0
+      if not no_hashtree:
+        (_, max_tree_size) = calc_hash_level_offsets(
+            partition_size, block_size, digest_size + digest_padding)
+        if generate_fec:
+          max_fec_size = calc_fec_data_size(partition_size, fec_num_roots)
+      max_metadata_size = (max_fec_size + max_tree_size +
+                           self.MAX_VBMETA_SIZE +
+                           self.MAX_FOOTER_SIZE)
+      max_image_size = partition_size - max_metadata_size
+    else:
+      max_image_size = 0
+
+    # If we're asked to only calculate the maximum image size, we're done.
+    if calc_max_image_size:
+      print('{}'.format(max_image_size))
+      return
+
+    image = ImageHandler(image_filename)
+
+    if partition_size > 0:
+      if partition_size % image.block_size != 0:
+        raise AvbError('Partition size of {} is not a multiple of the image '
+                       'block size {}.'.format(partition_size,
+                                               image.block_size))
+    elif image.image_size % image.block_size != 0:
+      raise AvbError('File size of {} is not a multiple of the image '
+                     'block size {}.'.format(image.image_size,
+                                             image.block_size))
+
+    # If there's already a footer, truncate the image to its original
+    # size. This way 'avbtool add_hashtree_footer' is idempotent
+    # (modulo salts).
+    if image.image_size >= AvbFooter.SIZE:
+      image.seek(image.image_size - AvbFooter.SIZE)
+      try:
+        footer = AvbFooter(image.read(AvbFooter.SIZE))
+        # Existing footer found. Just truncate.
+        original_image_size = footer.original_image_size
+        image.truncate(footer.original_image_size)
+      except (LookupError, struct.error):
+        original_image_size = image.image_size
+    else:
+      # Image size is too small to possibly contain a footer.
+      original_image_size = image.image_size
+
+    # If anything goes wrong from here-on, restore the image back to
+    # its original size.
+    try:
+      # Ensure image is multiple of block_size.
+      rounded_image_size = round_to_multiple(image.image_size, block_size)
+      if rounded_image_size > image.image_size:
+        image.append_raw('\0' * (rounded_image_size - image.image_size))
+
+      # If image size exceeds the maximum image size, fail.
+      if partition_size > 0:
+        if image.image_size > max_image_size:
+          raise AvbError('Image size of {} exceeds maximum image '
+                         'size of {} in order to fit in a partition '
+                         'size of {}.'.format(image.image_size, max_image_size,
+                                              partition_size))
+
+      if salt:
+        salt = binascii.unhexlify(salt)
+      elif salt is None and not use_persistent_root_digest:
+        # If salt is not explicitly specified, choose a hash that's the same
+        # size as the hash size. Don't populate a random salt if this
+        # descriptor is being created to use a persistent digest on device.
+        hash_size = digest_size
+        with open('/dev/urandom', 'rb') as f:
+          salt = f.read(hash_size)
+      else:
+        salt = b''
+
+      # Hashes are stored upside down so we need to calculate hash
+      # offsets in advance.
+      (hash_level_offsets, tree_size) = calc_hash_level_offsets(
+          image.image_size, block_size, digest_size + digest_padding)
+
+      # If the image isn't sparse, its size might not be a multiple of
+      # the block size. This will screw up padding later so just grow it.
+      if image.image_size % image.block_size != 0:
+        assert not image.is_sparse
+        padding_needed = image.block_size - (image.image_size%image.block_size)
+        image.truncate(image.image_size + padding_needed)
+
+      # Generate the tree and add padding as needed.
+      tree_offset = image.image_size
+      root_digest, hash_tree = generate_hash_tree(image, image.image_size,
+                                                  block_size,
+                                                  hash_algorithm, salt,
+                                                  digest_padding,
+                                                  hash_level_offsets,
+                                                  tree_size)
+
+      # Generate HashtreeDescriptor with details about the tree we
+      # just generated.
+      if no_hashtree:
+        tree_size = 0
+        hash_tree = b''
+      ht_desc = AvbHashtreeDescriptor()
+      ht_desc.dm_verity_version = 1
+      ht_desc.image_size = image.image_size
+      ht_desc.tree_offset = tree_offset
+      ht_desc.tree_size = tree_size
+      ht_desc.data_block_size = block_size
+      ht_desc.hash_block_size = block_size
+      ht_desc.hash_algorithm = hash_algorithm
+      ht_desc.partition_name = partition_name
+      ht_desc.salt = salt
+      if do_not_use_ab:
+        ht_desc.flags |= AvbHashtreeDescriptor.FLAGS_DO_NOT_USE_AB
+      if not use_persistent_root_digest:
+        ht_desc.root_digest = root_digest
+      if check_at_most_once:
+        ht_desc.flags |= AvbHashtreeDescriptor.FLAGS_CHECK_AT_MOST_ONCE
+
+      # Write the hash tree
+      padding_needed = (round_to_multiple(len(hash_tree), image.block_size) -
+                        len(hash_tree))
+      hash_tree_with_padding = hash_tree + b'\0' * padding_needed
+      image.append_raw(hash_tree_with_padding)
+      len_hashtree_and_fec = len(hash_tree_with_padding)
+
+      # Generate FEC codes, if requested.
+      if generate_fec:
+        if no_hashtree:
+          fec_data = b''
+        else:
+          fec_data = generate_fec_data(image_filename, fec_num_roots)
+        padding_needed = (round_to_multiple(len(fec_data), image.block_size) -
+                          len(fec_data))
+        fec_data_with_padding = fec_data + b'\0' * padding_needed
+        fec_offset = image.image_size
+        image.append_raw(fec_data_with_padding)
+        len_hashtree_and_fec += len(fec_data_with_padding)
+        # Update the hashtree descriptor.
+        ht_desc.fec_num_roots = fec_num_roots
+        ht_desc.fec_offset = fec_offset
+        ht_desc.fec_size = len(fec_data)
+
+      ht_desc_to_setup = None
+      if setup_as_rootfs_from_kernel:
+        ht_desc_to_setup = ht_desc
+
+      # Generate the VBMeta footer and add padding as needed.
+      vbmeta_offset = tree_offset + len_hashtree_and_fec
+      vbmeta_blob = self._generate_vbmeta_blob(
+          algorithm_name, key_path, public_key_metadata_path, [ht_desc],
+          chain_partitions, rollback_index, flags, rollback_index_location,
+          props, props_from_file,
+          kernel_cmdlines, setup_rootfs_from_kernel, ht_desc_to_setup,
+          include_descriptors_from_image, signing_helper,
+          signing_helper_with_files, release_string,
+          append_to_release_string, required_libavb_version_minor)
+      padding_needed = (round_to_multiple(len(vbmeta_blob), image.block_size) -
+                        len(vbmeta_blob))
+      vbmeta_blob_with_padding = vbmeta_blob + b'\0' * padding_needed
+
+      # Write vbmeta blob, if requested.
+      if output_vbmeta_image:
+        output_vbmeta_image.write(vbmeta_blob)
+
+      # Append vbmeta blob and footer, unless requested not to.
+      if not do_not_append_vbmeta_image:
+        image.append_raw(vbmeta_blob_with_padding)
+
+        # Now insert a DONT_CARE chunk with enough bytes such that the
+        # final Footer block is at the end of partition_size..
+        if partition_size > 0:
+          image.append_dont_care(partition_size - image.image_size -
+                                 1 * image.block_size)
+
+        # Generate the Footer that tells where the VBMeta footer
+        # is. Also put enough padding in the front of the footer since
+        # we'll write out an entire block.
+        footer = AvbFooter()
+        footer.original_image_size = original_image_size
+        footer.vbmeta_offset = vbmeta_offset
+        footer.vbmeta_size = len(vbmeta_blob)
+        footer_blob = footer.encode()
+        footer_blob_with_padding = (
+            b'\0' * (image.block_size - AvbFooter.SIZE) + footer_blob)
+        image.append_raw(footer_blob_with_padding)
+
+    except Exception as e:
+      # Truncate back to original size, then re-raise.
+      image.truncate(original_image_size)
+      raise AvbError('Adding hashtree_footer failed: {}.'.format(e)) from e
+
+  def make_atx_certificate(self, output, authority_key_path, subject_key_path,
+                           subject_key_version, subject,
+                           is_intermediate_authority, usage, signing_helper,
+                           signing_helper_with_files):
+    """Implements the 'make_atx_certificate' command.
+
+    Android Things certificates are required for Android Things public key
+    metadata. They chain the vbmeta signing key for a particular product back to
+    a fused, permanent root key. These certificates are fixed-length and fixed-
+    format with the explicit goal of not parsing ASN.1 in bootloader code.
+
+    Arguments:
+      output: Certificate will be written to this file on success.
+      authority_key_path: A PEM file path with the authority private key.
+                          If None, then a certificate will be created without a
+                          signature. The signature can be created out-of-band
+                          and appended.
+      subject_key_path: Path to a PEM or DER subject public key.
+      subject_key_version: A 64-bit version value. If this is None, the number
+                           of seconds since the epoch is used.
+      subject: A subject identifier. For Product Signing Key certificates this
+               should be the same Product ID found in the permanent attributes.
+      is_intermediate_authority: True if the certificate is for an intermediate
+                                 authority.
+      usage: If not empty, overrides the cert usage with a hash of this value.
+      signing_helper: Program which signs a hash and returns the signature.
+      signing_helper_with_files: Same as signing_helper but uses files instead.
+
+    Raises:
+      AvbError: If there an error during signing.
+    """
+    signed_data = bytearray()
+    signed_data.extend(struct.pack('<I', 1))  # Format Version
+    signed_data.extend(RSAPublicKey(subject_key_path).encode())
+    hasher = hashlib.sha256()
+    hasher.update(subject)
+    signed_data.extend(hasher.digest())
+    if not usage:
+      usage = 'com.google.android.things.vboot'
+      if is_intermediate_authority:
+        usage += '.ca'
+    hasher = hashlib.sha256()
+    hasher.update(usage.encode('ascii'))
+    signed_data.extend(hasher.digest())
+    if subject_key_version is None:
+      subject_key_version = int(time.time())
+    signed_data.extend(struct.pack('<Q', subject_key_version))
+    signature = b''
+    if authority_key_path:
+      rsa_key = RSAPublicKey(authority_key_path)
+      algorithm_name = 'SHA512_RSA4096'
+      signature = rsa_key.sign(algorithm_name, signed_data, signing_helper,
+                               signing_helper_with_files)
+    output.write(signed_data)
+    output.write(signature)
+
+  def make_atx_permanent_attributes(self, output, root_authority_key_path,
+                                    product_id):
+    """Implements the 'make_atx_permanent_attributes' command.
+
+    Android Things permanent attributes are designed to be permanent for a
+    particular product and a hash of these attributes should be fused into
+    hardware to enforce this.
+
+    Arguments:
+      output: Attributes will be written to this file on success.
+      root_authority_key_path: Path to a PEM or DER public key for
+        the root authority.
+      product_id: A 16-byte Product ID.
+
+    Raises:
+      AvbError: If an argument is incorrect.
+    """
+    EXPECTED_PRODUCT_ID_SIZE = 16  # pylint: disable=invalid-name
+    if len(product_id) != EXPECTED_PRODUCT_ID_SIZE:
+      raise AvbError('Invalid Product ID length.')
+    output.write(struct.pack('<I', 1))  # Format Version
+    output.write(RSAPublicKey(root_authority_key_path).encode())
+    output.write(product_id)
+
+  def make_atx_metadata(self, output, intermediate_key_certificate,
+                        product_key_certificate):
+    """Implements the 'make_atx_metadata' command.
+
+    Android Things metadata are included in vbmeta images to facilitate
+    verification. The output of this command can be used as the
+    public_key_metadata argument to other commands.
+
+    Arguments:
+      output: Metadata will be written to this file on success.
+      intermediate_key_certificate: A certificate file as output by
+                                    make_atx_certificate with
+                                    is_intermediate_authority set to true.
+      product_key_certificate: A certificate file as output by
+                               make_atx_certificate with
+                               is_intermediate_authority set to false.
+
+    Raises:
+      AvbError: If an argument is incorrect.
+    """
+    EXPECTED_CERTIFICATE_SIZE = 1620  # pylint: disable=invalid-name
+    if len(intermediate_key_certificate) != EXPECTED_CERTIFICATE_SIZE:
+      raise AvbError('Invalid intermediate key certificate length.')
+    if len(product_key_certificate) != EXPECTED_CERTIFICATE_SIZE:
+      raise AvbError('Invalid product key certificate length.')
+    output.write(struct.pack('<I', 1))  # Format Version
+    output.write(intermediate_key_certificate)
+    output.write(product_key_certificate)
+
+  def make_atx_unlock_credential(self, output, intermediate_key_certificate,
+                                 unlock_key_certificate, challenge_path,
+                                 unlock_key_path, signing_helper,
+                                 signing_helper_with_files):
+    """Implements the 'make_atx_unlock_credential' command.
+
+    Android Things unlock credentials can be used to authorize the unlock of AVB
+    on a device. These credentials are presented to an Android Things bootloader
+    via the fastboot interface in response to a 16-byte challenge. This method
+    creates all fields of the credential except the challenge signature field
+    (which is the last field) and can optionally create the challenge signature
+    field as well if a challenge and the unlock_key_path is provided.
+
+    Arguments:
+      output: The credential will be written to this file on success.
+      intermediate_key_certificate: A certificate file as output by
+                                    make_atx_certificate with
+                                    is_intermediate_authority set to true.
+      unlock_key_certificate: A certificate file as output by
+                              make_atx_certificate with
+                              is_intermediate_authority set to false and the
+                              usage set to
+                              'com.google.android.things.vboot.unlock'.
+      challenge_path: [optional] A path to the challenge to sign.
+      unlock_key_path: [optional] A PEM file path with the unlock private key.
+      signing_helper: Program which signs a hash and returns the signature.
+      signing_helper_with_files: Same as signing_helper but uses files instead.
+
+    Raises:
+      AvbError: If an argument is incorrect or an error occurs during signing.
+    """
+    EXPECTED_CERTIFICATE_SIZE = 1620  # pylint: disable=invalid-name
+    EXPECTED_CHALLENGE_SIZE = 16  # pylint: disable=invalid-name
+    if len(intermediate_key_certificate) != EXPECTED_CERTIFICATE_SIZE:
+      raise AvbError('Invalid intermediate key certificate length.')
+    if len(unlock_key_certificate) != EXPECTED_CERTIFICATE_SIZE:
+      raise AvbError('Invalid product key certificate length.')
+    challenge = b''
+    if challenge_path:
+      with open(challenge_path, 'rb') as f:
+        challenge = f.read()
+      if len(challenge) != EXPECTED_CHALLENGE_SIZE:
+        raise AvbError('Invalid unlock challenge length.')
+    output.write(struct.pack('<I', 1))  # Format Version
+    output.write(intermediate_key_certificate)
+    output.write(unlock_key_certificate)
+    if challenge_path and unlock_key_path:
+      rsa_key = RSAPublicKey(unlock_key_path)
+      algorithm_name = 'SHA512_RSA4096'
+      signature = rsa_key.sign(algorithm_name, challenge, signing_helper,
+                               signing_helper_with_files)
+      output.write(signature)
+
+
+def calc_hash_level_offsets(image_size, block_size, digest_size):
+  """Calculate the offsets of all the hash-levels in a Merkle-tree.
+
+  Arguments:
+    image_size: The size of the image to calculate a Merkle-tree for.
+    block_size: The block size, e.g. 4096.
+    digest_size: The size of each hash, e.g. 32 for SHA-256.
+
+  Returns:
+    A tuple where the first argument is an array of offsets and the
+    second is size of the tree, in bytes.
+  """
+  level_offsets = []
+  level_sizes = []
+  tree_size = 0
+
+  num_levels = 0
+  size = image_size
+  while size > block_size:
+    num_blocks = (size + block_size - 1) // block_size
+    level_size = round_to_multiple(num_blocks * digest_size, block_size)
+
+    level_sizes.append(level_size)
+    tree_size += level_size
+    num_levels += 1
+
+    size = level_size
+
+  for n in range(0, num_levels):
+    offset = 0
+    for m in range(n + 1, num_levels):
+      offset += level_sizes[m]
+    level_offsets.append(offset)
+
+  return level_offsets, tree_size
+
+
+# See system/extras/libfec/include/fec/io.h for these definitions.
+FEC_FOOTER_FORMAT = '<LLLLLQ32s'
+FEC_MAGIC = 0xfecfecfe
+
+
+def calc_fec_data_size(image_size, num_roots):
+  """Calculates how much space FEC data will take.
+
+  Arguments:
+    image_size: The size of the image.
+    num_roots: Number of roots.
+
+  Returns:
+    The number of bytes needed for FEC for an image of the given size
+    and with the requested number of FEC roots.
+
+  Raises:
+    ValueError: If output from the 'fec' tool is invalid.
+  """
+  p = subprocess.Popen(
+      ['fec', '--print-fec-size', str(image_size), '--roots', str(num_roots)],
+      stdout=subprocess.PIPE,
+      stderr=subprocess.PIPE)
+  (pout, perr) = p.communicate()
+  retcode = p.wait()
+  if retcode != 0:
+    raise ValueError('Error invoking fec: {}'.format(perr))
+  return int(pout)
+
+
+def generate_fec_data(image_filename, num_roots):
+  """Generate FEC codes for an image.
+
+  Arguments:
+    image_filename: The filename of the image.
+    num_roots: Number of roots.
+
+  Returns:
+    The FEC data blob as bytes.
+
+  Raises:
+    ValueError: If calling the 'fec' tool failed or the output is invalid.
+  """
+  with tempfile.NamedTemporaryFile() as fec_tmpfile:
+    try:
+      subprocess.check_call(
+          ['fec', '--encode', '--roots', str(num_roots), image_filename,
+           fec_tmpfile.name],
+          stderr=open(os.devnull, 'wb'))
+    except subprocess.CalledProcessError as e:
+      raise ValueError('Execution of \'fec\' tool failed: {}.'
+                       .format(e)) from e
+    fec_data = fec_tmpfile.read()
+
+  footer_size = struct.calcsize(FEC_FOOTER_FORMAT)
+  footer_data = fec_data[-footer_size:]
+  (magic, _, _, num_roots, fec_size, _, _) = struct.unpack(FEC_FOOTER_FORMAT,
+                                                           footer_data)
+  if magic != FEC_MAGIC:
+    raise ValueError('Unexpected magic in FEC footer')
+  return fec_data[0:fec_size]
+
+
+def generate_hash_tree(image, image_size, block_size, hash_alg_name, salt,
+                       digest_padding, hash_level_offsets, tree_size):
+  """Generates a Merkle-tree for a file.
+
+  Arguments:
+    image: The image, as a file.
+    image_size: The size of the image.
+    block_size: The block size, e.g. 4096.
+    hash_alg_name: The hash algorithm, e.g. 'sha256' or 'sha1'.
+    salt: The salt to use.
+    digest_padding: The padding for each digest.
+    hash_level_offsets: The offsets from calc_hash_level_offsets().
+    tree_size: The size of the tree, in number of bytes.
+
+  Returns:
+    A tuple where the first element is the top-level hash as bytes and the
+    second element is the hash-tree as bytes.
+  """
+  hash_ret = bytearray(tree_size)
+  hash_src_offset = 0
+  hash_src_size = image_size
+  level_num = 0
+
+  # If there is only one block, returns the top-level hash directly.
+  if hash_src_size == block_size:
+    hasher = create_avb_hashtree_hasher(hash_alg_name, salt)
+    image.seek(0)
+    hasher.update(image.read(block_size))
+    return hasher.digest(), bytes(hash_ret)
+
+  while hash_src_size > block_size:
+    level_output_list = []
+    remaining = hash_src_size
+    while remaining > 0:
+      hasher = create_avb_hashtree_hasher(hash_alg_name, salt)
+      # Only read from the file for the first level - for subsequent
+      # levels, access the array we're building.
+      if level_num == 0:
+        image.seek(hash_src_offset + hash_src_size - remaining)
+        data = image.read(min(remaining, block_size))
+      else:
+        offset = hash_level_offsets[level_num - 1] + hash_src_size - remaining
+        data = hash_ret[offset:offset + block_size]
+      hasher.update(data)
+
+      remaining -= len(data)
+      if len(data) < block_size:
+        hasher.update(b'\0' * (block_size - len(data)))
+      level_output_list.append(hasher.digest())
+      if digest_padding > 0:
+        level_output_list.append(b'\0' * digest_padding)
+
+    level_output = b''.join(level_output_list)
+
+    padding_needed = (round_to_multiple(
+        len(level_output), block_size) - len(level_output))
+    level_output += b'\0' * padding_needed
+
+    # Copy level-output into resulting tree.
+    offset = hash_level_offsets[level_num]
+    hash_ret[offset:offset + len(level_output)] = level_output
+
+    # Continue on to the next level.
+    hash_src_size = len(level_output)
+    level_num += 1
+
+  hasher = create_avb_hashtree_hasher(hash_alg_name, salt)
+  hasher.update(level_output)
+  return hasher.digest(), bytes(hash_ret)
+
+
+class AvbTool(object):
+  """Object for avbtool command-line tool."""
+
+  def __init__(self):
+    """Initializer method."""
+    self.avb = Avb()
+
+  def _add_common_args(self, sub_parser):
+    """Adds arguments used by several sub-commands.
+
+    Arguments:
+      sub_parser: The parser to add arguments to.
+    """
+    sub_parser.add_argument('--algorithm',
+                            help='Algorithm to use (default: NONE)',
+                            metavar='ALGORITHM',
+                            default='NONE')
+    sub_parser.add_argument('--key',
+                            help='Path to RSA private key file',
+                            metavar='KEY',
+                            required=False)
+    sub_parser.add_argument('--signing_helper',
+                            help='Path to helper used for signing',
+                            metavar='APP',
+                            default=None,
+                            required=False)
+    sub_parser.add_argument('--signing_helper_with_files',
+                            help='Path to helper used for signing using files',
+                            metavar='APP',
+                            default=None,
+                            required=False)
+    sub_parser.add_argument('--public_key_metadata',
+                            help='Path to public key metadata file',
+                            metavar='KEY_METADATA',
+                            required=False)
+    sub_parser.add_argument('--rollback_index',
+                            help='Rollback Index',
+                            type=parse_number,
+                            default=0)
+    sub_parser.add_argument('--rollback_index_location',
+                            help='Location of main vbmeta Rollback Index',
+                            type=parse_number,
+                            default=0)
+    # This is used internally for unit tests. Do not include in --help output.
+    sub_parser.add_argument('--internal_release_string',
+                            help=argparse.SUPPRESS)
+    sub_parser.add_argument('--append_to_release_string',
+                            help='Text to append to release string',
+                            metavar='STR')
+    sub_parser.add_argument('--prop',
+                            help='Add property',
+                            metavar='KEY:VALUE',
+                            action='append')
+    sub_parser.add_argument('--prop_from_file',
+                            help='Add property from file',
+                            metavar='KEY:PATH',
+                            action='append')
+    sub_parser.add_argument('--kernel_cmdline',
+                            help='Add kernel cmdline',
+                            metavar='CMDLINE',
+                            action='append')
+    # TODO(zeuthen): the --setup_rootfs_from_kernel option used to be called
+    # --generate_dm_verity_cmdline_from_hashtree. Remove support for the latter
+    # at some future point.
+    sub_parser.add_argument('--setup_rootfs_from_kernel',
+                            '--generate_dm_verity_cmdline_from_hashtree',
+                            metavar='IMAGE',
+                            help='Adds kernel cmdline to set up IMAGE',
+                            type=argparse.FileType('rb'))
+    sub_parser.add_argument('--include_descriptors_from_image',
+                            help='Include descriptors from image',
+                            metavar='IMAGE',
+                            action='append',
+                            type=argparse.FileType('rb'))
+    sub_parser.add_argument('--print_required_libavb_version',
+                            help=('Don\'t store the footer - '
+                                  'instead calculate the required libavb '
+                                  'version for the given options.'),
+                            action='store_true')
+    # These are only allowed from top-level vbmeta and boot-in-lieu-of-vbmeta.
+    sub_parser.add_argument('--chain_partition',
+                            help='Allow signed integrity-data for partition',
+                            metavar='PART_NAME:ROLLBACK_SLOT:KEY_PATH',
+                            action='append')
+    sub_parser.add_argument('--flags',
+                            help='VBMeta flags',
+                            type=parse_number,
+                            default=0)
+    sub_parser.add_argument('--set_hashtree_disabled_flag',
+                            help='Set the HASHTREE_DISABLED flag',
+                            action='store_true')
+
+  def _add_common_footer_args(self, sub_parser):
+    """Adds arguments used by add_*_footer sub-commands.
+
+    Arguments:
+      sub_parser: The parser to add arguments to.
+    """
+    sub_parser.add_argument('--use_persistent_digest',
+                            help='Use a persistent digest on device instead of '
+                                 'storing the digest in the descriptor. This '
+                                 'cannot be used with A/B so must be combined '
+                                 'with --do_not_use_ab when an A/B suffix is '
+                                 'expected at runtime.',
+                            action='store_true')
+    sub_parser.add_argument('--do_not_use_ab',
+                            help='The partition does not use A/B even when an '
+                                 'A/B suffix is present. This must not be used '
+                                 'for vbmeta or chained partitions.',
+                            action='store_true')
+
+  def _fixup_common_args(self, args):
+    """Common fixups needed by subcommands.
+
+    Arguments:
+      args: Arguments to modify.
+
+    Returns:
+      The modified arguments.
+    """
+    if args.set_hashtree_disabled_flag:
+      args.flags |= AVB_VBMETA_IMAGE_FLAGS_HASHTREE_DISABLED
+    return args
+
+  def run(self, argv):
+    """Command-line processor.
+
+    Arguments:
+      argv: Pass sys.argv from main.
+    """
+    parser = argparse.ArgumentParser()
+    subparsers = parser.add_subparsers(title='subcommands')
+
+    sub_parser = subparsers.add_parser(
+        'generate_test_image',
+        help=('Generates a test image with a known pattern for testing: '
+              '0x00 0x01 0x02 ... 0xff 0x00 0x01 ...'))
+    sub_parser.add_argument('--image_size',
+                            help='Size of image to generate.',
+                            type=parse_number,
+                            required=True)
+    sub_parser.add_argument('--start_byte',
+                            help='Integer for the start byte of the pattern.',
+                            type=parse_number,
+                            default=0)
+    sub_parser.add_argument('--output',
+                            help='Output file name.',
+                            type=argparse.FileType('wb'),
+                            default=sys.stdout)
+    sub_parser.set_defaults(func=self.generate_test_image)
+
+    sub_parser = subparsers.add_parser('version',
+                                       help='Prints version of avbtool.')
+    sub_parser.set_defaults(func=self.version)
+
+    sub_parser = subparsers.add_parser('extract_public_key',
+                                       help='Extract public key.')
+    sub_parser.add_argument('--key',
+                            help='Path to RSA private key file',
+                            required=True)
+    sub_parser.add_argument('--output',
+                            help='Output file name',
+                            type=argparse.FileType('wb'),
+                            required=True)
+    sub_parser.set_defaults(func=self.extract_public_key)
+
+    sub_parser = subparsers.add_parser('make_vbmeta_image',
+                                       help='Makes a vbmeta image.')
+    sub_parser.add_argument('--output',
+                            help='Output file name',
+                            type=argparse.FileType('wb'))
+    sub_parser.add_argument('--padding_size',
+                            metavar='NUMBER',
+                            help='If non-zero, pads output with NUL bytes so '
+                                 'its size is a multiple of NUMBER '
+                                 '(default: 0)',
+                            type=parse_number,
+                            default=0)
+    self._add_common_args(sub_parser)
+    sub_parser.set_defaults(func=self.make_vbmeta_image)
+
+    sub_parser = subparsers.add_parser('add_hash_footer',
+                                       help='Add hashes and footer to image.')
+    sub_parser.add_argument('--image',
+                            help='Image to add hashes to',
+                            type=argparse.FileType('rb+'))
+    sub_parser.add_argument('--partition_size',
+                            help='Partition size',
+                            type=parse_number)
+    sub_parser.add_argument('--dynamic_partition_size',
+                            help='Calculate partition size based on image size',
+                            action='store_true')
+    sub_parser.add_argument('--partition_name',
+                            help='Partition name',
+                            default=None)
+    sub_parser.add_argument('--hash_algorithm',
+                            help='Hash algorithm to use (default: sha256)',
+                            default='sha256')
+    sub_parser.add_argument('--salt',
+                            help='Salt in hex (default: /dev/urandom)')
+    sub_parser.add_argument('--calc_max_image_size',
+                            help=('Don\'t store the footer - '
+                                  'instead calculate the maximum image size '
+                                  'leaving enough room for metadata with '
+                                  'the given partition size.'),
+                            action='store_true')
+    sub_parser.add_argument('--output_vbmeta_image',
+                            help='Also write vbmeta struct to file',
+                            type=argparse.FileType('wb'))
+    sub_parser.add_argument('--do_not_append_vbmeta_image',
+                            help=('Do not append vbmeta struct or footer '
+                                  'to the image'),
+                            action='store_true')
+    self._add_common_args(sub_parser)
+    self._add_common_footer_args(sub_parser)
+    sub_parser.set_defaults(func=self.add_hash_footer)
+
+    sub_parser = subparsers.add_parser('append_vbmeta_image',
+                                       help='Append vbmeta image to image.')
+    sub_parser.add_argument('--image',
+                            help='Image to append vbmeta blob to',
+                            type=argparse.FileType('rb+'))
+    sub_parser.add_argument('--partition_size',
+                            help='Partition size',
+                            type=parse_number,
+                            required=True)
+    sub_parser.add_argument('--vbmeta_image',
+                            help='Image with vbmeta blob to append',
+                            type=argparse.FileType('rb'))
+    sub_parser.set_defaults(func=self.append_vbmeta_image)
+
+    sub_parser = subparsers.add_parser(
+        'add_hashtree_footer',
+        help='Add hashtree and footer to image.')
+    sub_parser.add_argument('--image',
+                            help='Image to add hashtree to',
+                            type=argparse.FileType('rb+'))
+    sub_parser.add_argument('--partition_size',
+                            help='Partition size',
+                            default=0,
+                            type=parse_number)
+    sub_parser.add_argument('--partition_name',
+                            help='Partition name',
+                            default='')
+    sub_parser.add_argument('--hash_algorithm',
+                            help='Hash algorithm to use (default: sha1)',
+                            default='sha1')
+    sub_parser.add_argument('--salt',
+                            help='Salt in hex (default: /dev/urandom)')
+    sub_parser.add_argument('--block_size',
+                            help='Block size (default: 4096)',
+                            type=parse_number,
+                            default=4096)
+    # TODO(zeuthen): The --generate_fec option was removed when we
+    # moved to generating FEC by default. To avoid breaking existing
+    # users needing to transition we simply just print a warning below
+    # in add_hashtree_footer(). Remove this option and the warning at
+    # some point in the future.
+    sub_parser.add_argument('--generate_fec',
+                            help=argparse.SUPPRESS,
+                            action='store_true')
+    sub_parser.add_argument(
+        '--do_not_generate_fec',
+        help='Do not generate forward-error-correction codes',
+        action='store_true')
+    sub_parser.add_argument('--fec_num_roots',
+                            help='Number of roots for FEC (default: 2)',
+                            type=parse_number,
+                            default=2)
+    sub_parser.add_argument('--calc_max_image_size',
+                            help=('Don\'t store the hashtree or footer - '
+                                  'instead calculate the maximum image size '
+                                  'leaving enough room for hashtree '
+                                  'and metadata with the given partition '
+                                  'size.'),
+                            action='store_true')
+    sub_parser.add_argument('--output_vbmeta_image',
+                            help='Also write vbmeta struct to file',
+                            type=argparse.FileType('wb'))
+    sub_parser.add_argument('--do_not_append_vbmeta_image',
+                            help=('Do not append vbmeta struct or footer '
+                                  'to the image'),
+                            action='store_true')
+    # This is different from --setup_rootfs_from_kernel insofar that
+    # it doesn't take an IMAGE, the generated cmdline will be for the
+    # hashtree we're adding.
+    sub_parser.add_argument('--setup_as_rootfs_from_kernel',
+                            action='store_true',
+                            help='Adds kernel cmdline for setting up rootfs')
+    sub_parser.add_argument('--no_hashtree',
+                            action='store_true',
+                            help='Do not append hashtree')
+    sub_parser.add_argument('--check_at_most_once',
+                            action='store_true',
+                            help='Set to verify data block only once')
+    self._add_common_args(sub_parser)
+    self._add_common_footer_args(sub_parser)
+    sub_parser.set_defaults(func=self.add_hashtree_footer)
+
+    sub_parser = subparsers.add_parser('erase_footer',
+                                       help='Erase footer from an image.')
+    sub_parser.add_argument('--image',
+                            help='Image with a footer',
+                            type=argparse.FileType('rb+'),
+                            required=True)
+    sub_parser.add_argument('--keep_hashtree',
+                            help='Keep the hashtree and FEC in the image',
+                            action='store_true')
+    sub_parser.set_defaults(func=self.erase_footer)
+
+    sub_parser = subparsers.add_parser('zero_hashtree',
+                                       help='Zero out hashtree and FEC data.')
+    sub_parser.add_argument('--image',
+                            help='Image with a footer',
+                            type=argparse.FileType('rb+'),
+                            required=True)
+    sub_parser.set_defaults(func=self.zero_hashtree)
+
+    sub_parser = subparsers.add_parser(
+        'extract_vbmeta_image',
+        help='Extracts vbmeta from an image with a footer.')
+    sub_parser.add_argument('--image',
+                            help='Image with footer',
+                            type=argparse.FileType('rb'),
+                            required=True)
+    sub_parser.add_argument('--output',
+                            help='Output file name',
+                            type=argparse.FileType('wb'))
+    sub_parser.add_argument('--padding_size',
+                            metavar='NUMBER',
+                            help='If non-zero, pads output with NUL bytes so '
+                                 'its size is a multiple of NUMBER '
+                                 '(default: 0)',
+                            type=parse_number,
+                            default=0)
+    sub_parser.set_defaults(func=self.extract_vbmeta_image)
+
+    sub_parser = subparsers.add_parser('resize_image',
+                                       help='Resize image with a footer.')
+    sub_parser.add_argument('--image',
+                            help='Image with a footer',
+                            type=argparse.FileType('rb+'),
+                            required=True)
+    sub_parser.add_argument('--partition_size',
+                            help='New partition size',
+                            type=parse_number)
+    sub_parser.set_defaults(func=self.resize_image)
+
+    sub_parser = subparsers.add_parser(
+        'info_image',
+        help='Show information about vbmeta or footer.')
+    sub_parser.add_argument('--image',
+                            help='Image to show information about',
+                            type=argparse.FileType('rb'),
+                            required=True)
+    sub_parser.add_argument('--output',
+                            help='Write info to file',
+                            type=argparse.FileType('wt'),
+                            default=sys.stdout)
+    sub_parser.add_argument('--atx',
+                            help=('Show information about Android Things '
+                                  'eXtension (ATX).'),
+                            action='store_true')
+    sub_parser.set_defaults(func=self.info_image)
+
+    sub_parser = subparsers.add_parser(
+        'verify_image',
+        help='Verify an image.')
+    sub_parser.add_argument('--image',
+                            help='Image to verify',
+                            type=argparse.FileType('rb'),
+                            required=True)
+    sub_parser.add_argument('--key',
+                            help='Check embedded public key matches KEY',
+                            metavar='KEY',
+                            required=False)
+    sub_parser.add_argument('--expected_chain_partition',
+                            help='Expected chain partition',
+                            metavar='PART_NAME:ROLLBACK_SLOT:KEY_PATH',
+                            action='append')
+    sub_parser.add_argument(
+        '--follow_chain_partitions',
+        help=('Follows chain partitions even when not '
+              'specified with the --expected_chain_partition option'),
+        action='store_true')
+    sub_parser.add_argument(
+        '--accept_zeroed_hashtree',
+        help=('Accept images where the hashtree or FEC data is zeroed out'),
+        action='store_true')
+    sub_parser.set_defaults(func=self.verify_image)
+
+    sub_parser = subparsers.add_parser(
+        'print_partition_digests',
+        help='Prints partition digests.')
+    sub_parser.add_argument('--image',
+                            help='Image to print partition digests from',
+                            type=argparse.FileType('rb'),
+                            required=True)
+    sub_parser.add_argument('--output',
+                            help='Write info to file',
+                            type=argparse.FileType('wt'),
+                            default=sys.stdout)
+    sub_parser.add_argument('--json',
+                            help=('Print output as JSON'),
+                            action='store_true')
+    sub_parser.set_defaults(func=self.print_partition_digests)
+
+    sub_parser = subparsers.add_parser(
+        'calculate_vbmeta_digest',
+        help='Calculate vbmeta digest.')
+    sub_parser.add_argument('--image',
+                            help='Image to calculate digest for',
+                            type=argparse.FileType('rb'),
+                            required=True)
+    sub_parser.add_argument('--hash_algorithm',
+                            help='Hash algorithm to use (default: sha256)',
+                            default='sha256')
+    sub_parser.add_argument('--output',
+                            help='Write hex digest to file (default: stdout)',
+                            type=argparse.FileType('wt'),
+                            default=sys.stdout)
+    sub_parser.set_defaults(func=self.calculate_vbmeta_digest)
+
+    sub_parser = subparsers.add_parser(
+        'calculate_kernel_cmdline',
+        help='Calculate kernel cmdline.')
+    sub_parser.add_argument('--image',
+                            help='Image to calculate kernel cmdline for',
+                            type=argparse.FileType('rb'),
+                            required=True)
+    sub_parser.add_argument('--hashtree_disabled',
+                            help='Return the cmdline for hashtree disabled',
+                            action='store_true')
+    sub_parser.add_argument('--output',
+                            help='Write cmdline to file (default: stdout)',
+                            type=argparse.FileType('wt'),
+                            default=sys.stdout)
+    sub_parser.set_defaults(func=self.calculate_kernel_cmdline)
+
+    sub_parser = subparsers.add_parser('set_ab_metadata',
+                                       help='Set A/B metadata.')
+    sub_parser.add_argument('--misc_image',
+                            help=('The misc image to modify. If the image does '
+                                  'not exist, it will be created.'),
+                            type=argparse.FileType('r+b'),
+                            required=True)
+    sub_parser.add_argument('--slot_data',
+                            help=('Slot data of the form "priority", '
+                                  '"tries_remaining", "sucessful_boot" for '
+                                  'slot A followed by the same for slot B, '
+                                  'separated by colons. The default value '
+                                  'is 15:7:0:14:7:0.'),
+                            default='15:7:0:14:7:0')
+    sub_parser.set_defaults(func=self.set_ab_metadata)
+
+    sub_parser = subparsers.add_parser(
+        'make_atx_certificate',
+        help='Create an Android Things eXtension (ATX) certificate.')
+    sub_parser.add_argument('--output',
+                            help='Write certificate to file',
+                            type=argparse.FileType('wb'),
+                            default=sys.stdout)
+    sub_parser.add_argument('--subject',
+                            help=('Path to subject file'),
+                            type=argparse.FileType('rb'),
+                            required=True)
+    sub_parser.add_argument('--subject_key',
+                            help=('Path to subject RSA public key file'),
+                            type=argparse.FileType('rb'),
+                            required=True)
+    sub_parser.add_argument('--subject_key_version',
+                            help=('Version of the subject key'),
+                            type=parse_number,
+                            required=False)
+    sub_parser.add_argument('--subject_is_intermediate_authority',
+                            help=('Generate an intermediate authority '
+                                  'certificate'),
+                            action='store_true')
+    sub_parser.add_argument('--usage',
+                            help=('Override usage with a hash of the provided '
+                                  'string'),
+                            required=False)
+    sub_parser.add_argument('--authority_key',
+                            help='Path to authority RSA private key file',
+                            required=False)
+    sub_parser.add_argument('--signing_helper',
+                            help='Path to helper used for signing',
+                            metavar='APP',
+                            default=None,
+                            required=False)
+    sub_parser.add_argument('--signing_helper_with_files',
+                            help='Path to helper used for signing using files',
+                            metavar='APP',
+                            default=None,
+                            required=False)
+    sub_parser.set_defaults(func=self.make_atx_certificate)
+
+    sub_parser = subparsers.add_parser(
+        'make_atx_permanent_attributes',
+        help='Create Android Things eXtension (ATX) permanent attributes.')
+    sub_parser.add_argument('--output',
+                            help='Write attributes to file',
+                            type=argparse.FileType('wb'),
+                            default=sys.stdout)
+    sub_parser.add_argument('--root_authority_key',
+                            help='Path to authority RSA public key file',
+                            type=argparse.FileType('rb'),
+                            required=True)
+    sub_parser.add_argument('--product_id',
+                            help=('Path to Product ID file'),
+                            type=argparse.FileType('rb'),
+                            required=True)
+    sub_parser.set_defaults(func=self.make_atx_permanent_attributes)
+
+    sub_parser = subparsers.add_parser(
+        'make_atx_metadata',
+        help='Create Android Things eXtension (ATX) metadata.')
+    sub_parser.add_argument('--output',
+                            help='Write metadata to file',
+                            type=argparse.FileType('wb'),
+                            default=sys.stdout)
+    sub_parser.add_argument('--intermediate_key_certificate',
+                            help='Path to intermediate key certificate file',
+                            type=argparse.FileType('rb'),
+                            required=True)
+    sub_parser.add_argument('--product_key_certificate',
+                            help='Path to product key certificate file',
+                            type=argparse.FileType('rb'),
+                            required=True)
+    sub_parser.set_defaults(func=self.make_atx_metadata)
+
+    sub_parser = subparsers.add_parser(
+        'make_atx_unlock_credential',
+        help='Create an Android Things eXtension (ATX) unlock credential.')
+    sub_parser.add_argument('--output',
+                            help='Write credential to file',
+                            type=argparse.FileType('wb'),
+                            default=sys.stdout)
+    sub_parser.add_argument('--intermediate_key_certificate',
+                            help='Path to intermediate key certificate file',
+                            type=argparse.FileType('rb'),
+                            required=True)
+    sub_parser.add_argument('--unlock_key_certificate',
+                            help='Path to unlock key certificate file',
+                            type=argparse.FileType('rb'),
+                            required=True)
+    sub_parser.add_argument('--challenge',
+                            help='Path to the challenge to sign (optional). If '
+                                 'this is not provided the challenge signature '
+                                 'field is omitted and can be concatenated '
+                                 'later.',
+                            required=False)
+    sub_parser.add_argument('--unlock_key',
+                            help='Path to unlock key (optional). Must be '
+                                 'provided if using --challenge.',
+                            required=False)
+    sub_parser.add_argument('--signing_helper',
+                            help='Path to helper used for signing',
+                            metavar='APP',
+                            default=None,
+                            required=False)
+    sub_parser.add_argument('--signing_helper_with_files',
+                            help='Path to helper used for signing using files',
+                            metavar='APP',
+                            default=None,
+                            required=False)
+    sub_parser.set_defaults(func=self.make_atx_unlock_credential)
+
+    args = parser.parse_args(argv[1:])
+    try:
+      args.func(args)
+    except AttributeError:
+      # This error gets raised when the command line tool is called without any
+      # arguments. It mimics the original Python 2 behavior.
+      parser.print_usage()
+      print('avbtool: error: too few arguments')
+      sys.exit(2)
+    except AvbError as e:
+      sys.stderr.write('{}: {}\n'.format(argv[0], str(e)))
+      sys.exit(1)
+
+  def version(self, _):
+    """Implements the 'version' sub-command."""
+    print(get_release_string())
+
+  def generate_test_image(self, args):
+    """Implements the 'generate_test_image' sub-command."""
+    self.avb.generate_test_image(args.output, args.image_size, args.start_byte)
+
+  def extract_public_key(self, args):
+    """Implements the 'extract_public_key' sub-command."""
+    self.avb.extract_public_key(args.key, args.output)
+
+  def make_vbmeta_image(self, args):
+    """Implements the 'make_vbmeta_image' sub-command."""
+    args = self._fixup_common_args(args)
+    self.avb.make_vbmeta_image(args.output, args.chain_partition,
+                               args.algorithm, args.key,
+                               args.public_key_metadata, args.rollback_index,
+                               args.flags, args.rollback_index_location,
+                               args.prop, args.prop_from_file,
+                               args.kernel_cmdline,
+                               args.setup_rootfs_from_kernel,
+                               args.include_descriptors_from_image,
+                               args.signing_helper,
+                               args.signing_helper_with_files,
+                               args.internal_release_string,
+                               args.append_to_release_string,
+                               args.print_required_libavb_version,
+                               args.padding_size)
+
+  def append_vbmeta_image(self, args):
+    """Implements the 'append_vbmeta_image' sub-command."""
+    self.avb.append_vbmeta_image(args.image.name, args.vbmeta_image.name,
+                                 args.partition_size)
+
+  def add_hash_footer(self, args):
+    """Implements the 'add_hash_footer' sub-command."""
+    args = self._fixup_common_args(args)
+    self.avb.add_hash_footer(args.image.name if args.image else None,
+                             args.partition_size, args.dynamic_partition_size,
+                             args.partition_name, args.hash_algorithm,
+                             args.salt, args.chain_partition, args.algorithm,
+                             args.key,
+                             args.public_key_metadata, args.rollback_index,
+                             args.flags, args.rollback_index_location,
+                             args.prop, args.prop_from_file,
+                             args.kernel_cmdline,
+                             args.setup_rootfs_from_kernel,
+                             args.include_descriptors_from_image,
+                             args.calc_max_image_size,
+                             args.signing_helper,
+                             args.signing_helper_with_files,
+                             args.internal_release_string,
+                             args.append_to_release_string,
+                             args.output_vbmeta_image,
+                             args.do_not_append_vbmeta_image,
+                             args.print_required_libavb_version,
+                             args.use_persistent_digest,
+                             args.do_not_use_ab)
+
+  def add_hashtree_footer(self, args):
+    """Implements the 'add_hashtree_footer' sub-command."""
+    args = self._fixup_common_args(args)
+    # TODO(zeuthen): Remove when removing support for the
+    # '--generate_fec' option above.
+    if args.generate_fec:
+      sys.stderr.write('The --generate_fec option is deprecated since FEC '
+                       'is now generated by default. Use the option '
+                       '--do_not_generate_fec to not generate FEC.\n')
+    self.avb.add_hashtree_footer(
+        args.image.name if args.image else None,
+        args.partition_size,
+        args.partition_name,
+        not args.do_not_generate_fec, args.fec_num_roots,
+        args.hash_algorithm, args.block_size,
+        args.salt, args.chain_partition, args.algorithm,
+        args.key, args.public_key_metadata,
+        args.rollback_index, args.flags,
+        args.rollback_index_location, args.prop,
+        args.prop_from_file,
+        args.kernel_cmdline,
+        args.setup_rootfs_from_kernel,
+        args.setup_as_rootfs_from_kernel,
+        args.include_descriptors_from_image,
+        args.calc_max_image_size,
+        args.signing_helper,
+        args.signing_helper_with_files,
+        args.internal_release_string,
+        args.append_to_release_string,
+        args.output_vbmeta_image,
+        args.do_not_append_vbmeta_image,
+        args.print_required_libavb_version,
+        args.use_persistent_digest,
+        args.do_not_use_ab,
+        args.no_hashtree,
+        args.check_at_most_once)
+
+  def erase_footer(self, args):
+    """Implements the 'erase_footer' sub-command."""
+    self.avb.erase_footer(args.image.name, args.keep_hashtree)
+
+  def zero_hashtree(self, args):
+    """Implements the 'zero_hashtree' sub-command."""
+    self.avb.zero_hashtree(args.image.name)
+
+  def extract_vbmeta_image(self, args):
+    """Implements the 'extract_vbmeta_image' sub-command."""
+    self.avb.extract_vbmeta_image(args.output, args.image.name,
+                                  args.padding_size)
+
+  def resize_image(self, args):
+    """Implements the 'resize_image' sub-command."""
+    self.avb.resize_image(args.image.name, args.partition_size)
+
+  def set_ab_metadata(self, args):
+    """Implements the 'set_ab_metadata' sub-command."""
+    self.avb.set_ab_metadata(args.misc_image, args.slot_data)
+
+  def info_image(self, args):
+    """Implements the 'info_image' sub-command."""
+    self.avb.info_image(args.image.name, args.output, args.atx)
+
+  def verify_image(self, args):
+    """Implements the 'verify_image' sub-command."""
+    self.avb.verify_image(args.image.name, args.key,
+                          args.expected_chain_partition,
+                          args.follow_chain_partitions,
+                          args.accept_zeroed_hashtree)
+
+  def print_partition_digests(self, args):
+    """Implements the 'print_partition_digests' sub-command."""
+    self.avb.print_partition_digests(args.image.name, args.output, args.json)
+
+  def calculate_vbmeta_digest(self, args):
+    """Implements the 'calculate_vbmeta_digest' sub-command."""
+    self.avb.calculate_vbmeta_digest(args.image.name, args.hash_algorithm,
+                                     args.output)
+
+  def calculate_kernel_cmdline(self, args):
+    """Implements the 'calculate_kernel_cmdline' sub-command."""
+    self.avb.calculate_kernel_cmdline(args.image.name, args.hashtree_disabled,
+                                      args.output)
+
+  def make_atx_certificate(self, args):
+    """Implements the 'make_atx_certificate' sub-command."""
+    self.avb.make_atx_certificate(args.output, args.authority_key,
+                                  args.subject_key.name,
+                                  args.subject_key_version,
+                                  args.subject.read(),
+                                  args.subject_is_intermediate_authority,
+                                  args.usage,
+                                  args.signing_helper,
+                                  args.signing_helper_with_files)
+
+  def make_atx_permanent_attributes(self, args):
+    """Implements the 'make_atx_permanent_attributes' sub-command."""
+    self.avb.make_atx_permanent_attributes(args.output,
+                                           args.root_authority_key.name,
+                                           args.product_id.read())
+
+  def make_atx_metadata(self, args):
+    """Implements the 'make_atx_metadata' sub-command."""
+    self.avb.make_atx_metadata(args.output,
+                               args.intermediate_key_certificate.read(),
+                               args.product_key_certificate.read())
+
+  def make_atx_unlock_credential(self, args):
+    """Implements the 'make_atx_unlock_credential' sub-command."""
+    self.avb.make_atx_unlock_credential(
+        args.output,
+        args.intermediate_key_certificate.read(),
+        args.unlock_key_certificate.read(),
+        args.challenge,
+        args.unlock_key,
+        args.signing_helper,
+        args.signing_helper_with_files)
+
+
+if __name__ == '__main__':
+  if AVB_INVOCATION_LOGFILE:
+    with open(AVB_INVOCATION_LOGFILE, 'a') as log:
+      log.write(' '.join(sys.argv))
+      log.write('\n')
+
+  tool = AvbTool()
+  tool.run(sys.argv)
